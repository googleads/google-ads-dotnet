// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v10/errors/media_file_error.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V10.Errors {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v10/errors/media_file_error.proto</summary>
  public static partial class MediaFileErrorReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v10/errors/media_file_error.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MediaFileErrorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjZnb29nbGUvYWRzL2dvb2dsZWFkcy92MTAvZXJyb3JzL21lZGlhX2ZpbGVf",
            "ZXJyb3IucHJvdG8SH2dvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxMC5lcnJvcnMi",
            "lwYKEk1lZGlhRmlsZUVycm9yRW51bSKABgoOTWVkaWFGaWxlRXJyb3ISDwoL",
            "VU5TUEVDSUZJRUQQABILCgdVTktOT1dOEAESHwobQ0FOTk9UX0NSRUFURV9T",
            "VEFOREFSRF9JQ09OEAISMAosQ0FOTk9UX1NFTEVDVF9TVEFOREFSRF9JQ09O",
            "X1dJVEhfT1RIRVJfVFlQRVMQAxIpCiVDQU5OT1RfU1BFQ0lGWV9NRURJQV9G",
            "SUxFX0lEX0FORF9EQVRBEAQSEwoPRFVQTElDQVRFX01FRElBEAUSDwoLRU1Q",
            "VFlfRklFTEQQBhInCiNSRVNPVVJDRV9SRUZFUkVOQ0VEX0lOX01VTFRJUExF",
            "X09QUxAHEioKJkZJRUxEX05PVF9TVVBQT1JURURfRk9SX01FRElBX1NVQl9U",
            "WVBFEAgSGQoVSU5WQUxJRF9NRURJQV9GSUxFX0lEEAkSGgoWSU5WQUxJRF9N",
            "RURJQV9TVUJfVFlQRRAKEhsKF0lOVkFMSURfTUVESUFfRklMRV9UWVBFEAsS",
            "FQoRSU5WQUxJRF9NSU1FX1RZUEUQDBIYChRJTlZBTElEX1JFRkVSRU5DRV9J",
            "RBANEhcKE0lOVkFMSURfWU9VX1RVQkVfSUQQDhIhCh1NRURJQV9GSUxFX0ZB",
            "SUxFRF9UUkFOU0NPRElORxAPEhgKFE1FRElBX05PVF9UUkFOU0NPREVEEBAS",
            "LQopTUVESUFfVFlQRV9ET0VTX05PVF9NQVRDSF9NRURJQV9GSUxFX1RZUEUQ",
            "ERIXChNOT19GSUVMRFNfU1BFQ0lGSUVEEBISIgoeTlVMTF9SRUZFUkVOQ0Vf",
            "SURfQU5EX01FRElBX0lEEBMSDAoIVE9PX0xPTkcQFBIUChBVTlNVUFBPUlRF",
            "RF9UWVBFEBUSIAocWU9VX1RVQkVfU0VSVklDRV9VTkFWQUlMQUJMRRAWEiwK",
            "KFlPVV9UVUJFX1ZJREVPX0hBU19OT05fUE9TSVRJVkVfRFVSQVRJT04QFxIc",
            "ChhZT1VfVFVCRV9WSURFT19OT1RfRk9VTkQQGELzAQojY29tLmdvb2dsZS5h",
            "ZHMuZ29vZ2xlYWRzLnYxMC5lcnJvcnNCE01lZGlhRmlsZUVycm9yUHJvdG9Q",
            "AVpFZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9hZHMv",
            "Z29vZ2xlYWRzL3YxMC9lcnJvcnM7ZXJyb3JzogIDR0FBqgIfR29vZ2xlLkFk",
            "cy5Hb29nbGVBZHMuVjEwLkVycm9yc8oCH0dvb2dsZVxBZHNcR29vZ2xlQWRz",
            "XFYxMFxFcnJvcnPqAiNHb29nbGU6OkFkczo6R29vZ2xlQWRzOjpWMTA6OkVy",
            "cm9yc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V10.Errors.MediaFileErrorEnum), global::Google.Ads.GoogleAds.V10.Errors.MediaFileErrorEnum.Parser, null, null, new[]{ typeof(global::Google.Ads.GoogleAds.V10.Errors.MediaFileErrorEnum.Types.MediaFileError) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Container for enum describing possible media file errors.
  /// </summary>
  public sealed partial class MediaFileErrorEnum : pb::IMessage<MediaFileErrorEnum>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MediaFileErrorEnum> _parser = new pb::MessageParser<MediaFileErrorEnum>(() => new MediaFileErrorEnum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MediaFileErrorEnum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V10.Errors.MediaFileErrorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MediaFileErrorEnum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MediaFileErrorEnum(MediaFileErrorEnum other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MediaFileErrorEnum Clone() {
      return new MediaFileErrorEnum(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MediaFileErrorEnum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MediaFileErrorEnum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MediaFileErrorEnum other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MediaFileErrorEnum message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Enum describing possible media file errors.
      /// </summary>
      public enum MediaFileError {
        /// <summary>
        /// Enum unspecified.
        /// </summary>
        [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The received error code is not known in this version.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 1,
        /// <summary>
        /// Cannot create a standard icon type.
        /// </summary>
        [pbr::OriginalName("CANNOT_CREATE_STANDARD_ICON")] CannotCreateStandardIcon = 2,
        /// <summary>
        /// May only select Standard Icons alone.
        /// </summary>
        [pbr::OriginalName("CANNOT_SELECT_STANDARD_ICON_WITH_OTHER_TYPES")] CannotSelectStandardIconWithOtherTypes = 3,
        /// <summary>
        /// Image contains both a media file ID and data.
        /// </summary>
        [pbr::OriginalName("CANNOT_SPECIFY_MEDIA_FILE_ID_AND_DATA")] CannotSpecifyMediaFileIdAndData = 4,
        /// <summary>
        /// A media file with given type and reference ID already exists.
        /// </summary>
        [pbr::OriginalName("DUPLICATE_MEDIA")] DuplicateMedia = 5,
        /// <summary>
        /// A required field was not specified or is an empty string.
        /// </summary>
        [pbr::OriginalName("EMPTY_FIELD")] EmptyField = 6,
        /// <summary>
        /// A media file may only be modified once per call.
        /// </summary>
        [pbr::OriginalName("RESOURCE_REFERENCED_IN_MULTIPLE_OPS")] ResourceReferencedInMultipleOps = 7,
        /// <summary>
        /// Field is not supported for the media sub type.
        /// </summary>
        [pbr::OriginalName("FIELD_NOT_SUPPORTED_FOR_MEDIA_SUB_TYPE")] FieldNotSupportedForMediaSubType = 8,
        /// <summary>
        /// The media file ID is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_MEDIA_FILE_ID")] InvalidMediaFileId = 9,
        /// <summary>
        /// The media subtype is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_MEDIA_SUB_TYPE")] InvalidMediaSubType = 10,
        /// <summary>
        /// The media file type is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_MEDIA_FILE_TYPE")] InvalidMediaFileType = 11,
        /// <summary>
        /// The mimetype is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_MIME_TYPE")] InvalidMimeType = 12,
        /// <summary>
        /// The media reference ID is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_REFERENCE_ID")] InvalidReferenceId = 13,
        /// <summary>
        /// The YouTube video ID is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_YOU_TUBE_ID")] InvalidYouTubeId = 14,
        /// <summary>
        /// Media file has failed transcoding
        /// </summary>
        [pbr::OriginalName("MEDIA_FILE_FAILED_TRANSCODING")] MediaFileFailedTranscoding = 15,
        /// <summary>
        /// Media file has not been transcoded.
        /// </summary>
        [pbr::OriginalName("MEDIA_NOT_TRANSCODED")] MediaNotTranscoded = 16,
        /// <summary>
        /// The media type does not match the actual media file's type.
        /// </summary>
        [pbr::OriginalName("MEDIA_TYPE_DOES_NOT_MATCH_MEDIA_FILE_TYPE")] MediaTypeDoesNotMatchMediaFileType = 17,
        /// <summary>
        /// None of the fields have been specified.
        /// </summary>
        [pbr::OriginalName("NO_FIELDS_SPECIFIED")] NoFieldsSpecified = 18,
        /// <summary>
        /// One of reference ID or media file ID must be specified.
        /// </summary>
        [pbr::OriginalName("NULL_REFERENCE_ID_AND_MEDIA_ID")] NullReferenceIdAndMediaId = 19,
        /// <summary>
        /// The string has too many characters.
        /// </summary>
        [pbr::OriginalName("TOO_LONG")] TooLong = 20,
        /// <summary>
        /// The specified type is not supported.
        /// </summary>
        [pbr::OriginalName("UNSUPPORTED_TYPE")] UnsupportedType = 21,
        /// <summary>
        /// YouTube is unavailable for requesting video data.
        /// </summary>
        [pbr::OriginalName("YOU_TUBE_SERVICE_UNAVAILABLE")] YouTubeServiceUnavailable = 22,
        /// <summary>
        /// The YouTube video has a non positive duration.
        /// </summary>
        [pbr::OriginalName("YOU_TUBE_VIDEO_HAS_NON_POSITIVE_DURATION")] YouTubeVideoHasNonPositiveDuration = 23,
        /// <summary>
        /// The YouTube video ID is syntactically valid but the video was not found.
        /// </summary>
        [pbr::OriginalName("YOU_TUBE_VIDEO_NOT_FOUND")] YouTubeVideoNotFound = 24,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
