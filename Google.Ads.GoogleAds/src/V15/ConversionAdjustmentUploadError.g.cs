// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v15/errors/conversion_adjustment_upload_error.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V15.Errors {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v15/errors/conversion_adjustment_upload_error.proto</summary>
  public static partial class ConversionAdjustmentUploadErrorReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v15/errors/conversion_adjustment_upload_error.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConversionAdjustmentUploadErrorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ckhnb29nbGUvYWRzL2dvb2dsZWFkcy92MTUvZXJyb3JzL2NvbnZlcnNpb25f",
            "YWRqdXN0bWVudF91cGxvYWRfZXJyb3IucHJvdG8SH2dvb2dsZS5hZHMuZ29v",
            "Z2xlYWRzLnYxNS5lcnJvcnMi8AcKI0NvbnZlcnNpb25BZGp1c3RtZW50VXBs",
            "b2FkRXJyb3JFbnVtIsgHCh9Db252ZXJzaW9uQWRqdXN0bWVudFVwbG9hZEVy",
            "cm9yEg8KC1VOU1BFQ0lGSUVEEAASCwoHVU5LTk9XThABEiAKHFRPT19SRUNF",
            "TlRfQ09OVkVSU0lPTl9BQ1RJT04QAhIgChxDT05WRVJTSU9OX0FMUkVBRFlf",
            "UkVUUkFDVEVEEAQSGAoUQ09OVkVSU0lPTl9OT1RfRk9VTkQQBRIWChJDT05W",
            "RVJTSU9OX0VYUElSRUQQBhIiCh5BREpVU1RNRU5UX1BSRUNFREVTX0NPTlZF",
            "UlNJT04QBxIhCh1NT1JFX1JFQ0VOVF9SRVNUQVRFTUVOVF9GT1VORBAIEhkK",
            "FVRPT19SRUNFTlRfQ09OVkVSU0lPThAJEk4KSkNBTk5PVF9SRVNUQVRFX0NP",
            "TlZFUlNJT05fQUNUSU9OX1RIQVRfQUxXQVlTX1VTRVNfREVGQVVMVF9DT05W",
            "RVJTSU9OX1ZBTFVFEAoSIwofVE9PX01BTllfQURKVVNUTUVOVFNfSU5fUkVR",
            "VUVTVBALEhgKFFRPT19NQU5ZX0FESlVTVE1FTlRTEAwSHgoaUkVTVEFURU1F",
            "TlRfQUxSRUFEWV9FWElTVFMQDRIjCh9EVVBMSUNBVEVfQURKVVNUTUVOVF9J",
            "Tl9SRVFVRVNUEA4SLQopQ1VTVE9NRVJfTk9UX0FDQ0VQVEVEX0NVU1RPTUVS",
            "X0RBVEFfVEVSTVMQDxIyCi5DT05WRVJTSU9OX0FDVElPTl9OT1RfRUxJR0lC",
            "TEVfRk9SX0VOSEFOQ0VNRU5UEBASGwoXSU5WQUxJRF9VU0VSX0lERU5USUZJ",
            "RVIQERIfChtVTlNVUFBPUlRFRF9VU0VSX0lERU5USUZJRVIQEhIuCipHQ0xJ",
            "RF9EQVRFX1RJTUVfUEFJUl9BTkRfT1JERVJfSURfQk9USF9TRVQQFBIfChtD",
            "T05WRVJTSU9OX0FMUkVBRFlfRU5IQU5DRUQQFRIkCiBEVVBMSUNBVEVfRU5I",
            "QU5DRU1FTlRfSU5fUkVRVUVTVBAWEi4KKkNVU1RPTUVSX0RBVEFfUE9MSUNZ",
            "X1BST0hJQklUU19FTkhBTkNFTUVOVBAXEiAKHE1JU1NJTkdfT1JERVJfSURf",
            "Rk9SX1dFQlBBR0UQGBIZChVPUkRFUl9JRF9DT05UQUlOU19QSUkQGRISCg5J",
            "TlZBTElEX0pPQl9JRBAaEh4KGk5PX0NPTlZFUlNJT05fQUNUSU9OX0ZPVU5E",
            "EBsSIgoeSU5WQUxJRF9DT05WRVJTSU9OX0FDVElPTl9UWVBFEBxChAIKI2Nv",
            "bS5nb29nbGUuYWRzLmdvb2dsZWFkcy52MTUuZXJyb3JzQiRDb252ZXJzaW9u",
            "QWRqdXN0bWVudFVwbG9hZEVycm9yUHJvdG9QAVpFZ29vZ2xlLmdvbGFuZy5v",
            "cmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9hZHMvZ29vZ2xlYWRzL3YxNS9lcnJv",
            "cnM7ZXJyb3JzogIDR0FBqgIfR29vZ2xlLkFkcy5Hb29nbGVBZHMuVjE1LkVy",
            "cm9yc8oCH0dvb2dsZVxBZHNcR29vZ2xlQWRzXFYxNVxFcnJvcnPqAiNHb29n",
            "bGU6OkFkczo6R29vZ2xlQWRzOjpWMTU6OkVycm9yc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V15.Errors.ConversionAdjustmentUploadErrorEnum), global::Google.Ads.GoogleAds.V15.Errors.ConversionAdjustmentUploadErrorEnum.Parser, null, null, new[]{ typeof(global::Google.Ads.GoogleAds.V15.Errors.ConversionAdjustmentUploadErrorEnum.Types.ConversionAdjustmentUploadError) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Container for enum describing possible conversion adjustment upload errors.
  /// </summary>
  public sealed partial class ConversionAdjustmentUploadErrorEnum : pb::IMessage<ConversionAdjustmentUploadErrorEnum>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConversionAdjustmentUploadErrorEnum> _parser = new pb::MessageParser<ConversionAdjustmentUploadErrorEnum>(() => new ConversionAdjustmentUploadErrorEnum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConversionAdjustmentUploadErrorEnum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V15.Errors.ConversionAdjustmentUploadErrorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConversionAdjustmentUploadErrorEnum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConversionAdjustmentUploadErrorEnum(ConversionAdjustmentUploadErrorEnum other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConversionAdjustmentUploadErrorEnum Clone() {
      return new ConversionAdjustmentUploadErrorEnum(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConversionAdjustmentUploadErrorEnum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConversionAdjustmentUploadErrorEnum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConversionAdjustmentUploadErrorEnum other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ConversionAdjustmentUploadErrorEnum message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Enum describing possible conversion adjustment upload errors.
      /// </summary>
      public enum ConversionAdjustmentUploadError {
        /// <summary>
        /// Not specified.
        /// </summary>
        [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Used for return value only. Represents value unknown in this version.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 1,
        /// <summary>
        /// Can't import events to a conversion action that was just created. Try
        /// importing again in 6 hours.
        /// </summary>
        [pbr::OriginalName("TOO_RECENT_CONVERSION_ACTION")] TooRecentConversionAction = 2,
        /// <summary>
        /// The conversion was already retracted. This adjustment was not processed.
        /// </summary>
        [pbr::OriginalName("CONVERSION_ALREADY_RETRACTED")] ConversionAlreadyRetracted = 4,
        /// <summary>
        /// The conversion for this conversion action and conversion identifier can't
        /// be found. Make sure your conversion identifiers are associated with the
        /// correct conversion action and try again.
        /// </summary>
        [pbr::OriginalName("CONVERSION_NOT_FOUND")] ConversionNotFound = 5,
        /// <summary>
        /// Adjustment can't be made to a conversion that occurred more than 54 days
        /// ago.
        /// </summary>
        [pbr::OriginalName("CONVERSION_EXPIRED")] ConversionExpired = 6,
        /// <summary>
        /// Adjustment has an `adjustment_date_time` that occurred before the
        /// associated conversion. Make sure your `adjustment_date_time` is correct
        /// and try again.
        /// </summary>
        [pbr::OriginalName("ADJUSTMENT_PRECEDES_CONVERSION")] AdjustmentPrecedesConversion = 7,
        /// <summary>
        /// More recent adjustment `adjustment_date_time` has already been reported
        /// for the associated conversion.  Make sure your adjustment
        /// `adjustment_date_time` is correct and try again.
        /// </summary>
        [pbr::OriginalName("MORE_RECENT_RESTATEMENT_FOUND")] MoreRecentRestatementFound = 8,
        /// <summary>
        /// Adjustment can't be recorded because the conversion occurred too
        /// recently. Try adjusting a conversion that occurred at least 24 hours ago.
        /// </summary>
        [pbr::OriginalName("TOO_RECENT_CONVERSION")] TooRecentConversion = 9,
        /// <summary>
        /// Can't make an adjustment to a conversion that is set up to use the
        /// default value. Check your conversion action value setting and try again.
        /// </summary>
        [pbr::OriginalName("CANNOT_RESTATE_CONVERSION_ACTION_THAT_ALWAYS_USES_DEFAULT_CONVERSION_VALUE")] CannotRestateConversionActionThatAlwaysUsesDefaultConversionValue = 10,
        /// <summary>
        /// Try uploading fewer than 2001 adjustments in a single API request.
        /// </summary>
        [pbr::OriginalName("TOO_MANY_ADJUSTMENTS_IN_REQUEST")] TooManyAdjustmentsInRequest = 11,
        /// <summary>
        /// The conversion has already been adjusted the maximum number of times.
        /// Make sure you're only making necessary adjustment to existing conversion.
        /// </summary>
        [pbr::OriginalName("TOO_MANY_ADJUSTMENTS")] TooManyAdjustments = 12,
        /// <summary>
        /// The conversion has prior a restatement with the same
        /// `adjustment_date_time`. Make sure your adjustment has the correct and
        /// unique `adjustment_date_time` and try again.
        /// </summary>
        [pbr::OriginalName("RESTATEMENT_ALREADY_EXISTS")] RestatementAlreadyExists = 13,
        /// <summary>
        /// Imported adjustment has a duplicate conversion adjustment with same
        /// `adjustment_date_time`. Make sure your adjustment has the correct
        /// `adjustment_date_time` and try again.
        /// </summary>
        [pbr::OriginalName("DUPLICATE_ADJUSTMENT_IN_REQUEST")] DuplicateAdjustmentInRequest = 14,
        /// <summary>
        /// Make sure you agree to the customer data processing terms in conversion
        /// settings and try again.
        /// </summary>
        [pbr::OriginalName("CUSTOMER_NOT_ACCEPTED_CUSTOMER_DATA_TERMS")] CustomerNotAcceptedCustomerDataTerms = 15,
        /// <summary>
        /// Can't use enhanced conversions with the specified conversion action.
        /// </summary>
        [pbr::OriginalName("CONVERSION_ACTION_NOT_ELIGIBLE_FOR_ENHANCEMENT")] ConversionActionNotEligibleForEnhancement = 16,
        /// <summary>
        /// Make sure you hash user provided data using SHA-256 and ensure you are
        /// normalizing according to the guidelines.
        /// </summary>
        [pbr::OriginalName("INVALID_USER_IDENTIFIER")] InvalidUserIdentifier = 17,
        /// <summary>
        /// Use user provided data such as emails or phone numbers hashed using
        /// SHA-256 and try again.
        /// </summary>
        [pbr::OriginalName("UNSUPPORTED_USER_IDENTIFIER")] UnsupportedUserIdentifier = 18,
        /// <summary>
        /// Cannot set both gclid_date_time_pair and order_id. Use only 1 type and
        /// try again.
        /// </summary>
        [pbr::OriginalName("GCLID_DATE_TIME_PAIR_AND_ORDER_ID_BOTH_SET")] GclidDateTimePairAndOrderIdBothSet = 20,
        /// <summary>
        /// Conversion already has enhancements with the same Order ID and conversion
        /// action. Make sure your data is correctly configured and try again.
        /// </summary>
        [pbr::OriginalName("CONVERSION_ALREADY_ENHANCED")] ConversionAlreadyEnhanced = 21,
        /// <summary>
        /// Multiple enhancements have the same conversion action and Order ID.  Make
        /// sure your data is correctly configured and try again.
        /// </summary>
        [pbr::OriginalName("DUPLICATE_ENHANCEMENT_IN_REQUEST")] DuplicateEnhancementInRequest = 22,
        /// <summary>
        /// Enhanced conversions can't be used for this account because of Google
        /// customer data policies. Contact your Google representative.
        /// </summary>
        [pbr::OriginalName("CUSTOMER_DATA_POLICY_PROHIBITS_ENHANCEMENT")] CustomerDataPolicyProhibitsEnhancement = 23,
        /// <summary>
        /// Adjustment for website conversion requires Order ID (ie, transaction ID).
        /// Make sure your website tags capture Order IDs and you send the same Order
        /// IDs with your adjustment.
        /// </summary>
        [pbr::OriginalName("MISSING_ORDER_ID_FOR_WEBPAGE")] MissingOrderIdForWebpage = 24,
        /// <summary>
        /// Can't use adjustment with Order IDs containing personally-identifiable
        /// information (PII).
        /// </summary>
        [pbr::OriginalName("ORDER_ID_CONTAINS_PII")] OrderIdContainsPii = 25,
        /// <summary>
        /// The provided job id in the request is not within the allowed range. A job
        /// ID must be a positive integer in the range [1, 2^31).
        /// </summary>
        [pbr::OriginalName("INVALID_JOB_ID")] InvalidJobId = 26,
        /// <summary>
        /// The conversion action specified in the adjustment request cannot be
        /// found. Make sure it's available in this account.
        /// </summary>
        [pbr::OriginalName("NO_CONVERSION_ACTION_FOUND")] NoConversionActionFound = 27,
        /// <summary>
        /// The type of the conversion action specified in the adjustment request
        /// isn't supported for uploading adjustments. A conversion adjustment of
        /// type `RETRACTION` or `RESTATEMENT` is only permitted for conversion
        /// actions of type `SALESFORCE`, `UPLOAD_CLICK` or `WEBPAGE`. A conversion
        /// adjustment of type `ENHANCEMENT` is only permitted for conversion
        /// actions of type `WEBPAGE`.
        /// </summary>
        [pbr::OriginalName("INVALID_CONVERSION_ACTION_TYPE")] InvalidConversionActionType = 28,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
