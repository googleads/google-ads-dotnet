// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v0/common/ad.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V0.Common {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v0/common/ad.proto</summary>
  public static partial class AdReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v0/common/ad.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AdReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cidnb29nbGUvYWRzL2dvb2dsZWFkcy92MC9jb21tb24vYWQucHJvdG8SHmdv",
            "b2dsZS5hZHMuZ29vZ2xlYWRzLnYwLmNvbW1vbho1Z29vZ2xlL2Fkcy9nb29n",
            "bGVhZHMvdjAvY29tbW9uL2N1c3RvbV9wYXJhbWV0ZXIucHJvdG8aK2dvb2ds",
            "ZS9hZHMvZ29vZ2xlYWRzL3YwL2VudW1zL2FkX3R5cGUucHJvdG8aHmdvb2ds",
            "ZS9wcm90b2J1Zi93cmFwcGVycy5wcm90byLKBwoCQWQSJwoCaWQYASABKAsy",
            "Gy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZRIwCgpmaW5hbF91cmxzGAIg",
            "AygLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjcKEWZpbmFsX21v",
            "YmlsZV91cmxzGBAgAygLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "EjsKFXRyYWNraW5nX3VybF90ZW1wbGF0ZRgMIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZRJOChV1cmxfY3VzdG9tX3BhcmFtZXRlcnMYCiAD",
            "KAsyLy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MC5jb21tb24uQ3VzdG9tUGFy",
            "YW1ldGVyEjEKC2Rpc3BsYXlfdXJsGAQgASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cmluZ1ZhbHVlEj4KBHR5cGUYBSABKA4yMC5nb29nbGUuYWRzLmdvb2ds",
            "ZWFkcy52MC5lbnVtcy5BZFR5cGVFbnVtLkFkVHlwZRI9Cgd0ZXh0X2FkGAYg",
            "ASgLMiouZ29vZ2xlLmFkcy5nb29nbGVhZHMudjAuY29tbW9uLlRleHRBZElu",
            "Zm9IABJOChBleHBhbmRlZF90ZXh0X2FkGAcgASgLMjIuZ29vZ2xlLmFkcy5n",
            "b29nbGVhZHMudjAuY29tbW9uLkV4cGFuZGVkVGV4dEFkSW5mb0gAElAKEWR5",
            "bmFtaWNfc2VhcmNoX2FkGAggASgLMjMuZ29vZ2xlLmFkcy5nb29nbGVhZHMu",
            "djAuY29tbW9uLkR5bmFtaWNTZWFyY2hBZEluZm9IABJYChVyZXNwb25zaXZl",
            "X2Rpc3BsYXlfYWQYCSABKAsyNy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MC5j",
            "b21tb24uUmVzcG9uc2l2ZURpc3BsYXlBZEluZm9IABJGCgxjYWxsX29ubHlf",
            "YWQYDSABKAsyLi5nb29nbGUuYWRzLmdvb2dsZWFkcy52MC5jb21tb24uQ2Fs",
            "bE9ubHlBZEluZm9IABJhChpleHBhbmRlZF9keW5hbWljX3NlYXJjaF9hZBgO",
            "IAEoCzI7Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYwLmNvbW1vbi5FeHBhbmRl",
            "ZER5bmFtaWNTZWFyY2hBZEluZm9IABI/Cghob3RlbF9hZBgPIAEoCzIrLmdv",
            "b2dsZS5hZHMuZ29vZ2xlYWRzLnYwLmNvbW1vbi5Ib3RlbEFkSW5mb0gAQgkK",
            "B2FkX2RhdGEipAEKClRleHRBZEluZm8SLgoIaGVhZGxpbmUYASABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMgoMZGVzY3JpcHRpb24xGAIg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjIKDGRlc2NyaXB0",
            "aW9uMhgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZSKNAgoS",
            "RXhwYW5kZWRUZXh0QWRJbmZvEjQKDmhlYWRsaW5lX3BhcnQxGAEgASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjQKDmhlYWRsaW5lX3BhcnQy",
            "GAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjEKC2Rlc2Ny",
            "aXB0aW9uGAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEisK",
            "BXBhdGgxGAQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEisK",
            "BXBhdGgyGAUgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlIn0K",
            "E0R5bmFtaWNTZWFyY2hBZEluZm8SMgoMZGVzY3JpcHRpb24xGAEgASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjIKDGRlc2NyaXB0aW9uMhgC",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZSLsAQoXUmVzcG9u",
            "c2l2ZURpc3BsYXlBZEluZm8SNAoOc2hvcnRfaGVhZGxpbmUYASABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMwoNbG9uZ19oZWFkbGluZRgC",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIxCgtkZXNjcmlw",
            "dGlvbhgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIzCg1i",
            "dXNpbmVzc19uYW1lGAQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1Zh",
            "bHVlIskDCg5DYWxsT25seUFkSW5mbxIyCgxjb3VudHJ5X2NvZGUYASABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMgoMcGhvbmVfbnVtYmVy",
            "GAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjMKDWJ1c2lu",
            "ZXNzX25hbWUYAyABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUS",
            "MgoMZGVzY3JpcHRpb24xGAQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlEjIKDGRlc2NyaXB0aW9uMhgFIAEoCzIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZRIwCgxjYWxsX3RyYWNrZWQYBiABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuQm9vbFZhbHVlEjsKF2Rpc2FibGVfY2FsbF9jb252ZXJzaW9u",
            "GAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRJDCh1waG9uZV9u",
            "dW1iZXJfdmVyaWZpY2F0aW9uX3VybBgIIAEoCzIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZSJQChtFeHBhbmRlZER5bmFtaWNTZWFyY2hBZEluZm8S",
            "MQoLZGVzY3JpcHRpb24YASABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5n",
            "VmFsdWUiDQoLSG90ZWxBZEluZm9CvQEKImNvbS5nb29nbGUuYWRzLmdvb2ds",
            "ZWFkcy52MC5jb21tb25CB0FkUHJvdG9QAVpEZ29vZ2xlLmdvbGFuZy5vcmcv",
            "Z2VucHJvdG8vZ29vZ2xlYXBpcy9hZHMvZ29vZ2xlYWRzL3YwL2NvbW1vbjtj",
            "b21tb26iAgNHQUGqAh5Hb29nbGUuQWRzLkdvb2dsZUFkcy5WMC5Db21tb27K",
            "Ah5Hb29nbGVcQWRzXEdvb2dsZUFkc1xWMFxDb21tb25iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V0.Common.CustomParameterReflection.Descriptor, global::Google.Ads.GoogleAds.V0.Enums.AdTypeReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Common.Ad), global::Google.Ads.GoogleAds.V0.Common.Ad.Parser, new[]{ "Id", "FinalUrls", "FinalMobileUrls", "TrackingUrlTemplate", "UrlCustomParameters", "DisplayUrl", "Type", "TextAd", "ExpandedTextAd", "DynamicSearchAd", "ResponsiveDisplayAd", "CallOnlyAd", "ExpandedDynamicSearchAd", "HotelAd" }, new[]{ "AdData" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Common.TextAdInfo), global::Google.Ads.GoogleAds.V0.Common.TextAdInfo.Parser, new[]{ "Headline", "Description1", "Description2" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Common.ExpandedTextAdInfo), global::Google.Ads.GoogleAds.V0.Common.ExpandedTextAdInfo.Parser, new[]{ "HeadlinePart1", "HeadlinePart2", "Description", "Path1", "Path2" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Common.DynamicSearchAdInfo), global::Google.Ads.GoogleAds.V0.Common.DynamicSearchAdInfo.Parser, new[]{ "Description1", "Description2" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Common.ResponsiveDisplayAdInfo), global::Google.Ads.GoogleAds.V0.Common.ResponsiveDisplayAdInfo.Parser, new[]{ "ShortHeadline", "LongHeadline", "Description", "BusinessName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Common.CallOnlyAdInfo), global::Google.Ads.GoogleAds.V0.Common.CallOnlyAdInfo.Parser, new[]{ "CountryCode", "PhoneNumber", "BusinessName", "Description1", "Description2", "CallTracked", "DisableCallConversion", "PhoneNumberVerificationUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Common.ExpandedDynamicSearchAdInfo), global::Google.Ads.GoogleAds.V0.Common.ExpandedDynamicSearchAdInfo.Parser, new[]{ "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Common.HotelAdInfo), global::Google.Ads.GoogleAds.V0.Common.HotelAdInfo.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// An ad.
  /// </summary>
  public sealed partial class Ad : pb::IMessage<Ad> {
    private static readonly pb::MessageParser<Ad> _parser = new pb::MessageParser<Ad>(() => new Ad());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ad> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Common.AdReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ad() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ad(Ad other) : this() {
      Id = other.Id;
      finalUrls_ = other.finalUrls_.Clone();
      finalMobileUrls_ = other.finalMobileUrls_.Clone();
      TrackingUrlTemplate = other.TrackingUrlTemplate;
      urlCustomParameters_ = other.urlCustomParameters_.Clone();
      DisplayUrl = other.DisplayUrl;
      type_ = other.type_;
      switch (other.AdDataCase) {
        case AdDataOneofCase.TextAd:
          TextAd = other.TextAd.Clone();
          break;
        case AdDataOneofCase.ExpandedTextAd:
          ExpandedTextAd = other.ExpandedTextAd.Clone();
          break;
        case AdDataOneofCase.DynamicSearchAd:
          DynamicSearchAd = other.DynamicSearchAd.Clone();
          break;
        case AdDataOneofCase.ResponsiveDisplayAd:
          ResponsiveDisplayAd = other.ResponsiveDisplayAd.Clone();
          break;
        case AdDataOneofCase.CallOnlyAd:
          CallOnlyAd = other.CallOnlyAd.Clone();
          break;
        case AdDataOneofCase.ExpandedDynamicSearchAd:
          ExpandedDynamicSearchAd = other.ExpandedDynamicSearchAd.Clone();
          break;
        case AdDataOneofCase.HotelAd:
          HotelAd = other.HotelAd.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ad Clone() {
      return new Ad(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<long?> _single_id_codec = pb::FieldCodec.ForStructWrapper<long>(10);
    private long? id_;
    /// <summary>
    /// The ID of the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "final_urls" field.</summary>
    public const int FinalUrlsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_finalUrls_codec
        = pb::FieldCodec.ForClassWrapper<string>(18);
    private readonly pbc::RepeatedField<string> finalUrls_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The list of possible final URLs after all cross-domain redirects for the
    /// ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FinalUrls {
      get { return finalUrls_; }
    }

    /// <summary>Field number for the "final_mobile_urls" field.</summary>
    public const int FinalMobileUrlsFieldNumber = 16;
    private static readonly pb::FieldCodec<string> _repeated_finalMobileUrls_codec
        = pb::FieldCodec.ForClassWrapper<string>(130);
    private readonly pbc::RepeatedField<string> finalMobileUrls_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The list of possible final mobile URLs after all cross-domain redirects
    /// for the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FinalMobileUrls {
      get { return finalMobileUrls_; }
    }

    /// <summary>Field number for the "tracking_url_template" field.</summary>
    public const int TrackingUrlTemplateFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_trackingUrlTemplate_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string trackingUrlTemplate_;
    /// <summary>
    /// The URL template for constructing a tracking URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TrackingUrlTemplate {
      get { return trackingUrlTemplate_; }
      set {
        trackingUrlTemplate_ = value;
      }
    }

    /// <summary>Field number for the "url_custom_parameters" field.</summary>
    public const int UrlCustomParametersFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V0.Common.CustomParameter> _repeated_urlCustomParameters_codec
        = pb::FieldCodec.ForMessage(82, global::Google.Ads.GoogleAds.V0.Common.CustomParameter.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V0.Common.CustomParameter> urlCustomParameters_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V0.Common.CustomParameter>();
    /// <summary>
    /// The list of mappings that can be used to substitute custom parameter tags
    /// in a
    /// `tracking_url_template`, `final_urls`, or `mobile_final_urls`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V0.Common.CustomParameter> UrlCustomParameters {
      get { return urlCustomParameters_; }
    }

    /// <summary>Field number for the "display_url" field.</summary>
    public const int DisplayUrlFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_displayUrl_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string displayUrl_;
    /// <summary>
    /// The URL that appears in the ad description for some ad formats.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayUrl {
      get { return displayUrl_; }
      set {
        displayUrl_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::Google.Ads.GoogleAds.V0.Enums.AdTypeEnum.Types.AdType type_ = 0;
    /// <summary>
    /// The type of ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Enums.AdTypeEnum.Types.AdType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "text_ad" field.</summary>
    public const int TextAdFieldNumber = 6;
    /// <summary>
    /// Details pertaining to a text ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.TextAdInfo TextAd {
      get { return adDataCase_ == AdDataOneofCase.TextAd ? (global::Google.Ads.GoogleAds.V0.Common.TextAdInfo) adData_ : null; }
      set {
        adData_ = value;
        adDataCase_ = value == null ? AdDataOneofCase.None : AdDataOneofCase.TextAd;
      }
    }

    /// <summary>Field number for the "expanded_text_ad" field.</summary>
    public const int ExpandedTextAdFieldNumber = 7;
    /// <summary>
    /// Details pertaining to an expanded text ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.ExpandedTextAdInfo ExpandedTextAd {
      get { return adDataCase_ == AdDataOneofCase.ExpandedTextAd ? (global::Google.Ads.GoogleAds.V0.Common.ExpandedTextAdInfo) adData_ : null; }
      set {
        adData_ = value;
        adDataCase_ = value == null ? AdDataOneofCase.None : AdDataOneofCase.ExpandedTextAd;
      }
    }

    /// <summary>Field number for the "dynamic_search_ad" field.</summary>
    public const int DynamicSearchAdFieldNumber = 8;
    /// <summary>
    /// Details pertaining to a Dynamic Search Ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.DynamicSearchAdInfo DynamicSearchAd {
      get { return adDataCase_ == AdDataOneofCase.DynamicSearchAd ? (global::Google.Ads.GoogleAds.V0.Common.DynamicSearchAdInfo) adData_ : null; }
      set {
        adData_ = value;
        adDataCase_ = value == null ? AdDataOneofCase.None : AdDataOneofCase.DynamicSearchAd;
      }
    }

    /// <summary>Field number for the "responsive_display_ad" field.</summary>
    public const int ResponsiveDisplayAdFieldNumber = 9;
    /// <summary>
    /// Details pertaining to a responsive display ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.ResponsiveDisplayAdInfo ResponsiveDisplayAd {
      get { return adDataCase_ == AdDataOneofCase.ResponsiveDisplayAd ? (global::Google.Ads.GoogleAds.V0.Common.ResponsiveDisplayAdInfo) adData_ : null; }
      set {
        adData_ = value;
        adDataCase_ = value == null ? AdDataOneofCase.None : AdDataOneofCase.ResponsiveDisplayAd;
      }
    }

    /// <summary>Field number for the "call_only_ad" field.</summary>
    public const int CallOnlyAdFieldNumber = 13;
    /// <summary>
    /// Details pertaining to a call-only ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.CallOnlyAdInfo CallOnlyAd {
      get { return adDataCase_ == AdDataOneofCase.CallOnlyAd ? (global::Google.Ads.GoogleAds.V0.Common.CallOnlyAdInfo) adData_ : null; }
      set {
        adData_ = value;
        adDataCase_ = value == null ? AdDataOneofCase.None : AdDataOneofCase.CallOnlyAd;
      }
    }

    /// <summary>Field number for the "expanded_dynamic_search_ad" field.</summary>
    public const int ExpandedDynamicSearchAdFieldNumber = 14;
    /// <summary>
    /// Details pertaining to an Expanded Dynamic Search Ad.
    /// This type of ad has its headline, final URLs, and display URL
    /// auto-generated at serving time according to domain name specific
    /// information provided by `dynamic_search_ads_setting` linked at the
    /// campaign level.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.ExpandedDynamicSearchAdInfo ExpandedDynamicSearchAd {
      get { return adDataCase_ == AdDataOneofCase.ExpandedDynamicSearchAd ? (global::Google.Ads.GoogleAds.V0.Common.ExpandedDynamicSearchAdInfo) adData_ : null; }
      set {
        adData_ = value;
        adDataCase_ = value == null ? AdDataOneofCase.None : AdDataOneofCase.ExpandedDynamicSearchAd;
      }
    }

    /// <summary>Field number for the "hotel_ad" field.</summary>
    public const int HotelAdFieldNumber = 15;
    /// <summary>
    /// Details pertaining to a hotel ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.HotelAdInfo HotelAd {
      get { return adDataCase_ == AdDataOneofCase.HotelAd ? (global::Google.Ads.GoogleAds.V0.Common.HotelAdInfo) adData_ : null; }
      set {
        adData_ = value;
        adDataCase_ = value == null ? AdDataOneofCase.None : AdDataOneofCase.HotelAd;
      }
    }

    private object adData_;
    /// <summary>Enum of possible cases for the "ad_data" oneof.</summary>
    public enum AdDataOneofCase {
      None = 0,
      TextAd = 6,
      ExpandedTextAd = 7,
      DynamicSearchAd = 8,
      ResponsiveDisplayAd = 9,
      CallOnlyAd = 13,
      ExpandedDynamicSearchAd = 14,
      HotelAd = 15,
    }
    private AdDataOneofCase adDataCase_ = AdDataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdDataOneofCase AdDataCase {
      get { return adDataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAdData() {
      adDataCase_ = AdDataOneofCase.None;
      adData_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ad);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ad other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!finalUrls_.Equals(other.finalUrls_)) return false;
      if(!finalMobileUrls_.Equals(other.finalMobileUrls_)) return false;
      if (TrackingUrlTemplate != other.TrackingUrlTemplate) return false;
      if(!urlCustomParameters_.Equals(other.urlCustomParameters_)) return false;
      if (DisplayUrl != other.DisplayUrl) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(TextAd, other.TextAd)) return false;
      if (!object.Equals(ExpandedTextAd, other.ExpandedTextAd)) return false;
      if (!object.Equals(DynamicSearchAd, other.DynamicSearchAd)) return false;
      if (!object.Equals(ResponsiveDisplayAd, other.ResponsiveDisplayAd)) return false;
      if (!object.Equals(CallOnlyAd, other.CallOnlyAd)) return false;
      if (!object.Equals(ExpandedDynamicSearchAd, other.ExpandedDynamicSearchAd)) return false;
      if (!object.Equals(HotelAd, other.HotelAd)) return false;
      if (AdDataCase != other.AdDataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      hash ^= finalUrls_.GetHashCode();
      hash ^= finalMobileUrls_.GetHashCode();
      if (trackingUrlTemplate_ != null) hash ^= TrackingUrlTemplate.GetHashCode();
      hash ^= urlCustomParameters_.GetHashCode();
      if (displayUrl_ != null) hash ^= DisplayUrl.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (adDataCase_ == AdDataOneofCase.TextAd) hash ^= TextAd.GetHashCode();
      if (adDataCase_ == AdDataOneofCase.ExpandedTextAd) hash ^= ExpandedTextAd.GetHashCode();
      if (adDataCase_ == AdDataOneofCase.DynamicSearchAd) hash ^= DynamicSearchAd.GetHashCode();
      if (adDataCase_ == AdDataOneofCase.ResponsiveDisplayAd) hash ^= ResponsiveDisplayAd.GetHashCode();
      if (adDataCase_ == AdDataOneofCase.CallOnlyAd) hash ^= CallOnlyAd.GetHashCode();
      if (adDataCase_ == AdDataOneofCase.ExpandedDynamicSearchAd) hash ^= ExpandedDynamicSearchAd.GetHashCode();
      if (adDataCase_ == AdDataOneofCase.HotelAd) hash ^= HotelAd.GetHashCode();
      hash ^= (int) adDataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      finalUrls_.WriteTo(output, _repeated_finalUrls_codec);
      if (displayUrl_ != null) {
        _single_displayUrl_codec.WriteTagAndValue(output, DisplayUrl);
      }
      if (Type != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (adDataCase_ == AdDataOneofCase.TextAd) {
        output.WriteRawTag(50);
        output.WriteMessage(TextAd);
      }
      if (adDataCase_ == AdDataOneofCase.ExpandedTextAd) {
        output.WriteRawTag(58);
        output.WriteMessage(ExpandedTextAd);
      }
      if (adDataCase_ == AdDataOneofCase.DynamicSearchAd) {
        output.WriteRawTag(66);
        output.WriteMessage(DynamicSearchAd);
      }
      if (adDataCase_ == AdDataOneofCase.ResponsiveDisplayAd) {
        output.WriteRawTag(74);
        output.WriteMessage(ResponsiveDisplayAd);
      }
      urlCustomParameters_.WriteTo(output, _repeated_urlCustomParameters_codec);
      if (trackingUrlTemplate_ != null) {
        _single_trackingUrlTemplate_codec.WriteTagAndValue(output, TrackingUrlTemplate);
      }
      if (adDataCase_ == AdDataOneofCase.CallOnlyAd) {
        output.WriteRawTag(106);
        output.WriteMessage(CallOnlyAd);
      }
      if (adDataCase_ == AdDataOneofCase.ExpandedDynamicSearchAd) {
        output.WriteRawTag(114);
        output.WriteMessage(ExpandedDynamicSearchAd);
      }
      if (adDataCase_ == AdDataOneofCase.HotelAd) {
        output.WriteRawTag(122);
        output.WriteMessage(HotelAd);
      }
      finalMobileUrls_.WriteTo(output, _repeated_finalMobileUrls_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      size += finalUrls_.CalculateSize(_repeated_finalUrls_codec);
      size += finalMobileUrls_.CalculateSize(_repeated_finalMobileUrls_codec);
      if (trackingUrlTemplate_ != null) {
        size += _single_trackingUrlTemplate_codec.CalculateSizeWithTag(TrackingUrlTemplate);
      }
      size += urlCustomParameters_.CalculateSize(_repeated_urlCustomParameters_codec);
      if (displayUrl_ != null) {
        size += _single_displayUrl_codec.CalculateSizeWithTag(DisplayUrl);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (adDataCase_ == AdDataOneofCase.TextAd) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextAd);
      }
      if (adDataCase_ == AdDataOneofCase.ExpandedTextAd) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpandedTextAd);
      }
      if (adDataCase_ == AdDataOneofCase.DynamicSearchAd) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DynamicSearchAd);
      }
      if (adDataCase_ == AdDataOneofCase.ResponsiveDisplayAd) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponsiveDisplayAd);
      }
      if (adDataCase_ == AdDataOneofCase.CallOnlyAd) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CallOnlyAd);
      }
      if (adDataCase_ == AdDataOneofCase.ExpandedDynamicSearchAd) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpandedDynamicSearchAd);
      }
      if (adDataCase_ == AdDataOneofCase.HotelAd) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HotelAd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ad other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0L) {
          Id = other.Id;
        }
      }
      finalUrls_.Add(other.finalUrls_);
      finalMobileUrls_.Add(other.finalMobileUrls_);
      if (other.trackingUrlTemplate_ != null) {
        if (trackingUrlTemplate_ == null || other.TrackingUrlTemplate != "") {
          TrackingUrlTemplate = other.TrackingUrlTemplate;
        }
      }
      urlCustomParameters_.Add(other.urlCustomParameters_);
      if (other.displayUrl_ != null) {
        if (displayUrl_ == null || other.DisplayUrl != "") {
          DisplayUrl = other.DisplayUrl;
        }
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      switch (other.AdDataCase) {
        case AdDataOneofCase.TextAd:
          if (TextAd == null) {
            TextAd = new global::Google.Ads.GoogleAds.V0.Common.TextAdInfo();
          }
          TextAd.MergeFrom(other.TextAd);
          break;
        case AdDataOneofCase.ExpandedTextAd:
          if (ExpandedTextAd == null) {
            ExpandedTextAd = new global::Google.Ads.GoogleAds.V0.Common.ExpandedTextAdInfo();
          }
          ExpandedTextAd.MergeFrom(other.ExpandedTextAd);
          break;
        case AdDataOneofCase.DynamicSearchAd:
          if (DynamicSearchAd == null) {
            DynamicSearchAd = new global::Google.Ads.GoogleAds.V0.Common.DynamicSearchAdInfo();
          }
          DynamicSearchAd.MergeFrom(other.DynamicSearchAd);
          break;
        case AdDataOneofCase.ResponsiveDisplayAd:
          if (ResponsiveDisplayAd == null) {
            ResponsiveDisplayAd = new global::Google.Ads.GoogleAds.V0.Common.ResponsiveDisplayAdInfo();
          }
          ResponsiveDisplayAd.MergeFrom(other.ResponsiveDisplayAd);
          break;
        case AdDataOneofCase.CallOnlyAd:
          if (CallOnlyAd == null) {
            CallOnlyAd = new global::Google.Ads.GoogleAds.V0.Common.CallOnlyAdInfo();
          }
          CallOnlyAd.MergeFrom(other.CallOnlyAd);
          break;
        case AdDataOneofCase.ExpandedDynamicSearchAd:
          if (ExpandedDynamicSearchAd == null) {
            ExpandedDynamicSearchAd = new global::Google.Ads.GoogleAds.V0.Common.ExpandedDynamicSearchAdInfo();
          }
          ExpandedDynamicSearchAd.MergeFrom(other.ExpandedDynamicSearchAd);
          break;
        case AdDataOneofCase.HotelAd:
          if (HotelAd == null) {
            HotelAd = new global::Google.Ads.GoogleAds.V0.Common.HotelAdInfo();
          }
          HotelAd.MergeFrom(other.HotelAd);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            long? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0L) {
              Id = value;
            }
            break;
          }
          case 18: {
            finalUrls_.AddEntriesFrom(input, _repeated_finalUrls_codec);
            break;
          }
          case 34: {
            string value = _single_displayUrl_codec.Read(input);
            if (displayUrl_ == null || value != "") {
              DisplayUrl = value;
            }
            break;
          }
          case 40: {
            type_ = (global::Google.Ads.GoogleAds.V0.Enums.AdTypeEnum.Types.AdType) input.ReadEnum();
            break;
          }
          case 50: {
            global::Google.Ads.GoogleAds.V0.Common.TextAdInfo subBuilder = new global::Google.Ads.GoogleAds.V0.Common.TextAdInfo();
            if (adDataCase_ == AdDataOneofCase.TextAd) {
              subBuilder.MergeFrom(TextAd);
            }
            input.ReadMessage(subBuilder);
            TextAd = subBuilder;
            break;
          }
          case 58: {
            global::Google.Ads.GoogleAds.V0.Common.ExpandedTextAdInfo subBuilder = new global::Google.Ads.GoogleAds.V0.Common.ExpandedTextAdInfo();
            if (adDataCase_ == AdDataOneofCase.ExpandedTextAd) {
              subBuilder.MergeFrom(ExpandedTextAd);
            }
            input.ReadMessage(subBuilder);
            ExpandedTextAd = subBuilder;
            break;
          }
          case 66: {
            global::Google.Ads.GoogleAds.V0.Common.DynamicSearchAdInfo subBuilder = new global::Google.Ads.GoogleAds.V0.Common.DynamicSearchAdInfo();
            if (adDataCase_ == AdDataOneofCase.DynamicSearchAd) {
              subBuilder.MergeFrom(DynamicSearchAd);
            }
            input.ReadMessage(subBuilder);
            DynamicSearchAd = subBuilder;
            break;
          }
          case 74: {
            global::Google.Ads.GoogleAds.V0.Common.ResponsiveDisplayAdInfo subBuilder = new global::Google.Ads.GoogleAds.V0.Common.ResponsiveDisplayAdInfo();
            if (adDataCase_ == AdDataOneofCase.ResponsiveDisplayAd) {
              subBuilder.MergeFrom(ResponsiveDisplayAd);
            }
            input.ReadMessage(subBuilder);
            ResponsiveDisplayAd = subBuilder;
            break;
          }
          case 82: {
            urlCustomParameters_.AddEntriesFrom(input, _repeated_urlCustomParameters_codec);
            break;
          }
          case 98: {
            string value = _single_trackingUrlTemplate_codec.Read(input);
            if (trackingUrlTemplate_ == null || value != "") {
              TrackingUrlTemplate = value;
            }
            break;
          }
          case 106: {
            global::Google.Ads.GoogleAds.V0.Common.CallOnlyAdInfo subBuilder = new global::Google.Ads.GoogleAds.V0.Common.CallOnlyAdInfo();
            if (adDataCase_ == AdDataOneofCase.CallOnlyAd) {
              subBuilder.MergeFrom(CallOnlyAd);
            }
            input.ReadMessage(subBuilder);
            CallOnlyAd = subBuilder;
            break;
          }
          case 114: {
            global::Google.Ads.GoogleAds.V0.Common.ExpandedDynamicSearchAdInfo subBuilder = new global::Google.Ads.GoogleAds.V0.Common.ExpandedDynamicSearchAdInfo();
            if (adDataCase_ == AdDataOneofCase.ExpandedDynamicSearchAd) {
              subBuilder.MergeFrom(ExpandedDynamicSearchAd);
            }
            input.ReadMessage(subBuilder);
            ExpandedDynamicSearchAd = subBuilder;
            break;
          }
          case 122: {
            global::Google.Ads.GoogleAds.V0.Common.HotelAdInfo subBuilder = new global::Google.Ads.GoogleAds.V0.Common.HotelAdInfo();
            if (adDataCase_ == AdDataOneofCase.HotelAd) {
              subBuilder.MergeFrom(HotelAd);
            }
            input.ReadMessage(subBuilder);
            HotelAd = subBuilder;
            break;
          }
          case 130: {
            finalMobileUrls_.AddEntriesFrom(input, _repeated_finalMobileUrls_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A text ad.
  /// </summary>
  public sealed partial class TextAdInfo : pb::IMessage<TextAdInfo> {
    private static readonly pb::MessageParser<TextAdInfo> _parser = new pb::MessageParser<TextAdInfo>(() => new TextAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TextAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Common.AdReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextAdInfo(TextAdInfo other) : this() {
      Headline = other.Headline;
      Description1 = other.Description1;
      Description2 = other.Description2;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextAdInfo Clone() {
      return new TextAdInfo(this);
    }

    /// <summary>Field number for the "headline" field.</summary>
    public const int HeadlineFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_headline_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string headline_;
    /// <summary>
    /// The headline of the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Headline {
      get { return headline_; }
      set {
        headline_ = value;
      }
    }

    /// <summary>Field number for the "description1" field.</summary>
    public const int Description1FieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_description1_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string description1_;
    /// <summary>
    /// The first line of the ad's description.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description1 {
      get { return description1_; }
      set {
        description1_ = value;
      }
    }

    /// <summary>Field number for the "description2" field.</summary>
    public const int Description2FieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_description2_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string description2_;
    /// <summary>
    /// The second line of the ad's description.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description2 {
      get { return description2_; }
      set {
        description2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TextAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TextAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Headline != other.Headline) return false;
      if (Description1 != other.Description1) return false;
      if (Description2 != other.Description2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (headline_ != null) hash ^= Headline.GetHashCode();
      if (description1_ != null) hash ^= Description1.GetHashCode();
      if (description2_ != null) hash ^= Description2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (headline_ != null) {
        _single_headline_codec.WriteTagAndValue(output, Headline);
      }
      if (description1_ != null) {
        _single_description1_codec.WriteTagAndValue(output, Description1);
      }
      if (description2_ != null) {
        _single_description2_codec.WriteTagAndValue(output, Description2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (headline_ != null) {
        size += _single_headline_codec.CalculateSizeWithTag(Headline);
      }
      if (description1_ != null) {
        size += _single_description1_codec.CalculateSizeWithTag(Description1);
      }
      if (description2_ != null) {
        size += _single_description2_codec.CalculateSizeWithTag(Description2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TextAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.headline_ != null) {
        if (headline_ == null || other.Headline != "") {
          Headline = other.Headline;
        }
      }
      if (other.description1_ != null) {
        if (description1_ == null || other.Description1 != "") {
          Description1 = other.Description1;
        }
      }
      if (other.description2_ != null) {
        if (description2_ == null || other.Description2 != "") {
          Description2 = other.Description2;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_headline_codec.Read(input);
            if (headline_ == null || value != "") {
              Headline = value;
            }
            break;
          }
          case 18: {
            string value = _single_description1_codec.Read(input);
            if (description1_ == null || value != "") {
              Description1 = value;
            }
            break;
          }
          case 26: {
            string value = _single_description2_codec.Read(input);
            if (description2_ == null || value != "") {
              Description2 = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An expanded text ad.
  /// </summary>
  public sealed partial class ExpandedTextAdInfo : pb::IMessage<ExpandedTextAdInfo> {
    private static readonly pb::MessageParser<ExpandedTextAdInfo> _parser = new pb::MessageParser<ExpandedTextAdInfo>(() => new ExpandedTextAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExpandedTextAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Common.AdReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpandedTextAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpandedTextAdInfo(ExpandedTextAdInfo other) : this() {
      HeadlinePart1 = other.HeadlinePart1;
      HeadlinePart2 = other.HeadlinePart2;
      Description = other.Description;
      Path1 = other.Path1;
      Path2 = other.Path2;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpandedTextAdInfo Clone() {
      return new ExpandedTextAdInfo(this);
    }

    /// <summary>Field number for the "headline_part1" field.</summary>
    public const int HeadlinePart1FieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_headlinePart1_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string headlinePart1_;
    /// <summary>
    /// The first part of the ad's headline.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeadlinePart1 {
      get { return headlinePart1_; }
      set {
        headlinePart1_ = value;
      }
    }

    /// <summary>Field number for the "headline_part2" field.</summary>
    public const int HeadlinePart2FieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_headlinePart2_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string headlinePart2_;
    /// <summary>
    /// The second part of the ad's headline.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeadlinePart2 {
      get { return headlinePart2_; }
      set {
        headlinePart2_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string description_;
    /// <summary>
    /// The description of the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }

    /// <summary>Field number for the "path1" field.</summary>
    public const int Path1FieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_path1_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string path1_;
    /// <summary>
    /// The text that can appear alongside the ad's displayed URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path1 {
      get { return path1_; }
      set {
        path1_ = value;
      }
    }

    /// <summary>Field number for the "path2" field.</summary>
    public const int Path2FieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_path2_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string path2_;
    /// <summary>
    /// Additional text that can appear alongside the ad's displayed URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path2 {
      get { return path2_; }
      set {
        path2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExpandedTextAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExpandedTextAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeadlinePart1 != other.HeadlinePart1) return false;
      if (HeadlinePart2 != other.HeadlinePart2) return false;
      if (Description != other.Description) return false;
      if (Path1 != other.Path1) return false;
      if (Path2 != other.Path2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (headlinePart1_ != null) hash ^= HeadlinePart1.GetHashCode();
      if (headlinePart2_ != null) hash ^= HeadlinePart2.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (path1_ != null) hash ^= Path1.GetHashCode();
      if (path2_ != null) hash ^= Path2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (headlinePart1_ != null) {
        _single_headlinePart1_codec.WriteTagAndValue(output, HeadlinePart1);
      }
      if (headlinePart2_ != null) {
        _single_headlinePart2_codec.WriteTagAndValue(output, HeadlinePart2);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (path1_ != null) {
        _single_path1_codec.WriteTagAndValue(output, Path1);
      }
      if (path2_ != null) {
        _single_path2_codec.WriteTagAndValue(output, Path2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (headlinePart1_ != null) {
        size += _single_headlinePart1_codec.CalculateSizeWithTag(HeadlinePart1);
      }
      if (headlinePart2_ != null) {
        size += _single_headlinePart2_codec.CalculateSizeWithTag(HeadlinePart2);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (path1_ != null) {
        size += _single_path1_codec.CalculateSizeWithTag(Path1);
      }
      if (path2_ != null) {
        size += _single_path2_codec.CalculateSizeWithTag(Path2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExpandedTextAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.headlinePart1_ != null) {
        if (headlinePart1_ == null || other.HeadlinePart1 != "") {
          HeadlinePart1 = other.HeadlinePart1;
        }
      }
      if (other.headlinePart2_ != null) {
        if (headlinePart2_ == null || other.HeadlinePart2 != "") {
          HeadlinePart2 = other.HeadlinePart2;
        }
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      if (other.path1_ != null) {
        if (path1_ == null || other.Path1 != "") {
          Path1 = other.Path1;
        }
      }
      if (other.path2_ != null) {
        if (path2_ == null || other.Path2 != "") {
          Path2 = other.Path2;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_headlinePart1_codec.Read(input);
            if (headlinePart1_ == null || value != "") {
              HeadlinePart1 = value;
            }
            break;
          }
          case 18: {
            string value = _single_headlinePart2_codec.Read(input);
            if (headlinePart2_ == null || value != "") {
              HeadlinePart2 = value;
            }
            break;
          }
          case 26: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 34: {
            string value = _single_path1_codec.Read(input);
            if (path1_ == null || value != "") {
              Path1 = value;
            }
            break;
          }
          case 42: {
            string value = _single_path2_codec.Read(input);
            if (path2_ == null || value != "") {
              Path2 = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A dynamic search ad.
  /// </summary>
  public sealed partial class DynamicSearchAdInfo : pb::IMessage<DynamicSearchAdInfo> {
    private static readonly pb::MessageParser<DynamicSearchAdInfo> _parser = new pb::MessageParser<DynamicSearchAdInfo>(() => new DynamicSearchAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DynamicSearchAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Common.AdReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicSearchAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicSearchAdInfo(DynamicSearchAdInfo other) : this() {
      Description1 = other.Description1;
      Description2 = other.Description2;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicSearchAdInfo Clone() {
      return new DynamicSearchAdInfo(this);
    }

    /// <summary>Field number for the "description1" field.</summary>
    public const int Description1FieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_description1_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string description1_;
    /// <summary>
    /// The first line of the ad's description.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description1 {
      get { return description1_; }
      set {
        description1_ = value;
      }
    }

    /// <summary>Field number for the "description2" field.</summary>
    public const int Description2FieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_description2_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string description2_;
    /// <summary>
    /// The second line of the ad's description.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description2 {
      get { return description2_; }
      set {
        description2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DynamicSearchAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DynamicSearchAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description1 != other.Description1) return false;
      if (Description2 != other.Description2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (description1_ != null) hash ^= Description1.GetHashCode();
      if (description2_ != null) hash ^= Description2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (description1_ != null) {
        _single_description1_codec.WriteTagAndValue(output, Description1);
      }
      if (description2_ != null) {
        _single_description2_codec.WriteTagAndValue(output, Description2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (description1_ != null) {
        size += _single_description1_codec.CalculateSizeWithTag(Description1);
      }
      if (description2_ != null) {
        size += _single_description2_codec.CalculateSizeWithTag(Description2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DynamicSearchAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.description1_ != null) {
        if (description1_ == null || other.Description1 != "") {
          Description1 = other.Description1;
        }
      }
      if (other.description2_ != null) {
        if (description2_ == null || other.Description2 != "") {
          Description2 = other.Description2;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_description1_codec.Read(input);
            if (description1_ == null || value != "") {
              Description1 = value;
            }
            break;
          }
          case 18: {
            string value = _single_description2_codec.Read(input);
            if (description2_ == null || value != "") {
              Description2 = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A responsive display ad.
  /// </summary>
  public sealed partial class ResponsiveDisplayAdInfo : pb::IMessage<ResponsiveDisplayAdInfo> {
    private static readonly pb::MessageParser<ResponsiveDisplayAdInfo> _parser = new pb::MessageParser<ResponsiveDisplayAdInfo>(() => new ResponsiveDisplayAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponsiveDisplayAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Common.AdReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponsiveDisplayAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponsiveDisplayAdInfo(ResponsiveDisplayAdInfo other) : this() {
      ShortHeadline = other.ShortHeadline;
      LongHeadline = other.LongHeadline;
      Description = other.Description;
      BusinessName = other.BusinessName;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponsiveDisplayAdInfo Clone() {
      return new ResponsiveDisplayAdInfo(this);
    }

    /// <summary>Field number for the "short_headline" field.</summary>
    public const int ShortHeadlineFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_shortHeadline_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string shortHeadline_;
    /// <summary>
    /// The short version of the ad's headline.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShortHeadline {
      get { return shortHeadline_; }
      set {
        shortHeadline_ = value;
      }
    }

    /// <summary>Field number for the "long_headline" field.</summary>
    public const int LongHeadlineFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_longHeadline_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string longHeadline_;
    /// <summary>
    /// The long version of the ad's headline.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LongHeadline {
      get { return longHeadline_; }
      set {
        longHeadline_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string description_;
    /// <summary>
    /// The description of the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }

    /// <summary>Field number for the "business_name" field.</summary>
    public const int BusinessNameFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_businessName_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string businessName_;
    /// <summary>
    /// The business name in the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessName {
      get { return businessName_; }
      set {
        businessName_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponsiveDisplayAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponsiveDisplayAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShortHeadline != other.ShortHeadline) return false;
      if (LongHeadline != other.LongHeadline) return false;
      if (Description != other.Description) return false;
      if (BusinessName != other.BusinessName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (shortHeadline_ != null) hash ^= ShortHeadline.GetHashCode();
      if (longHeadline_ != null) hash ^= LongHeadline.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (businessName_ != null) hash ^= BusinessName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (shortHeadline_ != null) {
        _single_shortHeadline_codec.WriteTagAndValue(output, ShortHeadline);
      }
      if (longHeadline_ != null) {
        _single_longHeadline_codec.WriteTagAndValue(output, LongHeadline);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (businessName_ != null) {
        _single_businessName_codec.WriteTagAndValue(output, BusinessName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (shortHeadline_ != null) {
        size += _single_shortHeadline_codec.CalculateSizeWithTag(ShortHeadline);
      }
      if (longHeadline_ != null) {
        size += _single_longHeadline_codec.CalculateSizeWithTag(LongHeadline);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (businessName_ != null) {
        size += _single_businessName_codec.CalculateSizeWithTag(BusinessName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponsiveDisplayAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.shortHeadline_ != null) {
        if (shortHeadline_ == null || other.ShortHeadline != "") {
          ShortHeadline = other.ShortHeadline;
        }
      }
      if (other.longHeadline_ != null) {
        if (longHeadline_ == null || other.LongHeadline != "") {
          LongHeadline = other.LongHeadline;
        }
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      if (other.businessName_ != null) {
        if (businessName_ == null || other.BusinessName != "") {
          BusinessName = other.BusinessName;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_shortHeadline_codec.Read(input);
            if (shortHeadline_ == null || value != "") {
              ShortHeadline = value;
            }
            break;
          }
          case 18: {
            string value = _single_longHeadline_codec.Read(input);
            if (longHeadline_ == null || value != "") {
              LongHeadline = value;
            }
            break;
          }
          case 26: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 34: {
            string value = _single_businessName_codec.Read(input);
            if (businessName_ == null || value != "") {
              BusinessName = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A call-only ad.
  /// </summary>
  public sealed partial class CallOnlyAdInfo : pb::IMessage<CallOnlyAdInfo> {
    private static readonly pb::MessageParser<CallOnlyAdInfo> _parser = new pb::MessageParser<CallOnlyAdInfo>(() => new CallOnlyAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CallOnlyAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Common.AdReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallOnlyAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallOnlyAdInfo(CallOnlyAdInfo other) : this() {
      CountryCode = other.CountryCode;
      PhoneNumber = other.PhoneNumber;
      BusinessName = other.BusinessName;
      Description1 = other.Description1;
      Description2 = other.Description2;
      CallTracked = other.CallTracked;
      DisableCallConversion = other.DisableCallConversion;
      PhoneNumberVerificationUrl = other.PhoneNumberVerificationUrl;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallOnlyAdInfo Clone() {
      return new CallOnlyAdInfo(this);
    }

    /// <summary>Field number for the "country_code" field.</summary>
    public const int CountryCodeFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_countryCode_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string countryCode_;
    /// <summary>
    /// The country code in the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryCode {
      get { return countryCode_; }
      set {
        countryCode_ = value;
      }
    }

    /// <summary>Field number for the "phone_number" field.</summary>
    public const int PhoneNumberFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_phoneNumber_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string phoneNumber_;
    /// <summary>
    /// The phone number in the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNumber {
      get { return phoneNumber_; }
      set {
        phoneNumber_ = value;
      }
    }

    /// <summary>Field number for the "business_name" field.</summary>
    public const int BusinessNameFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_businessName_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string businessName_;
    /// <summary>
    /// The business name in the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessName {
      get { return businessName_; }
      set {
        businessName_ = value;
      }
    }

    /// <summary>Field number for the "description1" field.</summary>
    public const int Description1FieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_description1_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string description1_;
    /// <summary>
    /// The first line of the ad's description.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description1 {
      get { return description1_; }
      set {
        description1_ = value;
      }
    }

    /// <summary>Field number for the "description2" field.</summary>
    public const int Description2FieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_description2_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string description2_;
    /// <summary>
    /// The second line of the ad's description.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description2 {
      get { return description2_; }
      set {
        description2_ = value;
      }
    }

    /// <summary>Field number for the "call_tracked" field.</summary>
    public const int CallTrackedFieldNumber = 6;
    private static readonly pb::FieldCodec<bool?> _single_callTracked_codec = pb::FieldCodec.ForStructWrapper<bool>(50);
    private bool? callTracked_;
    /// <summary>
    /// Whether to enable call tracking for the creative. Enabling call
    /// tracking also enables call conversions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? CallTracked {
      get { return callTracked_; }
      set {
        callTracked_ = value;
      }
    }

    /// <summary>Field number for the "disable_call_conversion" field.</summary>
    public const int DisableCallConversionFieldNumber = 7;
    private static readonly pb::FieldCodec<bool?> _single_disableCallConversion_codec = pb::FieldCodec.ForStructWrapper<bool>(58);
    private bool? disableCallConversion_;
    /// <summary>
    /// Whether to disable call conversion for the creative.
    /// If set to `true`, disables call conversions even when `call_tracked` is
    /// `true`.
    /// If `call_tracked` is `false`, this field is ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? DisableCallConversion {
      get { return disableCallConversion_; }
      set {
        disableCallConversion_ = value;
      }
    }

    /// <summary>Field number for the "phone_number_verification_url" field.</summary>
    public const int PhoneNumberVerificationUrlFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_phoneNumberVerificationUrl_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string phoneNumberVerificationUrl_;
    /// <summary>
    /// The URL to be used for phone number verification.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNumberVerificationUrl {
      get { return phoneNumberVerificationUrl_; }
      set {
        phoneNumberVerificationUrl_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CallOnlyAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CallOnlyAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CountryCode != other.CountryCode) return false;
      if (PhoneNumber != other.PhoneNumber) return false;
      if (BusinessName != other.BusinessName) return false;
      if (Description1 != other.Description1) return false;
      if (Description2 != other.Description2) return false;
      if (CallTracked != other.CallTracked) return false;
      if (DisableCallConversion != other.DisableCallConversion) return false;
      if (PhoneNumberVerificationUrl != other.PhoneNumberVerificationUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (countryCode_ != null) hash ^= CountryCode.GetHashCode();
      if (phoneNumber_ != null) hash ^= PhoneNumber.GetHashCode();
      if (businessName_ != null) hash ^= BusinessName.GetHashCode();
      if (description1_ != null) hash ^= Description1.GetHashCode();
      if (description2_ != null) hash ^= Description2.GetHashCode();
      if (callTracked_ != null) hash ^= CallTracked.GetHashCode();
      if (disableCallConversion_ != null) hash ^= DisableCallConversion.GetHashCode();
      if (phoneNumberVerificationUrl_ != null) hash ^= PhoneNumberVerificationUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (countryCode_ != null) {
        _single_countryCode_codec.WriteTagAndValue(output, CountryCode);
      }
      if (phoneNumber_ != null) {
        _single_phoneNumber_codec.WriteTagAndValue(output, PhoneNumber);
      }
      if (businessName_ != null) {
        _single_businessName_codec.WriteTagAndValue(output, BusinessName);
      }
      if (description1_ != null) {
        _single_description1_codec.WriteTagAndValue(output, Description1);
      }
      if (description2_ != null) {
        _single_description2_codec.WriteTagAndValue(output, Description2);
      }
      if (callTracked_ != null) {
        _single_callTracked_codec.WriteTagAndValue(output, CallTracked);
      }
      if (disableCallConversion_ != null) {
        _single_disableCallConversion_codec.WriteTagAndValue(output, DisableCallConversion);
      }
      if (phoneNumberVerificationUrl_ != null) {
        _single_phoneNumberVerificationUrl_codec.WriteTagAndValue(output, PhoneNumberVerificationUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (countryCode_ != null) {
        size += _single_countryCode_codec.CalculateSizeWithTag(CountryCode);
      }
      if (phoneNumber_ != null) {
        size += _single_phoneNumber_codec.CalculateSizeWithTag(PhoneNumber);
      }
      if (businessName_ != null) {
        size += _single_businessName_codec.CalculateSizeWithTag(BusinessName);
      }
      if (description1_ != null) {
        size += _single_description1_codec.CalculateSizeWithTag(Description1);
      }
      if (description2_ != null) {
        size += _single_description2_codec.CalculateSizeWithTag(Description2);
      }
      if (callTracked_ != null) {
        size += _single_callTracked_codec.CalculateSizeWithTag(CallTracked);
      }
      if (disableCallConversion_ != null) {
        size += _single_disableCallConversion_codec.CalculateSizeWithTag(DisableCallConversion);
      }
      if (phoneNumberVerificationUrl_ != null) {
        size += _single_phoneNumberVerificationUrl_codec.CalculateSizeWithTag(PhoneNumberVerificationUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CallOnlyAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.countryCode_ != null) {
        if (countryCode_ == null || other.CountryCode != "") {
          CountryCode = other.CountryCode;
        }
      }
      if (other.phoneNumber_ != null) {
        if (phoneNumber_ == null || other.PhoneNumber != "") {
          PhoneNumber = other.PhoneNumber;
        }
      }
      if (other.businessName_ != null) {
        if (businessName_ == null || other.BusinessName != "") {
          BusinessName = other.BusinessName;
        }
      }
      if (other.description1_ != null) {
        if (description1_ == null || other.Description1 != "") {
          Description1 = other.Description1;
        }
      }
      if (other.description2_ != null) {
        if (description2_ == null || other.Description2 != "") {
          Description2 = other.Description2;
        }
      }
      if (other.callTracked_ != null) {
        if (callTracked_ == null || other.CallTracked != false) {
          CallTracked = other.CallTracked;
        }
      }
      if (other.disableCallConversion_ != null) {
        if (disableCallConversion_ == null || other.DisableCallConversion != false) {
          DisableCallConversion = other.DisableCallConversion;
        }
      }
      if (other.phoneNumberVerificationUrl_ != null) {
        if (phoneNumberVerificationUrl_ == null || other.PhoneNumberVerificationUrl != "") {
          PhoneNumberVerificationUrl = other.PhoneNumberVerificationUrl;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_countryCode_codec.Read(input);
            if (countryCode_ == null || value != "") {
              CountryCode = value;
            }
            break;
          }
          case 18: {
            string value = _single_phoneNumber_codec.Read(input);
            if (phoneNumber_ == null || value != "") {
              PhoneNumber = value;
            }
            break;
          }
          case 26: {
            string value = _single_businessName_codec.Read(input);
            if (businessName_ == null || value != "") {
              BusinessName = value;
            }
            break;
          }
          case 34: {
            string value = _single_description1_codec.Read(input);
            if (description1_ == null || value != "") {
              Description1 = value;
            }
            break;
          }
          case 42: {
            string value = _single_description2_codec.Read(input);
            if (description2_ == null || value != "") {
              Description2 = value;
            }
            break;
          }
          case 50: {
            bool? value = _single_callTracked_codec.Read(input);
            if (callTracked_ == null || value != false) {
              CallTracked = value;
            }
            break;
          }
          case 58: {
            bool? value = _single_disableCallConversion_codec.Read(input);
            if (disableCallConversion_ == null || value != false) {
              DisableCallConversion = value;
            }
            break;
          }
          case 66: {
            string value = _single_phoneNumberVerificationUrl_codec.Read(input);
            if (phoneNumberVerificationUrl_ == null || value != "") {
              PhoneNumberVerificationUrl = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An expanded dynamic search ad.
  /// </summary>
  public sealed partial class ExpandedDynamicSearchAdInfo : pb::IMessage<ExpandedDynamicSearchAdInfo> {
    private static readonly pb::MessageParser<ExpandedDynamicSearchAdInfo> _parser = new pb::MessageParser<ExpandedDynamicSearchAdInfo>(() => new ExpandedDynamicSearchAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExpandedDynamicSearchAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Common.AdReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpandedDynamicSearchAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpandedDynamicSearchAdInfo(ExpandedDynamicSearchAdInfo other) : this() {
      Description = other.Description;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpandedDynamicSearchAdInfo Clone() {
      return new ExpandedDynamicSearchAdInfo(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string description_;
    /// <summary>
    /// The description of the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExpandedDynamicSearchAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExpandedDynamicSearchAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (description_ != null) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExpandedDynamicSearchAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A hotel ad.
  /// </summary>
  public sealed partial class HotelAdInfo : pb::IMessage<HotelAdInfo> {
    private static readonly pb::MessageParser<HotelAdInfo> _parser = new pb::MessageParser<HotelAdInfo>(() => new HotelAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HotelAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Common.AdReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelAdInfo(HotelAdInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelAdInfo Clone() {
      return new HotelAdInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HotelAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HotelAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HotelAdInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
