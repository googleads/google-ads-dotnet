// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v0/resources/bidding_strategy.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V0.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v0/resources/bidding_strategy.proto</summary>
  public static partial class BiddingStrategyReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v0/resources/bidding_strategy.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BiddingStrategyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjhnb29nbGUvYWRzL2dvb2dsZWFkcy92MC9yZXNvdXJjZXMvYmlkZGluZ19z",
            "dHJhdGVneS5wcm90bxIhZ29vZ2xlLmFkcy5nb29nbGVhZHMudjAucmVzb3Vy",
            "Y2VzGixnb29nbGUvYWRzL2dvb2dsZWFkcy92MC9jb21tb24vYmlkZGluZy5w",
            "cm90bxo5Z29vZ2xlL2Fkcy9nb29nbGVhZHMvdjAvZW51bXMvYmlkZGluZ19z",
            "dHJhdGVneV90eXBlLnByb3RvGh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMu",
            "cHJvdG8ikQUKD0JpZGRpbmdTdHJhdGVneRIVCg1yZXNvdXJjZV9uYW1lGAEg",
            "ASgJEicKAmlkGAMgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUS",
            "KgoEbmFtZRgEIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRJY",
            "CgR0eXBlGAUgASgOMkouZ29vZ2xlLmFkcy5nb29nbGVhZHMudjAuZW51bXMu",
            "QmlkZGluZ1N0cmF0ZWd5VHlwZUVudW0uQmlkZGluZ1N0cmF0ZWd5VHlwZRJD",
            "CgxlbmhhbmNlZF9jcGMYByABKAsyKy5nb29nbGUuYWRzLmdvb2dsZWFkcy52",
            "MC5jb21tb24uRW5oYW5jZWRDcGNIABJMChFwYWdlX29uZV9wcm9tb3RlZBgI",
            "IAEoCzIvLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYwLmNvbW1vbi5QYWdlT25l",
            "UHJvbW90ZWRIABI/Cgp0YXJnZXRfY3BhGAkgASgLMikuZ29vZ2xlLmFkcy5n",
            "b29nbGVhZHMudjAuY29tbW9uLlRhcmdldENwYUgAElIKFHRhcmdldF9vdXRy",
            "YW5rX3NoYXJlGAogASgLMjIuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjAuY29t",
            "bW9uLlRhcmdldE91dHJhbmtTaGFyZUgAEkEKC3RhcmdldF9yb2FzGAsgASgL",
            "MiouZ29vZ2xlLmFkcy5nb29nbGVhZHMudjAuY29tbW9uLlRhcmdldFJvYXNI",
            "ABJDCgx0YXJnZXRfc3BlbmQYDCABKAsyKy5nb29nbGUuYWRzLmdvb2dsZWFk",
            "cy52MC5jb21tb24uVGFyZ2V0U3BlbmRIAEIICgZzY2hlbWVCgQIKJWNvbS5n",
            "b29nbGUuYWRzLmdvb2dsZWFkcy52MC5yZXNvdXJjZXNCFEJpZGRpbmdTdHJh",
            "dGVneVByb3RvUAFaSmdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2ds",
            "ZWFwaXMvYWRzL2dvb2dsZWFkcy92MC9yZXNvdXJjZXM7cmVzb3VyY2VzogID",
            "R0FBqgIhR29vZ2xlLkFkcy5Hb29nbGVBZHMuVjAuUmVzb3VyY2VzygIhR29v",
            "Z2xlXEFkc1xHb29nbGVBZHNcVjBcUmVzb3VyY2Vz6gIlR29vZ2xlOjpBZHM6",
            "Okdvb2dsZUFkczo6VjA6OlJlc291cmNlc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V0.Common.BiddingReflection.Descriptor, global::Google.Ads.GoogleAds.V0.Enums.BiddingStrategyTypeReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Resources.BiddingStrategy), global::Google.Ads.GoogleAds.V0.Resources.BiddingStrategy.Parser, new[]{ "ResourceName", "Id", "Name", "Type", "EnhancedCpc", "PageOnePromoted", "TargetCpa", "TargetOutrankShare", "TargetRoas", "TargetSpend" }, new[]{ "Scheme" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A bidding strategy.
  /// </summary>
  public sealed partial class BiddingStrategy : pb::IMessage<BiddingStrategy> {
    private static readonly pb::MessageParser<BiddingStrategy> _parser = new pb::MessageParser<BiddingStrategy>(() => new BiddingStrategy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BiddingStrategy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Resources.BiddingStrategyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BiddingStrategy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BiddingStrategy(BiddingStrategy other) : this() {
      resourceName_ = other.resourceName_;
      Id = other.Id;
      Name = other.Name;
      type_ = other.type_;
      switch (other.SchemeCase) {
        case SchemeOneofCase.EnhancedCpc:
          EnhancedCpc = other.EnhancedCpc.Clone();
          break;
        case SchemeOneofCase.PageOnePromoted:
          PageOnePromoted = other.PageOnePromoted.Clone();
          break;
        case SchemeOneofCase.TargetCpa:
          TargetCpa = other.TargetCpa.Clone();
          break;
        case SchemeOneofCase.TargetOutrankShare:
          TargetOutrankShare = other.TargetOutrankShare.Clone();
          break;
        case SchemeOneofCase.TargetRoas:
          TargetRoas = other.TargetRoas.Clone();
          break;
        case SchemeOneofCase.TargetSpend:
          TargetSpend = other.TargetSpend.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BiddingStrategy Clone() {
      return new BiddingStrategy(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// The resource name of the bidding strategy.
    /// Bidding strategy resource names have the form:
    ///
    /// `customers/{customer_id}/biddingStrategies/{bidding_strategy_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private static readonly pb::FieldCodec<long?> _single_id_codec = pb::FieldCodec.ForStructWrapper<long>(26);
    private long? id_;
    /// <summary>
    /// The ID of the bidding strategy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string name_;
    /// <summary>
    /// The name of the bidding strategy.
    /// All bidding strategies within an account must be named distinctly.
    ///
    /// The length of this string should be between 1 and 255, inclusive,
    /// in UTF-8 bytes, (trimmed).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::Google.Ads.GoogleAds.V0.Enums.BiddingStrategyTypeEnum.Types.BiddingStrategyType type_ = 0;
    /// <summary>
    /// The type of the bidding strategy.
    /// Create a bidding strategy by setting the bidding scheme.
    ///
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Enums.BiddingStrategyTypeEnum.Types.BiddingStrategyType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "enhanced_cpc" field.</summary>
    public const int EnhancedCpcFieldNumber = 7;
    /// <summary>
    /// A bidding strategy that raises bids for clicks that seem more likely to
    /// lead to a conversion and lowers them for clicks where they seem less
    /// likely.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.EnhancedCpc EnhancedCpc {
      get { return schemeCase_ == SchemeOneofCase.EnhancedCpc ? (global::Google.Ads.GoogleAds.V0.Common.EnhancedCpc) scheme_ : null; }
      set {
        scheme_ = value;
        schemeCase_ = value == null ? SchemeOneofCase.None : SchemeOneofCase.EnhancedCpc;
      }
    }

    /// <summary>Field number for the "page_one_promoted" field.</summary>
    public const int PageOnePromotedFieldNumber = 8;
    /// <summary>
    /// A bidding strategy that sets max CPC bids to target impressions on
    /// page one or page one promoted slots on google.com.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.PageOnePromoted PageOnePromoted {
      get { return schemeCase_ == SchemeOneofCase.PageOnePromoted ? (global::Google.Ads.GoogleAds.V0.Common.PageOnePromoted) scheme_ : null; }
      set {
        scheme_ = value;
        schemeCase_ = value == null ? SchemeOneofCase.None : SchemeOneofCase.PageOnePromoted;
      }
    }

    /// <summary>Field number for the "target_cpa" field.</summary>
    public const int TargetCpaFieldNumber = 9;
    /// <summary>
    /// A bidding strategy that sets bids to help get as many conversions as
    /// possible at the target cost-per-acquisition (CPA) you set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.TargetCpa TargetCpa {
      get { return schemeCase_ == SchemeOneofCase.TargetCpa ? (global::Google.Ads.GoogleAds.V0.Common.TargetCpa) scheme_ : null; }
      set {
        scheme_ = value;
        schemeCase_ = value == null ? SchemeOneofCase.None : SchemeOneofCase.TargetCpa;
      }
    }

    /// <summary>Field number for the "target_outrank_share" field.</summary>
    public const int TargetOutrankShareFieldNumber = 10;
    /// <summary>
    /// A bidding strategy that sets bids based on the target fraction of
    /// auctions where the advertiser should outrank a specific competitor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.TargetOutrankShare TargetOutrankShare {
      get { return schemeCase_ == SchemeOneofCase.TargetOutrankShare ? (global::Google.Ads.GoogleAds.V0.Common.TargetOutrankShare) scheme_ : null; }
      set {
        scheme_ = value;
        schemeCase_ = value == null ? SchemeOneofCase.None : SchemeOneofCase.TargetOutrankShare;
      }
    }

    /// <summary>Field number for the "target_roas" field.</summary>
    public const int TargetRoasFieldNumber = 11;
    /// <summary>
    /// A bidding strategy that helps you maximize revenue while averaging a
    /// specific target Return On Ad Spend (ROAS).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.TargetRoas TargetRoas {
      get { return schemeCase_ == SchemeOneofCase.TargetRoas ? (global::Google.Ads.GoogleAds.V0.Common.TargetRoas) scheme_ : null; }
      set {
        scheme_ = value;
        schemeCase_ = value == null ? SchemeOneofCase.None : SchemeOneofCase.TargetRoas;
      }
    }

    /// <summary>Field number for the "target_spend" field.</summary>
    public const int TargetSpendFieldNumber = 12;
    /// <summary>
    /// A bid strategy that sets your bids to help get as many clicks as
    /// possible within your budget.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.TargetSpend TargetSpend {
      get { return schemeCase_ == SchemeOneofCase.TargetSpend ? (global::Google.Ads.GoogleAds.V0.Common.TargetSpend) scheme_ : null; }
      set {
        scheme_ = value;
        schemeCase_ = value == null ? SchemeOneofCase.None : SchemeOneofCase.TargetSpend;
      }
    }

    private object scheme_;
    /// <summary>Enum of possible cases for the "scheme" oneof.</summary>
    public enum SchemeOneofCase {
      None = 0,
      EnhancedCpc = 7,
      PageOnePromoted = 8,
      TargetCpa = 9,
      TargetOutrankShare = 10,
      TargetRoas = 11,
      TargetSpend = 12,
    }
    private SchemeOneofCase schemeCase_ = SchemeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchemeOneofCase SchemeCase {
      get { return schemeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearScheme() {
      schemeCase_ = SchemeOneofCase.None;
      scheme_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BiddingStrategy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BiddingStrategy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(EnhancedCpc, other.EnhancedCpc)) return false;
      if (!object.Equals(PageOnePromoted, other.PageOnePromoted)) return false;
      if (!object.Equals(TargetCpa, other.TargetCpa)) return false;
      if (!object.Equals(TargetOutrankShare, other.TargetOutrankShare)) return false;
      if (!object.Equals(TargetRoas, other.TargetRoas)) return false;
      if (!object.Equals(TargetSpend, other.TargetSpend)) return false;
      if (SchemeCase != other.SchemeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (schemeCase_ == SchemeOneofCase.EnhancedCpc) hash ^= EnhancedCpc.GetHashCode();
      if (schemeCase_ == SchemeOneofCase.PageOnePromoted) hash ^= PageOnePromoted.GetHashCode();
      if (schemeCase_ == SchemeOneofCase.TargetCpa) hash ^= TargetCpa.GetHashCode();
      if (schemeCase_ == SchemeOneofCase.TargetOutrankShare) hash ^= TargetOutrankShare.GetHashCode();
      if (schemeCase_ == SchemeOneofCase.TargetRoas) hash ^= TargetRoas.GetHashCode();
      if (schemeCase_ == SchemeOneofCase.TargetSpend) hash ^= TargetSpend.GetHashCode();
      hash ^= (int) schemeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (Type != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (schemeCase_ == SchemeOneofCase.EnhancedCpc) {
        output.WriteRawTag(58);
        output.WriteMessage(EnhancedCpc);
      }
      if (schemeCase_ == SchemeOneofCase.PageOnePromoted) {
        output.WriteRawTag(66);
        output.WriteMessage(PageOnePromoted);
      }
      if (schemeCase_ == SchemeOneofCase.TargetCpa) {
        output.WriteRawTag(74);
        output.WriteMessage(TargetCpa);
      }
      if (schemeCase_ == SchemeOneofCase.TargetOutrankShare) {
        output.WriteRawTag(82);
        output.WriteMessage(TargetOutrankShare);
      }
      if (schemeCase_ == SchemeOneofCase.TargetRoas) {
        output.WriteRawTag(90);
        output.WriteMessage(TargetRoas);
      }
      if (schemeCase_ == SchemeOneofCase.TargetSpend) {
        output.WriteRawTag(98);
        output.WriteMessage(TargetSpend);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (schemeCase_ == SchemeOneofCase.EnhancedCpc) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnhancedCpc);
      }
      if (schemeCase_ == SchemeOneofCase.PageOnePromoted) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PageOnePromoted);
      }
      if (schemeCase_ == SchemeOneofCase.TargetCpa) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetCpa);
      }
      if (schemeCase_ == SchemeOneofCase.TargetOutrankShare) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetOutrankShare);
      }
      if (schemeCase_ == SchemeOneofCase.TargetRoas) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetRoas);
      }
      if (schemeCase_ == SchemeOneofCase.TargetSpend) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetSpend);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BiddingStrategy other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0L) {
          Id = other.Id;
        }
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      switch (other.SchemeCase) {
        case SchemeOneofCase.EnhancedCpc:
          if (EnhancedCpc == null) {
            EnhancedCpc = new global::Google.Ads.GoogleAds.V0.Common.EnhancedCpc();
          }
          EnhancedCpc.MergeFrom(other.EnhancedCpc);
          break;
        case SchemeOneofCase.PageOnePromoted:
          if (PageOnePromoted == null) {
            PageOnePromoted = new global::Google.Ads.GoogleAds.V0.Common.PageOnePromoted();
          }
          PageOnePromoted.MergeFrom(other.PageOnePromoted);
          break;
        case SchemeOneofCase.TargetCpa:
          if (TargetCpa == null) {
            TargetCpa = new global::Google.Ads.GoogleAds.V0.Common.TargetCpa();
          }
          TargetCpa.MergeFrom(other.TargetCpa);
          break;
        case SchemeOneofCase.TargetOutrankShare:
          if (TargetOutrankShare == null) {
            TargetOutrankShare = new global::Google.Ads.GoogleAds.V0.Common.TargetOutrankShare();
          }
          TargetOutrankShare.MergeFrom(other.TargetOutrankShare);
          break;
        case SchemeOneofCase.TargetRoas:
          if (TargetRoas == null) {
            TargetRoas = new global::Google.Ads.GoogleAds.V0.Common.TargetRoas();
          }
          TargetRoas.MergeFrom(other.TargetRoas);
          break;
        case SchemeOneofCase.TargetSpend:
          if (TargetSpend == null) {
            TargetSpend = new global::Google.Ads.GoogleAds.V0.Common.TargetSpend();
          }
          TargetSpend.MergeFrom(other.TargetSpend);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 26: {
            long? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0L) {
              Id = value;
            }
            break;
          }
          case 34: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 40: {
            type_ = (global::Google.Ads.GoogleAds.V0.Enums.BiddingStrategyTypeEnum.Types.BiddingStrategyType) input.ReadEnum();
            break;
          }
          case 58: {
            global::Google.Ads.GoogleAds.V0.Common.EnhancedCpc subBuilder = new global::Google.Ads.GoogleAds.V0.Common.EnhancedCpc();
            if (schemeCase_ == SchemeOneofCase.EnhancedCpc) {
              subBuilder.MergeFrom(EnhancedCpc);
            }
            input.ReadMessage(subBuilder);
            EnhancedCpc = subBuilder;
            break;
          }
          case 66: {
            global::Google.Ads.GoogleAds.V0.Common.PageOnePromoted subBuilder = new global::Google.Ads.GoogleAds.V0.Common.PageOnePromoted();
            if (schemeCase_ == SchemeOneofCase.PageOnePromoted) {
              subBuilder.MergeFrom(PageOnePromoted);
            }
            input.ReadMessage(subBuilder);
            PageOnePromoted = subBuilder;
            break;
          }
          case 74: {
            global::Google.Ads.GoogleAds.V0.Common.TargetCpa subBuilder = new global::Google.Ads.GoogleAds.V0.Common.TargetCpa();
            if (schemeCase_ == SchemeOneofCase.TargetCpa) {
              subBuilder.MergeFrom(TargetCpa);
            }
            input.ReadMessage(subBuilder);
            TargetCpa = subBuilder;
            break;
          }
          case 82: {
            global::Google.Ads.GoogleAds.V0.Common.TargetOutrankShare subBuilder = new global::Google.Ads.GoogleAds.V0.Common.TargetOutrankShare();
            if (schemeCase_ == SchemeOneofCase.TargetOutrankShare) {
              subBuilder.MergeFrom(TargetOutrankShare);
            }
            input.ReadMessage(subBuilder);
            TargetOutrankShare = subBuilder;
            break;
          }
          case 90: {
            global::Google.Ads.GoogleAds.V0.Common.TargetRoas subBuilder = new global::Google.Ads.GoogleAds.V0.Common.TargetRoas();
            if (schemeCase_ == SchemeOneofCase.TargetRoas) {
              subBuilder.MergeFrom(TargetRoas);
            }
            input.ReadMessage(subBuilder);
            TargetRoas = subBuilder;
            break;
          }
          case 98: {
            global::Google.Ads.GoogleAds.V0.Common.TargetSpend subBuilder = new global::Google.Ads.GoogleAds.V0.Common.TargetSpend();
            if (schemeCase_ == SchemeOneofCase.TargetSpend) {
              subBuilder.MergeFrom(TargetSpend);
            }
            input.ReadMessage(subBuilder);
            TargetSpend = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
