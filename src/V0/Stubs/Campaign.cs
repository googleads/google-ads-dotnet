// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v0/resources/campaign.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V0.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v0/resources/campaign.proto</summary>
  public static partial class CampaignReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v0/resources/campaign.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CampaignReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBnb29nbGUvYWRzL2dvb2dsZWFkcy92MC9yZXNvdXJjZXMvY2FtcGFpZ24u",
            "cHJvdG8SIWdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYwLnJlc291cmNlcxosZ29v",
            "Z2xlL2Fkcy9nb29nbGVhZHMvdjAvY29tbW9uL2JpZGRpbmcucHJvdG8aNWdv",
            "b2dsZS9hZHMvZ29vZ2xlYWRzL3YwL2NvbW1vbi9jdXN0b21fcGFyYW1ldGVy",
            "LnByb3RvGkJnb29nbGUvYWRzL2dvb2dsZWFkcy92MC9lbnVtcy9hZF9zZXJ2",
            "aW5nX29wdGltaXphdGlvbl9zdGF0dXMucHJvdG8aQGdvb2dsZS9hZHMvZ29v",
            "Z2xlYWRzL3YwL2VudW1zL2FkdmVydGlzaW5nX2NoYW5uZWxfc3ViX3R5cGUu",
            "cHJvdG8aPGdvb2dsZS9hZHMvZ29vZ2xlYWRzL3YwL2VudW1zL2FkdmVydGlz",
            "aW5nX2NoYW5uZWxfdHlwZS5wcm90bxo5Z29vZ2xlL2Fkcy9nb29nbGVhZHMv",
            "djAvZW51bXMvYmlkZGluZ19zdHJhdGVneV90eXBlLnByb3RvGjtnb29nbGUv",
            "YWRzL2dvb2dsZWFkcy92MC9lbnVtcy9jYW1wYWlnbl9zZXJ2aW5nX3N0YXR1",
            "cy5wcm90bxozZ29vZ2xlL2Fkcy9nb29nbGVhZHMvdjAvZW51bXMvY2FtcGFp",
            "Z25fc3RhdHVzLnByb3RvGh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJv",
            "dG8iphQKCENhbXBhaWduEhUKDXJlc291cmNlX25hbWUYASABKAkSJwoCaWQY",
            "AyABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZRIqCgRuYW1lGAQg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlElAKBnN0YXR1cxgF",
            "IAEoDjJALmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYwLmVudW1zLkNhbXBhaWdu",
            "U3RhdHVzRW51bS5DYW1wYWlnblN0YXR1cxJmCg5zZXJ2aW5nX3N0YXR1cxgV",
            "IAEoDjJOLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYwLmVudW1zLkNhbXBhaWdu",
            "U2VydmluZ1N0YXR1c0VudW0uQ2FtcGFpZ25TZXJ2aW5nU3RhdHVzEoIBCh5h",
            "ZF9zZXJ2aW5nX29wdGltaXphdGlvbl9zdGF0dXMYCCABKA4yWi5nb29nbGUu",
            "YWRzLmdvb2dsZWFkcy52MC5lbnVtcy5BZFNlcnZpbmdPcHRpbWl6YXRpb25T",
            "dGF0dXNFbnVtLkFkU2VydmluZ09wdGltaXphdGlvblN0YXR1cxJyChhhZHZl",
            "cnRpc2luZ19jaGFubmVsX3R5cGUYCSABKA4yUC5nb29nbGUuYWRzLmdvb2ds",
            "ZWFkcy52MC5lbnVtcy5BZHZlcnRpc2luZ0NoYW5uZWxUeXBlRW51bS5BZHZl",
            "cnRpc2luZ0NoYW5uZWxUeXBlEnwKHGFkdmVydGlzaW5nX2NoYW5uZWxfc3Vi",
            "X3R5cGUYCiABKA4yVi5nb29nbGUuYWRzLmdvb2dsZWFkcy52MC5lbnVtcy5B",
            "ZHZlcnRpc2luZ0NoYW5uZWxTdWJUeXBlRW51bS5BZHZlcnRpc2luZ0NoYW5u",
            "ZWxTdWJUeXBlEjsKFXRyYWNraW5nX3VybF90ZW1wbGF0ZRgLIAEoCzIcLmdv",
            "b2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRJOChV1cmxfY3VzdG9tX3BhcmFt",
            "ZXRlcnMYDCADKAsyLy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MC5jb21tb24u",
            "Q3VzdG9tUGFyYW1ldGVyElUKEG5ldHdvcmtfc2V0dGluZ3MYDiABKAsyOy5n",
            "b29nbGUuYWRzLmdvb2dsZWFkcy52MC5yZXNvdXJjZXMuQ2FtcGFpZ24uTmV0",
            "d29ya1NldHRpbmdzElMKDWhvdGVsX3NldHRpbmcYICABKAsyPC5nb29nbGUu",
            "YWRzLmdvb2dsZWFkcy52MC5yZXNvdXJjZXMuQ2FtcGFpZ24uSG90ZWxTZXR0",
            "aW5nSW5mbxJnChpkeW5hbWljX3NlYXJjaF9hZHNfc2V0dGluZxghIAEoCzJD",
            "Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYwLnJlc291cmNlcy5DYW1wYWlnbi5E",
            "eW5hbWljU2VhcmNoQWRzU2V0dGluZxI1Cg9jYW1wYWlnbl9idWRnZXQYBiAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSaQoVYmlkZGluZ19z",
            "dHJhdGVneV90eXBlGBYgASgOMkouZ29vZ2xlLmFkcy5nb29nbGVhZHMudjAu",
            "ZW51bXMuQmlkZGluZ1N0cmF0ZWd5VHlwZUVudW0uQmlkZGluZ1N0cmF0ZWd5",
            "VHlwZRIwCgpzdGFydF9kYXRlGBMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0",
            "cmluZ1ZhbHVlEi4KCGVuZF9kYXRlGBQgASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cmluZ1ZhbHVlEjgKEGJpZGRpbmdfc3RyYXRlZ3kYFyABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWVIABI/CgptYW51YWxfY3BjGBggASgL",
            "MikuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjAuY29tbW9uLk1hbnVhbENwY0gA",
            "Ej8KCm1hbnVhbF9jcG0YGSABKAsyKS5nb29nbGUuYWRzLmdvb2dsZWFkcy52",
            "MC5jb21tb24uTWFudWFsQ3BtSAASUwoUbWF4aW1pemVfY29udmVyc2lvbnMY",
            "HiABKAsyMy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MC5jb21tb24uTWF4aW1p",
            "emVDb252ZXJzaW9uc0gAElwKGW1heGltaXplX2NvbnZlcnNpb25fdmFsdWUY",
            "HyABKAsyNy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MC5jb21tb24uTWF4aW1p",
            "emVDb252ZXJzaW9uVmFsdWVIABI/Cgp0YXJnZXRfY3BhGBogASgLMikuZ29v",
            "Z2xlLmFkcy5nb29nbGVhZHMudjAuY29tbW9uLlRhcmdldENwYUgAEkEKC3Rh",
            "cmdldF9yb2FzGB0gASgLMiouZ29vZ2xlLmFkcy5nb29nbGVhZHMudjAuY29t",
            "bW9uLlRhcmdldFJvYXNIABJDCgx0YXJnZXRfc3BlbmQYGyABKAsyKy5nb29n",
            "bGUuYWRzLmdvb2dsZWFkcy52MC5jb21tb24uVGFyZ2V0U3BlbmRIABJBCgtw",
            "ZXJjZW50X2NwYxgiIAEoCzIqLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYwLmNv",
            "bW1vbi5QZXJjZW50Q3BjSAAahQIKD05ldHdvcmtTZXR0aW5ncxI4ChR0YXJn",
            "ZXRfZ29vZ2xlX3NlYXJjaBgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29s",
            "VmFsdWUSOQoVdGFyZ2V0X3NlYXJjaF9uZXR3b3JrGAIgASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLkJvb2xWYWx1ZRI6ChZ0YXJnZXRfY29udGVudF9uZXR3b3Jr",
            "GAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRJBCh10YXJnZXRf",
            "cGFydG5lcl9zZWFyY2hfbmV0d29yaxgEIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5Cb29sVmFsdWUaSAoQSG90ZWxTZXR0aW5nSW5mbxI0Cg9ob3RlbF9jZW50",
            "ZXJfaWQYASABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZRrsAQoX",
            "RHluYW1pY1NlYXJjaEFkc1NldHRpbmcSMQoLZG9tYWluX25hbWUYASABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMwoNbGFuZ3VhZ2VfY29k",
            "ZRgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI6ChZ1c2Vf",
            "c3VwcGxpZWRfdXJsc19vbmx5GAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJv",
            "b2xWYWx1ZRItCghmZWVkX2lkcxgEIAMoCzIbLmdvb2dsZS5wcm90b2J1Zi5J",
            "bnQ2NFZhbHVlQhsKGWNhbXBhaWduX2JpZGRpbmdfc3RyYXRlZ3lC0gEKJWNv",
            "bS5nb29nbGUuYWRzLmdvb2dsZWFkcy52MC5yZXNvdXJjZXNCDUNhbXBhaWdu",
            "UHJvdG9QAVpKZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBp",
            "cy9hZHMvZ29vZ2xlYWRzL3YwL3Jlc291cmNlcztyZXNvdXJjZXOiAgNHQUGq",
            "AiFHb29nbGUuQWRzLkdvb2dsZUFkcy5WMC5SZXNvdXJjZXPKAiFHb29nbGVc",
            "QWRzXEdvb2dsZUFkc1xWMFxSZXNvdXJjZXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V0.Common.BiddingReflection.Descriptor, global::Google.Ads.GoogleAds.V0.Common.CustomParameterReflection.Descriptor, global::Google.Ads.GoogleAds.V0.Enums.AdServingOptimizationStatusReflection.Descriptor, global::Google.Ads.GoogleAds.V0.Enums.AdvertisingChannelSubTypeReflection.Descriptor, global::Google.Ads.GoogleAds.V0.Enums.AdvertisingChannelTypeReflection.Descriptor, global::Google.Ads.GoogleAds.V0.Enums.BiddingStrategyTypeReflection.Descriptor, global::Google.Ads.GoogleAds.V0.Enums.CampaignServingStatusReflection.Descriptor, global::Google.Ads.GoogleAds.V0.Enums.CampaignStatusReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Resources.Campaign), global::Google.Ads.GoogleAds.V0.Resources.Campaign.Parser, new[]{ "ResourceName", "Id", "Name", "Status", "ServingStatus", "AdServingOptimizationStatus", "AdvertisingChannelType", "AdvertisingChannelSubType", "TrackingUrlTemplate", "UrlCustomParameters", "NetworkSettings", "HotelSetting", "DynamicSearchAdsSetting", "CampaignBudget", "BiddingStrategyType", "StartDate", "EndDate", "BiddingStrategy", "ManualCpc", "ManualCpm", "MaximizeConversions", "MaximizeConversionValue", "TargetCpa", "TargetRoas", "TargetSpend", "PercentCpc" }, new[]{ "CampaignBiddingStrategy" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Resources.Campaign.Types.NetworkSettings), global::Google.Ads.GoogleAds.V0.Resources.Campaign.Types.NetworkSettings.Parser, new[]{ "TargetGoogleSearch", "TargetSearchNetwork", "TargetContentNetwork", "TargetPartnerSearchNetwork" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Resources.Campaign.Types.HotelSettingInfo), global::Google.Ads.GoogleAds.V0.Resources.Campaign.Types.HotelSettingInfo.Parser, new[]{ "HotelCenterId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Resources.Campaign.Types.DynamicSearchAdsSetting), global::Google.Ads.GoogleAds.V0.Resources.Campaign.Types.DynamicSearchAdsSetting.Parser, new[]{ "DomainName", "LanguageCode", "UseSuppliedUrlsOnly", "FeedIds" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A campaign.
  /// </summary>
  public sealed partial class Campaign : pb::IMessage<Campaign> {
    private static readonly pb::MessageParser<Campaign> _parser = new pb::MessageParser<Campaign>(() => new Campaign());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Campaign> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Resources.CampaignReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Campaign() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Campaign(Campaign other) : this() {
      resourceName_ = other.resourceName_;
      Id = other.Id;
      Name = other.Name;
      status_ = other.status_;
      servingStatus_ = other.servingStatus_;
      adServingOptimizationStatus_ = other.adServingOptimizationStatus_;
      advertisingChannelType_ = other.advertisingChannelType_;
      advertisingChannelSubType_ = other.advertisingChannelSubType_;
      TrackingUrlTemplate = other.TrackingUrlTemplate;
      urlCustomParameters_ = other.urlCustomParameters_.Clone();
      NetworkSettings = other.networkSettings_ != null ? other.NetworkSettings.Clone() : null;
      HotelSetting = other.hotelSetting_ != null ? other.HotelSetting.Clone() : null;
      DynamicSearchAdsSetting = other.dynamicSearchAdsSetting_ != null ? other.DynamicSearchAdsSetting.Clone() : null;
      CampaignBudget = other.CampaignBudget;
      biddingStrategyType_ = other.biddingStrategyType_;
      StartDate = other.StartDate;
      EndDate = other.EndDate;
      switch (other.CampaignBiddingStrategyCase) {
        case CampaignBiddingStrategyOneofCase.BiddingStrategy:
          BiddingStrategy = other.BiddingStrategy;
          break;
        case CampaignBiddingStrategyOneofCase.ManualCpc:
          ManualCpc = other.ManualCpc.Clone();
          break;
        case CampaignBiddingStrategyOneofCase.ManualCpm:
          ManualCpm = other.ManualCpm.Clone();
          break;
        case CampaignBiddingStrategyOneofCase.MaximizeConversions:
          MaximizeConversions = other.MaximizeConversions.Clone();
          break;
        case CampaignBiddingStrategyOneofCase.MaximizeConversionValue:
          MaximizeConversionValue = other.MaximizeConversionValue.Clone();
          break;
        case CampaignBiddingStrategyOneofCase.TargetCpa:
          TargetCpa = other.TargetCpa.Clone();
          break;
        case CampaignBiddingStrategyOneofCase.TargetRoas:
          TargetRoas = other.TargetRoas.Clone();
          break;
        case CampaignBiddingStrategyOneofCase.TargetSpend:
          TargetSpend = other.TargetSpend.Clone();
          break;
        case CampaignBiddingStrategyOneofCase.PercentCpc:
          PercentCpc = other.PercentCpc.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Campaign Clone() {
      return new Campaign(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// The resource name of the campaign.
    /// Campaign resource names have the form:
    ///
    /// `customers/{customer_id}/campaigns/{campaign_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private static readonly pb::FieldCodec<long?> _single_id_codec = pb::FieldCodec.ForStructWrapper<long>(26);
    private long? id_;
    /// <summary>
    /// The ID of the campaign.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string name_;
    /// <summary>
    /// The name of the campaign.
    ///
    /// This field is required and should not be empty when creating new
    /// campaigns.
    ///
    /// It must not contain any null (code point 0x0), NL line feed
    /// (code point 0xA) or carriage return (code point 0xD) characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private global::Google.Ads.GoogleAds.V0.Enums.CampaignStatusEnum.Types.CampaignStatus status_ = 0;
    /// <summary>
    /// The status of the campaign.
    ///
    /// When a new campaign is added, the status defaults to ENABLED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Enums.CampaignStatusEnum.Types.CampaignStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "serving_status" field.</summary>
    public const int ServingStatusFieldNumber = 21;
    private global::Google.Ads.GoogleAds.V0.Enums.CampaignServingStatusEnum.Types.CampaignServingStatus servingStatus_ = 0;
    /// <summary>
    /// The ad serving status of the campaign.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Enums.CampaignServingStatusEnum.Types.CampaignServingStatus ServingStatus {
      get { return servingStatus_; }
      set {
        servingStatus_ = value;
      }
    }

    /// <summary>Field number for the "ad_serving_optimization_status" field.</summary>
    public const int AdServingOptimizationStatusFieldNumber = 8;
    private global::Google.Ads.GoogleAds.V0.Enums.AdServingOptimizationStatusEnum.Types.AdServingOptimizationStatus adServingOptimizationStatus_ = 0;
    /// <summary>
    /// The ad serving optimization status of the campaign.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Enums.AdServingOptimizationStatusEnum.Types.AdServingOptimizationStatus AdServingOptimizationStatus {
      get { return adServingOptimizationStatus_; }
      set {
        adServingOptimizationStatus_ = value;
      }
    }

    /// <summary>Field number for the "advertising_channel_type" field.</summary>
    public const int AdvertisingChannelTypeFieldNumber = 9;
    private global::Google.Ads.GoogleAds.V0.Enums.AdvertisingChannelTypeEnum.Types.AdvertisingChannelType advertisingChannelType_ = 0;
    /// <summary>
    /// The primary serving target for ads within the campaign.
    /// The targeting options can be refined in `network_settings`.
    ///
    /// Can be set only when creating campaigns.
    /// After the campaign is created, the field can not be changed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Enums.AdvertisingChannelTypeEnum.Types.AdvertisingChannelType AdvertisingChannelType {
      get { return advertisingChannelType_; }
      set {
        advertisingChannelType_ = value;
      }
    }

    /// <summary>Field number for the "advertising_channel_sub_type" field.</summary>
    public const int AdvertisingChannelSubTypeFieldNumber = 10;
    private global::Google.Ads.GoogleAds.V0.Enums.AdvertisingChannelSubTypeEnum.Types.AdvertisingChannelSubType advertisingChannelSubType_ = 0;
    /// <summary>
    /// Optional refinement to `advertising_channel_type`.
    /// Must be a valid sub-type of the parent channel type.
    ///
    /// Can be set only when creating campaigns.
    /// After campaign is created, the field can not be changed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Enums.AdvertisingChannelSubTypeEnum.Types.AdvertisingChannelSubType AdvertisingChannelSubType {
      get { return advertisingChannelSubType_; }
      set {
        advertisingChannelSubType_ = value;
      }
    }

    /// <summary>Field number for the "tracking_url_template" field.</summary>
    public const int TrackingUrlTemplateFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_trackingUrlTemplate_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string trackingUrlTemplate_;
    /// <summary>
    /// The URL template for constructing a tracking URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TrackingUrlTemplate {
      get { return trackingUrlTemplate_; }
      set {
        trackingUrlTemplate_ = value;
      }
    }

    /// <summary>Field number for the "url_custom_parameters" field.</summary>
    public const int UrlCustomParametersFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V0.Common.CustomParameter> _repeated_urlCustomParameters_codec
        = pb::FieldCodec.ForMessage(98, global::Google.Ads.GoogleAds.V0.Common.CustomParameter.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V0.Common.CustomParameter> urlCustomParameters_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V0.Common.CustomParameter>();
    /// <summary>
    /// The list of mappings used to substitute custom parameter tags in a
    /// `tracking_url_template`, `final_urls`, or `mobile_final_urls`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V0.Common.CustomParameter> UrlCustomParameters {
      get { return urlCustomParameters_; }
    }

    /// <summary>Field number for the "network_settings" field.</summary>
    public const int NetworkSettingsFieldNumber = 14;
    private global::Google.Ads.GoogleAds.V0.Resources.Campaign.Types.NetworkSettings networkSettings_;
    /// <summary>
    /// The network settings for the campaign.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Resources.Campaign.Types.NetworkSettings NetworkSettings {
      get { return networkSettings_; }
      set {
        networkSettings_ = value;
      }
    }

    /// <summary>Field number for the "hotel_setting" field.</summary>
    public const int HotelSettingFieldNumber = 32;
    private global::Google.Ads.GoogleAds.V0.Resources.Campaign.Types.HotelSettingInfo hotelSetting_;
    /// <summary>
    /// The hotel setting for the campaign.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Resources.Campaign.Types.HotelSettingInfo HotelSetting {
      get { return hotelSetting_; }
      set {
        hotelSetting_ = value;
      }
    }

    /// <summary>Field number for the "dynamic_search_ads_setting" field.</summary>
    public const int DynamicSearchAdsSettingFieldNumber = 33;
    private global::Google.Ads.GoogleAds.V0.Resources.Campaign.Types.DynamicSearchAdsSetting dynamicSearchAdsSetting_;
    /// <summary>
    /// The setting for controlling Dynamic Search Ads (DSA).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Resources.Campaign.Types.DynamicSearchAdsSetting DynamicSearchAdsSetting {
      get { return dynamicSearchAdsSetting_; }
      set {
        dynamicSearchAdsSetting_ = value;
      }
    }

    /// <summary>Field number for the "campaign_budget" field.</summary>
    public const int CampaignBudgetFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_campaignBudget_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string campaignBudget_;
    /// <summary>
    /// The budget of the campaign.
    ///
    /// This field must not be used in WHERE clauses.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CampaignBudget {
      get { return campaignBudget_; }
      set {
        campaignBudget_ = value;
      }
    }

    /// <summary>Field number for the "bidding_strategy_type" field.</summary>
    public const int BiddingStrategyTypeFieldNumber = 22;
    private global::Google.Ads.GoogleAds.V0.Enums.BiddingStrategyTypeEnum.Types.BiddingStrategyType biddingStrategyType_ = 0;
    /// <summary>
    /// The type of bidding strategy.
    ///
    /// A bidding strategy can be created by setting either the bidding scheme to
    /// create a standard bidding strategy or the `bidding_strategy` field to
    /// create a portfolio bidding strategy.
    ///
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Enums.BiddingStrategyTypeEnum.Types.BiddingStrategyType BiddingStrategyType {
      get { return biddingStrategyType_; }
      set {
        biddingStrategyType_ = value;
      }
    }

    /// <summary>Field number for the "start_date" field.</summary>
    public const int StartDateFieldNumber = 19;
    private static readonly pb::FieldCodec<string> _single_startDate_codec = pb::FieldCodec.ForClassWrapper<string>(154);
    private string startDate_;
    /// <summary>
    /// The date when campaign started.
    ///
    /// This field must not be used in WHERE clauses.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartDate {
      get { return startDate_; }
      set {
        startDate_ = value;
      }
    }

    /// <summary>Field number for the "end_date" field.</summary>
    public const int EndDateFieldNumber = 20;
    private static readonly pb::FieldCodec<string> _single_endDate_codec = pb::FieldCodec.ForClassWrapper<string>(162);
    private string endDate_;
    /// <summary>
    /// The date when campaign ended.
    ///
    /// This field must not be used in WHERE clauses.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndDate {
      get { return endDate_; }
      set {
        endDate_ = value;
      }
    }

    /// <summary>Field number for the "bidding_strategy" field.</summary>
    public const int BiddingStrategyFieldNumber = 23;
    private static readonly pb::FieldCodec<string> _oneof_biddingStrategy_codec = pb::FieldCodec.ForClassWrapper<string>(186);
    /// <summary>
    /// Portfolio bidding strategy used by campaign.
    ///
    /// This field must not be used in WHERE clauses.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BiddingStrategy {
      get { return campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.BiddingStrategy ? (string) campaignBiddingStrategy_ : (string) null; }
      set {
        campaignBiddingStrategy_ = value;
        campaignBiddingStrategyCase_ = value == null ? CampaignBiddingStrategyOneofCase.None : CampaignBiddingStrategyOneofCase.BiddingStrategy;
      }
    }

    /// <summary>Field number for the "manual_cpc" field.</summary>
    public const int ManualCpcFieldNumber = 24;
    /// <summary>
    /// Standard Manual CPC bidding strategy.
    /// Manual click-based bidding where user pays per click.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.ManualCpc ManualCpc {
      get { return campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.ManualCpc ? (global::Google.Ads.GoogleAds.V0.Common.ManualCpc) campaignBiddingStrategy_ : null; }
      set {
        campaignBiddingStrategy_ = value;
        campaignBiddingStrategyCase_ = value == null ? CampaignBiddingStrategyOneofCase.None : CampaignBiddingStrategyOneofCase.ManualCpc;
      }
    }

    /// <summary>Field number for the "manual_cpm" field.</summary>
    public const int ManualCpmFieldNumber = 25;
    /// <summary>
    /// Standard Manual CPM bidding strategy.
    /// Manual impression-based bidding where user pays per thousand
    /// impressions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.ManualCpm ManualCpm {
      get { return campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.ManualCpm ? (global::Google.Ads.GoogleAds.V0.Common.ManualCpm) campaignBiddingStrategy_ : null; }
      set {
        campaignBiddingStrategy_ = value;
        campaignBiddingStrategyCase_ = value == null ? CampaignBiddingStrategyOneofCase.None : CampaignBiddingStrategyOneofCase.ManualCpm;
      }
    }

    /// <summary>Field number for the "maximize_conversions" field.</summary>
    public const int MaximizeConversionsFieldNumber = 30;
    /// <summary>
    /// Standard Maximize Conversions bidding strategy that automatically
    /// maximizes number of conversions given a daily budget.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.MaximizeConversions MaximizeConversions {
      get { return campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.MaximizeConversions ? (global::Google.Ads.GoogleAds.V0.Common.MaximizeConversions) campaignBiddingStrategy_ : null; }
      set {
        campaignBiddingStrategy_ = value;
        campaignBiddingStrategyCase_ = value == null ? CampaignBiddingStrategyOneofCase.None : CampaignBiddingStrategyOneofCase.MaximizeConversions;
      }
    }

    /// <summary>Field number for the "maximize_conversion_value" field.</summary>
    public const int MaximizeConversionValueFieldNumber = 31;
    /// <summary>
    /// Standard Maximize Conversion Value bidding strategy that automatically
    /// sets bids to maximize revenue while spending your budget.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.MaximizeConversionValue MaximizeConversionValue {
      get { return campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.MaximizeConversionValue ? (global::Google.Ads.GoogleAds.V0.Common.MaximizeConversionValue) campaignBiddingStrategy_ : null; }
      set {
        campaignBiddingStrategy_ = value;
        campaignBiddingStrategyCase_ = value == null ? CampaignBiddingStrategyOneofCase.None : CampaignBiddingStrategyOneofCase.MaximizeConversionValue;
      }
    }

    /// <summary>Field number for the "target_cpa" field.</summary>
    public const int TargetCpaFieldNumber = 26;
    /// <summary>
    /// Standard Target CPA bidding strategy that automatically sets bids to
    /// help get as many conversions as possible at the target
    /// cost-per-acquisition (CPA) you set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.TargetCpa TargetCpa {
      get { return campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.TargetCpa ? (global::Google.Ads.GoogleAds.V0.Common.TargetCpa) campaignBiddingStrategy_ : null; }
      set {
        campaignBiddingStrategy_ = value;
        campaignBiddingStrategyCase_ = value == null ? CampaignBiddingStrategyOneofCase.None : CampaignBiddingStrategyOneofCase.TargetCpa;
      }
    }

    /// <summary>Field number for the "target_roas" field.</summary>
    public const int TargetRoasFieldNumber = 29;
    /// <summary>
    /// Standard Target ROAS bidding strategy that automatically maximizes
    /// revenue while averaging a specific target return on ad spend (ROAS).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.TargetRoas TargetRoas {
      get { return campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.TargetRoas ? (global::Google.Ads.GoogleAds.V0.Common.TargetRoas) campaignBiddingStrategy_ : null; }
      set {
        campaignBiddingStrategy_ = value;
        campaignBiddingStrategyCase_ = value == null ? CampaignBiddingStrategyOneofCase.None : CampaignBiddingStrategyOneofCase.TargetRoas;
      }
    }

    /// <summary>Field number for the "target_spend" field.</summary>
    public const int TargetSpendFieldNumber = 27;
    /// <summary>
    /// Standard Target Spend bidding strategy that automatically sets your bids
    /// to help get as many clicks as possible within your budget.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.TargetSpend TargetSpend {
      get { return campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.TargetSpend ? (global::Google.Ads.GoogleAds.V0.Common.TargetSpend) campaignBiddingStrategy_ : null; }
      set {
        campaignBiddingStrategy_ = value;
        campaignBiddingStrategyCase_ = value == null ? CampaignBiddingStrategyOneofCase.None : CampaignBiddingStrategyOneofCase.TargetSpend;
      }
    }

    /// <summary>Field number for the "percent_cpc" field.</summary>
    public const int PercentCpcFieldNumber = 34;
    /// <summary>
    /// Standard Percent Cpc bidding strategy where bids are a fraction of the
    /// advertised price for some good or service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.PercentCpc PercentCpc {
      get { return campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.PercentCpc ? (global::Google.Ads.GoogleAds.V0.Common.PercentCpc) campaignBiddingStrategy_ : null; }
      set {
        campaignBiddingStrategy_ = value;
        campaignBiddingStrategyCase_ = value == null ? CampaignBiddingStrategyOneofCase.None : CampaignBiddingStrategyOneofCase.PercentCpc;
      }
    }

    private object campaignBiddingStrategy_;
    /// <summary>Enum of possible cases for the "campaign_bidding_strategy" oneof.</summary>
    public enum CampaignBiddingStrategyOneofCase {
      None = 0,
      BiddingStrategy = 23,
      ManualCpc = 24,
      ManualCpm = 25,
      MaximizeConversions = 30,
      MaximizeConversionValue = 31,
      TargetCpa = 26,
      TargetRoas = 29,
      TargetSpend = 27,
      PercentCpc = 34,
    }
    private CampaignBiddingStrategyOneofCase campaignBiddingStrategyCase_ = CampaignBiddingStrategyOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignBiddingStrategyOneofCase CampaignBiddingStrategyCase {
      get { return campaignBiddingStrategyCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCampaignBiddingStrategy() {
      campaignBiddingStrategyCase_ = CampaignBiddingStrategyOneofCase.None;
      campaignBiddingStrategy_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Campaign);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Campaign other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Status != other.Status) return false;
      if (ServingStatus != other.ServingStatus) return false;
      if (AdServingOptimizationStatus != other.AdServingOptimizationStatus) return false;
      if (AdvertisingChannelType != other.AdvertisingChannelType) return false;
      if (AdvertisingChannelSubType != other.AdvertisingChannelSubType) return false;
      if (TrackingUrlTemplate != other.TrackingUrlTemplate) return false;
      if(!urlCustomParameters_.Equals(other.urlCustomParameters_)) return false;
      if (!object.Equals(NetworkSettings, other.NetworkSettings)) return false;
      if (!object.Equals(HotelSetting, other.HotelSetting)) return false;
      if (!object.Equals(DynamicSearchAdsSetting, other.DynamicSearchAdsSetting)) return false;
      if (CampaignBudget != other.CampaignBudget) return false;
      if (BiddingStrategyType != other.BiddingStrategyType) return false;
      if (StartDate != other.StartDate) return false;
      if (EndDate != other.EndDate) return false;
      if (BiddingStrategy != other.BiddingStrategy) return false;
      if (!object.Equals(ManualCpc, other.ManualCpc)) return false;
      if (!object.Equals(ManualCpm, other.ManualCpm)) return false;
      if (!object.Equals(MaximizeConversions, other.MaximizeConversions)) return false;
      if (!object.Equals(MaximizeConversionValue, other.MaximizeConversionValue)) return false;
      if (!object.Equals(TargetCpa, other.TargetCpa)) return false;
      if (!object.Equals(TargetRoas, other.TargetRoas)) return false;
      if (!object.Equals(TargetSpend, other.TargetSpend)) return false;
      if (!object.Equals(PercentCpc, other.PercentCpc)) return false;
      if (CampaignBiddingStrategyCase != other.CampaignBiddingStrategyCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (ServingStatus != 0) hash ^= ServingStatus.GetHashCode();
      if (AdServingOptimizationStatus != 0) hash ^= AdServingOptimizationStatus.GetHashCode();
      if (AdvertisingChannelType != 0) hash ^= AdvertisingChannelType.GetHashCode();
      if (AdvertisingChannelSubType != 0) hash ^= AdvertisingChannelSubType.GetHashCode();
      if (trackingUrlTemplate_ != null) hash ^= TrackingUrlTemplate.GetHashCode();
      hash ^= urlCustomParameters_.GetHashCode();
      if (networkSettings_ != null) hash ^= NetworkSettings.GetHashCode();
      if (hotelSetting_ != null) hash ^= HotelSetting.GetHashCode();
      if (dynamicSearchAdsSetting_ != null) hash ^= DynamicSearchAdsSetting.GetHashCode();
      if (campaignBudget_ != null) hash ^= CampaignBudget.GetHashCode();
      if (BiddingStrategyType != 0) hash ^= BiddingStrategyType.GetHashCode();
      if (startDate_ != null) hash ^= StartDate.GetHashCode();
      if (endDate_ != null) hash ^= EndDate.GetHashCode();
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.BiddingStrategy) hash ^= BiddingStrategy.GetHashCode();
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.ManualCpc) hash ^= ManualCpc.GetHashCode();
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.ManualCpm) hash ^= ManualCpm.GetHashCode();
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.MaximizeConversions) hash ^= MaximizeConversions.GetHashCode();
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.MaximizeConversionValue) hash ^= MaximizeConversionValue.GetHashCode();
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.TargetCpa) hash ^= TargetCpa.GetHashCode();
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.TargetRoas) hash ^= TargetRoas.GetHashCode();
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.TargetSpend) hash ^= TargetSpend.GetHashCode();
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.PercentCpc) hash ^= PercentCpc.GetHashCode();
      hash ^= (int) campaignBiddingStrategyCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (Status != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Status);
      }
      if (campaignBudget_ != null) {
        _single_campaignBudget_codec.WriteTagAndValue(output, CampaignBudget);
      }
      if (AdServingOptimizationStatus != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) AdServingOptimizationStatus);
      }
      if (AdvertisingChannelType != 0) {
        output.WriteRawTag(72);
        output.WriteEnum((int) AdvertisingChannelType);
      }
      if (AdvertisingChannelSubType != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) AdvertisingChannelSubType);
      }
      if (trackingUrlTemplate_ != null) {
        _single_trackingUrlTemplate_codec.WriteTagAndValue(output, TrackingUrlTemplate);
      }
      urlCustomParameters_.WriteTo(output, _repeated_urlCustomParameters_codec);
      if (networkSettings_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(NetworkSettings);
      }
      if (startDate_ != null) {
        _single_startDate_codec.WriteTagAndValue(output, StartDate);
      }
      if (endDate_ != null) {
        _single_endDate_codec.WriteTagAndValue(output, EndDate);
      }
      if (ServingStatus != 0) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) ServingStatus);
      }
      if (BiddingStrategyType != 0) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) BiddingStrategyType);
      }
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.BiddingStrategy) {
        _oneof_biddingStrategy_codec.WriteTagAndValue(output, (string) campaignBiddingStrategy_);
      }
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.ManualCpc) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(ManualCpc);
      }
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.ManualCpm) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(ManualCpm);
      }
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.TargetCpa) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(TargetCpa);
      }
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.TargetSpend) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(TargetSpend);
      }
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.TargetRoas) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(TargetRoas);
      }
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.MaximizeConversions) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(MaximizeConversions);
      }
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.MaximizeConversionValue) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(MaximizeConversionValue);
      }
      if (hotelSetting_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(HotelSetting);
      }
      if (dynamicSearchAdsSetting_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(DynamicSearchAdsSetting);
      }
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.PercentCpc) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(PercentCpc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (ServingStatus != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ServingStatus);
      }
      if (AdServingOptimizationStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AdServingOptimizationStatus);
      }
      if (AdvertisingChannelType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AdvertisingChannelType);
      }
      if (AdvertisingChannelSubType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AdvertisingChannelSubType);
      }
      if (trackingUrlTemplate_ != null) {
        size += _single_trackingUrlTemplate_codec.CalculateSizeWithTag(TrackingUrlTemplate);
      }
      size += urlCustomParameters_.CalculateSize(_repeated_urlCustomParameters_codec);
      if (networkSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NetworkSettings);
      }
      if (hotelSetting_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(HotelSetting);
      }
      if (dynamicSearchAdsSetting_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DynamicSearchAdsSetting);
      }
      if (campaignBudget_ != null) {
        size += _single_campaignBudget_codec.CalculateSizeWithTag(CampaignBudget);
      }
      if (BiddingStrategyType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BiddingStrategyType);
      }
      if (startDate_ != null) {
        size += _single_startDate_codec.CalculateSizeWithTag(StartDate);
      }
      if (endDate_ != null) {
        size += _single_endDate_codec.CalculateSizeWithTag(EndDate);
      }
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.BiddingStrategy) {
        size += _oneof_biddingStrategy_codec.CalculateSizeWithTag(BiddingStrategy);
      }
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.ManualCpc) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ManualCpc);
      }
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.ManualCpm) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ManualCpm);
      }
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.MaximizeConversions) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MaximizeConversions);
      }
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.MaximizeConversionValue) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MaximizeConversionValue);
      }
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.TargetCpa) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TargetCpa);
      }
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.TargetRoas) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TargetRoas);
      }
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.TargetSpend) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TargetSpend);
      }
      if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.PercentCpc) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PercentCpc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Campaign other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0L) {
          Id = other.Id;
        }
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.ServingStatus != 0) {
        ServingStatus = other.ServingStatus;
      }
      if (other.AdServingOptimizationStatus != 0) {
        AdServingOptimizationStatus = other.AdServingOptimizationStatus;
      }
      if (other.AdvertisingChannelType != 0) {
        AdvertisingChannelType = other.AdvertisingChannelType;
      }
      if (other.AdvertisingChannelSubType != 0) {
        AdvertisingChannelSubType = other.AdvertisingChannelSubType;
      }
      if (other.trackingUrlTemplate_ != null) {
        if (trackingUrlTemplate_ == null || other.TrackingUrlTemplate != "") {
          TrackingUrlTemplate = other.TrackingUrlTemplate;
        }
      }
      urlCustomParameters_.Add(other.urlCustomParameters_);
      if (other.networkSettings_ != null) {
        if (networkSettings_ == null) {
          networkSettings_ = new global::Google.Ads.GoogleAds.V0.Resources.Campaign.Types.NetworkSettings();
        }
        NetworkSettings.MergeFrom(other.NetworkSettings);
      }
      if (other.hotelSetting_ != null) {
        if (hotelSetting_ == null) {
          hotelSetting_ = new global::Google.Ads.GoogleAds.V0.Resources.Campaign.Types.HotelSettingInfo();
        }
        HotelSetting.MergeFrom(other.HotelSetting);
      }
      if (other.dynamicSearchAdsSetting_ != null) {
        if (dynamicSearchAdsSetting_ == null) {
          dynamicSearchAdsSetting_ = new global::Google.Ads.GoogleAds.V0.Resources.Campaign.Types.DynamicSearchAdsSetting();
        }
        DynamicSearchAdsSetting.MergeFrom(other.DynamicSearchAdsSetting);
      }
      if (other.campaignBudget_ != null) {
        if (campaignBudget_ == null || other.CampaignBudget != "") {
          CampaignBudget = other.CampaignBudget;
        }
      }
      if (other.BiddingStrategyType != 0) {
        BiddingStrategyType = other.BiddingStrategyType;
      }
      if (other.startDate_ != null) {
        if (startDate_ == null || other.StartDate != "") {
          StartDate = other.StartDate;
        }
      }
      if (other.endDate_ != null) {
        if (endDate_ == null || other.EndDate != "") {
          EndDate = other.EndDate;
        }
      }
      switch (other.CampaignBiddingStrategyCase) {
        case CampaignBiddingStrategyOneofCase.BiddingStrategy:
          BiddingStrategy = other.BiddingStrategy;
          break;
        case CampaignBiddingStrategyOneofCase.ManualCpc:
          if (ManualCpc == null) {
            ManualCpc = new global::Google.Ads.GoogleAds.V0.Common.ManualCpc();
          }
          ManualCpc.MergeFrom(other.ManualCpc);
          break;
        case CampaignBiddingStrategyOneofCase.ManualCpm:
          if (ManualCpm == null) {
            ManualCpm = new global::Google.Ads.GoogleAds.V0.Common.ManualCpm();
          }
          ManualCpm.MergeFrom(other.ManualCpm);
          break;
        case CampaignBiddingStrategyOneofCase.MaximizeConversions:
          if (MaximizeConversions == null) {
            MaximizeConversions = new global::Google.Ads.GoogleAds.V0.Common.MaximizeConversions();
          }
          MaximizeConversions.MergeFrom(other.MaximizeConversions);
          break;
        case CampaignBiddingStrategyOneofCase.MaximizeConversionValue:
          if (MaximizeConversionValue == null) {
            MaximizeConversionValue = new global::Google.Ads.GoogleAds.V0.Common.MaximizeConversionValue();
          }
          MaximizeConversionValue.MergeFrom(other.MaximizeConversionValue);
          break;
        case CampaignBiddingStrategyOneofCase.TargetCpa:
          if (TargetCpa == null) {
            TargetCpa = new global::Google.Ads.GoogleAds.V0.Common.TargetCpa();
          }
          TargetCpa.MergeFrom(other.TargetCpa);
          break;
        case CampaignBiddingStrategyOneofCase.TargetRoas:
          if (TargetRoas == null) {
            TargetRoas = new global::Google.Ads.GoogleAds.V0.Common.TargetRoas();
          }
          TargetRoas.MergeFrom(other.TargetRoas);
          break;
        case CampaignBiddingStrategyOneofCase.TargetSpend:
          if (TargetSpend == null) {
            TargetSpend = new global::Google.Ads.GoogleAds.V0.Common.TargetSpend();
          }
          TargetSpend.MergeFrom(other.TargetSpend);
          break;
        case CampaignBiddingStrategyOneofCase.PercentCpc:
          if (PercentCpc == null) {
            PercentCpc = new global::Google.Ads.GoogleAds.V0.Common.PercentCpc();
          }
          PercentCpc.MergeFrom(other.PercentCpc);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 26: {
            long? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0L) {
              Id = value;
            }
            break;
          }
          case 34: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 40: {
            status_ = (global::Google.Ads.GoogleAds.V0.Enums.CampaignStatusEnum.Types.CampaignStatus) input.ReadEnum();
            break;
          }
          case 50: {
            string value = _single_campaignBudget_codec.Read(input);
            if (campaignBudget_ == null || value != "") {
              CampaignBudget = value;
            }
            break;
          }
          case 64: {
            adServingOptimizationStatus_ = (global::Google.Ads.GoogleAds.V0.Enums.AdServingOptimizationStatusEnum.Types.AdServingOptimizationStatus) input.ReadEnum();
            break;
          }
          case 72: {
            advertisingChannelType_ = (global::Google.Ads.GoogleAds.V0.Enums.AdvertisingChannelTypeEnum.Types.AdvertisingChannelType) input.ReadEnum();
            break;
          }
          case 80: {
            advertisingChannelSubType_ = (global::Google.Ads.GoogleAds.V0.Enums.AdvertisingChannelSubTypeEnum.Types.AdvertisingChannelSubType) input.ReadEnum();
            break;
          }
          case 90: {
            string value = _single_trackingUrlTemplate_codec.Read(input);
            if (trackingUrlTemplate_ == null || value != "") {
              TrackingUrlTemplate = value;
            }
            break;
          }
          case 98: {
            urlCustomParameters_.AddEntriesFrom(input, _repeated_urlCustomParameters_codec);
            break;
          }
          case 114: {
            if (networkSettings_ == null) {
              networkSettings_ = new global::Google.Ads.GoogleAds.V0.Resources.Campaign.Types.NetworkSettings();
            }
            input.ReadMessage(networkSettings_);
            break;
          }
          case 154: {
            string value = _single_startDate_codec.Read(input);
            if (startDate_ == null || value != "") {
              StartDate = value;
            }
            break;
          }
          case 162: {
            string value = _single_endDate_codec.Read(input);
            if (endDate_ == null || value != "") {
              EndDate = value;
            }
            break;
          }
          case 168: {
            servingStatus_ = (global::Google.Ads.GoogleAds.V0.Enums.CampaignServingStatusEnum.Types.CampaignServingStatus) input.ReadEnum();
            break;
          }
          case 176: {
            biddingStrategyType_ = (global::Google.Ads.GoogleAds.V0.Enums.BiddingStrategyTypeEnum.Types.BiddingStrategyType) input.ReadEnum();
            break;
          }
          case 186: {
            BiddingStrategy = _oneof_biddingStrategy_codec.Read(input);
            break;
          }
          case 194: {
            global::Google.Ads.GoogleAds.V0.Common.ManualCpc subBuilder = new global::Google.Ads.GoogleAds.V0.Common.ManualCpc();
            if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.ManualCpc) {
              subBuilder.MergeFrom(ManualCpc);
            }
            input.ReadMessage(subBuilder);
            ManualCpc = subBuilder;
            break;
          }
          case 202: {
            global::Google.Ads.GoogleAds.V0.Common.ManualCpm subBuilder = new global::Google.Ads.GoogleAds.V0.Common.ManualCpm();
            if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.ManualCpm) {
              subBuilder.MergeFrom(ManualCpm);
            }
            input.ReadMessage(subBuilder);
            ManualCpm = subBuilder;
            break;
          }
          case 210: {
            global::Google.Ads.GoogleAds.V0.Common.TargetCpa subBuilder = new global::Google.Ads.GoogleAds.V0.Common.TargetCpa();
            if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.TargetCpa) {
              subBuilder.MergeFrom(TargetCpa);
            }
            input.ReadMessage(subBuilder);
            TargetCpa = subBuilder;
            break;
          }
          case 218: {
            global::Google.Ads.GoogleAds.V0.Common.TargetSpend subBuilder = new global::Google.Ads.GoogleAds.V0.Common.TargetSpend();
            if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.TargetSpend) {
              subBuilder.MergeFrom(TargetSpend);
            }
            input.ReadMessage(subBuilder);
            TargetSpend = subBuilder;
            break;
          }
          case 234: {
            global::Google.Ads.GoogleAds.V0.Common.TargetRoas subBuilder = new global::Google.Ads.GoogleAds.V0.Common.TargetRoas();
            if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.TargetRoas) {
              subBuilder.MergeFrom(TargetRoas);
            }
            input.ReadMessage(subBuilder);
            TargetRoas = subBuilder;
            break;
          }
          case 242: {
            global::Google.Ads.GoogleAds.V0.Common.MaximizeConversions subBuilder = new global::Google.Ads.GoogleAds.V0.Common.MaximizeConversions();
            if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.MaximizeConversions) {
              subBuilder.MergeFrom(MaximizeConversions);
            }
            input.ReadMessage(subBuilder);
            MaximizeConversions = subBuilder;
            break;
          }
          case 250: {
            global::Google.Ads.GoogleAds.V0.Common.MaximizeConversionValue subBuilder = new global::Google.Ads.GoogleAds.V0.Common.MaximizeConversionValue();
            if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.MaximizeConversionValue) {
              subBuilder.MergeFrom(MaximizeConversionValue);
            }
            input.ReadMessage(subBuilder);
            MaximizeConversionValue = subBuilder;
            break;
          }
          case 258: {
            if (hotelSetting_ == null) {
              hotelSetting_ = new global::Google.Ads.GoogleAds.V0.Resources.Campaign.Types.HotelSettingInfo();
            }
            input.ReadMessage(hotelSetting_);
            break;
          }
          case 266: {
            if (dynamicSearchAdsSetting_ == null) {
              dynamicSearchAdsSetting_ = new global::Google.Ads.GoogleAds.V0.Resources.Campaign.Types.DynamicSearchAdsSetting();
            }
            input.ReadMessage(dynamicSearchAdsSetting_);
            break;
          }
          case 274: {
            global::Google.Ads.GoogleAds.V0.Common.PercentCpc subBuilder = new global::Google.Ads.GoogleAds.V0.Common.PercentCpc();
            if (campaignBiddingStrategyCase_ == CampaignBiddingStrategyOneofCase.PercentCpc) {
              subBuilder.MergeFrom(PercentCpc);
            }
            input.ReadMessage(subBuilder);
            PercentCpc = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Campaign message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The network settings for the campaign.
      /// </summary>
      public sealed partial class NetworkSettings : pb::IMessage<NetworkSettings> {
        private static readonly pb::MessageParser<NetworkSettings> _parser = new pb::MessageParser<NetworkSettings>(() => new NetworkSettings());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NetworkSettings> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.GoogleAds.V0.Resources.Campaign.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NetworkSettings() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NetworkSettings(NetworkSettings other) : this() {
          TargetGoogleSearch = other.TargetGoogleSearch;
          TargetSearchNetwork = other.TargetSearchNetwork;
          TargetContentNetwork = other.TargetContentNetwork;
          TargetPartnerSearchNetwork = other.TargetPartnerSearchNetwork;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NetworkSettings Clone() {
          return new NetworkSettings(this);
        }

        /// <summary>Field number for the "target_google_search" field.</summary>
        public const int TargetGoogleSearchFieldNumber = 1;
        private static readonly pb::FieldCodec<bool?> _single_targetGoogleSearch_codec = pb::FieldCodec.ForStructWrapper<bool>(10);
        private bool? targetGoogleSearch_;
        /// <summary>
        /// Whether ads will be served with google.com search results.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? TargetGoogleSearch {
          get { return targetGoogleSearch_; }
          set {
            targetGoogleSearch_ = value;
          }
        }

        /// <summary>Field number for the "target_search_network" field.</summary>
        public const int TargetSearchNetworkFieldNumber = 2;
        private static readonly pb::FieldCodec<bool?> _single_targetSearchNetwork_codec = pb::FieldCodec.ForStructWrapper<bool>(18);
        private bool? targetSearchNetwork_;
        /// <summary>
        /// Whether ads will be served on partner sites in the Google Search Network
        /// (requires `target_google_search` to also be `true`).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? TargetSearchNetwork {
          get { return targetSearchNetwork_; }
          set {
            targetSearchNetwork_ = value;
          }
        }

        /// <summary>Field number for the "target_content_network" field.</summary>
        public const int TargetContentNetworkFieldNumber = 3;
        private static readonly pb::FieldCodec<bool?> _single_targetContentNetwork_codec = pb::FieldCodec.ForStructWrapper<bool>(26);
        private bool? targetContentNetwork_;
        /// <summary>
        /// Whether ads will be served on specified placements in the Google Display
        /// Network. Placements are specified using the Placement criterion.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? TargetContentNetwork {
          get { return targetContentNetwork_; }
          set {
            targetContentNetwork_ = value;
          }
        }

        /// <summary>Field number for the "target_partner_search_network" field.</summary>
        public const int TargetPartnerSearchNetworkFieldNumber = 4;
        private static readonly pb::FieldCodec<bool?> _single_targetPartnerSearchNetwork_codec = pb::FieldCodec.ForStructWrapper<bool>(34);
        private bool? targetPartnerSearchNetwork_;
        /// <summary>
        /// Whether ads will be served on the Google Partner Network.
        /// This is available only to some select Google partner accounts.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? TargetPartnerSearchNetwork {
          get { return targetPartnerSearchNetwork_; }
          set {
            targetPartnerSearchNetwork_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NetworkSettings);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NetworkSettings other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TargetGoogleSearch != other.TargetGoogleSearch) return false;
          if (TargetSearchNetwork != other.TargetSearchNetwork) return false;
          if (TargetContentNetwork != other.TargetContentNetwork) return false;
          if (TargetPartnerSearchNetwork != other.TargetPartnerSearchNetwork) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (targetGoogleSearch_ != null) hash ^= TargetGoogleSearch.GetHashCode();
          if (targetSearchNetwork_ != null) hash ^= TargetSearchNetwork.GetHashCode();
          if (targetContentNetwork_ != null) hash ^= TargetContentNetwork.GetHashCode();
          if (targetPartnerSearchNetwork_ != null) hash ^= TargetPartnerSearchNetwork.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (targetGoogleSearch_ != null) {
            _single_targetGoogleSearch_codec.WriteTagAndValue(output, TargetGoogleSearch);
          }
          if (targetSearchNetwork_ != null) {
            _single_targetSearchNetwork_codec.WriteTagAndValue(output, TargetSearchNetwork);
          }
          if (targetContentNetwork_ != null) {
            _single_targetContentNetwork_codec.WriteTagAndValue(output, TargetContentNetwork);
          }
          if (targetPartnerSearchNetwork_ != null) {
            _single_targetPartnerSearchNetwork_codec.WriteTagAndValue(output, TargetPartnerSearchNetwork);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (targetGoogleSearch_ != null) {
            size += _single_targetGoogleSearch_codec.CalculateSizeWithTag(TargetGoogleSearch);
          }
          if (targetSearchNetwork_ != null) {
            size += _single_targetSearchNetwork_codec.CalculateSizeWithTag(TargetSearchNetwork);
          }
          if (targetContentNetwork_ != null) {
            size += _single_targetContentNetwork_codec.CalculateSizeWithTag(TargetContentNetwork);
          }
          if (targetPartnerSearchNetwork_ != null) {
            size += _single_targetPartnerSearchNetwork_codec.CalculateSizeWithTag(TargetPartnerSearchNetwork);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NetworkSettings other) {
          if (other == null) {
            return;
          }
          if (other.targetGoogleSearch_ != null) {
            if (targetGoogleSearch_ == null || other.TargetGoogleSearch != false) {
              TargetGoogleSearch = other.TargetGoogleSearch;
            }
          }
          if (other.targetSearchNetwork_ != null) {
            if (targetSearchNetwork_ == null || other.TargetSearchNetwork != false) {
              TargetSearchNetwork = other.TargetSearchNetwork;
            }
          }
          if (other.targetContentNetwork_ != null) {
            if (targetContentNetwork_ == null || other.TargetContentNetwork != false) {
              TargetContentNetwork = other.TargetContentNetwork;
            }
          }
          if (other.targetPartnerSearchNetwork_ != null) {
            if (targetPartnerSearchNetwork_ == null || other.TargetPartnerSearchNetwork != false) {
              TargetPartnerSearchNetwork = other.TargetPartnerSearchNetwork;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                bool? value = _single_targetGoogleSearch_codec.Read(input);
                if (targetGoogleSearch_ == null || value != false) {
                  TargetGoogleSearch = value;
                }
                break;
              }
              case 18: {
                bool? value = _single_targetSearchNetwork_codec.Read(input);
                if (targetSearchNetwork_ == null || value != false) {
                  TargetSearchNetwork = value;
                }
                break;
              }
              case 26: {
                bool? value = _single_targetContentNetwork_codec.Read(input);
                if (targetContentNetwork_ == null || value != false) {
                  TargetContentNetwork = value;
                }
                break;
              }
              case 34: {
                bool? value = _single_targetPartnerSearchNetwork_codec.Read(input);
                if (targetPartnerSearchNetwork_ == null || value != false) {
                  TargetPartnerSearchNetwork = value;
                }
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Campaign-level settings for hotel ads.
      /// </summary>
      public sealed partial class HotelSettingInfo : pb::IMessage<HotelSettingInfo> {
        private static readonly pb::MessageParser<HotelSettingInfo> _parser = new pb::MessageParser<HotelSettingInfo>(() => new HotelSettingInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<HotelSettingInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.GoogleAds.V0.Resources.Campaign.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HotelSettingInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HotelSettingInfo(HotelSettingInfo other) : this() {
          HotelCenterId = other.HotelCenterId;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HotelSettingInfo Clone() {
          return new HotelSettingInfo(this);
        }

        /// <summary>Field number for the "hotel_center_id" field.</summary>
        public const int HotelCenterIdFieldNumber = 1;
        private static readonly pb::FieldCodec<long?> _single_hotelCenterId_codec = pb::FieldCodec.ForStructWrapper<long>(10);
        private long? hotelCenterId_;
        /// <summary>
        /// The linked Hotel Center account.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long? HotelCenterId {
          get { return hotelCenterId_; }
          set {
            hotelCenterId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as HotelSettingInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(HotelSettingInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (HotelCenterId != other.HotelCenterId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (hotelCenterId_ != null) hash ^= HotelCenterId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (hotelCenterId_ != null) {
            _single_hotelCenterId_codec.WriteTagAndValue(output, HotelCenterId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (hotelCenterId_ != null) {
            size += _single_hotelCenterId_codec.CalculateSizeWithTag(HotelCenterId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(HotelSettingInfo other) {
          if (other == null) {
            return;
          }
          if (other.hotelCenterId_ != null) {
            if (hotelCenterId_ == null || other.HotelCenterId != 0L) {
              HotelCenterId = other.HotelCenterId;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                long? value = _single_hotelCenterId_codec.Read(input);
                if (hotelCenterId_ == null || value != 0L) {
                  HotelCenterId = value;
                }
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// The setting for controlling Dynamic Search Ads (DSA).
      /// </summary>
      public sealed partial class DynamicSearchAdsSetting : pb::IMessage<DynamicSearchAdsSetting> {
        private static readonly pb::MessageParser<DynamicSearchAdsSetting> _parser = new pb::MessageParser<DynamicSearchAdsSetting>(() => new DynamicSearchAdsSetting());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DynamicSearchAdsSetting> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.GoogleAds.V0.Resources.Campaign.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DynamicSearchAdsSetting() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DynamicSearchAdsSetting(DynamicSearchAdsSetting other) : this() {
          DomainName = other.DomainName;
          LanguageCode = other.LanguageCode;
          UseSuppliedUrlsOnly = other.UseSuppliedUrlsOnly;
          feedIds_ = other.feedIds_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DynamicSearchAdsSetting Clone() {
          return new DynamicSearchAdsSetting(this);
        }

        /// <summary>Field number for the "domain_name" field.</summary>
        public const int DomainNameFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _single_domainName_codec = pb::FieldCodec.ForClassWrapper<string>(10);
        private string domainName_;
        /// <summary>
        /// The Internet domain name that this setting represents, e.g., "google.com"
        /// or "www.google.com".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DomainName {
          get { return domainName_; }
          set {
            domainName_ = value;
          }
        }

        /// <summary>Field number for the "language_code" field.</summary>
        public const int LanguageCodeFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _single_languageCode_codec = pb::FieldCodec.ForClassWrapper<string>(18);
        private string languageCode_;
        /// <summary>
        /// The language code specifying the language of the domain, e.g., "en".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LanguageCode {
          get { return languageCode_; }
          set {
            languageCode_ = value;
          }
        }

        /// <summary>Field number for the "use_supplied_urls_only" field.</summary>
        public const int UseSuppliedUrlsOnlyFieldNumber = 3;
        private static readonly pb::FieldCodec<bool?> _single_useSuppliedUrlsOnly_codec = pb::FieldCodec.ForStructWrapper<bool>(26);
        private bool? useSuppliedUrlsOnly_;
        /// <summary>
        /// Whether the campaign uses advertiser supplied URLs exclusively.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? UseSuppliedUrlsOnly {
          get { return useSuppliedUrlsOnly_; }
          set {
            useSuppliedUrlsOnly_ = value;
          }
        }

        /// <summary>Field number for the "feed_ids" field.</summary>
        public const int FeedIdsFieldNumber = 4;
        private static readonly pb::FieldCodec<long?> _repeated_feedIds_codec
            = pb::FieldCodec.ForStructWrapper<long>(34);
        private readonly pbc::RepeatedField<long?> feedIds_ = new pbc::RepeatedField<long?>();
        /// <summary>
        /// The list of page feeds associated with the campaign.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long?> FeedIds {
          get { return feedIds_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DynamicSearchAdsSetting);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DynamicSearchAdsSetting other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DomainName != other.DomainName) return false;
          if (LanguageCode != other.LanguageCode) return false;
          if (UseSuppliedUrlsOnly != other.UseSuppliedUrlsOnly) return false;
          if(!feedIds_.Equals(other.feedIds_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (domainName_ != null) hash ^= DomainName.GetHashCode();
          if (languageCode_ != null) hash ^= LanguageCode.GetHashCode();
          if (useSuppliedUrlsOnly_ != null) hash ^= UseSuppliedUrlsOnly.GetHashCode();
          hash ^= feedIds_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (domainName_ != null) {
            _single_domainName_codec.WriteTagAndValue(output, DomainName);
          }
          if (languageCode_ != null) {
            _single_languageCode_codec.WriteTagAndValue(output, LanguageCode);
          }
          if (useSuppliedUrlsOnly_ != null) {
            _single_useSuppliedUrlsOnly_codec.WriteTagAndValue(output, UseSuppliedUrlsOnly);
          }
          feedIds_.WriteTo(output, _repeated_feedIds_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (domainName_ != null) {
            size += _single_domainName_codec.CalculateSizeWithTag(DomainName);
          }
          if (languageCode_ != null) {
            size += _single_languageCode_codec.CalculateSizeWithTag(LanguageCode);
          }
          if (useSuppliedUrlsOnly_ != null) {
            size += _single_useSuppliedUrlsOnly_codec.CalculateSizeWithTag(UseSuppliedUrlsOnly);
          }
          size += feedIds_.CalculateSize(_repeated_feedIds_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DynamicSearchAdsSetting other) {
          if (other == null) {
            return;
          }
          if (other.domainName_ != null) {
            if (domainName_ == null || other.DomainName != "") {
              DomainName = other.DomainName;
            }
          }
          if (other.languageCode_ != null) {
            if (languageCode_ == null || other.LanguageCode != "") {
              LanguageCode = other.LanguageCode;
            }
          }
          if (other.useSuppliedUrlsOnly_ != null) {
            if (useSuppliedUrlsOnly_ == null || other.UseSuppliedUrlsOnly != false) {
              UseSuppliedUrlsOnly = other.UseSuppliedUrlsOnly;
            }
          }
          feedIds_.Add(other.feedIds_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                string value = _single_domainName_codec.Read(input);
                if (domainName_ == null || value != "") {
                  DomainName = value;
                }
                break;
              }
              case 18: {
                string value = _single_languageCode_codec.Read(input);
                if (languageCode_ == null || value != "") {
                  LanguageCode = value;
                }
                break;
              }
              case 26: {
                bool? value = _single_useSuppliedUrlsOnly_codec.Read(input);
                if (useSuppliedUrlsOnly_ == null || value != false) {
                  UseSuppliedUrlsOnly = value;
                }
                break;
              }
              case 34: {
                feedIds_.AddEntriesFrom(input, _repeated_feedIds_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
