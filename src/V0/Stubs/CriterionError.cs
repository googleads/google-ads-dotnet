// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v0/errors/criterion_error.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V0.Errors {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v0/errors/criterion_error.proto</summary>
  public static partial class CriterionErrorReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v0/errors/criterion_error.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CriterionErrorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjRnb29nbGUvYWRzL2dvb2dsZWFkcy92MC9lcnJvcnMvY3JpdGVyaW9uX2Vy",
            "cm9yLnByb3RvEh5nb29nbGUuYWRzLmdvb2dsZWFkcy52MC5lcnJvcnMioBgK",
            "EkNyaXRlcmlvbkVycm9yRW51bSKJGAoOQ3JpdGVyaW9uRXJyb3ISDwoLVU5T",
            "UEVDSUZJRUQQABILCgdVTktOT1dOEAESGgoWQ09OQ1JFVEVfVFlQRV9SRVFV",
            "SVJFRBACEh0KGUlOVkFMSURfRVhDTFVERURfQ0FURUdPUlkQAxIYChRJTlZB",
            "TElEX0tFWVdPUkRfVEVYVBAEEhkKFUtFWVdPUkRfVEVYVF9UT09fTE9ORxAF",
            "Eh4KGktFWVdPUkRfSEFTX1RPT19NQU5ZX1dPUkRTEAYSHQoZS0VZV09SRF9I",
            "QVNfSU5WQUxJRF9DSEFSUxAHEhkKFUlOVkFMSURfUExBQ0VNRU5UX1VSTBAI",
            "EhUKEUlOVkFMSURfVVNFUl9MSVNUEAkSGQoVSU5WQUxJRF9VU0VSX0lOVEVS",
            "RVNUEAoSJAogSU5WQUxJRF9GT1JNQVRfRk9SX1BMQUNFTUVOVF9VUkwQCxId",
            "ChlQTEFDRU1FTlRfVVJMX0lTX1RPT19MT05HEAwSIgoeUExBQ0VNRU5UX1VS",
            "TF9IQVNfSUxMRUdBTF9DSEFSEA0SLAooUExBQ0VNRU5UX1VSTF9IQVNfTVVM",
            "VElQTEVfU0lURVNfSU5fTElORRAOEjkKNVBMQUNFTUVOVF9JU19OT1RfQVZB",
            "SUxBQkxFX0ZPUl9UQVJHRVRJTkdfT1JfRVhDTFVTSU9OEA8SFgoSSU5WQUxJ",
            "RF9UT1BJQ19QQVRIEBASHgoaSU5WQUxJRF9ZT1VUVUJFX0NIQU5ORUxfSUQQ",
            "ERIcChhJTlZBTElEX1lPVVRVQkVfVklERU9fSUQQEhInCiNZT1VUVUJFX1ZF",
            "UlRJQ0FMX0NIQU5ORUxfREVQUkVDQVRFRBATEioKJllPVVRVQkVfREVNT0dS",
            "QVBISUNfQ0hBTk5FTF9ERVBSRUNBVEVEEBQSGwoXWU9VVFVCRV9VUkxfVU5T",
            "VVBQT1JURUQQFRIgChxDQU5OT1RfRVhDTFVERV9DUklURVJJQV9UWVBFEBYS",
            "HAoYQ0FOTk9UX0FERF9DUklURVJJQV9UWVBFEBcSGgoWSU5WQUxJRF9QUk9E",
            "VUNUX0ZJTFRFUhAYEhsKF1BST0RVQ1RfRklMVEVSX1RPT19MT05HEBkSJAog",
            "Q0FOTk9UX0VYQ0xVREVfU0lNSUxBUl9VU0VSX0xJU1QQGhIfChtDQU5OT1Rf",
            "QUREX0NMT1NFRF9VU0VSX0xJU1QQGxI6CjZDQU5OT1RfQUREX0RJU1BMQVlf",
            "T05MWV9MSVNUU19UT19TRUFSQ0hfT05MWV9DQU1QQUlHTlMQHBI1CjFDQU5O",
            "T1RfQUREX0RJU1BMQVlfT05MWV9MSVNUU19UT19TRUFSQ0hfQ0FNUEFJR05T",
            "EB0SNwozQ0FOTk9UX0FERF9ESVNQTEFZX09OTFlfTElTVFNfVE9fU0hPUFBJ",
            "TkdfQ0FNUEFJR05TEB4SMQotQ0FOTk9UX0FERF9VU0VSX0lOVEVSRVNUU19U",
            "T19TRUFSQ0hfQ0FNUEFJR05TEB8SOQo1Q0FOTk9UX1NFVF9CSURTX09OX0NS",
            "SVRFUklPTl9UWVBFX0lOX1NFQVJDSF9DQU1QQUlHTlMQIBI3CjNDQU5OT1Rf",
            "QUREX1VSTFNfVE9fQ1JJVEVSSU9OX1RZUEVfRk9SX0NBTVBBSUdOX1RZUEUQ",
            "IRIWChJJTlZBTElEX0lQX0FERFJFU1MQIhIVChFJTlZBTElEX0lQX0ZPUk1B",
            "VBAjEhYKEklOVkFMSURfTU9CSUxFX0FQUBAkEh8KG0lOVkFMSURfTU9CSUxF",
            "X0FQUF9DQVRFR09SWRAlEhgKFElOVkFMSURfQ1JJVEVSSU9OX0lEECYSGwoX",
            "Q0FOTk9UX1RBUkdFVF9DUklURVJJT04QJxIkCiBDQU5OT1RfVEFSR0VUX09C",
            "U09MRVRFX0NSSVRFUklPThAoEiIKHkNSSVRFUklPTl9JRF9BTkRfVFlQRV9N",
            "SVNNQVRDSBApEhwKGElOVkFMSURfUFJPWElNSVRZX1JBRElVUxAqEiIKHklO",
            "VkFMSURfUFJPWElNSVRZX1JBRElVU19VTklUUxArEiAKHElOVkFMSURfU1RS",
            "RUVUQUREUkVTU19MRU5HVEgQLBIbChdJTlZBTElEX0NJVFlOQU1FX0xFTkdU",
            "SBAtEh0KGUlOVkFMSURfUkVHSU9OQ09ERV9MRU5HVEgQLhIdChlJTlZBTElE",
            "X1JFR0lPTk5BTUVfTEVOR1RIEC8SHQoZSU5WQUxJRF9QT1NUQUxDT0RFX0xF",
            "TkdUSBAwEhgKFElOVkFMSURfQ09VTlRSWV9DT0RFEDESFAoQSU5WQUxJRF9M",
            "QVRJVFVERRAyEhUKEUlOVkFMSURfTE9OR0lUVURFEDMSNgoyUFJPWElNSVRZ",
            "X0dFT1BPSU5UX0FORF9BRERSRVNTX0JPVEhfQ0FOTk9UX0JFX05VTEwQNBId",
            "ChlJTlZBTElEX1BST1hJTUlUWV9BRERSRVNTEDUSHAoYSU5WQUxJRF9VU0VS",
            "X0RPTUFJTl9OQU1FEDYSIAocQ1JJVEVSSU9OX1BBUkFNRVRFUl9UT09fTE9O",
            "RxA3EiYKIkFEX1NDSEVEVUxFX1RJTUVfSU5URVJWQUxTX09WRVJMQVAQOBIy",
            "Ci5BRF9TQ0hFRFVMRV9JTlRFUlZBTF9DQU5OT1RfU1BBTl9NVUxUSVBMRV9E",
            "QVlTEDkSJQohQURfU0NIRURVTEVfSU5WQUxJRF9USU1FX0lOVEVSVkFMEDoS",
            "MAosQURfU0NIRURVTEVfRVhDRUVERURfSU5URVJWQUxTX1BFUl9EQVlfTElN",
            "SVQQOxIvCitBRF9TQ0hFRFVMRV9DUklURVJJT05fSURfTUlTTUFUQ0hJTkdf",
            "RklFTERTEDwSJAogQ0FOTk9UX0JJRF9NT0RJRllfQ1JJVEVSSU9OX1RZUEUQ",
            "PRIyCi5DQU5OT1RfQklEX01PRElGWV9DUklURVJJT05fQ0FNUEFJR05fT1BU",
            "RURfT1VUED4SKAokQ0FOTk9UX0JJRF9NT0RJRllfTkVHQVRJVkVfQ1JJVEVS",
            "SU9OED8SHwobQklEX01PRElGSUVSX0FMUkVBRFlfRVhJU1RTEEASFwoTRkVF",
            "RF9JRF9OT1RfQUxMT1dFRBBBEigKJEFDQ09VTlRfSU5FTElHSUJMRV9GT1Jf",
            "Q1JJVEVSSUFfVFlQRRBCEi4KKkNSSVRFUklBX1RZUEVfSU5WQUxJRF9GT1Jf",
            "QklERElOR19TVFJBVEVHWRBDEhwKGENBTk5PVF9FWENMVURFX0NSSVRFUklP",
            "ThBEEhsKF0NBTk5PVF9SRU1PVkVfQ1JJVEVSSU9OEEUSGgoWUFJPRFVDVF9T",
            "Q09QRV9UT09fTE9ORxBGEiUKIVBST0RVQ1RfU0NPUEVfVE9PX01BTllfRElN",
            "RU5TSU9OUxBHEh4KGlBST0RVQ1RfUEFSVElUSU9OX1RPT19MT05HEEgSKQol",
            "UFJPRFVDVF9QQVJUSVRJT05fVE9PX01BTllfRElNRU5TSU9OUxBJEh0KGUlO",
            "VkFMSURfUFJPRFVDVF9ESU1FTlNJT04QShIiCh5JTlZBTElEX1BST0RVQ1Rf",
            "RElNRU5TSU9OX1RZUEUQSxIkCiBJTlZBTElEX1BST0RVQ1RfQklERElOR19D",
            "QVRFR09SWRBMEhwKGE1JU1NJTkdfU0hPUFBJTkdfU0VUVElORxBNEh0KGUlO",
            "VkFMSURfTUFUQ0hJTkdfRlVOQ1RJT04QThIfChtMT0NBVElPTl9GSUxURVJf",
            "Tk9UX0FMTE9XRUQQTxIbChdMT0NBVElPTl9GSUxURVJfSU5WQUxJRBBQEjIK",
            "LkNBTk5PVF9BVFRBQ0hfQ1JJVEVSSUFfQVRfQ0FNUEFJR05fQU5EX0FER1JP",
            "VVAQURI5CjVIT1RFTF9MRU5HVEhfT0ZfU1RBWV9PVkVSTEFQU19XSVRIX0VY",
            "SVNUSU5HX0NSSVRFUklPThBSEkEKPUhPVEVMX0FEVkFOQ0VfQk9PS0lOR19X",
            "SU5ET1dfT1ZFUkxBUFNfV0lUSF9FWElTVElOR19DUklURVJJT04QUxIuCipG",
            "SUVMRF9JTkNPTVBBVElCTEVfV0lUSF9ORUdBVElWRV9UQVJHRVRJTkcQVELJ",
            "AQoiY29tLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYwLmVycm9yc0ITQ3JpdGVy",
            "aW9uRXJyb3JQcm90b1ABWkRnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9n",
            "b29nbGVhcGlzL2Fkcy9nb29nbGVhZHMvdjAvZXJyb3JzO2Vycm9yc6ICA0dB",
            "QaoCHkdvb2dsZS5BZHMuR29vZ2xlQWRzLlYwLkVycm9yc8oCHkdvb2dsZVxB",
            "ZHNcR29vZ2xlQWRzXFYwXEVycm9yc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Errors.CriterionErrorEnum), global::Google.Ads.GoogleAds.V0.Errors.CriterionErrorEnum.Parser, null, null, new[]{ typeof(global::Google.Ads.GoogleAds.V0.Errors.CriterionErrorEnum.Types.CriterionError) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Container for enum describing possible criterion errors.
  /// </summary>
  public sealed partial class CriterionErrorEnum : pb::IMessage<CriterionErrorEnum> {
    private static readonly pb::MessageParser<CriterionErrorEnum> _parser = new pb::MessageParser<CriterionErrorEnum>(() => new CriterionErrorEnum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CriterionErrorEnum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Errors.CriterionErrorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CriterionErrorEnum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CriterionErrorEnum(CriterionErrorEnum other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CriterionErrorEnum Clone() {
      return new CriterionErrorEnum(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CriterionErrorEnum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CriterionErrorEnum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CriterionErrorEnum other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CriterionErrorEnum message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Enum describing possible criterion errors.
      /// </summary>
      public enum CriterionError {
        /// <summary>
        /// Enum unspecified.
        /// </summary>
        [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The received error code is not known in this version.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 1,
        /// <summary>
        /// Concrete type of criterion is required for CREATE and UPDATE operations.
        /// </summary>
        [pbr::OriginalName("CONCRETE_TYPE_REQUIRED")] ConcreteTypeRequired = 2,
        /// <summary>
        /// The category requested for exclusion is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_EXCLUDED_CATEGORY")] InvalidExcludedCategory = 3,
        /// <summary>
        /// Invalid keyword criteria text.
        /// </summary>
        [pbr::OriginalName("INVALID_KEYWORD_TEXT")] InvalidKeywordText = 4,
        /// <summary>
        /// Keyword text should be less than 80 chars.
        /// </summary>
        [pbr::OriginalName("KEYWORD_TEXT_TOO_LONG")] KeywordTextTooLong = 5,
        /// <summary>
        /// Keyword text has too many words.
        /// </summary>
        [pbr::OriginalName("KEYWORD_HAS_TOO_MANY_WORDS")] KeywordHasTooManyWords = 6,
        /// <summary>
        /// Keyword text has invalid characters or symbols.
        /// </summary>
        [pbr::OriginalName("KEYWORD_HAS_INVALID_CHARS")] KeywordHasInvalidChars = 7,
        /// <summary>
        /// Invalid placement URL.
        /// </summary>
        [pbr::OriginalName("INVALID_PLACEMENT_URL")] InvalidPlacementUrl = 8,
        /// <summary>
        /// Invalid user list criterion.
        /// </summary>
        [pbr::OriginalName("INVALID_USER_LIST")] InvalidUserList = 9,
        /// <summary>
        /// Invalid user interest criterion.
        /// </summary>
        [pbr::OriginalName("INVALID_USER_INTEREST")] InvalidUserInterest = 10,
        /// <summary>
        /// Placement URL has wrong format.
        /// </summary>
        [pbr::OriginalName("INVALID_FORMAT_FOR_PLACEMENT_URL")] InvalidFormatForPlacementUrl = 11,
        /// <summary>
        /// Placement URL is too long.
        /// </summary>
        [pbr::OriginalName("PLACEMENT_URL_IS_TOO_LONG")] PlacementUrlIsTooLong = 12,
        /// <summary>
        /// Indicates the URL contains an illegal character.
        /// </summary>
        [pbr::OriginalName("PLACEMENT_URL_HAS_ILLEGAL_CHAR")] PlacementUrlHasIllegalChar = 13,
        /// <summary>
        /// Indicates the URL contains multiple comma separated URLs.
        /// </summary>
        [pbr::OriginalName("PLACEMENT_URL_HAS_MULTIPLE_SITES_IN_LINE")] PlacementUrlHasMultipleSitesInLine = 14,
        /// <summary>
        /// Indicates the domain is blacklisted.
        /// </summary>
        [pbr::OriginalName("PLACEMENT_IS_NOT_AVAILABLE_FOR_TARGETING_OR_EXCLUSION")] PlacementIsNotAvailableForTargetingOrExclusion = 15,
        /// <summary>
        /// Invalid topic path.
        /// </summary>
        [pbr::OriginalName("INVALID_TOPIC_PATH")] InvalidTopicPath = 16,
        /// <summary>
        /// The YouTube Channel Id is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_YOUTUBE_CHANNEL_ID")] InvalidYoutubeChannelId = 17,
        /// <summary>
        /// The YouTube Video Id is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_YOUTUBE_VIDEO_ID")] InvalidYoutubeVideoId = 18,
        /// <summary>
        /// Indicates the placement is a YouTube vertical channel, which is no longer
        /// supported.
        /// </summary>
        [pbr::OriginalName("YOUTUBE_VERTICAL_CHANNEL_DEPRECATED")] YoutubeVerticalChannelDeprecated = 19,
        /// <summary>
        /// Indicates the placement is a YouTube demographic channel, which is no
        /// longer supported.
        /// </summary>
        [pbr::OriginalName("YOUTUBE_DEMOGRAPHIC_CHANNEL_DEPRECATED")] YoutubeDemographicChannelDeprecated = 20,
        /// <summary>
        /// YouTube urls are not supported in Placement criterion. Use YouTubeChannel
        /// and YouTubeVideo criterion instead.
        /// </summary>
        [pbr::OriginalName("YOUTUBE_URL_UNSUPPORTED")] YoutubeUrlUnsupported = 21,
        /// <summary>
        /// Criteria type can not be excluded by the customer, like AOL account type
        /// cannot target site type criteria.
        /// </summary>
        [pbr::OriginalName("CANNOT_EXCLUDE_CRITERIA_TYPE")] CannotExcludeCriteriaType = 22,
        /// <summary>
        /// Criteria type can not be targeted.
        /// </summary>
        [pbr::OriginalName("CANNOT_ADD_CRITERIA_TYPE")] CannotAddCriteriaType = 23,
        /// <summary>
        /// Product filter in the product criteria has invalid characters. Operand
        /// and the argument in the filter can not have "==" or "&amp;+".
        /// </summary>
        [pbr::OriginalName("INVALID_PRODUCT_FILTER")] InvalidProductFilter = 24,
        /// <summary>
        /// Product filter in the product criteria is translated to a string as
        /// operand1==argument1&amp;+operand2==argument2, maximum allowed length for the
        /// string is 255 chars.
        /// </summary>
        [pbr::OriginalName("PRODUCT_FILTER_TOO_LONG")] ProductFilterTooLong = 25,
        /// <summary>
        /// Not allowed to exclude similar user list.
        /// </summary>
        [pbr::OriginalName("CANNOT_EXCLUDE_SIMILAR_USER_LIST")] CannotExcludeSimilarUserList = 26,
        /// <summary>
        /// Not allowed to target a closed user list.
        /// </summary>
        [pbr::OriginalName("CANNOT_ADD_CLOSED_USER_LIST")] CannotAddClosedUserList = 27,
        /// <summary>
        /// Not allowed to add display only UserLists to search only campaigns.
        /// </summary>
        [pbr::OriginalName("CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SEARCH_ONLY_CAMPAIGNS")] CannotAddDisplayOnlyListsToSearchOnlyCampaigns = 28,
        /// <summary>
        /// Not allowed to add display only UserLists to search plus campaigns.
        /// </summary>
        [pbr::OriginalName("CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SEARCH_CAMPAIGNS")] CannotAddDisplayOnlyListsToSearchCampaigns = 29,
        /// <summary>
        /// Not allowed to add display only UserLists to shopping campaigns.
        /// </summary>
        [pbr::OriginalName("CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SHOPPING_CAMPAIGNS")] CannotAddDisplayOnlyListsToShoppingCampaigns = 30,
        /// <summary>
        /// Not allowed to add User interests to search only campaigns.
        /// </summary>
        [pbr::OriginalName("CANNOT_ADD_USER_INTERESTS_TO_SEARCH_CAMPAIGNS")] CannotAddUserInterestsToSearchCampaigns = 31,
        /// <summary>
        /// Not allowed to set bids for this criterion type in search campaigns
        /// </summary>
        [pbr::OriginalName("CANNOT_SET_BIDS_ON_CRITERION_TYPE_IN_SEARCH_CAMPAIGNS")] CannotSetBidsOnCriterionTypeInSearchCampaigns = 32,
        /// <summary>
        /// Final URLs, URL Templates and CustomParameters cannot be set for the
        /// criterion types of Gender, AgeRange, UserList, Placement, MobileApp, and
        /// MobileAppCategory in search campaigns and shopping campaigns.
        /// </summary>
        [pbr::OriginalName("CANNOT_ADD_URLS_TO_CRITERION_TYPE_FOR_CAMPAIGN_TYPE")] CannotAddUrlsToCriterionTypeForCampaignType = 33,
        /// <summary>
        /// IP address is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_IP_ADDRESS")] InvalidIpAddress = 34,
        /// <summary>
        /// IP format is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_IP_FORMAT")] InvalidIpFormat = 35,
        /// <summary>
        /// Mobile application is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_MOBILE_APP")] InvalidMobileApp = 36,
        /// <summary>
        /// Mobile application category is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_MOBILE_APP_CATEGORY")] InvalidMobileAppCategory = 37,
        /// <summary>
        /// The CriterionId does not exist or is of the incorrect type.
        /// </summary>
        [pbr::OriginalName("INVALID_CRITERION_ID")] InvalidCriterionId = 38,
        /// <summary>
        /// The Criterion is not allowed to be targeted.
        /// </summary>
        [pbr::OriginalName("CANNOT_TARGET_CRITERION")] CannotTargetCriterion = 39,
        /// <summary>
        /// The criterion is not allowed to be targeted as it is deprecated.
        /// </summary>
        [pbr::OriginalName("CANNOT_TARGET_OBSOLETE_CRITERION")] CannotTargetObsoleteCriterion = 40,
        /// <summary>
        /// The CriterionId is not valid for the type.
        /// </summary>
        [pbr::OriginalName("CRITERION_ID_AND_TYPE_MISMATCH")] CriterionIdAndTypeMismatch = 41,
        /// <summary>
        /// Distance for the radius for the proximity criterion is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_PROXIMITY_RADIUS")] InvalidProximityRadius = 42,
        /// <summary>
        /// Units for the distance for the radius for the proximity criterion is
        /// invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_PROXIMITY_RADIUS_UNITS")] InvalidProximityRadiusUnits = 43,
        /// <summary>
        /// Street address in the address is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_STREETADDRESS_LENGTH")] InvalidStreetaddressLength = 44,
        /// <summary>
        /// City name in the address is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_CITYNAME_LENGTH")] InvalidCitynameLength = 45,
        /// <summary>
        /// Region code in the address is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_REGIONCODE_LENGTH")] InvalidRegioncodeLength = 46,
        /// <summary>
        /// Region name in the address is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_REGIONNAME_LENGTH")] InvalidRegionnameLength = 47,
        /// <summary>
        /// Postal code in the address is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_POSTALCODE_LENGTH")] InvalidPostalcodeLength = 48,
        /// <summary>
        /// Country code in the address is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_COUNTRY_CODE")] InvalidCountryCode = 49,
        /// <summary>
        /// Latitude for the GeoPoint is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_LATITUDE")] InvalidLatitude = 50,
        /// <summary>
        /// Longitude for the GeoPoint is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_LONGITUDE")] InvalidLongitude = 51,
        /// <summary>
        /// The Proximity input is not valid. Both address and geoPoint cannot be
        /// null.
        /// </summary>
        [pbr::OriginalName("PROXIMITY_GEOPOINT_AND_ADDRESS_BOTH_CANNOT_BE_NULL")] ProximityGeopointAndAddressBothCannotBeNull = 52,
        /// <summary>
        /// The Proximity address cannot be geocoded to a valid lat/long.
        /// </summary>
        [pbr::OriginalName("INVALID_PROXIMITY_ADDRESS")] InvalidProximityAddress = 53,
        /// <summary>
        /// User domain name is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_USER_DOMAIN_NAME")] InvalidUserDomainName = 54,
        /// <summary>
        /// Length of serialized criterion parameter exceeded size limit.
        /// </summary>
        [pbr::OriginalName("CRITERION_PARAMETER_TOO_LONG")] CriterionParameterTooLong = 55,
        /// <summary>
        /// Time interval in the AdSchedule overlaps with another AdSchedule.
        /// </summary>
        [pbr::OriginalName("AD_SCHEDULE_TIME_INTERVALS_OVERLAP")] AdScheduleTimeIntervalsOverlap = 56,
        /// <summary>
        /// AdSchedule time interval cannot span multiple days.
        /// </summary>
        [pbr::OriginalName("AD_SCHEDULE_INTERVAL_CANNOT_SPAN_MULTIPLE_DAYS")] AdScheduleIntervalCannotSpanMultipleDays = 57,
        /// <summary>
        /// AdSchedule time interval specified is invalid, endTime cannot be earlier
        /// than startTime.
        /// </summary>
        [pbr::OriginalName("AD_SCHEDULE_INVALID_TIME_INTERVAL")] AdScheduleInvalidTimeInterval = 58,
        /// <summary>
        /// The number of AdSchedule entries in a day exceeds the limit.
        /// </summary>
        [pbr::OriginalName("AD_SCHEDULE_EXCEEDED_INTERVALS_PER_DAY_LIMIT")] AdScheduleExceededIntervalsPerDayLimit = 59,
        /// <summary>
        /// CriteriaId does not match the interval of the AdSchedule specified.
        /// </summary>
        [pbr::OriginalName("AD_SCHEDULE_CRITERION_ID_MISMATCHING_FIELDS")] AdScheduleCriterionIdMismatchingFields = 60,
        /// <summary>
        /// Cannot set bid modifier for this criterion type.
        /// </summary>
        [pbr::OriginalName("CANNOT_BID_MODIFY_CRITERION_TYPE")] CannotBidModifyCriterionType = 61,
        /// <summary>
        /// Cannot bid modify criterion, since it is opted out of the campaign.
        /// </summary>
        [pbr::OriginalName("CANNOT_BID_MODIFY_CRITERION_CAMPAIGN_OPTED_OUT")] CannotBidModifyCriterionCampaignOptedOut = 62,
        /// <summary>
        /// Cannot set bid modifier for a negative criterion.
        /// </summary>
        [pbr::OriginalName("CANNOT_BID_MODIFY_NEGATIVE_CRITERION")] CannotBidModifyNegativeCriterion = 63,
        /// <summary>
        /// Bid Modifier already exists. Use SET operation to update.
        /// </summary>
        [pbr::OriginalName("BID_MODIFIER_ALREADY_EXISTS")] BidModifierAlreadyExists = 64,
        /// <summary>
        /// Feed Id is not allowed in these Location Groups.
        /// </summary>
        [pbr::OriginalName("FEED_ID_NOT_ALLOWED")] FeedIdNotAllowed = 65,
        /// <summary>
        /// The account may not use the requested criteria type. For example, some
        /// accounts are restricted to keywords only.
        /// </summary>
        [pbr::OriginalName("ACCOUNT_INELIGIBLE_FOR_CRITERIA_TYPE")] AccountIneligibleForCriteriaType = 66,
        /// <summary>
        /// The requested criteria type cannot be used with campaign or ad group
        /// bidding strategy.
        /// </summary>
        [pbr::OriginalName("CRITERIA_TYPE_INVALID_FOR_BIDDING_STRATEGY")] CriteriaTypeInvalidForBiddingStrategy = 67,
        /// <summary>
        /// The Criterion is not allowed to be excluded.
        /// </summary>
        [pbr::OriginalName("CANNOT_EXCLUDE_CRITERION")] CannotExcludeCriterion = 68,
        /// <summary>
        /// The criterion is not allowed to be removed. For example, we cannot remove
        /// any of the device criterion.
        /// </summary>
        [pbr::OriginalName("CANNOT_REMOVE_CRITERION")] CannotRemoveCriterion = 69,
        /// <summary>
        /// The combined length of product dimension values of the product scope
        /// criterion is too long.
        /// </summary>
        [pbr::OriginalName("PRODUCT_SCOPE_TOO_LONG")] ProductScopeTooLong = 70,
        /// <summary>
        /// Product scope contains too many dimensions.
        /// </summary>
        [pbr::OriginalName("PRODUCT_SCOPE_TOO_MANY_DIMENSIONS")] ProductScopeTooManyDimensions = 71,
        /// <summary>
        /// The combined length of product dimension values of the product partition
        /// criterion is too long.
        /// </summary>
        [pbr::OriginalName("PRODUCT_PARTITION_TOO_LONG")] ProductPartitionTooLong = 72,
        /// <summary>
        /// Product partition contains too many dimensions.
        /// </summary>
        [pbr::OriginalName("PRODUCT_PARTITION_TOO_MANY_DIMENSIONS")] ProductPartitionTooManyDimensions = 73,
        /// <summary>
        /// The product dimension is invalid (e.g. dimension contains illegal value,
        /// dimension type is represented with wrong class, etc). Product dimension
        /// value can not contain "==" or "&amp;+".
        /// </summary>
        [pbr::OriginalName("INVALID_PRODUCT_DIMENSION")] InvalidProductDimension = 74,
        /// <summary>
        /// Product dimension type is either invalid for campaigns of this type or
        /// cannot be used in the current context. BIDDING_CATEGORY_Lx and
        /// PRODUCT_TYPE_Lx product dimensions must be used in ascending order of
        /// their levels: L1, L2, L3, L4, L5... The levels must be specified
        /// sequentially and start from L1. Furthermore, an "others" product
        /// partition cannot be subdivided with a dimension of the same type but of a
        /// higher level ("others" BIDDING_CATEGORY_L3 can be subdivided with BRAND
        /// but not with BIDDING_CATEGORY_L4).
        /// </summary>
        [pbr::OriginalName("INVALID_PRODUCT_DIMENSION_TYPE")] InvalidProductDimensionType = 75,
        /// <summary>
        /// Bidding categories do not form a valid path in the Shopping bidding
        /// category taxonomy.
        /// </summary>
        [pbr::OriginalName("INVALID_PRODUCT_BIDDING_CATEGORY")] InvalidProductBiddingCategory = 76,
        /// <summary>
        /// ShoppingSetting must be added to the campaign before ProductScope
        /// criteria can be added.
        /// </summary>
        [pbr::OriginalName("MISSING_SHOPPING_SETTING")] MissingShoppingSetting = 77,
        /// <summary>
        /// Matching function is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_MATCHING_FUNCTION")] InvalidMatchingFunction = 78,
        /// <summary>
        /// Filter parameters not allowed for location groups targeting.
        /// </summary>
        [pbr::OriginalName("LOCATION_FILTER_NOT_ALLOWED")] LocationFilterNotAllowed = 79,
        /// <summary>
        /// Given location filter parameter is invalid for location groups targeting.
        /// </summary>
        [pbr::OriginalName("LOCATION_FILTER_INVALID")] LocationFilterInvalid = 80,
        /// <summary>
        /// Criteria type cannot be associated with a campaign and its ad group(s)
        /// simultaneously.
        /// </summary>
        [pbr::OriginalName("CANNOT_ATTACH_CRITERIA_AT_CAMPAIGN_AND_ADGROUP")] CannotAttachCriteriaAtCampaignAndAdgroup = 81,
        /// <summary>
        /// Range represented by hotel length of stay's min nights and max nights
        /// overlaps with an existing criterion.
        /// </summary>
        [pbr::OriginalName("HOTEL_LENGTH_OF_STAY_OVERLAPS_WITH_EXISTING_CRITERION")] HotelLengthOfStayOverlapsWithExistingCriterion = 82,
        /// <summary>
        /// Range represented by hotel advance booking window's min days and max days
        /// overlaps with an existing criterion.
        /// </summary>
        [pbr::OriginalName("HOTEL_ADVANCE_BOOKING_WINDOW_OVERLAPS_WITH_EXISTING_CRITERION")] HotelAdvanceBookingWindowOverlapsWithExistingCriterion = 83,
        /// <summary>
        /// The field is not allowed to be set when the negative field is set to
        /// true, e.g. we don't allow bids in negative ad group or campaign criteria.
        /// </summary>
        [pbr::OriginalName("FIELD_INCOMPATIBLE_WITH_NEGATIVE_TARGETING")] FieldIncompatibleWithNegativeTargeting = 84,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
