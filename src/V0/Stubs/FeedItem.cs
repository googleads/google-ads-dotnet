// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v0/resources/feed_item.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V0.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v0/resources/feed_item.proto</summary>
  public static partial class FeedItemReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v0/resources/feed_item.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FeedItemReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFnb29nbGUvYWRzL2dvb2dsZWFkcy92MC9yZXNvdXJjZXMvZmVlZF9pdGVt",
            "LnByb3RvEiFnb29nbGUuYWRzLmdvb2dsZWFkcy52MC5yZXNvdXJjZXMaNWdv",
            "b2dsZS9hZHMvZ29vZ2xlYWRzL3YwL2NvbW1vbi9jdXN0b21fcGFyYW1ldGVy",
            "LnByb3RvGjBnb29nbGUvYWRzL2dvb2dsZWFkcy92MC9jb21tb24vZmVlZF9j",
            "b21tb24ucHJvdG8aNGdvb2dsZS9hZHMvZ29vZ2xlYWRzL3YwL2VudW1zL2Zl",
            "ZWRfaXRlbV9zdGF0dXMucHJvdG8aPWdvb2dsZS9hZHMvZ29vZ2xlYWRzL3Yw",
            "L2VudW1zL2dlb190YXJnZXRpbmdfcmVzdHJpY3Rpb24ucHJvdG8aHmdvb2ds",
            "ZS9wcm90b2J1Zi93cmFwcGVycy5wcm90byLQBAoIRmVlZEl0ZW0SFQoNcmVz",
            "b3VyY2VfbmFtZRgBIAEoCRIqCgRmZWVkGAIgASgLMhwuZ29vZ2xlLnByb3Rv",
            "YnVmLlN0cmluZ1ZhbHVlEicKAmlkGAMgASgLMhsuZ29vZ2xlLnByb3RvYnVm",
            "LkludDY0VmFsdWUSNQoPc3RhcnRfZGF0ZV90aW1lGAQgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlEjMKDWVuZF9kYXRlX3RpbWUYBSABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSUwoQYXR0cmlidXRlX3Zh",
            "bHVlcxgGIAMoCzI5Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYwLnJlc291cmNl",
            "cy5GZWVkSXRlbUF0dHJpYnV0ZVZhbHVlEnUKGWdlb190YXJnZXRpbmdfcmVz",
            "dHJpY3Rpb24YByABKA4yUi5nb29nbGUuYWRzLmdvb2dsZWFkcy52MC5lbnVt",
            "cy5HZW9UYXJnZXRpbmdSZXN0cmljdGlvbkVudW0uR2VvVGFyZ2V0aW5nUmVz",
            "dHJpY3Rpb24STgoVdXJsX2N1c3RvbV9wYXJhbWV0ZXJzGAggAygLMi8uZ29v",
            "Z2xlLmFkcy5nb29nbGVhZHMudjAuY29tbW9uLkN1c3RvbVBhcmFtZXRlchJQ",
            "CgZzdGF0dXMYCSABKA4yQC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MC5lbnVt",
            "cy5GZWVkSXRlbVN0YXR1c0VudW0uRmVlZEl0ZW1TdGF0dXMirgQKFkZlZWRJ",
            "dGVtQXR0cmlidXRlVmFsdWUSNgoRZmVlZF9hdHRyaWJ1dGVfaWQYASABKAsy",
            "Gy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZRIyCg1pbnRlZ2VyX3ZhbHVl",
            "GAIgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSMQoNYm9vbGVh",
            "bl92YWx1ZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUSMgoM",
            "c3RyaW5nX3ZhbHVlGAQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1Zh",
            "bHVlEjIKDGRvdWJsZV92YWx1ZRgFIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5E",
            "b3VibGVWYWx1ZRI6CgtwcmljZV92YWx1ZRgGIAEoCzIlLmdvb2dsZS5hZHMu",
            "Z29vZ2xlYWRzLnYwLmNvbW1vbi5QcmljZRIzCg5pbnRlZ2VyX3ZhbHVlcxgH",
            "IAMoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEjIKDmJvb2xlYW5f",
            "dmFsdWVzGAggAygLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRIzCg1z",
            "dHJpbmdfdmFsdWVzGAkgAygLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1Zh",
            "bHVlEjMKDWRvdWJsZV92YWx1ZXMYCiADKAsyHC5nb29nbGUucHJvdG9idWYu",
            "RG91YmxlVmFsdWVC0gEKJWNvbS5nb29nbGUuYWRzLmdvb2dsZWFkcy52MC5y",
            "ZXNvdXJjZXNCDUZlZWRJdGVtUHJvdG9QAVpKZ29vZ2xlLmdvbGFuZy5vcmcv",
            "Z2VucHJvdG8vZ29vZ2xlYXBpcy9hZHMvZ29vZ2xlYWRzL3YwL3Jlc291cmNl",
            "cztyZXNvdXJjZXOiAgNHQUGqAiFHb29nbGUuQWRzLkdvb2dsZUFkcy5WMC5S",
            "ZXNvdXJjZXPKAiFHb29nbGVcQWRzXEdvb2dsZUFkc1xWMFxSZXNvdXJjZXNi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V0.Common.CustomParameterReflection.Descriptor, global::Google.Ads.GoogleAds.V0.Common.FeedCommonReflection.Descriptor, global::Google.Ads.GoogleAds.V0.Enums.FeedItemStatusReflection.Descriptor, global::Google.Ads.GoogleAds.V0.Enums.GeoTargetingRestrictionReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Resources.FeedItem), global::Google.Ads.GoogleAds.V0.Resources.FeedItem.Parser, new[]{ "ResourceName", "Feed", "Id", "StartDateTime", "EndDateTime", "AttributeValues", "GeoTargetingRestriction", "UrlCustomParameters", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Resources.FeedItemAttributeValue), global::Google.Ads.GoogleAds.V0.Resources.FeedItemAttributeValue.Parser, new[]{ "FeedAttributeId", "IntegerValue", "BooleanValue", "StringValue", "DoubleValue", "PriceValue", "IntegerValues", "BooleanValues", "StringValues", "DoubleValues" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A feed item.
  /// </summary>
  public sealed partial class FeedItem : pb::IMessage<FeedItem> {
    private static readonly pb::MessageParser<FeedItem> _parser = new pb::MessageParser<FeedItem>(() => new FeedItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Resources.FeedItemReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItem(FeedItem other) : this() {
      resourceName_ = other.resourceName_;
      Feed = other.Feed;
      Id = other.Id;
      StartDateTime = other.StartDateTime;
      EndDateTime = other.EndDateTime;
      attributeValues_ = other.attributeValues_.Clone();
      geoTargetingRestriction_ = other.geoTargetingRestriction_;
      urlCustomParameters_ = other.urlCustomParameters_.Clone();
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItem Clone() {
      return new FeedItem(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// The resource name of the feed item.
    /// Feed item resource names have the form:
    ///
    /// `customers/{customer_id}/feedItems/{feed_id}_{feed_item_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "feed" field.</summary>
    public const int FeedFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_feed_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string feed_;
    /// <summary>
    /// The feed to which this feed item belongs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Feed {
      get { return feed_; }
      set {
        feed_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private static readonly pb::FieldCodec<long?> _single_id_codec = pb::FieldCodec.ForStructWrapper<long>(26);
    private long? id_;
    /// <summary>
    /// The ID of this feed item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "start_date_time" field.</summary>
    public const int StartDateTimeFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_startDateTime_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string startDateTime_;
    /// <summary>
    /// Start time in which this feed item is effective and can begin serving.
    /// The format is "YYYY-MM-DD HH:MM:SS".
    /// Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartDateTime {
      get { return startDateTime_; }
      set {
        startDateTime_ = value;
      }
    }

    /// <summary>Field number for the "end_date_time" field.</summary>
    public const int EndDateTimeFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_endDateTime_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string endDateTime_;
    /// <summary>
    /// End time in which this feed item is no longer effective and will stop
    /// The format is "YYYY-MM-DD HH:MM:SS".
    /// Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndDateTime {
      get { return endDateTime_; }
      set {
        endDateTime_ = value;
      }
    }

    /// <summary>Field number for the "attribute_values" field.</summary>
    public const int AttributeValuesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V0.Resources.FeedItemAttributeValue> _repeated_attributeValues_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Ads.GoogleAds.V0.Resources.FeedItemAttributeValue.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V0.Resources.FeedItemAttributeValue> attributeValues_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V0.Resources.FeedItemAttributeValue>();
    /// <summary>
    /// The feed item's attribute values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V0.Resources.FeedItemAttributeValue> AttributeValues {
      get { return attributeValues_; }
    }

    /// <summary>Field number for the "geo_targeting_restriction" field.</summary>
    public const int GeoTargetingRestrictionFieldNumber = 7;
    private global::Google.Ads.GoogleAds.V0.Enums.GeoTargetingRestrictionEnum.Types.GeoTargetingRestriction geoTargetingRestriction_ = 0;
    /// <summary>
    /// Geo targeting restriction specifies the type of location that can be used
    /// for targeting.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Enums.GeoTargetingRestrictionEnum.Types.GeoTargetingRestriction GeoTargetingRestriction {
      get { return geoTargetingRestriction_; }
      set {
        geoTargetingRestriction_ = value;
      }
    }

    /// <summary>Field number for the "url_custom_parameters" field.</summary>
    public const int UrlCustomParametersFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V0.Common.CustomParameter> _repeated_urlCustomParameters_codec
        = pb::FieldCodec.ForMessage(66, global::Google.Ads.GoogleAds.V0.Common.CustomParameter.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V0.Common.CustomParameter> urlCustomParameters_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V0.Common.CustomParameter>();
    /// <summary>
    /// The list of mappings used to substitute custom parameter tags in a
    /// `tracking_url_template`, `final_urls`, or `mobile_final_urls`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V0.Common.CustomParameter> UrlCustomParameters {
      get { return urlCustomParameters_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 9;
    private global::Google.Ads.GoogleAds.V0.Enums.FeedItemStatusEnum.Types.FeedItemStatus status_ = 0;
    /// <summary>
    /// Status of the feed item.
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Enums.FeedItemStatusEnum.Types.FeedItemStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (Feed != other.Feed) return false;
      if (Id != other.Id) return false;
      if (StartDateTime != other.StartDateTime) return false;
      if (EndDateTime != other.EndDateTime) return false;
      if(!attributeValues_.Equals(other.attributeValues_)) return false;
      if (GeoTargetingRestriction != other.GeoTargetingRestriction) return false;
      if(!urlCustomParameters_.Equals(other.urlCustomParameters_)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (feed_ != null) hash ^= Feed.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (startDateTime_ != null) hash ^= StartDateTime.GetHashCode();
      if (endDateTime_ != null) hash ^= EndDateTime.GetHashCode();
      hash ^= attributeValues_.GetHashCode();
      if (GeoTargetingRestriction != 0) hash ^= GeoTargetingRestriction.GetHashCode();
      hash ^= urlCustomParameters_.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (feed_ != null) {
        _single_feed_codec.WriteTagAndValue(output, Feed);
      }
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (startDateTime_ != null) {
        _single_startDateTime_codec.WriteTagAndValue(output, StartDateTime);
      }
      if (endDateTime_ != null) {
        _single_endDateTime_codec.WriteTagAndValue(output, EndDateTime);
      }
      attributeValues_.WriteTo(output, _repeated_attributeValues_codec);
      if (GeoTargetingRestriction != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) GeoTargetingRestriction);
      }
      urlCustomParameters_.WriteTo(output, _repeated_urlCustomParameters_codec);
      if (Status != 0) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (feed_ != null) {
        size += _single_feed_codec.CalculateSizeWithTag(Feed);
      }
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (startDateTime_ != null) {
        size += _single_startDateTime_codec.CalculateSizeWithTag(StartDateTime);
      }
      if (endDateTime_ != null) {
        size += _single_endDateTime_codec.CalculateSizeWithTag(EndDateTime);
      }
      size += attributeValues_.CalculateSize(_repeated_attributeValues_codec);
      if (GeoTargetingRestriction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GeoTargetingRestriction);
      }
      size += urlCustomParameters_.CalculateSize(_repeated_urlCustomParameters_codec);
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedItem other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.feed_ != null) {
        if (feed_ == null || other.Feed != "") {
          Feed = other.Feed;
        }
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0L) {
          Id = other.Id;
        }
      }
      if (other.startDateTime_ != null) {
        if (startDateTime_ == null || other.StartDateTime != "") {
          StartDateTime = other.StartDateTime;
        }
      }
      if (other.endDateTime_ != null) {
        if (endDateTime_ == null || other.EndDateTime != "") {
          EndDateTime = other.EndDateTime;
        }
      }
      attributeValues_.Add(other.attributeValues_);
      if (other.GeoTargetingRestriction != 0) {
        GeoTargetingRestriction = other.GeoTargetingRestriction;
      }
      urlCustomParameters_.Add(other.urlCustomParameters_);
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 18: {
            string value = _single_feed_codec.Read(input);
            if (feed_ == null || value != "") {
              Feed = value;
            }
            break;
          }
          case 26: {
            long? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0L) {
              Id = value;
            }
            break;
          }
          case 34: {
            string value = _single_startDateTime_codec.Read(input);
            if (startDateTime_ == null || value != "") {
              StartDateTime = value;
            }
            break;
          }
          case 42: {
            string value = _single_endDateTime_codec.Read(input);
            if (endDateTime_ == null || value != "") {
              EndDateTime = value;
            }
            break;
          }
          case 50: {
            attributeValues_.AddEntriesFrom(input, _repeated_attributeValues_codec);
            break;
          }
          case 56: {
            geoTargetingRestriction_ = (global::Google.Ads.GoogleAds.V0.Enums.GeoTargetingRestrictionEnum.Types.GeoTargetingRestriction) input.ReadEnum();
            break;
          }
          case 66: {
            urlCustomParameters_.AddEntriesFrom(input, _repeated_urlCustomParameters_codec);
            break;
          }
          case 72: {
            status_ = (global::Google.Ads.GoogleAds.V0.Enums.FeedItemStatusEnum.Types.FeedItemStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A feed item attribute value.
  /// </summary>
  public sealed partial class FeedItemAttributeValue : pb::IMessage<FeedItemAttributeValue> {
    private static readonly pb::MessageParser<FeedItemAttributeValue> _parser = new pb::MessageParser<FeedItemAttributeValue>(() => new FeedItemAttributeValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedItemAttributeValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Resources.FeedItemReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItemAttributeValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItemAttributeValue(FeedItemAttributeValue other) : this() {
      FeedAttributeId = other.FeedAttributeId;
      IntegerValue = other.IntegerValue;
      BooleanValue = other.BooleanValue;
      StringValue = other.StringValue;
      DoubleValue = other.DoubleValue;
      priceValue_ = other.priceValue_ != null ? other.priceValue_.Clone() : null;
      integerValues_ = other.integerValues_.Clone();
      booleanValues_ = other.booleanValues_.Clone();
      stringValues_ = other.stringValues_.Clone();
      doubleValues_ = other.doubleValues_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItemAttributeValue Clone() {
      return new FeedItemAttributeValue(this);
    }

    /// <summary>Field number for the "feed_attribute_id" field.</summary>
    public const int FeedAttributeIdFieldNumber = 1;
    private static readonly pb::FieldCodec<long?> _single_feedAttributeId_codec = pb::FieldCodec.ForStructWrapper<long>(10);
    private long? feedAttributeId_;
    /// <summary>
    /// Id of the feed attribute for which the value is associated with.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? FeedAttributeId {
      get { return feedAttributeId_; }
      set {
        feedAttributeId_ = value;
      }
    }

    /// <summary>Field number for the "integer_value" field.</summary>
    public const int IntegerValueFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_integerValue_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? integerValue_;
    /// <summary>
    /// Int64 value. Should be set if feed_attribute_id refers to a feed attribute
    /// of type INT64.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? IntegerValue {
      get { return integerValue_; }
      set {
        integerValue_ = value;
      }
    }

    /// <summary>Field number for the "boolean_value" field.</summary>
    public const int BooleanValueFieldNumber = 3;
    private static readonly pb::FieldCodec<bool?> _single_booleanValue_codec = pb::FieldCodec.ForStructWrapper<bool>(26);
    private bool? booleanValue_;
    /// <summary>
    /// Bool value. Should be set if feed_attribute_id refers to a feed attribute
    /// of type BOOLEAN.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? BooleanValue {
      get { return booleanValue_; }
      set {
        booleanValue_ = value;
      }
    }

    /// <summary>Field number for the "string_value" field.</summary>
    public const int StringValueFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_stringValue_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string stringValue_;
    /// <summary>
    /// String value. Should be set if feed_attribute_id refers to a feed attribute
    /// of type STRING, URL or DATE_TIME.
    /// For STRING the maximum length is 1500 characters. For URL the maximum
    /// length is 2076 characters. For DATE_TIME the format of the string must
    /// be the same as start and end time for the feed item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StringValue {
      get { return stringValue_; }
      set {
        stringValue_ = value;
      }
    }

    /// <summary>Field number for the "double_value" field.</summary>
    public const int DoubleValueFieldNumber = 5;
    private static readonly pb::FieldCodec<double?> _single_doubleValue_codec = pb::FieldCodec.ForStructWrapper<double>(42);
    private double? doubleValue_;
    /// <summary>
    /// Double value. Should be set if feed_attribute_id refers to a feed attribute
    /// of type DOUBLE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? DoubleValue {
      get { return doubleValue_; }
      set {
        doubleValue_ = value;
      }
    }

    /// <summary>Field number for the "price_value" field.</summary>
    public const int PriceValueFieldNumber = 6;
    private global::Google.Ads.GoogleAds.V0.Common.Price priceValue_;
    /// <summary>
    /// Price value. Should be set if feed_attribute_id refers to a feed attribute
    /// of type PRICE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Common.Price PriceValue {
      get { return priceValue_; }
      set {
        priceValue_ = value;
      }
    }

    /// <summary>Field number for the "integer_values" field.</summary>
    public const int IntegerValuesFieldNumber = 7;
    private static readonly pb::FieldCodec<long?> _repeated_integerValues_codec
        = pb::FieldCodec.ForStructWrapper<long>(58);
    private readonly pbc::RepeatedField<long?> integerValues_ = new pbc::RepeatedField<long?>();
    /// <summary>
    /// Repeated int64 value. Should be set if feed_attribute_id refers to a feed
    /// attribute of type INT64_LIST.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long?> IntegerValues {
      get { return integerValues_; }
    }

    /// <summary>Field number for the "boolean_values" field.</summary>
    public const int BooleanValuesFieldNumber = 8;
    private static readonly pb::FieldCodec<bool?> _repeated_booleanValues_codec
        = pb::FieldCodec.ForStructWrapper<bool>(66);
    private readonly pbc::RepeatedField<bool?> booleanValues_ = new pbc::RepeatedField<bool?>();
    /// <summary>
    /// Repeated bool value. Should be set if feed_attribute_id refers to a feed
    /// attribute of type BOOLEAN_LIST.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool?> BooleanValues {
      get { return booleanValues_; }
    }

    /// <summary>Field number for the "string_values" field.</summary>
    public const int StringValuesFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_stringValues_codec
        = pb::FieldCodec.ForClassWrapper<string>(74);
    private readonly pbc::RepeatedField<string> stringValues_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Repeated string value. Should be set if feed_attribute_id refers to a feed
    /// attribute of type STRING_LIST, URL_LIST or DATE_TIME_LIST.
    /// For STRING_LIST and URL_LIST the total size of the list in bytes may not
    /// exceed 3000. For DATE_TIME_LIST the number of elements may not exceed 200.
    ///
    /// For STRING_LIST the maximum length of each string element is 1500
    /// characters. For URL_LIST the maximum length is 2076 characters. For
    /// DATE_TIME the format of the string must be the same as start and end time
    /// for the feed item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> StringValues {
      get { return stringValues_; }
    }

    /// <summary>Field number for the "double_values" field.</summary>
    public const int DoubleValuesFieldNumber = 10;
    private static readonly pb::FieldCodec<double?> _repeated_doubleValues_codec
        = pb::FieldCodec.ForStructWrapper<double>(82);
    private readonly pbc::RepeatedField<double?> doubleValues_ = new pbc::RepeatedField<double?>();
    /// <summary>
    /// Repeated double value. Should be set if feed_attribute_id refers to a feed
    /// attribute of type DOUBLE_LIST.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double?> DoubleValues {
      get { return doubleValues_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedItemAttributeValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedItemAttributeValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FeedAttributeId != other.FeedAttributeId) return false;
      if (IntegerValue != other.IntegerValue) return false;
      if (BooleanValue != other.BooleanValue) return false;
      if (StringValue != other.StringValue) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(DoubleValue, other.DoubleValue)) return false;
      if (!object.Equals(PriceValue, other.PriceValue)) return false;
      if(!integerValues_.Equals(other.integerValues_)) return false;
      if(!booleanValues_.Equals(other.booleanValues_)) return false;
      if(!stringValues_.Equals(other.stringValues_)) return false;
      if(!doubleValues_.Equals(other.doubleValues_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (feedAttributeId_ != null) hash ^= FeedAttributeId.GetHashCode();
      if (integerValue_ != null) hash ^= IntegerValue.GetHashCode();
      if (booleanValue_ != null) hash ^= BooleanValue.GetHashCode();
      if (stringValue_ != null) hash ^= StringValue.GetHashCode();
      if (doubleValue_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(DoubleValue);
      if (priceValue_ != null) hash ^= PriceValue.GetHashCode();
      hash ^= integerValues_.GetHashCode();
      hash ^= booleanValues_.GetHashCode();
      hash ^= stringValues_.GetHashCode();
      hash ^= doubleValues_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (feedAttributeId_ != null) {
        _single_feedAttributeId_codec.WriteTagAndValue(output, FeedAttributeId);
      }
      if (integerValue_ != null) {
        _single_integerValue_codec.WriteTagAndValue(output, IntegerValue);
      }
      if (booleanValue_ != null) {
        _single_booleanValue_codec.WriteTagAndValue(output, BooleanValue);
      }
      if (stringValue_ != null) {
        _single_stringValue_codec.WriteTagAndValue(output, StringValue);
      }
      if (doubleValue_ != null) {
        _single_doubleValue_codec.WriteTagAndValue(output, DoubleValue);
      }
      if (priceValue_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PriceValue);
      }
      integerValues_.WriteTo(output, _repeated_integerValues_codec);
      booleanValues_.WriteTo(output, _repeated_booleanValues_codec);
      stringValues_.WriteTo(output, _repeated_stringValues_codec);
      doubleValues_.WriteTo(output, _repeated_doubleValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (feedAttributeId_ != null) {
        size += _single_feedAttributeId_codec.CalculateSizeWithTag(FeedAttributeId);
      }
      if (integerValue_ != null) {
        size += _single_integerValue_codec.CalculateSizeWithTag(IntegerValue);
      }
      if (booleanValue_ != null) {
        size += _single_booleanValue_codec.CalculateSizeWithTag(BooleanValue);
      }
      if (stringValue_ != null) {
        size += _single_stringValue_codec.CalculateSizeWithTag(StringValue);
      }
      if (doubleValue_ != null) {
        size += _single_doubleValue_codec.CalculateSizeWithTag(DoubleValue);
      }
      if (priceValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PriceValue);
      }
      size += integerValues_.CalculateSize(_repeated_integerValues_codec);
      size += booleanValues_.CalculateSize(_repeated_booleanValues_codec);
      size += stringValues_.CalculateSize(_repeated_stringValues_codec);
      size += doubleValues_.CalculateSize(_repeated_doubleValues_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedItemAttributeValue other) {
      if (other == null) {
        return;
      }
      if (other.feedAttributeId_ != null) {
        if (feedAttributeId_ == null || other.FeedAttributeId != 0L) {
          FeedAttributeId = other.FeedAttributeId;
        }
      }
      if (other.integerValue_ != null) {
        if (integerValue_ == null || other.IntegerValue != 0L) {
          IntegerValue = other.IntegerValue;
        }
      }
      if (other.booleanValue_ != null) {
        if (booleanValue_ == null || other.BooleanValue != false) {
          BooleanValue = other.BooleanValue;
        }
      }
      if (other.stringValue_ != null) {
        if (stringValue_ == null || other.StringValue != "") {
          StringValue = other.StringValue;
        }
      }
      if (other.doubleValue_ != null) {
        if (doubleValue_ == null || other.DoubleValue != 0D) {
          DoubleValue = other.DoubleValue;
        }
      }
      if (other.priceValue_ != null) {
        if (priceValue_ == null) {
          priceValue_ = new global::Google.Ads.GoogleAds.V0.Common.Price();
        }
        PriceValue.MergeFrom(other.PriceValue);
      }
      integerValues_.Add(other.integerValues_);
      booleanValues_.Add(other.booleanValues_);
      stringValues_.Add(other.stringValues_);
      doubleValues_.Add(other.doubleValues_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            long? value = _single_feedAttributeId_codec.Read(input);
            if (feedAttributeId_ == null || value != 0L) {
              FeedAttributeId = value;
            }
            break;
          }
          case 18: {
            long? value = _single_integerValue_codec.Read(input);
            if (integerValue_ == null || value != 0L) {
              IntegerValue = value;
            }
            break;
          }
          case 26: {
            bool? value = _single_booleanValue_codec.Read(input);
            if (booleanValue_ == null || value != false) {
              BooleanValue = value;
            }
            break;
          }
          case 34: {
            string value = _single_stringValue_codec.Read(input);
            if (stringValue_ == null || value != "") {
              StringValue = value;
            }
            break;
          }
          case 42: {
            double? value = _single_doubleValue_codec.Read(input);
            if (doubleValue_ == null || value != 0D) {
              DoubleValue = value;
            }
            break;
          }
          case 50: {
            if (priceValue_ == null) {
              priceValue_ = new global::Google.Ads.GoogleAds.V0.Common.Price();
            }
            input.ReadMessage(priceValue_);
            break;
          }
          case 58: {
            integerValues_.AddEntriesFrom(input, _repeated_integerValues_codec);
            break;
          }
          case 66: {
            booleanValues_.AddEntriesFrom(input, _repeated_booleanValues_codec);
            break;
          }
          case 74: {
            stringValues_.AddEntriesFrom(input, _repeated_stringValues_codec);
            break;
          }
          case 82: {
            doubleValues_.AddEntriesFrom(input, _repeated_doubleValues_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
