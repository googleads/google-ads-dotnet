// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v0/resources/media_file.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V0.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v0/resources/media_file.proto</summary>
  public static partial class MediaFileReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v0/resources/media_file.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MediaFileReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJnb29nbGUvYWRzL2dvb2dsZWFkcy92MC9yZXNvdXJjZXMvbWVkaWFfZmls",
            "ZS5wcm90bxIhZ29vZ2xlLmFkcy5nb29nbGVhZHMudjAucmVzb3VyY2VzGi5n",
            "b29nbGUvYWRzL2dvb2dsZWFkcy92MC9lbnVtcy9tZWRpYV90eXBlLnByb3Rv",
            "Gi1nb29nbGUvYWRzL2dvb2dsZWFkcy92MC9lbnVtcy9taW1lX3R5cGUucHJv",
            "dG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90byL9BAoJTWVkaWFG",
            "aWxlEhUKDXJlc291cmNlX25hbWUYASABKAkSJwoCaWQYAiABKAsyGy5nb29n",
            "bGUucHJvdG9idWYuSW50NjRWYWx1ZRJECgR0eXBlGAUgASgOMjYuZ29vZ2xl",
            "LmFkcy5nb29nbGVhZHMudjAuZW51bXMuTWVkaWFUeXBlRW51bS5NZWRpYVR5",
            "cGUSRwoJbWltZV90eXBlGAYgASgOMjQuZ29vZ2xlLmFkcy5nb29nbGVhZHMu",
            "djAuZW51bXMuTWltZVR5cGVFbnVtLk1pbWVUeXBlEjAKCnNvdXJjZV91cmwY",
            "ByABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSKgoEbmFtZRgI",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIuCglmaWxlX3Np",
            "emUYCSABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZRI+CgVpbWFn",
            "ZRgDIAEoCzItLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYwLnJlc291cmNlcy5N",
            "ZWRpYUltYWdlSAASRgoMbWVkaWFfYnVuZGxlGAQgASgLMi4uZ29vZ2xlLmFk",
            "cy5nb29nbGVhZHMudjAucmVzb3VyY2VzLk1lZGlhQnVuZGxlSAASPgoFYXVk",
            "aW8YCiABKAsyLS5nb29nbGUuYWRzLmdvb2dsZWFkcy52MC5yZXNvdXJjZXMu",
            "TWVkaWFBdWRpb0gAEj4KBXZpZGVvGAsgASgLMi0uZ29vZ2xlLmFkcy5nb29n",
            "bGVhZHMudjAucmVzb3VyY2VzLk1lZGlhVmlkZW9IAEILCgltZWRpYXR5cGUi",
            "NwoKTWVkaWFJbWFnZRIpCgRkYXRhGAEgASgLMhsuZ29vZ2xlLnByb3RvYnVm",
            "LkJ5dGVzVmFsdWUiOAoLTWVkaWFCdW5kbGUSKQoEZGF0YRgBIAEoCzIbLmdv",
            "b2dsZS5wcm90b2J1Zi5CeXRlc1ZhbHVlIkUKCk1lZGlhQXVkaW8SNwoSYWRf",
            "ZHVyYXRpb25fbWlsbGlzGAEgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0",
            "VmFsdWUi6QEKCk1lZGlhVmlkZW8SNwoSYWRfZHVyYXRpb25fbWlsbGlzGAEg",
            "ASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSNgoQeW91dHViZV92",
            "aWRlb19pZBgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI5",
            "ChNhZHZlcnRpc2luZ19pZF9jb2RlGAMgASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cmluZ1ZhbHVlEi8KCWlzY2lfY29kZRgEIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZUL7AQolY29tLmdvb2dsZS5hZHMuZ29vZ2xlYWRz",
            "LnYwLnJlc291cmNlc0IOTWVkaWFGaWxlUHJvdG9QAVpKZ29vZ2xlLmdvbGFu",
            "Zy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9hZHMvZ29vZ2xlYWRzL3YwL3Jl",
            "c291cmNlcztyZXNvdXJjZXOiAgNHQUGqAiFHb29nbGUuQWRzLkdvb2dsZUFk",
            "cy5WMC5SZXNvdXJjZXPKAiFHb29nbGVcQWRzXEdvb2dsZUFkc1xWMFxSZXNv",
            "dXJjZXPqAiVHb29nbGU6OkFkczo6R29vZ2xlQWRzOjpWMDo6UmVzb3VyY2Vz",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V0.Enums.MediaTypeReflection.Descriptor, global::Google.Ads.GoogleAds.V0.Enums.MimeTypeReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Resources.MediaFile), global::Google.Ads.GoogleAds.V0.Resources.MediaFile.Parser, new[]{ "ResourceName", "Id", "Type", "MimeType", "SourceUrl", "Name", "FileSize", "Image", "MediaBundle", "Audio", "Video" }, new[]{ "Mediatype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Resources.MediaImage), global::Google.Ads.GoogleAds.V0.Resources.MediaImage.Parser, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Resources.MediaBundle), global::Google.Ads.GoogleAds.V0.Resources.MediaBundle.Parser, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Resources.MediaAudio), global::Google.Ads.GoogleAds.V0.Resources.MediaAudio.Parser, new[]{ "AdDurationMillis" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Resources.MediaVideo), global::Google.Ads.GoogleAds.V0.Resources.MediaVideo.Parser, new[]{ "AdDurationMillis", "YoutubeVideoId", "AdvertisingIdCode", "IsciCode" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A media file.
  /// </summary>
  public sealed partial class MediaFile : pb::IMessage<MediaFile> {
    private static readonly pb::MessageParser<MediaFile> _parser = new pb::MessageParser<MediaFile>(() => new MediaFile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MediaFile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Resources.MediaFileReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaFile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaFile(MediaFile other) : this() {
      resourceName_ = other.resourceName_;
      Id = other.Id;
      type_ = other.type_;
      mimeType_ = other.mimeType_;
      SourceUrl = other.SourceUrl;
      Name = other.Name;
      FileSize = other.FileSize;
      switch (other.MediatypeCase) {
        case MediatypeOneofCase.Image:
          Image = other.Image.Clone();
          break;
        case MediatypeOneofCase.MediaBundle:
          MediaBundle = other.MediaBundle.Clone();
          break;
        case MediatypeOneofCase.Audio:
          Audio = other.Audio.Clone();
          break;
        case MediatypeOneofCase.Video:
          Video = other.Video.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaFile Clone() {
      return new MediaFile(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// The resource name of the media file.
    /// Media file resource names have the form:
    ///
    /// `customers/{customer_id}/mediaFiles/{media_file_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_id_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? id_;
    /// <summary>
    /// The ID of the media file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::Google.Ads.GoogleAds.V0.Enums.MediaTypeEnum.Types.MediaType type_ = 0;
    /// <summary>
    /// Type of the media file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Enums.MediaTypeEnum.Types.MediaType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "mime_type" field.</summary>
    public const int MimeTypeFieldNumber = 6;
    private global::Google.Ads.GoogleAds.V0.Enums.MimeTypeEnum.Types.MimeType mimeType_ = 0;
    /// <summary>
    /// The mime type of the media file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Enums.MimeTypeEnum.Types.MimeType MimeType {
      get { return mimeType_; }
      set {
        mimeType_ = value;
      }
    }

    /// <summary>Field number for the "source_url" field.</summary>
    public const int SourceUrlFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_sourceUrl_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string sourceUrl_;
    /// <summary>
    /// The URL of where the original media file was downloaded from (or a file
    /// name).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceUrl {
      get { return sourceUrl_; }
      set {
        sourceUrl_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string name_;
    /// <summary>
    /// The name of the media file. The name can be used by clients to help
    /// identify previously uploaded media.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "file_size" field.</summary>
    public const int FileSizeFieldNumber = 9;
    private static readonly pb::FieldCodec<long?> _single_fileSize_codec = pb::FieldCodec.ForStructWrapper<long>(74);
    private long? fileSize_;
    /// <summary>
    /// The size of the media file in bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? FileSize {
      get { return fileSize_; }
      set {
        fileSize_ = value;
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 3;
    /// <summary>
    /// Encapsulates an Image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Resources.MediaImage Image {
      get { return mediatypeCase_ == MediatypeOneofCase.Image ? (global::Google.Ads.GoogleAds.V0.Resources.MediaImage) mediatype_ : null; }
      set {
        mediatype_ = value;
        mediatypeCase_ = value == null ? MediatypeOneofCase.None : MediatypeOneofCase.Image;
      }
    }

    /// <summary>Field number for the "media_bundle" field.</summary>
    public const int MediaBundleFieldNumber = 4;
    /// <summary>
    /// A ZIP archive media the content of which contains HTML5 assets.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Resources.MediaBundle MediaBundle {
      get { return mediatypeCase_ == MediatypeOneofCase.MediaBundle ? (global::Google.Ads.GoogleAds.V0.Resources.MediaBundle) mediatype_ : null; }
      set {
        mediatype_ = value;
        mediatypeCase_ = value == null ? MediatypeOneofCase.None : MediatypeOneofCase.MediaBundle;
      }
    }

    /// <summary>Field number for the "audio" field.</summary>
    public const int AudioFieldNumber = 10;
    /// <summary>
    /// Encapsulates an Audio.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Resources.MediaAudio Audio {
      get { return mediatypeCase_ == MediatypeOneofCase.Audio ? (global::Google.Ads.GoogleAds.V0.Resources.MediaAudio) mediatype_ : null; }
      set {
        mediatype_ = value;
        mediatypeCase_ = value == null ? MediatypeOneofCase.None : MediatypeOneofCase.Audio;
      }
    }

    /// <summary>Field number for the "video" field.</summary>
    public const int VideoFieldNumber = 11;
    /// <summary>
    /// Encapsulates a Video.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Resources.MediaVideo Video {
      get { return mediatypeCase_ == MediatypeOneofCase.Video ? (global::Google.Ads.GoogleAds.V0.Resources.MediaVideo) mediatype_ : null; }
      set {
        mediatype_ = value;
        mediatypeCase_ = value == null ? MediatypeOneofCase.None : MediatypeOneofCase.Video;
      }
    }

    private object mediatype_;
    /// <summary>Enum of possible cases for the "mediatype" oneof.</summary>
    public enum MediatypeOneofCase {
      None = 0,
      Image = 3,
      MediaBundle = 4,
      Audio = 10,
      Video = 11,
    }
    private MediatypeOneofCase mediatypeCase_ = MediatypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediatypeOneofCase MediatypeCase {
      get { return mediatypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMediatype() {
      mediatypeCase_ = MediatypeOneofCase.None;
      mediatype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MediaFile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MediaFile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (MimeType != other.MimeType) return false;
      if (SourceUrl != other.SourceUrl) return false;
      if (Name != other.Name) return false;
      if (FileSize != other.FileSize) return false;
      if (!object.Equals(Image, other.Image)) return false;
      if (!object.Equals(MediaBundle, other.MediaBundle)) return false;
      if (!object.Equals(Audio, other.Audio)) return false;
      if (!object.Equals(Video, other.Video)) return false;
      if (MediatypeCase != other.MediatypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (MimeType != 0) hash ^= MimeType.GetHashCode();
      if (sourceUrl_ != null) hash ^= SourceUrl.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (fileSize_ != null) hash ^= FileSize.GetHashCode();
      if (mediatypeCase_ == MediatypeOneofCase.Image) hash ^= Image.GetHashCode();
      if (mediatypeCase_ == MediatypeOneofCase.MediaBundle) hash ^= MediaBundle.GetHashCode();
      if (mediatypeCase_ == MediatypeOneofCase.Audio) hash ^= Audio.GetHashCode();
      if (mediatypeCase_ == MediatypeOneofCase.Video) hash ^= Video.GetHashCode();
      hash ^= (int) mediatypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (mediatypeCase_ == MediatypeOneofCase.Image) {
        output.WriteRawTag(26);
        output.WriteMessage(Image);
      }
      if (mediatypeCase_ == MediatypeOneofCase.MediaBundle) {
        output.WriteRawTag(34);
        output.WriteMessage(MediaBundle);
      }
      if (Type != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (MimeType != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) MimeType);
      }
      if (sourceUrl_ != null) {
        _single_sourceUrl_codec.WriteTagAndValue(output, SourceUrl);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (fileSize_ != null) {
        _single_fileSize_codec.WriteTagAndValue(output, FileSize);
      }
      if (mediatypeCase_ == MediatypeOneofCase.Audio) {
        output.WriteRawTag(82);
        output.WriteMessage(Audio);
      }
      if (mediatypeCase_ == MediatypeOneofCase.Video) {
        output.WriteRawTag(90);
        output.WriteMessage(Video);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (MimeType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MimeType);
      }
      if (sourceUrl_ != null) {
        size += _single_sourceUrl_codec.CalculateSizeWithTag(SourceUrl);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (fileSize_ != null) {
        size += _single_fileSize_codec.CalculateSizeWithTag(FileSize);
      }
      if (mediatypeCase_ == MediatypeOneofCase.Image) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (mediatypeCase_ == MediatypeOneofCase.MediaBundle) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MediaBundle);
      }
      if (mediatypeCase_ == MediatypeOneofCase.Audio) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Audio);
      }
      if (mediatypeCase_ == MediatypeOneofCase.Video) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Video);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MediaFile other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0L) {
          Id = other.Id;
        }
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.MimeType != 0) {
        MimeType = other.MimeType;
      }
      if (other.sourceUrl_ != null) {
        if (sourceUrl_ == null || other.SourceUrl != "") {
          SourceUrl = other.SourceUrl;
        }
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.fileSize_ != null) {
        if (fileSize_ == null || other.FileSize != 0L) {
          FileSize = other.FileSize;
        }
      }
      switch (other.MediatypeCase) {
        case MediatypeOneofCase.Image:
          if (Image == null) {
            Image = new global::Google.Ads.GoogleAds.V0.Resources.MediaImage();
          }
          Image.MergeFrom(other.Image);
          break;
        case MediatypeOneofCase.MediaBundle:
          if (MediaBundle == null) {
            MediaBundle = new global::Google.Ads.GoogleAds.V0.Resources.MediaBundle();
          }
          MediaBundle.MergeFrom(other.MediaBundle);
          break;
        case MediatypeOneofCase.Audio:
          if (Audio == null) {
            Audio = new global::Google.Ads.GoogleAds.V0.Resources.MediaAudio();
          }
          Audio.MergeFrom(other.Audio);
          break;
        case MediatypeOneofCase.Video:
          if (Video == null) {
            Video = new global::Google.Ads.GoogleAds.V0.Resources.MediaVideo();
          }
          Video.MergeFrom(other.Video);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 18: {
            long? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0L) {
              Id = value;
            }
            break;
          }
          case 26: {
            global::Google.Ads.GoogleAds.V0.Resources.MediaImage subBuilder = new global::Google.Ads.GoogleAds.V0.Resources.MediaImage();
            if (mediatypeCase_ == MediatypeOneofCase.Image) {
              subBuilder.MergeFrom(Image);
            }
            input.ReadMessage(subBuilder);
            Image = subBuilder;
            break;
          }
          case 34: {
            global::Google.Ads.GoogleAds.V0.Resources.MediaBundle subBuilder = new global::Google.Ads.GoogleAds.V0.Resources.MediaBundle();
            if (mediatypeCase_ == MediatypeOneofCase.MediaBundle) {
              subBuilder.MergeFrom(MediaBundle);
            }
            input.ReadMessage(subBuilder);
            MediaBundle = subBuilder;
            break;
          }
          case 40: {
            type_ = (global::Google.Ads.GoogleAds.V0.Enums.MediaTypeEnum.Types.MediaType) input.ReadEnum();
            break;
          }
          case 48: {
            mimeType_ = (global::Google.Ads.GoogleAds.V0.Enums.MimeTypeEnum.Types.MimeType) input.ReadEnum();
            break;
          }
          case 58: {
            string value = _single_sourceUrl_codec.Read(input);
            if (sourceUrl_ == null || value != "") {
              SourceUrl = value;
            }
            break;
          }
          case 66: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 74: {
            long? value = _single_fileSize_codec.Read(input);
            if (fileSize_ == null || value != 0L) {
              FileSize = value;
            }
            break;
          }
          case 82: {
            global::Google.Ads.GoogleAds.V0.Resources.MediaAudio subBuilder = new global::Google.Ads.GoogleAds.V0.Resources.MediaAudio();
            if (mediatypeCase_ == MediatypeOneofCase.Audio) {
              subBuilder.MergeFrom(Audio);
            }
            input.ReadMessage(subBuilder);
            Audio = subBuilder;
            break;
          }
          case 90: {
            global::Google.Ads.GoogleAds.V0.Resources.MediaVideo subBuilder = new global::Google.Ads.GoogleAds.V0.Resources.MediaVideo();
            if (mediatypeCase_ == MediatypeOneofCase.Video) {
              subBuilder.MergeFrom(Video);
            }
            input.ReadMessage(subBuilder);
            Video = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Encapsulates an Image.
  /// </summary>
  public sealed partial class MediaImage : pb::IMessage<MediaImage> {
    private static readonly pb::MessageParser<MediaImage> _parser = new pb::MessageParser<MediaImage>(() => new MediaImage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MediaImage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Resources.MediaFileReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaImage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaImage(MediaImage other) : this() {
      Data = other.Data;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaImage Clone() {
      return new MediaImage(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _single_data_codec = pb::FieldCodec.ForClassWrapper<pb::ByteString>(10);
    private pb::ByteString data_;
    /// <summary>
    /// Raw image data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MediaImage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MediaImage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (data_ != null) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (data_ != null) {
        _single_data_codec.WriteTagAndValue(output, Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (data_ != null) {
        size += _single_data_codec.CalculateSizeWithTag(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MediaImage other) {
      if (other == null) {
        return;
      }
      if (other.data_ != null) {
        if (data_ == null || other.Data != pb::ByteString.Empty) {
          Data = other.Data;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pb::ByteString value = _single_data_codec.Read(input);
            if (data_ == null || value != pb::ByteString.Empty) {
              Data = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents a ZIP archive media the content of which contains HTML5 assets.
  /// </summary>
  public sealed partial class MediaBundle : pb::IMessage<MediaBundle> {
    private static readonly pb::MessageParser<MediaBundle> _parser = new pb::MessageParser<MediaBundle>(() => new MediaBundle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MediaBundle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Resources.MediaFileReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaBundle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaBundle(MediaBundle other) : this() {
      Data = other.Data;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaBundle Clone() {
      return new MediaBundle(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _single_data_codec = pb::FieldCodec.ForClassWrapper<pb::ByteString>(10);
    private pb::ByteString data_;
    /// <summary>
    /// Raw zipped data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MediaBundle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MediaBundle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (data_ != null) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (data_ != null) {
        _single_data_codec.WriteTagAndValue(output, Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (data_ != null) {
        size += _single_data_codec.CalculateSizeWithTag(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MediaBundle other) {
      if (other == null) {
        return;
      }
      if (other.data_ != null) {
        if (data_ == null || other.Data != pb::ByteString.Empty) {
          Data = other.Data;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pb::ByteString value = _single_data_codec.Read(input);
            if (data_ == null || value != pb::ByteString.Empty) {
              Data = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Encapsulates an Audio.
  /// </summary>
  public sealed partial class MediaAudio : pb::IMessage<MediaAudio> {
    private static readonly pb::MessageParser<MediaAudio> _parser = new pb::MessageParser<MediaAudio>(() => new MediaAudio());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MediaAudio> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Resources.MediaFileReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaAudio() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaAudio(MediaAudio other) : this() {
      AdDurationMillis = other.AdDurationMillis;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaAudio Clone() {
      return new MediaAudio(this);
    }

    /// <summary>Field number for the "ad_duration_millis" field.</summary>
    public const int AdDurationMillisFieldNumber = 1;
    private static readonly pb::FieldCodec<long?> _single_adDurationMillis_codec = pb::FieldCodec.ForStructWrapper<long>(10);
    private long? adDurationMillis_;
    /// <summary>
    /// The duration of the Audio in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? AdDurationMillis {
      get { return adDurationMillis_; }
      set {
        adDurationMillis_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MediaAudio);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MediaAudio other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AdDurationMillis != other.AdDurationMillis) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (adDurationMillis_ != null) hash ^= AdDurationMillis.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (adDurationMillis_ != null) {
        _single_adDurationMillis_codec.WriteTagAndValue(output, AdDurationMillis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (adDurationMillis_ != null) {
        size += _single_adDurationMillis_codec.CalculateSizeWithTag(AdDurationMillis);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MediaAudio other) {
      if (other == null) {
        return;
      }
      if (other.adDurationMillis_ != null) {
        if (adDurationMillis_ == null || other.AdDurationMillis != 0L) {
          AdDurationMillis = other.AdDurationMillis;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            long? value = _single_adDurationMillis_codec.Read(input);
            if (adDurationMillis_ == null || value != 0L) {
              AdDurationMillis = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Encapsulates a Video.
  /// </summary>
  public sealed partial class MediaVideo : pb::IMessage<MediaVideo> {
    private static readonly pb::MessageParser<MediaVideo> _parser = new pb::MessageParser<MediaVideo>(() => new MediaVideo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MediaVideo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Resources.MediaFileReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaVideo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaVideo(MediaVideo other) : this() {
      AdDurationMillis = other.AdDurationMillis;
      YoutubeVideoId = other.YoutubeVideoId;
      AdvertisingIdCode = other.AdvertisingIdCode;
      IsciCode = other.IsciCode;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaVideo Clone() {
      return new MediaVideo(this);
    }

    /// <summary>Field number for the "ad_duration_millis" field.</summary>
    public const int AdDurationMillisFieldNumber = 1;
    private static readonly pb::FieldCodec<long?> _single_adDurationMillis_codec = pb::FieldCodec.ForStructWrapper<long>(10);
    private long? adDurationMillis_;
    /// <summary>
    /// The duration of the Video in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? AdDurationMillis {
      get { return adDurationMillis_; }
      set {
        adDurationMillis_ = value;
      }
    }

    /// <summary>Field number for the "youtube_video_id" field.</summary>
    public const int YoutubeVideoIdFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_youtubeVideoId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string youtubeVideoId_;
    /// <summary>
    /// The YouTube video ID (as seen in YouTube URLs).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string YoutubeVideoId {
      get { return youtubeVideoId_; }
      set {
        youtubeVideoId_ = value;
      }
    }

    /// <summary>Field number for the "advertising_id_code" field.</summary>
    public const int AdvertisingIdCodeFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_advertisingIdCode_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string advertisingIdCode_;
    /// <summary>
    /// The Advertising Digital Identification code for this video, as defined by
    /// the American Association of Advertising Agencies, used mainly for
    /// television commercials.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AdvertisingIdCode {
      get { return advertisingIdCode_; }
      set {
        advertisingIdCode_ = value;
      }
    }

    /// <summary>Field number for the "isci_code" field.</summary>
    public const int IsciCodeFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_isciCode_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string isciCode_;
    /// <summary>
    /// The Industry Standard Commercial Identifier code for this video, used
    /// mainly for television commercials.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IsciCode {
      get { return isciCode_; }
      set {
        isciCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MediaVideo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MediaVideo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AdDurationMillis != other.AdDurationMillis) return false;
      if (YoutubeVideoId != other.YoutubeVideoId) return false;
      if (AdvertisingIdCode != other.AdvertisingIdCode) return false;
      if (IsciCode != other.IsciCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (adDurationMillis_ != null) hash ^= AdDurationMillis.GetHashCode();
      if (youtubeVideoId_ != null) hash ^= YoutubeVideoId.GetHashCode();
      if (advertisingIdCode_ != null) hash ^= AdvertisingIdCode.GetHashCode();
      if (isciCode_ != null) hash ^= IsciCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (adDurationMillis_ != null) {
        _single_adDurationMillis_codec.WriteTagAndValue(output, AdDurationMillis);
      }
      if (youtubeVideoId_ != null) {
        _single_youtubeVideoId_codec.WriteTagAndValue(output, YoutubeVideoId);
      }
      if (advertisingIdCode_ != null) {
        _single_advertisingIdCode_codec.WriteTagAndValue(output, AdvertisingIdCode);
      }
      if (isciCode_ != null) {
        _single_isciCode_codec.WriteTagAndValue(output, IsciCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (adDurationMillis_ != null) {
        size += _single_adDurationMillis_codec.CalculateSizeWithTag(AdDurationMillis);
      }
      if (youtubeVideoId_ != null) {
        size += _single_youtubeVideoId_codec.CalculateSizeWithTag(YoutubeVideoId);
      }
      if (advertisingIdCode_ != null) {
        size += _single_advertisingIdCode_codec.CalculateSizeWithTag(AdvertisingIdCode);
      }
      if (isciCode_ != null) {
        size += _single_isciCode_codec.CalculateSizeWithTag(IsciCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MediaVideo other) {
      if (other == null) {
        return;
      }
      if (other.adDurationMillis_ != null) {
        if (adDurationMillis_ == null || other.AdDurationMillis != 0L) {
          AdDurationMillis = other.AdDurationMillis;
        }
      }
      if (other.youtubeVideoId_ != null) {
        if (youtubeVideoId_ == null || other.YoutubeVideoId != "") {
          YoutubeVideoId = other.YoutubeVideoId;
        }
      }
      if (other.advertisingIdCode_ != null) {
        if (advertisingIdCode_ == null || other.AdvertisingIdCode != "") {
          AdvertisingIdCode = other.AdvertisingIdCode;
        }
      }
      if (other.isciCode_ != null) {
        if (isciCode_ == null || other.IsciCode != "") {
          IsciCode = other.IsciCode;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            long? value = _single_adDurationMillis_codec.Read(input);
            if (adDurationMillis_ == null || value != 0L) {
              AdDurationMillis = value;
            }
            break;
          }
          case 18: {
            string value = _single_youtubeVideoId_codec.Read(input);
            if (youtubeVideoId_ == null || value != "") {
              YoutubeVideoId = value;
            }
            break;
          }
          case 26: {
            string value = _single_advertisingIdCode_codec.Read(input);
            if (advertisingIdCode_ == null || value != "") {
              AdvertisingIdCode = value;
            }
            break;
          }
          case 34: {
            string value = _single_isciCode_codec.Read(input);
            if (isciCode_ == null || value != "") {
              IsciCode = value;
            }
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
