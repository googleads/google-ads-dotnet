// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v0/enums/travel_placeholder_field.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V0.Enums {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v0/enums/travel_placeholder_field.proto</summary>
  public static partial class TravelPlaceholderFieldReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v0/enums/travel_placeholder_field.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TravelPlaceholderFieldReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjxnb29nbGUvYWRzL2dvb2dsZWFkcy92MC9lbnVtcy90cmF2ZWxfcGxhY2Vo",
            "b2xkZXJfZmllbGQucHJvdG8SHWdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYwLmVu",
            "dW1zItYDChpUcmF2ZWxQbGFjZWhvbGRlckZpZWxkRW51bSK3AwoWVHJhdmVs",
            "UGxhY2Vob2xkZXJGaWVsZBIPCgtVTlNQRUNJRklFRBAAEgsKB1VOS05PV04Q",
            "ARISCg5ERVNUSU5BVElPTl9JRBACEg0KCU9SSUdJTl9JRBADEgkKBVRJVExF",
            "EAQSFAoQREVTVElOQVRJT05fTkFNRRAFEg8KC09SSUdJTl9OQU1FEAYSCQoF",
            "UFJJQ0UQBxITCg9GT1JNQVRURURfUFJJQ0UQCBIOCgpTQUxFX1BSSUNFEAkS",
            "GAoURk9STUFUVEVEX1NBTEVfUFJJQ0UQChINCglJTUFHRV9VUkwQCxIMCghD",
            "QVRFR09SWRAMEhcKE0NPTlRFWFRVQUxfS0VZV09SRFMQDRIXChNERVNUSU5B",
            "VElPTl9BRERSRVNTEA4SDQoJRklOQUxfVVJMEA8SFQoRRklOQUxfTU9CSUxF",
            "X1VSTFMQEBIQCgxUUkFDS0lOR19VUkwQERIUChBBTkRST0lEX0FQUF9MSU5L",
            "EBISGwoXU0lNSUxBUl9ERVNUSU5BVElPTl9JRFMQExIQCgxJT1NfQVBQX0xJ",
            "TksQFBIUChBJT1NfQVBQX1NUT1JFX0lEEBVCzAEKIWNvbS5nb29nbGUuYWRz",
            "Lmdvb2dsZWFkcy52MC5lbnVtc0IbVHJhdmVsUGxhY2Vob2xkZXJGaWVsZFBy",
            "b3RvUAFaQmdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMv",
            "YWRzL2dvb2dsZWFkcy92MC9lbnVtcztlbnVtc6ICA0dBQaoCHUdvb2dsZS5B",
            "ZHMuR29vZ2xlQWRzLlYwLkVudW1zygIdR29vZ2xlXEFkc1xHb29nbGVBZHNc",
            "VjBcRW51bXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Enums.TravelPlaceholderFieldEnum), global::Google.Ads.GoogleAds.V0.Enums.TravelPlaceholderFieldEnum.Parser, null, null, new[]{ typeof(global::Google.Ads.GoogleAds.V0.Enums.TravelPlaceholderFieldEnum.Types.TravelPlaceholderField) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Values for Travel placeholder fields.
  /// For more information about dynamic remarketing feeds, see
  /// https://support.google.com/google-ads/answer/6053288.
  /// </summary>
  public sealed partial class TravelPlaceholderFieldEnum : pb::IMessage<TravelPlaceholderFieldEnum> {
    private static readonly pb::MessageParser<TravelPlaceholderFieldEnum> _parser = new pb::MessageParser<TravelPlaceholderFieldEnum>(() => new TravelPlaceholderFieldEnum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TravelPlaceholderFieldEnum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Enums.TravelPlaceholderFieldReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TravelPlaceholderFieldEnum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TravelPlaceholderFieldEnum(TravelPlaceholderFieldEnum other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TravelPlaceholderFieldEnum Clone() {
      return new TravelPlaceholderFieldEnum(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TravelPlaceholderFieldEnum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TravelPlaceholderFieldEnum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TravelPlaceholderFieldEnum other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TravelPlaceholderFieldEnum message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Possible values for Travel placeholder fields.
      /// </summary>
      public enum TravelPlaceholderField {
        /// <summary>
        /// Not specified.
        /// </summary>
        [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Used for return value only. Represents value unknown in this version.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 1,
        /// <summary>
        /// Data Type: STRING. Required. Destination id. Example: PAR, LON.
        /// For feed items that only have destination id, destination id must be a
        /// unique key. For feed items that have both destination id and origin id,
        /// then the combination must be a unique key.
        /// </summary>
        [pbr::OriginalName("DESTINATION_ID")] DestinationId = 2,
        /// <summary>
        /// Data Type: STRING. Origin id. Example: PAR, LON.
        /// Combination of DESTINATION_ID and ORIGIN_ID must be
        /// unique per offer.
        /// </summary>
        [pbr::OriginalName("ORIGIN_ID")] OriginId = 3,
        /// <summary>
        /// Data Type: STRING. Required. Main headline with name to be shown in
        /// dynamic ad.
        /// </summary>
        [pbr::OriginalName("TITLE")] Title = 4,
        /// <summary>
        /// Data Type: STRING. The destination name. Shorter names are recommended.
        /// </summary>
        [pbr::OriginalName("DESTINATION_NAME")] DestinationName = 5,
        /// <summary>
        /// Data Type: STRING. Origin name. Shorter names are recommended.
        /// </summary>
        [pbr::OriginalName("ORIGIN_NAME")] OriginName = 6,
        /// <summary>
        /// Data Type: STRING. Price to be shown in the ad. Highly recommended for
        /// dynamic ads.
        /// Example: "100.00 USD"
        /// </summary>
        [pbr::OriginalName("PRICE")] Price = 7,
        /// <summary>
        /// Data Type: STRING. Formatted price to be shown in the ad.
        /// Example: "Starting at $100.00 USD", "$80 - $100"
        /// </summary>
        [pbr::OriginalName("FORMATTED_PRICE")] FormattedPrice = 8,
        /// <summary>
        /// Data Type: STRING. Sale price to be shown in the ad.
        /// Example: "80.00 USD"
        /// </summary>
        [pbr::OriginalName("SALE_PRICE")] SalePrice = 9,
        /// <summary>
        /// Data Type: STRING. Formatted sale price to be shown in the ad.
        /// Example: "On sale for $80.00", "$60 - $80"
        /// </summary>
        [pbr::OriginalName("FORMATTED_SALE_PRICE")] FormattedSalePrice = 10,
        /// <summary>
        /// Data Type: URL. Image to be displayed in the ad.
        /// </summary>
        [pbr::OriginalName("IMAGE_URL")] ImageUrl = 11,
        /// <summary>
        /// Data Type: STRING. Category of travel offer used to group like items
        /// together for recommendation engine.
        /// </summary>
        [pbr::OriginalName("CATEGORY")] Category = 12,
        /// <summary>
        /// Data Type: STRING_LIST. Keywords used for product retrieval.
        /// </summary>
        [pbr::OriginalName("CONTEXTUAL_KEYWORDS")] ContextualKeywords = 13,
        /// <summary>
        /// Data Type: STRING. Address of travel offer, including postal code.
        /// </summary>
        [pbr::OriginalName("DESTINATION_ADDRESS")] DestinationAddress = 14,
        /// <summary>
        /// Data Type: URL_LIST. Required. Final URLs to be used in ad, when using
        /// Upgraded URLs; the more specific the better (e.g. the individual URL of a
        /// specific travel offer and its location).
        /// </summary>
        [pbr::OriginalName("FINAL_URL")] FinalUrl = 15,
        /// <summary>
        /// Data Type: URL_LIST. Final mobile URLs for the ad when using Upgraded
        /// URLs.
        /// </summary>
        [pbr::OriginalName("FINAL_MOBILE_URLS")] FinalMobileUrls = 16,
        /// <summary>
        /// Data Type: URL. Tracking template for the ad when using Upgraded URLs.
        /// </summary>
        [pbr::OriginalName("TRACKING_URL")] TrackingUrl = 17,
        /// <summary>
        /// Data Type: STRING. Android app link. Must be formatted as:
        /// android-app://{package_id}/{scheme}/{host_path}.
        /// The components are defined as follows:
        /// package_id: app ID as specified in Google Play.
        /// scheme: the scheme to pass to the application. Can be HTTP, or a custom
        ///   scheme.
        /// host_path: identifies the specific content within your application.
        /// </summary>
        [pbr::OriginalName("ANDROID_APP_LINK")] AndroidAppLink = 18,
        /// <summary>
        /// Data Type: STRING_LIST. List of recommended destination IDs to show
        /// together with this item.
        /// </summary>
        [pbr::OriginalName("SIMILAR_DESTINATION_IDS")] SimilarDestinationIds = 19,
        /// <summary>
        /// Data Type: STRING. iOS app link.
        /// </summary>
        [pbr::OriginalName("IOS_APP_LINK")] IosAppLink = 20,
        /// <summary>
        /// Data Type: INT64. iOS app store ID.
        /// </summary>
        [pbr::OriginalName("IOS_APP_STORE_ID")] IosAppStoreId = 21,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
