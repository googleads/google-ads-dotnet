// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v0/resources/user_interest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V0.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v0/resources/user_interest.proto</summary>
  public static partial class UserInterestReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v0/resources/user_interest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UserInterestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjVnb29nbGUvYWRzL2dvb2dsZWFkcy92MC9yZXNvdXJjZXMvdXNlcl9pbnRl",
            "cmVzdC5wcm90bxIhZ29vZ2xlLmFkcy5nb29nbGVhZHMudjAucmVzb3VyY2Vz",
            "GkRnb29nbGUvYWRzL2dvb2dsZWFkcy92MC9jb21tb24vY3JpdGVyaW9uX2Nh",
            "dGVnb3J5X2F2YWlsYWJpbGl0eS5wcm90bxo/Z29vZ2xlL2Fkcy9nb29nbGVh",
            "ZHMvdjAvZW51bXMvdXNlcl9pbnRlcmVzdF90YXhvbm9teV90eXBlLnByb3Rv",
            "Gh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8ivQMKDFVzZXJJbnRl",
            "cmVzdBIVCg1yZXNvdXJjZV9uYW1lGAEgASgJEmsKDXRheG9ub215X3R5cGUY",
            "AiABKA4yVC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MC5lbnVtcy5Vc2VySW50",
            "ZXJlc3RUYXhvbm9teVR5cGVFbnVtLlVzZXJJbnRlcmVzdFRheG9ub215VHlw",
            "ZRI1ChB1c2VyX2ludGVyZXN0X2lkGAMgASgLMhsuZ29vZ2xlLnByb3RvYnVm",
            "LkludDY0VmFsdWUSKgoEbmFtZRgEIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZRI6ChR1c2VyX2ludGVyZXN0X3BhcmVudBgFIAEoCzIcLmdv",
            "b2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIzCg9sYXVuY2hlZF90b19hbGwY",
            "BiABKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlElUKDmF2YWlsYWJp",
            "bGl0aWVzGAcgAygLMj0uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjAuY29tbW9u",
            "LkNyaXRlcmlvbkNhdGVnb3J5QXZhaWxhYmlsaXR5QtYBCiVjb20uZ29vZ2xl",
            "LmFkcy5nb29nbGVhZHMudjAucmVzb3VyY2VzQhFVc2VySW50ZXJlc3RQcm90",
            "b1ABWkpnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2Fk",
            "cy9nb29nbGVhZHMvdjAvcmVzb3VyY2VzO3Jlc291cmNlc6ICA0dBQaoCIUdv",
            "b2dsZS5BZHMuR29vZ2xlQWRzLlYwLlJlc291cmNlc8oCIUdvb2dsZVxBZHNc",
            "R29vZ2xlQWRzXFYwXFJlc291cmNlc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V0.Common.CriterionCategoryAvailabilityReflection.Descriptor, global::Google.Ads.GoogleAds.V0.Enums.UserInterestTaxonomyTypeReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V0.Resources.UserInterest), global::Google.Ads.GoogleAds.V0.Resources.UserInterest.Parser, new[]{ "ResourceName", "TaxonomyType", "UserInterestId", "Name", "UserInterestParent", "LaunchedToAll", "Availabilities" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A user interest: a particular interest-based vertical to be targeted.
  /// </summary>
  public sealed partial class UserInterest : pb::IMessage<UserInterest> {
    private static readonly pb::MessageParser<UserInterest> _parser = new pb::MessageParser<UserInterest>(() => new UserInterest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserInterest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V0.Resources.UserInterestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInterest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInterest(UserInterest other) : this() {
      resourceName_ = other.resourceName_;
      taxonomyType_ = other.taxonomyType_;
      UserInterestId = other.UserInterestId;
      Name = other.Name;
      UserInterestParent = other.UserInterestParent;
      LaunchedToAll = other.LaunchedToAll;
      availabilities_ = other.availabilities_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInterest Clone() {
      return new UserInterest(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// The resource name of the user interest.
    /// User interest resource names have the form:
    ///
    /// `customers/{customer_id}/userInterests/{user_interest_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taxonomy_type" field.</summary>
    public const int TaxonomyTypeFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V0.Enums.UserInterestTaxonomyTypeEnum.Types.UserInterestTaxonomyType taxonomyType_ = 0;
    /// <summary>
    /// Taxonomy type of the user interest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V0.Enums.UserInterestTaxonomyTypeEnum.Types.UserInterestTaxonomyType TaxonomyType {
      get { return taxonomyType_; }
      set {
        taxonomyType_ = value;
      }
    }

    /// <summary>Field number for the "user_interest_id" field.</summary>
    public const int UserInterestIdFieldNumber = 3;
    private static readonly pb::FieldCodec<long?> _single_userInterestId_codec = pb::FieldCodec.ForStructWrapper<long>(26);
    private long? userInterestId_;
    /// <summary>
    /// The ID of the user interest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? UserInterestId {
      get { return userInterestId_; }
      set {
        userInterestId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string name_;
    /// <summary>
    /// The name of the user interest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "user_interest_parent" field.</summary>
    public const int UserInterestParentFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_userInterestParent_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string userInterestParent_;
    /// <summary>
    /// The parent of the user interest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserInterestParent {
      get { return userInterestParent_; }
      set {
        userInterestParent_ = value;
      }
    }

    /// <summary>Field number for the "launched_to_all" field.</summary>
    public const int LaunchedToAllFieldNumber = 6;
    private static readonly pb::FieldCodec<bool?> _single_launchedToAll_codec = pb::FieldCodec.ForStructWrapper<bool>(50);
    private bool? launchedToAll_;
    /// <summary>
    /// True if the user interest is launched to all channels and locales.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? LaunchedToAll {
      get { return launchedToAll_; }
      set {
        launchedToAll_ = value;
      }
    }

    /// <summary>Field number for the "availabilities" field.</summary>
    public const int AvailabilitiesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V0.Common.CriterionCategoryAvailability> _repeated_availabilities_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Ads.GoogleAds.V0.Common.CriterionCategoryAvailability.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V0.Common.CriterionCategoryAvailability> availabilities_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V0.Common.CriterionCategoryAvailability>();
    /// <summary>
    /// Availability information of the user interest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V0.Common.CriterionCategoryAvailability> Availabilities {
      get { return availabilities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserInterest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserInterest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (TaxonomyType != other.TaxonomyType) return false;
      if (UserInterestId != other.UserInterestId) return false;
      if (Name != other.Name) return false;
      if (UserInterestParent != other.UserInterestParent) return false;
      if (LaunchedToAll != other.LaunchedToAll) return false;
      if(!availabilities_.Equals(other.availabilities_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (TaxonomyType != 0) hash ^= TaxonomyType.GetHashCode();
      if (userInterestId_ != null) hash ^= UserInterestId.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (userInterestParent_ != null) hash ^= UserInterestParent.GetHashCode();
      if (launchedToAll_ != null) hash ^= LaunchedToAll.GetHashCode();
      hash ^= availabilities_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (TaxonomyType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TaxonomyType);
      }
      if (userInterestId_ != null) {
        _single_userInterestId_codec.WriteTagAndValue(output, UserInterestId);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (userInterestParent_ != null) {
        _single_userInterestParent_codec.WriteTagAndValue(output, UserInterestParent);
      }
      if (launchedToAll_ != null) {
        _single_launchedToAll_codec.WriteTagAndValue(output, LaunchedToAll);
      }
      availabilities_.WriteTo(output, _repeated_availabilities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (TaxonomyType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TaxonomyType);
      }
      if (userInterestId_ != null) {
        size += _single_userInterestId_codec.CalculateSizeWithTag(UserInterestId);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (userInterestParent_ != null) {
        size += _single_userInterestParent_codec.CalculateSizeWithTag(UserInterestParent);
      }
      if (launchedToAll_ != null) {
        size += _single_launchedToAll_codec.CalculateSizeWithTag(LaunchedToAll);
      }
      size += availabilities_.CalculateSize(_repeated_availabilities_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserInterest other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.TaxonomyType != 0) {
        TaxonomyType = other.TaxonomyType;
      }
      if (other.userInterestId_ != null) {
        if (userInterestId_ == null || other.UserInterestId != 0L) {
          UserInterestId = other.UserInterestId;
        }
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.userInterestParent_ != null) {
        if (userInterestParent_ == null || other.UserInterestParent != "") {
          UserInterestParent = other.UserInterestParent;
        }
      }
      if (other.launchedToAll_ != null) {
        if (launchedToAll_ == null || other.LaunchedToAll != false) {
          LaunchedToAll = other.LaunchedToAll;
        }
      }
      availabilities_.Add(other.availabilities_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 16: {
            taxonomyType_ = (global::Google.Ads.GoogleAds.V0.Enums.UserInterestTaxonomyTypeEnum.Types.UserInterestTaxonomyType) input.ReadEnum();
            break;
          }
          case 26: {
            long? value = _single_userInterestId_codec.Read(input);
            if (userInterestId_ == null || value != 0L) {
              UserInterestId = value;
            }
            break;
          }
          case 34: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 42: {
            string value = _single_userInterestParent_codec.Read(input);
            if (userInterestParent_ == null || value != "") {
              UserInterestParent = value;
            }
            break;
          }
          case 50: {
            bool? value = _single_launchedToAll_codec.Read(input);
            if (launchedToAll_ == null || value != false) {
              LaunchedToAll = value;
            }
            break;
          }
          case 58: {
            availabilities_.AddEntriesFrom(input, _repeated_availabilities_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
