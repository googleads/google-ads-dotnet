// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v1/resources/ad_group.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V1.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v1/resources/ad_group.proto</summary>
  public static partial class AdGroupReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v1/resources/ad_group.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AdGroupReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBnb29nbGUvYWRzL2dvb2dsZWFkcy92MS9yZXNvdXJjZXMvYWRfZ3JvdXAu",
            "cHJvdG8SIWdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxLnJlc291cmNlcxo1Z29v",
            "Z2xlL2Fkcy9nb29nbGVhZHMvdjEvY29tbW9uL2N1c3RvbV9wYXJhbWV0ZXIu",
            "cHJvdG8aRGdvb2dsZS9hZHMvZ29vZ2xlYWRzL3YxL2NvbW1vbi9leHBsb3Jl",
            "cl9hdXRvX29wdGltaXplcl9zZXR0aW5nLnByb3RvGjZnb29nbGUvYWRzL2dv",
            "b2dsZWFkcy92MS9jb21tb24vdGFyZ2V0aW5nX3NldHRpbmcucHJvdG8aPWdv",
            "b2dsZS9hZHMvZ29vZ2xlYWRzL3YxL2VudW1zL2FkX2dyb3VwX2FkX3JvdGF0",
            "aW9uX21vZGUucHJvdG8aM2dvb2dsZS9hZHMvZ29vZ2xlYWRzL3YxL2VudW1z",
            "L2FkX2dyb3VwX3N0YXR1cy5wcm90bxoxZ29vZ2xlL2Fkcy9nb29nbGVhZHMv",
            "djEvZW51bXMvYWRfZ3JvdXBfdHlwZS5wcm90bxoyZ29vZ2xlL2Fkcy9nb29n",
            "bGVhZHMvdjEvZW51bXMvYmlkZGluZ19zb3VyY2UucHJvdG8aN2dvb2dsZS9h",
            "ZHMvZ29vZ2xlYWRzL3YxL2VudW1zL3RhcmdldGluZ19kaW1lbnNpb24ucHJv",
            "dG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90bxocZ29vZ2xlL2Fw",
            "aS9hbm5vdGF0aW9ucy5wcm90byKQDQoHQWRHcm91cBIVCg1yZXNvdXJjZV9u",
            "YW1lGAEgASgJEicKAmlkGAMgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0",
            "VmFsdWUSKgoEbmFtZRgEIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZRJOCgZzdGF0dXMYBSABKA4yPi5nb29nbGUuYWRzLmdvb2dsZWFkcy52",
            "MS5lbnVtcy5BZEdyb3VwU3RhdHVzRW51bS5BZEdyb3VwU3RhdHVzEkgKBHR5",
            "cGUYDCABKA4yOi5nb29nbGUuYWRzLmdvb2dsZWFkcy52MS5lbnVtcy5BZEdy",
            "b3VwVHlwZUVudW0uQWRHcm91cFR5cGUSaAoQYWRfcm90YXRpb25fbW9kZRgW",
            "IAEoDjJOLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxLmVudW1zLkFkR3JvdXBB",
            "ZFJvdGF0aW9uTW9kZUVudW0uQWRHcm91cEFkUm90YXRpb25Nb2RlEjMKDWJh",
            "c2VfYWRfZ3JvdXAYEiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFs",
            "dWUSOwoVdHJhY2tpbmdfdXJsX3RlbXBsYXRlGA0gASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlEk4KFXVybF9jdXN0b21fcGFyYW1ldGVycxgG",
            "IAMoCzIvLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxLmNvbW1vbi5DdXN0b21Q",
            "YXJhbWV0ZXISLgoIY2FtcGFpZ24YCiABKAsyHC5nb29nbGUucHJvdG9idWYu",
            "U3RyaW5nVmFsdWUSMwoOY3BjX2JpZF9taWNyb3MYDiABKAsyGy5nb29nbGUu",
            "cHJvdG9idWYuSW50NjRWYWx1ZRIzCg5jcG1fYmlkX21pY3JvcxgPIAEoCzIb",
            "Lmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEjYKEXRhcmdldF9jcGFfbWlj",
            "cm9zGBsgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSMwoOY3B2",
            "X2JpZF9taWNyb3MYESABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1",
            "ZRI2ChF0YXJnZXRfY3BtX21pY3JvcxgaIAEoCzIbLmdvb2dsZS5wcm90b2J1",
            "Zi5JbnQ2NFZhbHVlEjEKC3RhcmdldF9yb2FzGB4gASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLkRvdWJsZVZhbHVlEjsKFnBlcmNlbnRfY3BjX2JpZF9taWNyb3MY",
            "FCABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZRJlCh9leHBsb3Jl",
            "cl9hdXRvX29wdGltaXplcl9zZXR0aW5nGBUgASgLMjwuZ29vZ2xlLmFkcy5n",
            "b29nbGVhZHMudjEuY29tbW9uLkV4cGxvcmVyQXV0b09wdGltaXplclNldHRp",
            "bmcSbgocZGlzcGxheV9jdXN0b21fYmlkX2RpbWVuc2lvbhgXIAEoDjJILmdv",
            "b2dsZS5hZHMuZ29vZ2xlYWRzLnYxLmVudW1zLlRhcmdldGluZ0RpbWVuc2lv",
            "bkVudW0uVGFyZ2V0aW5nRGltZW5zaW9uEjYKEGZpbmFsX3VybF9zdWZmaXgY",
            "GCABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSSwoRdGFyZ2V0",
            "aW5nX3NldHRpbmcYGSABKAsyMC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MS5j",
            "b21tb24uVGFyZ2V0aW5nU2V0dGluZxJAChtlZmZlY3RpdmVfdGFyZ2V0X2Nw",
            "YV9taWNyb3MYHCABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZRJj",
            "ChtlZmZlY3RpdmVfdGFyZ2V0X2NwYV9zb3VyY2UYHSABKA4yPi5nb29nbGUu",
            "YWRzLmdvb2dsZWFkcy52MS5lbnVtcy5CaWRkaW5nU291cmNlRW51bS5CaWRk",
            "aW5nU291cmNlEjsKFWVmZmVjdGl2ZV90YXJnZXRfcm9hcxgfIAEoCzIcLmdv",
            "b2dsZS5wcm90b2J1Zi5Eb3VibGVWYWx1ZRJkChxlZmZlY3RpdmVfdGFyZ2V0",
            "X3JvYXNfc291cmNlGCAgASgOMj4uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjEu",
            "ZW51bXMuQmlkZGluZ1NvdXJjZUVudW0uQmlkZGluZ1NvdXJjZUL5AQolY29t",
            "Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxLnJlc291cmNlc0IMQWRHcm91cFBy",
            "b3RvUAFaSmdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMv",
            "YWRzL2dvb2dsZWFkcy92MS9yZXNvdXJjZXM7cmVzb3VyY2VzogIDR0FBqgIh",
            "R29vZ2xlLkFkcy5Hb29nbGVBZHMuVjEuUmVzb3VyY2VzygIhR29vZ2xlXEFk",
            "c1xHb29nbGVBZHNcVjFcUmVzb3VyY2Vz6gIlR29vZ2xlOjpBZHM6Okdvb2ds",
            "ZUFkczo6VjE6OlJlc291cmNlc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V1.Common.CustomParameterReflection.Descriptor, global::Google.Ads.GoogleAds.V1.Common.ExplorerAutoOptimizerSettingReflection.Descriptor, global::Google.Ads.GoogleAds.V1.Common.TargetingSettingReflection.Descriptor, global::Google.Ads.GoogleAds.V1.Enums.AdGroupAdRotationModeReflection.Descriptor, global::Google.Ads.GoogleAds.V1.Enums.AdGroupStatusReflection.Descriptor, global::Google.Ads.GoogleAds.V1.Enums.AdGroupTypeReflection.Descriptor, global::Google.Ads.GoogleAds.V1.Enums.BiddingSourceReflection.Descriptor, global::Google.Ads.GoogleAds.V1.Enums.TargetingDimensionReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Resources.AdGroup), global::Google.Ads.GoogleAds.V1.Resources.AdGroup.Parser, new[]{ "ResourceName", "Id", "Name", "Status", "Type", "AdRotationMode", "BaseAdGroup", "TrackingUrlTemplate", "UrlCustomParameters", "Campaign", "CpcBidMicros", "CpmBidMicros", "TargetCpaMicros", "CpvBidMicros", "TargetCpmMicros", "TargetRoas", "PercentCpcBidMicros", "ExplorerAutoOptimizerSetting", "DisplayCustomBidDimension", "FinalUrlSuffix", "TargetingSetting", "EffectiveTargetCpaMicros", "EffectiveTargetCpaSource", "EffectiveTargetRoas", "EffectiveTargetRoasSource" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// An ad group.
  /// </summary>
  public sealed partial class AdGroup : pb::IMessage<AdGroup> {
    private static readonly pb::MessageParser<AdGroup> _parser = new pb::MessageParser<AdGroup>(() => new AdGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Resources.AdGroupReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdGroup(AdGroup other) : this() {
      resourceName_ = other.resourceName_;
      Id = other.Id;
      Name = other.Name;
      status_ = other.status_;
      type_ = other.type_;
      adRotationMode_ = other.adRotationMode_;
      BaseAdGroup = other.BaseAdGroup;
      TrackingUrlTemplate = other.TrackingUrlTemplate;
      urlCustomParameters_ = other.urlCustomParameters_.Clone();
      Campaign = other.Campaign;
      CpcBidMicros = other.CpcBidMicros;
      CpmBidMicros = other.CpmBidMicros;
      TargetCpaMicros = other.TargetCpaMicros;
      CpvBidMicros = other.CpvBidMicros;
      TargetCpmMicros = other.TargetCpmMicros;
      TargetRoas = other.TargetRoas;
      PercentCpcBidMicros = other.PercentCpcBidMicros;
      explorerAutoOptimizerSetting_ = other.explorerAutoOptimizerSetting_ != null ? other.explorerAutoOptimizerSetting_.Clone() : null;
      displayCustomBidDimension_ = other.displayCustomBidDimension_;
      FinalUrlSuffix = other.FinalUrlSuffix;
      targetingSetting_ = other.targetingSetting_ != null ? other.targetingSetting_.Clone() : null;
      EffectiveTargetCpaMicros = other.EffectiveTargetCpaMicros;
      effectiveTargetCpaSource_ = other.effectiveTargetCpaSource_;
      EffectiveTargetRoas = other.EffectiveTargetRoas;
      effectiveTargetRoasSource_ = other.effectiveTargetRoasSource_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdGroup Clone() {
      return new AdGroup(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// The resource name of the ad group.
    /// Ad group resource names have the form:
    ///
    /// `customers/{customer_id}/adGroups/{ad_group_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private static readonly pb::FieldCodec<long?> _single_id_codec = pb::FieldCodec.ForStructWrapper<long>(26);
    private long? id_;
    /// <summary>
    /// The ID of the ad group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string name_;
    /// <summary>
    /// The name of the ad group.
    ///
    /// This field is required and should not be empty when creating new ad
    /// groups.
    ///
    /// It must contain fewer than 255 UTF-8 full-width characters.
    ///
    /// It must not contain any null (code point 0x0), NL line feed
    /// (code point 0xA) or carriage return (code point 0xD) characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private global::Google.Ads.GoogleAds.V1.Enums.AdGroupStatusEnum.Types.AdGroupStatus status_ = 0;
    /// <summary>
    /// The status of the ad group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Enums.AdGroupStatusEnum.Types.AdGroupStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 12;
    private global::Google.Ads.GoogleAds.V1.Enums.AdGroupTypeEnum.Types.AdGroupType type_ = 0;
    /// <summary>
    /// The type of the ad group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Enums.AdGroupTypeEnum.Types.AdGroupType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "ad_rotation_mode" field.</summary>
    public const int AdRotationModeFieldNumber = 22;
    private global::Google.Ads.GoogleAds.V1.Enums.AdGroupAdRotationModeEnum.Types.AdGroupAdRotationMode adRotationMode_ = 0;
    /// <summary>
    /// The ad rotation mode of the ad group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Enums.AdGroupAdRotationModeEnum.Types.AdGroupAdRotationMode AdRotationMode {
      get { return adRotationMode_; }
      set {
        adRotationMode_ = value;
      }
    }

    /// <summary>Field number for the "base_ad_group" field.</summary>
    public const int BaseAdGroupFieldNumber = 18;
    private static readonly pb::FieldCodec<string> _single_baseAdGroup_codec = pb::FieldCodec.ForClassWrapper<string>(146);
    private string baseAdGroup_;
    /// <summary>
    /// For draft or experiment ad groups, this field is the resource name of the
    /// base ad group from which this ad group was created. If a draft or
    /// experiment ad group does not have a base ad group, then this field is null.
    ///
    /// For base ad groups, this field equals the ad group resource name.
    ///
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BaseAdGroup {
      get { return baseAdGroup_; }
      set {
        baseAdGroup_ = value;
      }
    }

    /// <summary>Field number for the "tracking_url_template" field.</summary>
    public const int TrackingUrlTemplateFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _single_trackingUrlTemplate_codec = pb::FieldCodec.ForClassWrapper<string>(106);
    private string trackingUrlTemplate_;
    /// <summary>
    /// The URL template for constructing a tracking URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TrackingUrlTemplate {
      get { return trackingUrlTemplate_; }
      set {
        trackingUrlTemplate_ = value;
      }
    }

    /// <summary>Field number for the "url_custom_parameters" field.</summary>
    public const int UrlCustomParametersFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.CustomParameter> _repeated_urlCustomParameters_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Ads.GoogleAds.V1.Common.CustomParameter.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.CustomParameter> urlCustomParameters_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.CustomParameter>();
    /// <summary>
    /// The list of mappings used to substitute custom parameter tags in a
    /// `tracking_url_template`, `final_urls`, or `mobile_final_urls`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.CustomParameter> UrlCustomParameters {
      get { return urlCustomParameters_; }
    }

    /// <summary>Field number for the "campaign" field.</summary>
    public const int CampaignFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_campaign_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string campaign_;
    /// <summary>
    /// The campaign to which the ad group belongs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Campaign {
      get { return campaign_; }
      set {
        campaign_ = value;
      }
    }

    /// <summary>Field number for the "cpc_bid_micros" field.</summary>
    public const int CpcBidMicrosFieldNumber = 14;
    private static readonly pb::FieldCodec<long?> _single_cpcBidMicros_codec = pb::FieldCodec.ForStructWrapper<long>(114);
    private long? cpcBidMicros_;
    /// <summary>
    /// The maximum CPC (cost-per-click) bid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? CpcBidMicros {
      get { return cpcBidMicros_; }
      set {
        cpcBidMicros_ = value;
      }
    }

    /// <summary>Field number for the "cpm_bid_micros" field.</summary>
    public const int CpmBidMicrosFieldNumber = 15;
    private static readonly pb::FieldCodec<long?> _single_cpmBidMicros_codec = pb::FieldCodec.ForStructWrapper<long>(122);
    private long? cpmBidMicros_;
    /// <summary>
    /// The maximum CPM (cost-per-thousand viewable impressions) bid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? CpmBidMicros {
      get { return cpmBidMicros_; }
      set {
        cpmBidMicros_ = value;
      }
    }

    /// <summary>Field number for the "target_cpa_micros" field.</summary>
    public const int TargetCpaMicrosFieldNumber = 27;
    private static readonly pb::FieldCodec<long?> _single_targetCpaMicros_codec = pb::FieldCodec.ForStructWrapper<long>(218);
    private long? targetCpaMicros_;
    /// <summary>
    /// The target CPA (cost-per-acquisition).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? TargetCpaMicros {
      get { return targetCpaMicros_; }
      set {
        targetCpaMicros_ = value;
      }
    }

    /// <summary>Field number for the "cpv_bid_micros" field.</summary>
    public const int CpvBidMicrosFieldNumber = 17;
    private static readonly pb::FieldCodec<long?> _single_cpvBidMicros_codec = pb::FieldCodec.ForStructWrapper<long>(138);
    private long? cpvBidMicros_;
    /// <summary>
    /// The CPV (cost-per-view) bid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? CpvBidMicros {
      get { return cpvBidMicros_; }
      set {
        cpvBidMicros_ = value;
      }
    }

    /// <summary>Field number for the "target_cpm_micros" field.</summary>
    public const int TargetCpmMicrosFieldNumber = 26;
    private static readonly pb::FieldCodec<long?> _single_targetCpmMicros_codec = pb::FieldCodec.ForStructWrapper<long>(210);
    private long? targetCpmMicros_;
    /// <summary>
    /// Average amount in micros that the advertiser is willing to pay for every
    /// thousand times the ad is shown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? TargetCpmMicros {
      get { return targetCpmMicros_; }
      set {
        targetCpmMicros_ = value;
      }
    }

    /// <summary>Field number for the "target_roas" field.</summary>
    public const int TargetRoasFieldNumber = 30;
    private static readonly pb::FieldCodec<double?> _single_targetRoas_codec = pb::FieldCodec.ForStructWrapper<double>(242);
    private double? targetRoas_;
    /// <summary>
    /// The target ROAS (return-on-ad-spend) override. If the ad group's campaign
    /// bidding strategy is a standard Target ROAS strategy, then this field
    /// overrides the target ROAS specified in the campaign's bidding strategy.
    /// Otherwise, this value is ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? TargetRoas {
      get { return targetRoas_; }
      set {
        targetRoas_ = value;
      }
    }

    /// <summary>Field number for the "percent_cpc_bid_micros" field.</summary>
    public const int PercentCpcBidMicrosFieldNumber = 20;
    private static readonly pb::FieldCodec<long?> _single_percentCpcBidMicros_codec = pb::FieldCodec.ForStructWrapper<long>(162);
    private long? percentCpcBidMicros_;
    /// <summary>
    /// The percent cpc bid amount, expressed as a fraction of the advertised price
    /// for some good or service. The valid range for the fraction is [0,1) and the
    /// value stored here is 1,000,000 * [fraction].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? PercentCpcBidMicros {
      get { return percentCpcBidMicros_; }
      set {
        percentCpcBidMicros_ = value;
      }
    }

    /// <summary>Field number for the "explorer_auto_optimizer_setting" field.</summary>
    public const int ExplorerAutoOptimizerSettingFieldNumber = 21;
    private global::Google.Ads.GoogleAds.V1.Common.ExplorerAutoOptimizerSetting explorerAutoOptimizerSetting_;
    /// <summary>
    /// Settings for the Display Campaign Optimizer, initially termed "Explorer".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Common.ExplorerAutoOptimizerSetting ExplorerAutoOptimizerSetting {
      get { return explorerAutoOptimizerSetting_; }
      set {
        explorerAutoOptimizerSetting_ = value;
      }
    }

    /// <summary>Field number for the "display_custom_bid_dimension" field.</summary>
    public const int DisplayCustomBidDimensionFieldNumber = 23;
    private global::Google.Ads.GoogleAds.V1.Enums.TargetingDimensionEnum.Types.TargetingDimension displayCustomBidDimension_ = 0;
    /// <summary>
    /// Allows advertisers to specify a targeting dimension on which to place
    /// absolute bids. This is only applicable for campaigns that target only the
    /// display network and not search.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Enums.TargetingDimensionEnum.Types.TargetingDimension DisplayCustomBidDimension {
      get { return displayCustomBidDimension_; }
      set {
        displayCustomBidDimension_ = value;
      }
    }

    /// <summary>Field number for the "final_url_suffix" field.</summary>
    public const int FinalUrlSuffixFieldNumber = 24;
    private static readonly pb::FieldCodec<string> _single_finalUrlSuffix_codec = pb::FieldCodec.ForClassWrapper<string>(194);
    private string finalUrlSuffix_;
    /// <summary>
    /// URL template for appending params to Final URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FinalUrlSuffix {
      get { return finalUrlSuffix_; }
      set {
        finalUrlSuffix_ = value;
      }
    }

    /// <summary>Field number for the "targeting_setting" field.</summary>
    public const int TargetingSettingFieldNumber = 25;
    private global::Google.Ads.GoogleAds.V1.Common.TargetingSetting targetingSetting_;
    /// <summary>
    /// Setting for targeting related features.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Common.TargetingSetting TargetingSetting {
      get { return targetingSetting_; }
      set {
        targetingSetting_ = value;
      }
    }

    /// <summary>Field number for the "effective_target_cpa_micros" field.</summary>
    public const int EffectiveTargetCpaMicrosFieldNumber = 28;
    private static readonly pb::FieldCodec<long?> _single_effectiveTargetCpaMicros_codec = pb::FieldCodec.ForStructWrapper<long>(226);
    private long? effectiveTargetCpaMicros_;
    /// <summary>
    /// The effective target CPA (cost-per-acquisition).
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? EffectiveTargetCpaMicros {
      get { return effectiveTargetCpaMicros_; }
      set {
        effectiveTargetCpaMicros_ = value;
      }
    }

    /// <summary>Field number for the "effective_target_cpa_source" field.</summary>
    public const int EffectiveTargetCpaSourceFieldNumber = 29;
    private global::Google.Ads.GoogleAds.V1.Enums.BiddingSourceEnum.Types.BiddingSource effectiveTargetCpaSource_ = 0;
    /// <summary>
    /// Source of the effective target CPA.
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Enums.BiddingSourceEnum.Types.BiddingSource EffectiveTargetCpaSource {
      get { return effectiveTargetCpaSource_; }
      set {
        effectiveTargetCpaSource_ = value;
      }
    }

    /// <summary>Field number for the "effective_target_roas" field.</summary>
    public const int EffectiveTargetRoasFieldNumber = 31;
    private static readonly pb::FieldCodec<double?> _single_effectiveTargetRoas_codec = pb::FieldCodec.ForStructWrapper<double>(250);
    private double? effectiveTargetRoas_;
    /// <summary>
    /// The effective target ROAS (return-on-ad-spend).
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? EffectiveTargetRoas {
      get { return effectiveTargetRoas_; }
      set {
        effectiveTargetRoas_ = value;
      }
    }

    /// <summary>Field number for the "effective_target_roas_source" field.</summary>
    public const int EffectiveTargetRoasSourceFieldNumber = 32;
    private global::Google.Ads.GoogleAds.V1.Enums.BiddingSourceEnum.Types.BiddingSource effectiveTargetRoasSource_ = 0;
    /// <summary>
    /// Source of the effective target ROAS.
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Enums.BiddingSourceEnum.Types.BiddingSource EffectiveTargetRoasSource {
      get { return effectiveTargetRoasSource_; }
      set {
        effectiveTargetRoasSource_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Status != other.Status) return false;
      if (Type != other.Type) return false;
      if (AdRotationMode != other.AdRotationMode) return false;
      if (BaseAdGroup != other.BaseAdGroup) return false;
      if (TrackingUrlTemplate != other.TrackingUrlTemplate) return false;
      if(!urlCustomParameters_.Equals(other.urlCustomParameters_)) return false;
      if (Campaign != other.Campaign) return false;
      if (CpcBidMicros != other.CpcBidMicros) return false;
      if (CpmBidMicros != other.CpmBidMicros) return false;
      if (TargetCpaMicros != other.TargetCpaMicros) return false;
      if (CpvBidMicros != other.CpvBidMicros) return false;
      if (TargetCpmMicros != other.TargetCpmMicros) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(TargetRoas, other.TargetRoas)) return false;
      if (PercentCpcBidMicros != other.PercentCpcBidMicros) return false;
      if (!object.Equals(ExplorerAutoOptimizerSetting, other.ExplorerAutoOptimizerSetting)) return false;
      if (DisplayCustomBidDimension != other.DisplayCustomBidDimension) return false;
      if (FinalUrlSuffix != other.FinalUrlSuffix) return false;
      if (!object.Equals(TargetingSetting, other.TargetingSetting)) return false;
      if (EffectiveTargetCpaMicros != other.EffectiveTargetCpaMicros) return false;
      if (EffectiveTargetCpaSource != other.EffectiveTargetCpaSource) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(EffectiveTargetRoas, other.EffectiveTargetRoas)) return false;
      if (EffectiveTargetRoasSource != other.EffectiveTargetRoasSource) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (AdRotationMode != 0) hash ^= AdRotationMode.GetHashCode();
      if (baseAdGroup_ != null) hash ^= BaseAdGroup.GetHashCode();
      if (trackingUrlTemplate_ != null) hash ^= TrackingUrlTemplate.GetHashCode();
      hash ^= urlCustomParameters_.GetHashCode();
      if (campaign_ != null) hash ^= Campaign.GetHashCode();
      if (cpcBidMicros_ != null) hash ^= CpcBidMicros.GetHashCode();
      if (cpmBidMicros_ != null) hash ^= CpmBidMicros.GetHashCode();
      if (targetCpaMicros_ != null) hash ^= TargetCpaMicros.GetHashCode();
      if (cpvBidMicros_ != null) hash ^= CpvBidMicros.GetHashCode();
      if (targetCpmMicros_ != null) hash ^= TargetCpmMicros.GetHashCode();
      if (targetRoas_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(TargetRoas);
      if (percentCpcBidMicros_ != null) hash ^= PercentCpcBidMicros.GetHashCode();
      if (explorerAutoOptimizerSetting_ != null) hash ^= ExplorerAutoOptimizerSetting.GetHashCode();
      if (DisplayCustomBidDimension != 0) hash ^= DisplayCustomBidDimension.GetHashCode();
      if (finalUrlSuffix_ != null) hash ^= FinalUrlSuffix.GetHashCode();
      if (targetingSetting_ != null) hash ^= TargetingSetting.GetHashCode();
      if (effectiveTargetCpaMicros_ != null) hash ^= EffectiveTargetCpaMicros.GetHashCode();
      if (EffectiveTargetCpaSource != 0) hash ^= EffectiveTargetCpaSource.GetHashCode();
      if (effectiveTargetRoas_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(EffectiveTargetRoas);
      if (EffectiveTargetRoasSource != 0) hash ^= EffectiveTargetRoasSource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (Status != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Status);
      }
      urlCustomParameters_.WriteTo(output, _repeated_urlCustomParameters_codec);
      if (campaign_ != null) {
        _single_campaign_codec.WriteTagAndValue(output, Campaign);
      }
      if (Type != 0) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Type);
      }
      if (trackingUrlTemplate_ != null) {
        _single_trackingUrlTemplate_codec.WriteTagAndValue(output, TrackingUrlTemplate);
      }
      if (cpcBidMicros_ != null) {
        _single_cpcBidMicros_codec.WriteTagAndValue(output, CpcBidMicros);
      }
      if (cpmBidMicros_ != null) {
        _single_cpmBidMicros_codec.WriteTagAndValue(output, CpmBidMicros);
      }
      if (cpvBidMicros_ != null) {
        _single_cpvBidMicros_codec.WriteTagAndValue(output, CpvBidMicros);
      }
      if (baseAdGroup_ != null) {
        _single_baseAdGroup_codec.WriteTagAndValue(output, BaseAdGroup);
      }
      if (percentCpcBidMicros_ != null) {
        _single_percentCpcBidMicros_codec.WriteTagAndValue(output, PercentCpcBidMicros);
      }
      if (explorerAutoOptimizerSetting_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(ExplorerAutoOptimizerSetting);
      }
      if (AdRotationMode != 0) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) AdRotationMode);
      }
      if (DisplayCustomBidDimension != 0) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) DisplayCustomBidDimension);
      }
      if (finalUrlSuffix_ != null) {
        _single_finalUrlSuffix_codec.WriteTagAndValue(output, FinalUrlSuffix);
      }
      if (targetingSetting_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(TargetingSetting);
      }
      if (targetCpmMicros_ != null) {
        _single_targetCpmMicros_codec.WriteTagAndValue(output, TargetCpmMicros);
      }
      if (targetCpaMicros_ != null) {
        _single_targetCpaMicros_codec.WriteTagAndValue(output, TargetCpaMicros);
      }
      if (effectiveTargetCpaMicros_ != null) {
        _single_effectiveTargetCpaMicros_codec.WriteTagAndValue(output, EffectiveTargetCpaMicros);
      }
      if (EffectiveTargetCpaSource != 0) {
        output.WriteRawTag(232, 1);
        output.WriteEnum((int) EffectiveTargetCpaSource);
      }
      if (targetRoas_ != null) {
        _single_targetRoas_codec.WriteTagAndValue(output, TargetRoas);
      }
      if (effectiveTargetRoas_ != null) {
        _single_effectiveTargetRoas_codec.WriteTagAndValue(output, EffectiveTargetRoas);
      }
      if (EffectiveTargetRoasSource != 0) {
        output.WriteRawTag(128, 2);
        output.WriteEnum((int) EffectiveTargetRoasSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (AdRotationMode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AdRotationMode);
      }
      if (baseAdGroup_ != null) {
        size += _single_baseAdGroup_codec.CalculateSizeWithTag(BaseAdGroup);
      }
      if (trackingUrlTemplate_ != null) {
        size += _single_trackingUrlTemplate_codec.CalculateSizeWithTag(TrackingUrlTemplate);
      }
      size += urlCustomParameters_.CalculateSize(_repeated_urlCustomParameters_codec);
      if (campaign_ != null) {
        size += _single_campaign_codec.CalculateSizeWithTag(Campaign);
      }
      if (cpcBidMicros_ != null) {
        size += _single_cpcBidMicros_codec.CalculateSizeWithTag(CpcBidMicros);
      }
      if (cpmBidMicros_ != null) {
        size += _single_cpmBidMicros_codec.CalculateSizeWithTag(CpmBidMicros);
      }
      if (targetCpaMicros_ != null) {
        size += _single_targetCpaMicros_codec.CalculateSizeWithTag(TargetCpaMicros);
      }
      if (cpvBidMicros_ != null) {
        size += _single_cpvBidMicros_codec.CalculateSizeWithTag(CpvBidMicros);
      }
      if (targetCpmMicros_ != null) {
        size += _single_targetCpmMicros_codec.CalculateSizeWithTag(TargetCpmMicros);
      }
      if (targetRoas_ != null) {
        size += _single_targetRoas_codec.CalculateSizeWithTag(TargetRoas);
      }
      if (percentCpcBidMicros_ != null) {
        size += _single_percentCpcBidMicros_codec.CalculateSizeWithTag(PercentCpcBidMicros);
      }
      if (explorerAutoOptimizerSetting_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ExplorerAutoOptimizerSetting);
      }
      if (DisplayCustomBidDimension != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) DisplayCustomBidDimension);
      }
      if (finalUrlSuffix_ != null) {
        size += _single_finalUrlSuffix_codec.CalculateSizeWithTag(FinalUrlSuffix);
      }
      if (targetingSetting_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TargetingSetting);
      }
      if (effectiveTargetCpaMicros_ != null) {
        size += _single_effectiveTargetCpaMicros_codec.CalculateSizeWithTag(EffectiveTargetCpaMicros);
      }
      if (EffectiveTargetCpaSource != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) EffectiveTargetCpaSource);
      }
      if (effectiveTargetRoas_ != null) {
        size += _single_effectiveTargetRoas_codec.CalculateSizeWithTag(EffectiveTargetRoas);
      }
      if (EffectiveTargetRoasSource != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) EffectiveTargetRoasSource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdGroup other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0L) {
          Id = other.Id;
        }
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.AdRotationMode != 0) {
        AdRotationMode = other.AdRotationMode;
      }
      if (other.baseAdGroup_ != null) {
        if (baseAdGroup_ == null || other.BaseAdGroup != "") {
          BaseAdGroup = other.BaseAdGroup;
        }
      }
      if (other.trackingUrlTemplate_ != null) {
        if (trackingUrlTemplate_ == null || other.TrackingUrlTemplate != "") {
          TrackingUrlTemplate = other.TrackingUrlTemplate;
        }
      }
      urlCustomParameters_.Add(other.urlCustomParameters_);
      if (other.campaign_ != null) {
        if (campaign_ == null || other.Campaign != "") {
          Campaign = other.Campaign;
        }
      }
      if (other.cpcBidMicros_ != null) {
        if (cpcBidMicros_ == null || other.CpcBidMicros != 0L) {
          CpcBidMicros = other.CpcBidMicros;
        }
      }
      if (other.cpmBidMicros_ != null) {
        if (cpmBidMicros_ == null || other.CpmBidMicros != 0L) {
          CpmBidMicros = other.CpmBidMicros;
        }
      }
      if (other.targetCpaMicros_ != null) {
        if (targetCpaMicros_ == null || other.TargetCpaMicros != 0L) {
          TargetCpaMicros = other.TargetCpaMicros;
        }
      }
      if (other.cpvBidMicros_ != null) {
        if (cpvBidMicros_ == null || other.CpvBidMicros != 0L) {
          CpvBidMicros = other.CpvBidMicros;
        }
      }
      if (other.targetCpmMicros_ != null) {
        if (targetCpmMicros_ == null || other.TargetCpmMicros != 0L) {
          TargetCpmMicros = other.TargetCpmMicros;
        }
      }
      if (other.targetRoas_ != null) {
        if (targetRoas_ == null || other.TargetRoas != 0D) {
          TargetRoas = other.TargetRoas;
        }
      }
      if (other.percentCpcBidMicros_ != null) {
        if (percentCpcBidMicros_ == null || other.PercentCpcBidMicros != 0L) {
          PercentCpcBidMicros = other.PercentCpcBidMicros;
        }
      }
      if (other.explorerAutoOptimizerSetting_ != null) {
        if (explorerAutoOptimizerSetting_ == null) {
          explorerAutoOptimizerSetting_ = new global::Google.Ads.GoogleAds.V1.Common.ExplorerAutoOptimizerSetting();
        }
        ExplorerAutoOptimizerSetting.MergeFrom(other.ExplorerAutoOptimizerSetting);
      }
      if (other.DisplayCustomBidDimension != 0) {
        DisplayCustomBidDimension = other.DisplayCustomBidDimension;
      }
      if (other.finalUrlSuffix_ != null) {
        if (finalUrlSuffix_ == null || other.FinalUrlSuffix != "") {
          FinalUrlSuffix = other.FinalUrlSuffix;
        }
      }
      if (other.targetingSetting_ != null) {
        if (targetingSetting_ == null) {
          targetingSetting_ = new global::Google.Ads.GoogleAds.V1.Common.TargetingSetting();
        }
        TargetingSetting.MergeFrom(other.TargetingSetting);
      }
      if (other.effectiveTargetCpaMicros_ != null) {
        if (effectiveTargetCpaMicros_ == null || other.EffectiveTargetCpaMicros != 0L) {
          EffectiveTargetCpaMicros = other.EffectiveTargetCpaMicros;
        }
      }
      if (other.EffectiveTargetCpaSource != 0) {
        EffectiveTargetCpaSource = other.EffectiveTargetCpaSource;
      }
      if (other.effectiveTargetRoas_ != null) {
        if (effectiveTargetRoas_ == null || other.EffectiveTargetRoas != 0D) {
          EffectiveTargetRoas = other.EffectiveTargetRoas;
        }
      }
      if (other.EffectiveTargetRoasSource != 0) {
        EffectiveTargetRoasSource = other.EffectiveTargetRoasSource;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 26: {
            long? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0L) {
              Id = value;
            }
            break;
          }
          case 34: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 40: {
            status_ = (global::Google.Ads.GoogleAds.V1.Enums.AdGroupStatusEnum.Types.AdGroupStatus) input.ReadEnum();
            break;
          }
          case 50: {
            urlCustomParameters_.AddEntriesFrom(input, _repeated_urlCustomParameters_codec);
            break;
          }
          case 82: {
            string value = _single_campaign_codec.Read(input);
            if (campaign_ == null || value != "") {
              Campaign = value;
            }
            break;
          }
          case 96: {
            type_ = (global::Google.Ads.GoogleAds.V1.Enums.AdGroupTypeEnum.Types.AdGroupType) input.ReadEnum();
            break;
          }
          case 106: {
            string value = _single_trackingUrlTemplate_codec.Read(input);
            if (trackingUrlTemplate_ == null || value != "") {
              TrackingUrlTemplate = value;
            }
            break;
          }
          case 114: {
            long? value = _single_cpcBidMicros_codec.Read(input);
            if (cpcBidMicros_ == null || value != 0L) {
              CpcBidMicros = value;
            }
            break;
          }
          case 122: {
            long? value = _single_cpmBidMicros_codec.Read(input);
            if (cpmBidMicros_ == null || value != 0L) {
              CpmBidMicros = value;
            }
            break;
          }
          case 138: {
            long? value = _single_cpvBidMicros_codec.Read(input);
            if (cpvBidMicros_ == null || value != 0L) {
              CpvBidMicros = value;
            }
            break;
          }
          case 146: {
            string value = _single_baseAdGroup_codec.Read(input);
            if (baseAdGroup_ == null || value != "") {
              BaseAdGroup = value;
            }
            break;
          }
          case 162: {
            long? value = _single_percentCpcBidMicros_codec.Read(input);
            if (percentCpcBidMicros_ == null || value != 0L) {
              PercentCpcBidMicros = value;
            }
            break;
          }
          case 170: {
            if (explorerAutoOptimizerSetting_ == null) {
              explorerAutoOptimizerSetting_ = new global::Google.Ads.GoogleAds.V1.Common.ExplorerAutoOptimizerSetting();
            }
            input.ReadMessage(explorerAutoOptimizerSetting_);
            break;
          }
          case 176: {
            adRotationMode_ = (global::Google.Ads.GoogleAds.V1.Enums.AdGroupAdRotationModeEnum.Types.AdGroupAdRotationMode) input.ReadEnum();
            break;
          }
          case 184: {
            displayCustomBidDimension_ = (global::Google.Ads.GoogleAds.V1.Enums.TargetingDimensionEnum.Types.TargetingDimension) input.ReadEnum();
            break;
          }
          case 194: {
            string value = _single_finalUrlSuffix_codec.Read(input);
            if (finalUrlSuffix_ == null || value != "") {
              FinalUrlSuffix = value;
            }
            break;
          }
          case 202: {
            if (targetingSetting_ == null) {
              targetingSetting_ = new global::Google.Ads.GoogleAds.V1.Common.TargetingSetting();
            }
            input.ReadMessage(targetingSetting_);
            break;
          }
          case 210: {
            long? value = _single_targetCpmMicros_codec.Read(input);
            if (targetCpmMicros_ == null || value != 0L) {
              TargetCpmMicros = value;
            }
            break;
          }
          case 218: {
            long? value = _single_targetCpaMicros_codec.Read(input);
            if (targetCpaMicros_ == null || value != 0L) {
              TargetCpaMicros = value;
            }
            break;
          }
          case 226: {
            long? value = _single_effectiveTargetCpaMicros_codec.Read(input);
            if (effectiveTargetCpaMicros_ == null || value != 0L) {
              EffectiveTargetCpaMicros = value;
            }
            break;
          }
          case 232: {
            effectiveTargetCpaSource_ = (global::Google.Ads.GoogleAds.V1.Enums.BiddingSourceEnum.Types.BiddingSource) input.ReadEnum();
            break;
          }
          case 242: {
            double? value = _single_targetRoas_codec.Read(input);
            if (targetRoas_ == null || value != 0D) {
              TargetRoas = value;
            }
            break;
          }
          case 250: {
            double? value = _single_effectiveTargetRoas_codec.Read(input);
            if (effectiveTargetRoas_ == null || value != 0D) {
              EffectiveTargetRoas = value;
            }
            break;
          }
          case 256: {
            effectiveTargetRoasSource_ = (global::Google.Ads.GoogleAds.V1.Enums.BiddingSourceEnum.Types.BiddingSource) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
