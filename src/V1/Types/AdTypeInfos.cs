// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v1/common/ad_type_infos.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V1.Common {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v1/common/ad_type_infos.proto</summary>
  public static partial class AdTypeInfosReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v1/common/ad_type_infos.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AdTypeInfosReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJnb29nbGUvYWRzL2dvb2dsZWFkcy92MS9jb21tb24vYWRfdHlwZV9pbmZv",
            "cy5wcm90bxIeZ29vZ2xlLmFkcy5nb29nbGVhZHMudjEuY29tbW9uGi1nb29n",
            "bGUvYWRzL2dvb2dsZWFkcy92MS9jb21tb24vYWRfYXNzZXQucHJvdG8aQ2dv",
            "b2dsZS9hZHMvZ29vZ2xlYWRzL3YxL2VudW1zL2NhbGxfY29udmVyc2lvbl9y",
            "ZXBvcnRpbmdfc3RhdGUucHJvdG8aPWdvb2dsZS9hZHMvZ29vZ2xlYWRzL3Yx",
            "L2VudW1zL2Rpc3BsYXlfYWRfZm9ybWF0X3NldHRpbmcucHJvdG8aP2dvb2ds",
            "ZS9hZHMvZ29vZ2xlYWRzL3YxL2VudW1zL2Rpc3BsYXlfdXBsb2FkX3Byb2R1",
            "Y3RfdHlwZS5wcm90bxpDZ29vZ2xlL2Fkcy9nb29nbGVhZHMvdjEvZW51bXMv",
            "bGVnYWN5X2FwcF9pbnN0YWxsX2FkX2FwcF9zdG9yZS5wcm90bxotZ29vZ2xl",
            "L2Fkcy9nb29nbGVhZHMvdjEvZW51bXMvbWltZV90eXBlLnByb3RvGh5nb29n",
            "bGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3Rh",
            "dGlvbnMucHJvdG8ipAEKClRleHRBZEluZm8SLgoIaGVhZGxpbmUYASABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMgoMZGVzY3JpcHRpb24x",
            "GAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjIKDGRlc2Ny",
            "aXB0aW9uMhgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZSL3",
            "AgoSRXhwYW5kZWRUZXh0QWRJbmZvEjQKDmhlYWRsaW5lX3BhcnQxGAEgASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjQKDmhlYWRsaW5lX3Bh",
            "cnQyGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjQKDmhl",
            "YWRsaW5lX3BhcnQzGAYgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1Zh",
            "bHVlEjEKC2Rlc2NyaXB0aW9uGAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0",
            "cmluZ1ZhbHVlEjIKDGRlc2NyaXB0aW9uMhgHIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZRIrCgVwYXRoMRgEIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZRIrCgVwYXRoMhgFIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZSLnBQoOQ2FsbE9ubHlBZEluZm8SMgoMY291bnRy",
            "eV9jb2RlGAEgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjIK",
            "DHBob25lX251bWJlchgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZRIzCg1idXNpbmVzc19uYW1lGAMgASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cmluZ1ZhbHVlEi8KCWhlYWRsaW5lMRgLIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZRIvCgloZWFkbGluZTIYDCABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWUSMgoMZGVzY3JpcHRpb24xGAQgASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjIKDGRlc2NyaXB0aW9uMhgF",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIwCgxjYWxsX3Ry",
            "YWNrZWQYBiABKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlEjsKF2Rp",
            "c2FibGVfY2FsbF9jb252ZXJzaW9uGAcgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LkJvb2xWYWx1ZRJDCh1waG9uZV9udW1iZXJfdmVyaWZpY2F0aW9uX3VybBgI",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI3ChFjb252ZXJz",
            "aW9uX2FjdGlvbhgJIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRKAAQoaY29udmVyc2lvbl9yZXBvcnRpbmdfc3RhdGUYCiABKA4yXC5nb29n",
            "bGUuYWRzLmdvb2dsZWFkcy52MS5lbnVtcy5DYWxsQ29udmVyc2lvblJlcG9y",
            "dGluZ1N0YXRlRW51bS5DYWxsQ29udmVyc2lvblJlcG9ydGluZ1N0YXRlIlAK",
            "G0V4cGFuZGVkRHluYW1pY1NlYXJjaEFkSW5mbxIxCgtkZXNjcmlwdGlvbhgB",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZSINCgtIb3RlbEFk",
            "SW5mbyIVChNTaG9wcGluZ1NtYXJ0QWRJbmZvIhcKFVNob3BwaW5nUHJvZHVj",
            "dEFkSW5mbyJRCh9TaG9wcGluZ0NvbXBhcmlzb25MaXN0aW5nQWRJbmZvEi4K",
            "CGhlYWRsaW5lGAEgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "IqkECgtHbWFpbEFkSW5mbxI7CgZ0ZWFzZXIYASABKAsyKy5nb29nbGUuYWRz",
            "Lmdvb2dsZWFkcy52MS5jb21tb24uR21haWxUZWFzZXISMgoMaGVhZGVyX2lt",
            "YWdlGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjUKD21h",
            "cmtldGluZ19pbWFnZRgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZRI+ChhtYXJrZXRpbmdfaW1hZ2VfaGVhZGxpbmUYBCABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSQQobbWFya2V0aW5nX2ltYWdlX2Rl",
            "c2NyaXB0aW9uGAUgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "EmMKJm1hcmtldGluZ19pbWFnZV9kaXNwbGF5X2NhbGxfdG9fYWN0aW9uGAYg",
            "ASgLMjMuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjEuY29tbW9uLkRpc3BsYXlD",
            "YWxsVG9BY3Rpb24SRAoOcHJvZHVjdF9pbWFnZXMYByADKAsyLC5nb29nbGUu",
            "YWRzLmdvb2dsZWFkcy52MS5jb21tb24uUHJvZHVjdEltYWdlEkQKDnByb2R1",
            "Y3RfdmlkZW9zGAggAygLMiwuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjEuY29t",
            "bW9uLlByb2R1Y3RWaWRlbyLXAQoLR21haWxUZWFzZXISLgoIaGVhZGxpbmUY",
            "ASABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMQoLZGVzY3Jp",
            "cHRpb24YAiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMwoN",
            "YnVzaW5lc3NfbmFtZRgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZRIwCgpsb2dvX2ltYWdlGAQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0",
            "cmluZ1ZhbHVlIqwBChNEaXNwbGF5Q2FsbFRvQWN0aW9uEioKBHRleHQYASAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMAoKdGV4dF9jb2xv",
            "chgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI3ChF1cmxf",
            "Y29sbGVjdGlvbl9pZBgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZSLLAQoMUHJvZHVjdEltYWdlEjMKDXByb2R1Y3RfaW1hZ2UYASABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMQoLZGVzY3JpcHRpb24Y",
            "AiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSUwoWZGlzcGxh",
            "eV9jYWxsX3RvX2FjdGlvbhgDIAEoCzIzLmdvb2dsZS5hZHMuZ29vZ2xlYWRz",
            "LnYxLmNvbW1vbi5EaXNwbGF5Q2FsbFRvQWN0aW9uIkMKDFByb2R1Y3RWaWRl",
            "bxIzCg1wcm9kdWN0X3ZpZGVvGAEgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0",
            "cmluZ1ZhbHVlIvEECgtJbWFnZUFkSW5mbxIwCgtwaXhlbF93aWR0aBgEIAEo",
            "CzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEjEKDHBpeGVsX2hlaWdo",
            "dBgFIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEi8KCWltYWdl",
            "X3VybBgGIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI4ChNw",
            "cmV2aWV3X3BpeGVsX3dpZHRoGAcgASgLMhsuZ29vZ2xlLnByb3RvYnVmLklu",
            "dDY0VmFsdWUSOQoUcHJldmlld19waXhlbF9oZWlnaHQYCCABKAsyGy5nb29n",
            "bGUucHJvdG9idWYuSW50NjRWYWx1ZRI3ChFwcmV2aWV3X2ltYWdlX3VybBgJ",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRJHCgltaW1lX3R5",
            "cGUYCiABKA4yNC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MS5lbnVtcy5NaW1l",
            "VHlwZUVudW0uTWltZVR5cGUSKgoEbmFtZRgLIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZRIyCgptZWRpYV9maWxlGAEgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlSAASKwoEZGF0YRgCIAEoCzIbLmdvb2ds",
            "ZS5wcm90b2J1Zi5CeXRlc1ZhbHVlSAASPwoYYWRfaWRfdG9fY29weV9pbWFn",
            "ZV9mcm9tGAMgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWVIAEIH",
            "CgVpbWFnZSIbChlWaWRlb0J1bXBlckluU3RyZWFtQWRJbmZvIiEKH1ZpZGVv",
            "Tm9uU2tpcHBhYmxlSW5TdHJlYW1BZEluZm8ixwEKG1ZpZGVvVHJ1ZVZpZXdJ",
            "blN0cmVhbUFkSW5mbxI5ChNhY3Rpb25fYnV0dG9uX2xhYmVsGAEgASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjUKD2FjdGlvbl9oZWFkbGlu",
            "ZRgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI2ChBjb21w",
            "YW5pb25fYmFubmVyGAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1Zh",
            "bHVlInkKFFZpZGVvT3V0c3RyZWFtQWRJbmZvEi4KCGhlYWRsaW5lGAEgASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjEKC2Rlc2NyaXB0aW9u",
            "GAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlIo4DCgtWaWRl",
            "b0FkSW5mbxIwCgptZWRpYV9maWxlGAEgASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cmluZ1ZhbHVlElAKCWluX3N0cmVhbRgCIAEoCzI7Lmdvb2dsZS5hZHMu",
            "Z29vZ2xlYWRzLnYxLmNvbW1vbi5WaWRlb1RydWVWaWV3SW5TdHJlYW1BZElu",
            "Zm9IABJLCgZidW1wZXIYAyABKAsyOS5nb29nbGUuYWRzLmdvb2dsZWFkcy52",
            "MS5jb21tb24uVmlkZW9CdW1wZXJJblN0cmVhbUFkSW5mb0gAEkoKCm91dF9z",
            "dHJlYW0YBCABKAsyNC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MS5jb21tb24u",
            "VmlkZW9PdXRzdHJlYW1BZEluZm9IABJYCg1ub25fc2tpcHBhYmxlGAUgASgL",
            "Mj8uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjEuY29tbW9uLlZpZGVvTm9uU2tp",
            "cHBhYmxlSW5TdHJlYW1BZEluZm9IAEIICgZmb3JtYXQi9QEKFlJlc3BvbnNp",
            "dmVTZWFyY2hBZEluZm8SPgoJaGVhZGxpbmVzGAEgAygLMisuZ29vZ2xlLmFk",
            "cy5nb29nbGVhZHMudjEuY29tbW9uLkFkVGV4dEFzc2V0EkEKDGRlc2NyaXB0",
            "aW9ucxgCIAMoCzIrLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxLmNvbW1vbi5B",
            "ZFRleHRBc3NldBIrCgVwYXRoMRgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZRIrCgVwYXRoMhgEIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZSL9BgodTGVnYWN5UmVzcG9uc2l2ZURpc3BsYXlBZEluZm8S",
            "NAoOc2hvcnRfaGVhZGxpbmUYASABKAsyHC5nb29nbGUucHJvdG9idWYuU3Ry",
            "aW5nVmFsdWUSMwoNbG9uZ19oZWFkbGluZRgCIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZRIxCgtkZXNjcmlwdGlvbhgDIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIzCg1idXNpbmVzc19uYW1lGAQgASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjgKFGFsbG93X2ZsZXhp",
            "YmxlX2NvbG9yGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRIy",
            "CgxhY2NlbnRfY29sb3IYBiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5n",
            "VmFsdWUSMAoKbWFpbl9jb2xvchgHIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZRI5ChNjYWxsX3RvX2FjdGlvbl90ZXh0GAggASgLMhwuZ29v",
            "Z2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjAKCmxvZ29faW1hZ2UYCSABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSNwoRc3F1YXJlX2xvZ29f",
            "aW1hZ2UYCiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSNQoP",
            "bWFya2V0aW5nX2ltYWdlGAsgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlEjwKFnNxdWFyZV9tYXJrZXRpbmdfaW1hZ2UYDCABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSaAoOZm9ybWF0X3NldHRpbmcYDSAB",
            "KA4yUC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MS5lbnVtcy5EaXNwbGF5QWRG",
            "b3JtYXRTZXR0aW5nRW51bS5EaXNwbGF5QWRGb3JtYXRTZXR0aW5nEjIKDHBy",
            "aWNlX3ByZWZpeBgOIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRIwCgpwcm9tb190ZXh0GA8gASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlIqsDCglBcHBBZEluZm8SRgoRbWFuZGF0b3J5X2FkX3RleHQYASAB",
            "KAsyKy5nb29nbGUuYWRzLmdvb2dsZWFkcy52MS5jb21tb24uQWRUZXh0QXNz",
            "ZXQSPgoJaGVhZGxpbmVzGAIgAygLMisuZ29vZ2xlLmFkcy5nb29nbGVhZHMu",
            "djEuY29tbW9uLkFkVGV4dEFzc2V0EkEKDGRlc2NyaXB0aW9ucxgDIAMoCzIr",
            "Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxLmNvbW1vbi5BZFRleHRBc3NldBI8",
            "CgZpbWFnZXMYBCADKAsyLC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MS5jb21t",
            "b24uQWRJbWFnZUFzc2V0EkQKDnlvdXR1YmVfdmlkZW9zGAUgAygLMiwuZ29v",
            "Z2xlLmFkcy5nb29nbGVhZHMudjEuY29tbW9uLkFkVmlkZW9Bc3NldBJPChNo",
            "dG1sNV9tZWRpYV9idW5kbGVzGAYgAygLMjIuZ29vZ2xlLmFkcy5nb29nbGVh",
            "ZHMudjEuY29tbW9uLkFkTWVkaWFCdW5kbGVBc3NldCKUAgoTQXBwRW5nYWdl",
            "bWVudEFkSW5mbxI+CgloZWFkbGluZXMYASADKAsyKy5nb29nbGUuYWRzLmdv",
            "b2dsZWFkcy52MS5jb21tb24uQWRUZXh0QXNzZXQSQQoMZGVzY3JpcHRpb25z",
            "GAIgAygLMisuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjEuY29tbW9uLkFkVGV4",
            "dEFzc2V0EjwKBmltYWdlcxgDIAMoCzIsLmdvb2dsZS5hZHMuZ29vZ2xlYWRz",
            "LnYxLmNvbW1vbi5BZEltYWdlQXNzZXQSPAoGdmlkZW9zGAQgAygLMiwuZ29v",
            "Z2xlLmFkcy5nb29nbGVhZHMudjEuY29tbW9uLkFkVmlkZW9Bc3NldCLLAgoW",
            "TGVnYWN5QXBwSW5zdGFsbEFkSW5mbxIsCgZhcHBfaWQYASABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSawoJYXBwX3N0b3JlGAIgASgOMlgu",
            "Z29vZ2xlLmFkcy5nb29nbGVhZHMudjEuZW51bXMuTGVnYWN5QXBwSW5zdGFs",
            "bEFkQXBwU3RvcmVFbnVtLkxlZ2FjeUFwcEluc3RhbGxBZEFwcFN0b3JlEi4K",
            "CGhlYWRsaW5lGAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "EjIKDGRlc2NyaXB0aW9uMRgEIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJp",
            "bmdWYWx1ZRIyCgxkZXNjcmlwdGlvbjIYBSABKAsyHC5nb29nbGUucHJvdG9i",
            "dWYuU3RyaW5nVmFsdWUiqggKF1Jlc3BvbnNpdmVEaXNwbGF5QWRJbmZvEkYK",
            "EG1hcmtldGluZ19pbWFnZXMYASADKAsyLC5nb29nbGUuYWRzLmdvb2dsZWFk",
            "cy52MS5jb21tb24uQWRJbWFnZUFzc2V0Ek0KF3NxdWFyZV9tYXJrZXRpbmdf",
            "aW1hZ2VzGAIgAygLMiwuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjEuY29tbW9u",
            "LkFkSW1hZ2VBc3NldBJBCgtsb2dvX2ltYWdlcxgDIAMoCzIsLmdvb2dsZS5h",
            "ZHMuZ29vZ2xlYWRzLnYxLmNvbW1vbi5BZEltYWdlQXNzZXQSSAoSc3F1YXJl",
            "X2xvZ29faW1hZ2VzGAQgAygLMiwuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjEu",
            "Y29tbW9uLkFkSW1hZ2VBc3NldBI+CgloZWFkbGluZXMYBSADKAsyKy5nb29n",
            "bGUuYWRzLmdvb2dsZWFkcy52MS5jb21tb24uQWRUZXh0QXNzZXQSQgoNbG9u",
            "Z19oZWFkbGluZRgGIAEoCzIrLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxLmNv",
            "bW1vbi5BZFRleHRBc3NldBJBCgxkZXNjcmlwdGlvbnMYByADKAsyKy5nb29n",
            "bGUuYWRzLmdvb2dsZWFkcy52MS5jb21tb24uQWRUZXh0QXNzZXQSRAoOeW91",
            "dHViZV92aWRlb3MYCCADKAsyLC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MS5j",
            "b21tb24uQWRWaWRlb0Fzc2V0EjMKDWJ1c2luZXNzX25hbWUYCSABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMAoKbWFpbl9jb2xvchgKIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIyCgxhY2NlbnRfY29s",
            "b3IYCyABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSOAoUYWxs",
            "b3dfZmxleGlibGVfY29sb3IYDCABKAsyGi5nb29nbGUucHJvdG9idWYuQm9v",
            "bFZhbHVlEjkKE2NhbGxfdG9fYWN0aW9uX3RleHQYDSABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWUSMgoMcHJpY2VfcHJlZml4GA4gASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjAKCnByb21vX3RleHQYDyAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSaAoOZm9ybWF0X3Nl",
            "dHRpbmcYECABKA4yUC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MS5lbnVtcy5E",
            "aXNwbGF5QWRGb3JtYXRTZXR0aW5nRW51bS5EaXNwbGF5QWRGb3JtYXRTZXR0",
            "aW5nIusBChNEaXNwbGF5VXBsb2FkQWRJbmZvEnkKG2Rpc3BsYXlfdXBsb2Fk",
            "X3Byb2R1Y3RfdHlwZRgBIAEoDjJULmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYx",
            "LmVudW1zLkRpc3BsYXlVcGxvYWRQcm9kdWN0VHlwZUVudW0uRGlzcGxheVVw",
            "bG9hZFByb2R1Y3RUeXBlEkoKDG1lZGlhX2J1bmRsZRgCIAEoCzIyLmdvb2ds",
            "ZS5hZHMuZ29vZ2xlYWRzLnYxLmNvbW1vbi5BZE1lZGlhQnVuZGxlQXNzZXRI",
            "AEINCgttZWRpYV9hc3NldELrAQoiY29tLmdvb2dsZS5hZHMuZ29vZ2xlYWRz",
            "LnYxLmNvbW1vbkIQQWRUeXBlSW5mb3NQcm90b1ABWkRnb29nbGUuZ29sYW5n",
            "Lm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2Fkcy9nb29nbGVhZHMvdjEvY29t",
            "bW9uO2NvbW1vbqICA0dBQaoCHkdvb2dsZS5BZHMuR29vZ2xlQWRzLlYxLkNv",
            "bW1vbsoCHkdvb2dsZVxBZHNcR29vZ2xlQWRzXFYxXENvbW1vbuoCIkdvb2ds",
            "ZTo6QWRzOjpHb29nbGVBZHM6OlYxOjpDb21tb25iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V1.Common.AdAssetReflection.Descriptor, global::Google.Ads.GoogleAds.V1.Enums.CallConversionReportingStateReflection.Descriptor, global::Google.Ads.GoogleAds.V1.Enums.DisplayAdFormatSettingReflection.Descriptor, global::Google.Ads.GoogleAds.V1.Enums.DisplayUploadProductTypeReflection.Descriptor, global::Google.Ads.GoogleAds.V1.Enums.LegacyAppInstallAdAppStoreReflection.Descriptor, global::Google.Ads.GoogleAds.V1.Enums.MimeTypeReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.TextAdInfo), global::Google.Ads.GoogleAds.V1.Common.TextAdInfo.Parser, new[]{ "Headline", "Description1", "Description2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.ExpandedTextAdInfo), global::Google.Ads.GoogleAds.V1.Common.ExpandedTextAdInfo.Parser, new[]{ "HeadlinePart1", "HeadlinePart2", "HeadlinePart3", "Description", "Description2", "Path1", "Path2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.CallOnlyAdInfo), global::Google.Ads.GoogleAds.V1.Common.CallOnlyAdInfo.Parser, new[]{ "CountryCode", "PhoneNumber", "BusinessName", "Headline1", "Headline2", "Description1", "Description2", "CallTracked", "DisableCallConversion", "PhoneNumberVerificationUrl", "ConversionAction", "ConversionReportingState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.ExpandedDynamicSearchAdInfo), global::Google.Ads.GoogleAds.V1.Common.ExpandedDynamicSearchAdInfo.Parser, new[]{ "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.HotelAdInfo), global::Google.Ads.GoogleAds.V1.Common.HotelAdInfo.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.ShoppingSmartAdInfo), global::Google.Ads.GoogleAds.V1.Common.ShoppingSmartAdInfo.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.ShoppingProductAdInfo), global::Google.Ads.GoogleAds.V1.Common.ShoppingProductAdInfo.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.ShoppingComparisonListingAdInfo), global::Google.Ads.GoogleAds.V1.Common.ShoppingComparisonListingAdInfo.Parser, new[]{ "Headline" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.GmailAdInfo), global::Google.Ads.GoogleAds.V1.Common.GmailAdInfo.Parser, new[]{ "Teaser", "HeaderImage", "MarketingImage", "MarketingImageHeadline", "MarketingImageDescription", "MarketingImageDisplayCallToAction", "ProductImages", "ProductVideos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.GmailTeaser), global::Google.Ads.GoogleAds.V1.Common.GmailTeaser.Parser, new[]{ "Headline", "Description", "BusinessName", "LogoImage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.DisplayCallToAction), global::Google.Ads.GoogleAds.V1.Common.DisplayCallToAction.Parser, new[]{ "Text", "TextColor", "UrlCollectionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.ProductImage), global::Google.Ads.GoogleAds.V1.Common.ProductImage.Parser, new[]{ "ProductImage_", "Description", "DisplayCallToAction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.ProductVideo), global::Google.Ads.GoogleAds.V1.Common.ProductVideo.Parser, new[]{ "ProductVideo_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.ImageAdInfo), global::Google.Ads.GoogleAds.V1.Common.ImageAdInfo.Parser, new[]{ "PixelWidth", "PixelHeight", "ImageUrl", "PreviewPixelWidth", "PreviewPixelHeight", "PreviewImageUrl", "MimeType", "Name", "MediaFile", "Data", "AdIdToCopyImageFrom" }, new[]{ "Image" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.VideoBumperInStreamAdInfo), global::Google.Ads.GoogleAds.V1.Common.VideoBumperInStreamAdInfo.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.VideoNonSkippableInStreamAdInfo), global::Google.Ads.GoogleAds.V1.Common.VideoNonSkippableInStreamAdInfo.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.VideoTrueViewInStreamAdInfo), global::Google.Ads.GoogleAds.V1.Common.VideoTrueViewInStreamAdInfo.Parser, new[]{ "ActionButtonLabel", "ActionHeadline", "CompanionBanner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.VideoOutstreamAdInfo), global::Google.Ads.GoogleAds.V1.Common.VideoOutstreamAdInfo.Parser, new[]{ "Headline", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.VideoAdInfo), global::Google.Ads.GoogleAds.V1.Common.VideoAdInfo.Parser, new[]{ "MediaFile", "InStream", "Bumper", "OutStream", "NonSkippable" }, new[]{ "Format" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.ResponsiveSearchAdInfo), global::Google.Ads.GoogleAds.V1.Common.ResponsiveSearchAdInfo.Parser, new[]{ "Headlines", "Descriptions", "Path1", "Path2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.LegacyResponsiveDisplayAdInfo), global::Google.Ads.GoogleAds.V1.Common.LegacyResponsiveDisplayAdInfo.Parser, new[]{ "ShortHeadline", "LongHeadline", "Description", "BusinessName", "AllowFlexibleColor", "AccentColor", "MainColor", "CallToActionText", "LogoImage", "SquareLogoImage", "MarketingImage", "SquareMarketingImage", "FormatSetting", "PricePrefix", "PromoText" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.AppAdInfo), global::Google.Ads.GoogleAds.V1.Common.AppAdInfo.Parser, new[]{ "MandatoryAdText", "Headlines", "Descriptions", "Images", "YoutubeVideos", "Html5MediaBundles" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.AppEngagementAdInfo), global::Google.Ads.GoogleAds.V1.Common.AppEngagementAdInfo.Parser, new[]{ "Headlines", "Descriptions", "Images", "Videos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.LegacyAppInstallAdInfo), global::Google.Ads.GoogleAds.V1.Common.LegacyAppInstallAdInfo.Parser, new[]{ "AppId", "AppStore", "Headline", "Description1", "Description2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.ResponsiveDisplayAdInfo), global::Google.Ads.GoogleAds.V1.Common.ResponsiveDisplayAdInfo.Parser, new[]{ "MarketingImages", "SquareMarketingImages", "LogoImages", "SquareLogoImages", "Headlines", "LongHeadline", "Descriptions", "YoutubeVideos", "BusinessName", "MainColor", "AccentColor", "AllowFlexibleColor", "CallToActionText", "PricePrefix", "PromoText", "FormatSetting" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.DisplayUploadAdInfo), global::Google.Ads.GoogleAds.V1.Common.DisplayUploadAdInfo.Parser, new[]{ "DisplayUploadProductType", "MediaBundle" }, new[]{ "MediaAsset" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A text ad.
  /// </summary>
  public sealed partial class TextAdInfo : pb::IMessage<TextAdInfo> {
    private static readonly pb::MessageParser<TextAdInfo> _parser = new pb::MessageParser<TextAdInfo>(() => new TextAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TextAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextAdInfo(TextAdInfo other) : this() {
      Headline = other.Headline;
      Description1 = other.Description1;
      Description2 = other.Description2;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextAdInfo Clone() {
      return new TextAdInfo(this);
    }

    /// <summary>Field number for the "headline" field.</summary>
    public const int HeadlineFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_headline_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string headline_;
    /// <summary>
    /// The headline of the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Headline {
      get { return headline_; }
      set {
        headline_ = value;
      }
    }


    /// <summary>Field number for the "description1" field.</summary>
    public const int Description1FieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_description1_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string description1_;
    /// <summary>
    /// The first line of the ad's description.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description1 {
      get { return description1_; }
      set {
        description1_ = value;
      }
    }


    /// <summary>Field number for the "description2" field.</summary>
    public const int Description2FieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_description2_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string description2_;
    /// <summary>
    /// The second line of the ad's description.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description2 {
      get { return description2_; }
      set {
        description2_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TextAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TextAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Headline != other.Headline) return false;
      if (Description1 != other.Description1) return false;
      if (Description2 != other.Description2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (headline_ != null) hash ^= Headline.GetHashCode();
      if (description1_ != null) hash ^= Description1.GetHashCode();
      if (description2_ != null) hash ^= Description2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (headline_ != null) {
        _single_headline_codec.WriteTagAndValue(output, Headline);
      }
      if (description1_ != null) {
        _single_description1_codec.WriteTagAndValue(output, Description1);
      }
      if (description2_ != null) {
        _single_description2_codec.WriteTagAndValue(output, Description2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (headline_ != null) {
        size += _single_headline_codec.CalculateSizeWithTag(Headline);
      }
      if (description1_ != null) {
        size += _single_description1_codec.CalculateSizeWithTag(Description1);
      }
      if (description2_ != null) {
        size += _single_description2_codec.CalculateSizeWithTag(Description2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TextAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.headline_ != null) {
        if (headline_ == null || other.Headline != "") {
          Headline = other.Headline;
        }
      }
      if (other.description1_ != null) {
        if (description1_ == null || other.Description1 != "") {
          Description1 = other.Description1;
        }
      }
      if (other.description2_ != null) {
        if (description2_ == null || other.Description2 != "") {
          Description2 = other.Description2;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_headline_codec.Read(input);
            if (headline_ == null || value != "") {
              Headline = value;
            }
            break;
          }
          case 18: {
            string value = _single_description1_codec.Read(input);
            if (description1_ == null || value != "") {
              Description1 = value;
            }
            break;
          }
          case 26: {
            string value = _single_description2_codec.Read(input);
            if (description2_ == null || value != "") {
              Description2 = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An expanded text ad.
  /// </summary>
  public sealed partial class ExpandedTextAdInfo : pb::IMessage<ExpandedTextAdInfo> {
    private static readonly pb::MessageParser<ExpandedTextAdInfo> _parser = new pb::MessageParser<ExpandedTextAdInfo>(() => new ExpandedTextAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExpandedTextAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpandedTextAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpandedTextAdInfo(ExpandedTextAdInfo other) : this() {
      HeadlinePart1 = other.HeadlinePart1;
      HeadlinePart2 = other.HeadlinePart2;
      HeadlinePart3 = other.HeadlinePart3;
      Description = other.Description;
      Description2 = other.Description2;
      Path1 = other.Path1;
      Path2 = other.Path2;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpandedTextAdInfo Clone() {
      return new ExpandedTextAdInfo(this);
    }

    /// <summary>Field number for the "headline_part1" field.</summary>
    public const int HeadlinePart1FieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_headlinePart1_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string headlinePart1_;
    /// <summary>
    /// The first part of the ad's headline.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeadlinePart1 {
      get { return headlinePart1_; }
      set {
        headlinePart1_ = value;
      }
    }


    /// <summary>Field number for the "headline_part2" field.</summary>
    public const int HeadlinePart2FieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_headlinePart2_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string headlinePart2_;
    /// <summary>
    /// The second part of the ad's headline.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeadlinePart2 {
      get { return headlinePart2_; }
      set {
        headlinePart2_ = value;
      }
    }


    /// <summary>Field number for the "headline_part3" field.</summary>
    public const int HeadlinePart3FieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_headlinePart3_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string headlinePart3_;
    /// <summary>
    /// The third part of the ad's headline.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeadlinePart3 {
      get { return headlinePart3_; }
      set {
        headlinePart3_ = value;
      }
    }


    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string description_;
    /// <summary>
    /// The description of the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    /// <summary>Field number for the "description2" field.</summary>
    public const int Description2FieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_description2_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string description2_;
    /// <summary>
    /// The second description of the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description2 {
      get { return description2_; }
      set {
        description2_ = value;
      }
    }


    /// <summary>Field number for the "path1" field.</summary>
    public const int Path1FieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_path1_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string path1_;
    /// <summary>
    /// The text that can appear alongside the ad's displayed URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path1 {
      get { return path1_; }
      set {
        path1_ = value;
      }
    }


    /// <summary>Field number for the "path2" field.</summary>
    public const int Path2FieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_path2_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string path2_;
    /// <summary>
    /// Additional text that can appear alongside the ad's displayed URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path2 {
      get { return path2_; }
      set {
        path2_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExpandedTextAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExpandedTextAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeadlinePart1 != other.HeadlinePart1) return false;
      if (HeadlinePart2 != other.HeadlinePart2) return false;
      if (HeadlinePart3 != other.HeadlinePart3) return false;
      if (Description != other.Description) return false;
      if (Description2 != other.Description2) return false;
      if (Path1 != other.Path1) return false;
      if (Path2 != other.Path2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (headlinePart1_ != null) hash ^= HeadlinePart1.GetHashCode();
      if (headlinePart2_ != null) hash ^= HeadlinePart2.GetHashCode();
      if (headlinePart3_ != null) hash ^= HeadlinePart3.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (description2_ != null) hash ^= Description2.GetHashCode();
      if (path1_ != null) hash ^= Path1.GetHashCode();
      if (path2_ != null) hash ^= Path2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (headlinePart1_ != null) {
        _single_headlinePart1_codec.WriteTagAndValue(output, HeadlinePart1);
      }
      if (headlinePart2_ != null) {
        _single_headlinePart2_codec.WriteTagAndValue(output, HeadlinePart2);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (path1_ != null) {
        _single_path1_codec.WriteTagAndValue(output, Path1);
      }
      if (path2_ != null) {
        _single_path2_codec.WriteTagAndValue(output, Path2);
      }
      if (headlinePart3_ != null) {
        _single_headlinePart3_codec.WriteTagAndValue(output, HeadlinePart3);
      }
      if (description2_ != null) {
        _single_description2_codec.WriteTagAndValue(output, Description2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (headlinePart1_ != null) {
        size += _single_headlinePart1_codec.CalculateSizeWithTag(HeadlinePart1);
      }
      if (headlinePart2_ != null) {
        size += _single_headlinePart2_codec.CalculateSizeWithTag(HeadlinePart2);
      }
      if (headlinePart3_ != null) {
        size += _single_headlinePart3_codec.CalculateSizeWithTag(HeadlinePart3);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (description2_ != null) {
        size += _single_description2_codec.CalculateSizeWithTag(Description2);
      }
      if (path1_ != null) {
        size += _single_path1_codec.CalculateSizeWithTag(Path1);
      }
      if (path2_ != null) {
        size += _single_path2_codec.CalculateSizeWithTag(Path2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExpandedTextAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.headlinePart1_ != null) {
        if (headlinePart1_ == null || other.HeadlinePart1 != "") {
          HeadlinePart1 = other.HeadlinePart1;
        }
      }
      if (other.headlinePart2_ != null) {
        if (headlinePart2_ == null || other.HeadlinePart2 != "") {
          HeadlinePart2 = other.HeadlinePart2;
        }
      }
      if (other.headlinePart3_ != null) {
        if (headlinePart3_ == null || other.HeadlinePart3 != "") {
          HeadlinePart3 = other.HeadlinePart3;
        }
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      if (other.description2_ != null) {
        if (description2_ == null || other.Description2 != "") {
          Description2 = other.Description2;
        }
      }
      if (other.path1_ != null) {
        if (path1_ == null || other.Path1 != "") {
          Path1 = other.Path1;
        }
      }
      if (other.path2_ != null) {
        if (path2_ == null || other.Path2 != "") {
          Path2 = other.Path2;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_headlinePart1_codec.Read(input);
            if (headlinePart1_ == null || value != "") {
              HeadlinePart1 = value;
            }
            break;
          }
          case 18: {
            string value = _single_headlinePart2_codec.Read(input);
            if (headlinePart2_ == null || value != "") {
              HeadlinePart2 = value;
            }
            break;
          }
          case 26: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 34: {
            string value = _single_path1_codec.Read(input);
            if (path1_ == null || value != "") {
              Path1 = value;
            }
            break;
          }
          case 42: {
            string value = _single_path2_codec.Read(input);
            if (path2_ == null || value != "") {
              Path2 = value;
            }
            break;
          }
          case 50: {
            string value = _single_headlinePart3_codec.Read(input);
            if (headlinePart3_ == null || value != "") {
              HeadlinePart3 = value;
            }
            break;
          }
          case 58: {
            string value = _single_description2_codec.Read(input);
            if (description2_ == null || value != "") {
              Description2 = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A call-only ad.
  /// </summary>
  public sealed partial class CallOnlyAdInfo : pb::IMessage<CallOnlyAdInfo> {
    private static readonly pb::MessageParser<CallOnlyAdInfo> _parser = new pb::MessageParser<CallOnlyAdInfo>(() => new CallOnlyAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CallOnlyAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallOnlyAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallOnlyAdInfo(CallOnlyAdInfo other) : this() {
      CountryCode = other.CountryCode;
      PhoneNumber = other.PhoneNumber;
      BusinessName = other.BusinessName;
      Headline1 = other.Headline1;
      Headline2 = other.Headline2;
      Description1 = other.Description1;
      Description2 = other.Description2;
      CallTracked = other.CallTracked;
      DisableCallConversion = other.DisableCallConversion;
      PhoneNumberVerificationUrl = other.PhoneNumberVerificationUrl;
      ConversionAction = other.ConversionAction;
      conversionReportingState_ = other.conversionReportingState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallOnlyAdInfo Clone() {
      return new CallOnlyAdInfo(this);
    }

    /// <summary>Field number for the "country_code" field.</summary>
    public const int CountryCodeFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_countryCode_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string countryCode_;
    /// <summary>
    /// The country code in the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryCode {
      get { return countryCode_; }
      set {
        countryCode_ = value;
      }
    }


    /// <summary>Field number for the "phone_number" field.</summary>
    public const int PhoneNumberFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_phoneNumber_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string phoneNumber_;
    /// <summary>
    /// The phone number in the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNumber {
      get { return phoneNumber_; }
      set {
        phoneNumber_ = value;
      }
    }


    /// <summary>Field number for the "business_name" field.</summary>
    public const int BusinessNameFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_businessName_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string businessName_;
    /// <summary>
    /// The business name in the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessName {
      get { return businessName_; }
      set {
        businessName_ = value;
      }
    }


    /// <summary>Field number for the "headline1" field.</summary>
    public const int Headline1FieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_headline1_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string headline1_;
    /// <summary>
    /// First headline in the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Headline1 {
      get { return headline1_; }
      set {
        headline1_ = value;
      }
    }


    /// <summary>Field number for the "headline2" field.</summary>
    public const int Headline2FieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_headline2_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string headline2_;
    /// <summary>
    /// Second headline in the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Headline2 {
      get { return headline2_; }
      set {
        headline2_ = value;
      }
    }


    /// <summary>Field number for the "description1" field.</summary>
    public const int Description1FieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_description1_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string description1_;
    /// <summary>
    /// The first line of the ad's description.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description1 {
      get { return description1_; }
      set {
        description1_ = value;
      }
    }


    /// <summary>Field number for the "description2" field.</summary>
    public const int Description2FieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_description2_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string description2_;
    /// <summary>
    /// The second line of the ad's description.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description2 {
      get { return description2_; }
      set {
        description2_ = value;
      }
    }


    /// <summary>Field number for the "call_tracked" field.</summary>
    public const int CallTrackedFieldNumber = 6;
    private static readonly pb::FieldCodec<bool?> _single_callTracked_codec = pb::FieldCodec.ForStructWrapper<bool>(50);
    private bool? callTracked_;
    /// <summary>
    /// Whether to enable call tracking for the creative. Enabling call
    /// tracking also enables call conversions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? CallTracked {
      get { return callTracked_; }
      set {
        callTracked_ = value;
      }
    }


    /// <summary>Field number for the "disable_call_conversion" field.</summary>
    public const int DisableCallConversionFieldNumber = 7;
    private static readonly pb::FieldCodec<bool?> _single_disableCallConversion_codec = pb::FieldCodec.ForStructWrapper<bool>(58);
    private bool? disableCallConversion_;
    /// <summary>
    /// Whether to disable call conversion for the creative.
    /// If set to `true`, disables call conversions even when `call_tracked` is
    /// `true`.
    /// If `call_tracked` is `false`, this field is ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? DisableCallConversion {
      get { return disableCallConversion_; }
      set {
        disableCallConversion_ = value;
      }
    }


    /// <summary>Field number for the "phone_number_verification_url" field.</summary>
    public const int PhoneNumberVerificationUrlFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_phoneNumberVerificationUrl_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string phoneNumberVerificationUrl_;
    /// <summary>
    /// The URL to be used for phone number verification.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNumberVerificationUrl {
      get { return phoneNumberVerificationUrl_; }
      set {
        phoneNumberVerificationUrl_ = value;
      }
    }


    /// <summary>Field number for the "conversion_action" field.</summary>
    public const int ConversionActionFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_conversionAction_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string conversionAction_;
    /// <summary>
    /// The conversion action to attribute a call conversion to. If not set a
    /// default conversion action is used. This field only has effect if
    /// call_tracked is set to true. Otherwise this field is ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConversionAction {
      get { return conversionAction_; }
      set {
        conversionAction_ = value;
      }
    }


    /// <summary>Field number for the "conversion_reporting_state" field.</summary>
    public const int ConversionReportingStateFieldNumber = 10;
    private global::Google.Ads.GoogleAds.V1.Enums.CallConversionReportingStateEnum.Types.CallConversionReportingState conversionReportingState_ = global::Google.Ads.GoogleAds.V1.Enums.CallConversionReportingStateEnum.Types.CallConversionReportingState.Unspecified;
    /// <summary>
    /// The call conversion behavior of this call only ad. It can use its own call
    /// conversion setting, inherit the account level setting, or be disabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Enums.CallConversionReportingStateEnum.Types.CallConversionReportingState ConversionReportingState {
      get { return conversionReportingState_; }
      set {
        conversionReportingState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CallOnlyAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CallOnlyAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CountryCode != other.CountryCode) return false;
      if (PhoneNumber != other.PhoneNumber) return false;
      if (BusinessName != other.BusinessName) return false;
      if (Headline1 != other.Headline1) return false;
      if (Headline2 != other.Headline2) return false;
      if (Description1 != other.Description1) return false;
      if (Description2 != other.Description2) return false;
      if (CallTracked != other.CallTracked) return false;
      if (DisableCallConversion != other.DisableCallConversion) return false;
      if (PhoneNumberVerificationUrl != other.PhoneNumberVerificationUrl) return false;
      if (ConversionAction != other.ConversionAction) return false;
      if (ConversionReportingState != other.ConversionReportingState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (countryCode_ != null) hash ^= CountryCode.GetHashCode();
      if (phoneNumber_ != null) hash ^= PhoneNumber.GetHashCode();
      if (businessName_ != null) hash ^= BusinessName.GetHashCode();
      if (headline1_ != null) hash ^= Headline1.GetHashCode();
      if (headline2_ != null) hash ^= Headline2.GetHashCode();
      if (description1_ != null) hash ^= Description1.GetHashCode();
      if (description2_ != null) hash ^= Description2.GetHashCode();
      if (callTracked_ != null) hash ^= CallTracked.GetHashCode();
      if (disableCallConversion_ != null) hash ^= DisableCallConversion.GetHashCode();
      if (phoneNumberVerificationUrl_ != null) hash ^= PhoneNumberVerificationUrl.GetHashCode();
      if (conversionAction_ != null) hash ^= ConversionAction.GetHashCode();
      if (ConversionReportingState != global::Google.Ads.GoogleAds.V1.Enums.CallConversionReportingStateEnum.Types.CallConversionReportingState.Unspecified) hash ^= ConversionReportingState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (countryCode_ != null) {
        _single_countryCode_codec.WriteTagAndValue(output, CountryCode);
      }
      if (phoneNumber_ != null) {
        _single_phoneNumber_codec.WriteTagAndValue(output, PhoneNumber);
      }
      if (businessName_ != null) {
        _single_businessName_codec.WriteTagAndValue(output, BusinessName);
      }
      if (description1_ != null) {
        _single_description1_codec.WriteTagAndValue(output, Description1);
      }
      if (description2_ != null) {
        _single_description2_codec.WriteTagAndValue(output, Description2);
      }
      if (callTracked_ != null) {
        _single_callTracked_codec.WriteTagAndValue(output, CallTracked);
      }
      if (disableCallConversion_ != null) {
        _single_disableCallConversion_codec.WriteTagAndValue(output, DisableCallConversion);
      }
      if (phoneNumberVerificationUrl_ != null) {
        _single_phoneNumberVerificationUrl_codec.WriteTagAndValue(output, PhoneNumberVerificationUrl);
      }
      if (conversionAction_ != null) {
        _single_conversionAction_codec.WriteTagAndValue(output, ConversionAction);
      }
      if (ConversionReportingState != global::Google.Ads.GoogleAds.V1.Enums.CallConversionReportingStateEnum.Types.CallConversionReportingState.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) ConversionReportingState);
      }
      if (headline1_ != null) {
        _single_headline1_codec.WriteTagAndValue(output, Headline1);
      }
      if (headline2_ != null) {
        _single_headline2_codec.WriteTagAndValue(output, Headline2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (countryCode_ != null) {
        size += _single_countryCode_codec.CalculateSizeWithTag(CountryCode);
      }
      if (phoneNumber_ != null) {
        size += _single_phoneNumber_codec.CalculateSizeWithTag(PhoneNumber);
      }
      if (businessName_ != null) {
        size += _single_businessName_codec.CalculateSizeWithTag(BusinessName);
      }
      if (headline1_ != null) {
        size += _single_headline1_codec.CalculateSizeWithTag(Headline1);
      }
      if (headline2_ != null) {
        size += _single_headline2_codec.CalculateSizeWithTag(Headline2);
      }
      if (description1_ != null) {
        size += _single_description1_codec.CalculateSizeWithTag(Description1);
      }
      if (description2_ != null) {
        size += _single_description2_codec.CalculateSizeWithTag(Description2);
      }
      if (callTracked_ != null) {
        size += _single_callTracked_codec.CalculateSizeWithTag(CallTracked);
      }
      if (disableCallConversion_ != null) {
        size += _single_disableCallConversion_codec.CalculateSizeWithTag(DisableCallConversion);
      }
      if (phoneNumberVerificationUrl_ != null) {
        size += _single_phoneNumberVerificationUrl_codec.CalculateSizeWithTag(PhoneNumberVerificationUrl);
      }
      if (conversionAction_ != null) {
        size += _single_conversionAction_codec.CalculateSizeWithTag(ConversionAction);
      }
      if (ConversionReportingState != global::Google.Ads.GoogleAds.V1.Enums.CallConversionReportingStateEnum.Types.CallConversionReportingState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ConversionReportingState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CallOnlyAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.countryCode_ != null) {
        if (countryCode_ == null || other.CountryCode != "") {
          CountryCode = other.CountryCode;
        }
      }
      if (other.phoneNumber_ != null) {
        if (phoneNumber_ == null || other.PhoneNumber != "") {
          PhoneNumber = other.PhoneNumber;
        }
      }
      if (other.businessName_ != null) {
        if (businessName_ == null || other.BusinessName != "") {
          BusinessName = other.BusinessName;
        }
      }
      if (other.headline1_ != null) {
        if (headline1_ == null || other.Headline1 != "") {
          Headline1 = other.Headline1;
        }
      }
      if (other.headline2_ != null) {
        if (headline2_ == null || other.Headline2 != "") {
          Headline2 = other.Headline2;
        }
      }
      if (other.description1_ != null) {
        if (description1_ == null || other.Description1 != "") {
          Description1 = other.Description1;
        }
      }
      if (other.description2_ != null) {
        if (description2_ == null || other.Description2 != "") {
          Description2 = other.Description2;
        }
      }
      if (other.callTracked_ != null) {
        if (callTracked_ == null || other.CallTracked != false) {
          CallTracked = other.CallTracked;
        }
      }
      if (other.disableCallConversion_ != null) {
        if (disableCallConversion_ == null || other.DisableCallConversion != false) {
          DisableCallConversion = other.DisableCallConversion;
        }
      }
      if (other.phoneNumberVerificationUrl_ != null) {
        if (phoneNumberVerificationUrl_ == null || other.PhoneNumberVerificationUrl != "") {
          PhoneNumberVerificationUrl = other.PhoneNumberVerificationUrl;
        }
      }
      if (other.conversionAction_ != null) {
        if (conversionAction_ == null || other.ConversionAction != "") {
          ConversionAction = other.ConversionAction;
        }
      }
      if (other.ConversionReportingState != global::Google.Ads.GoogleAds.V1.Enums.CallConversionReportingStateEnum.Types.CallConversionReportingState.Unspecified) {
        ConversionReportingState = other.ConversionReportingState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_countryCode_codec.Read(input);
            if (countryCode_ == null || value != "") {
              CountryCode = value;
            }
            break;
          }
          case 18: {
            string value = _single_phoneNumber_codec.Read(input);
            if (phoneNumber_ == null || value != "") {
              PhoneNumber = value;
            }
            break;
          }
          case 26: {
            string value = _single_businessName_codec.Read(input);
            if (businessName_ == null || value != "") {
              BusinessName = value;
            }
            break;
          }
          case 34: {
            string value = _single_description1_codec.Read(input);
            if (description1_ == null || value != "") {
              Description1 = value;
            }
            break;
          }
          case 42: {
            string value = _single_description2_codec.Read(input);
            if (description2_ == null || value != "") {
              Description2 = value;
            }
            break;
          }
          case 50: {
            bool? value = _single_callTracked_codec.Read(input);
            if (callTracked_ == null || value != false) {
              CallTracked = value;
            }
            break;
          }
          case 58: {
            bool? value = _single_disableCallConversion_codec.Read(input);
            if (disableCallConversion_ == null || value != false) {
              DisableCallConversion = value;
            }
            break;
          }
          case 66: {
            string value = _single_phoneNumberVerificationUrl_codec.Read(input);
            if (phoneNumberVerificationUrl_ == null || value != "") {
              PhoneNumberVerificationUrl = value;
            }
            break;
          }
          case 74: {
            string value = _single_conversionAction_codec.Read(input);
            if (conversionAction_ == null || value != "") {
              ConversionAction = value;
            }
            break;
          }
          case 80: {
            ConversionReportingState = (global::Google.Ads.GoogleAds.V1.Enums.CallConversionReportingStateEnum.Types.CallConversionReportingState) input.ReadEnum();
            break;
          }
          case 90: {
            string value = _single_headline1_codec.Read(input);
            if (headline1_ == null || value != "") {
              Headline1 = value;
            }
            break;
          }
          case 98: {
            string value = _single_headline2_codec.Read(input);
            if (headline2_ == null || value != "") {
              Headline2 = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An expanded dynamic search ad.
  /// </summary>
  public sealed partial class ExpandedDynamicSearchAdInfo : pb::IMessage<ExpandedDynamicSearchAdInfo> {
    private static readonly pb::MessageParser<ExpandedDynamicSearchAdInfo> _parser = new pb::MessageParser<ExpandedDynamicSearchAdInfo>(() => new ExpandedDynamicSearchAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExpandedDynamicSearchAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpandedDynamicSearchAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpandedDynamicSearchAdInfo(ExpandedDynamicSearchAdInfo other) : this() {
      Description = other.Description;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpandedDynamicSearchAdInfo Clone() {
      return new ExpandedDynamicSearchAdInfo(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string description_;
    /// <summary>
    /// The description of the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExpandedDynamicSearchAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExpandedDynamicSearchAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (description_ != null) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExpandedDynamicSearchAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A hotel ad.
  /// </summary>
  public sealed partial class HotelAdInfo : pb::IMessage<HotelAdInfo> {
    private static readonly pb::MessageParser<HotelAdInfo> _parser = new pb::MessageParser<HotelAdInfo>(() => new HotelAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HotelAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelAdInfo(HotelAdInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HotelAdInfo Clone() {
      return new HotelAdInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HotelAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HotelAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HotelAdInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// A Smart Shopping ad.
  /// </summary>
  public sealed partial class ShoppingSmartAdInfo : pb::IMessage<ShoppingSmartAdInfo> {
    private static readonly pb::MessageParser<ShoppingSmartAdInfo> _parser = new pb::MessageParser<ShoppingSmartAdInfo>(() => new ShoppingSmartAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShoppingSmartAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShoppingSmartAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShoppingSmartAdInfo(ShoppingSmartAdInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShoppingSmartAdInfo Clone() {
      return new ShoppingSmartAdInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShoppingSmartAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShoppingSmartAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShoppingSmartAdInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// A standard Shopping ad.
  /// </summary>
  public sealed partial class ShoppingProductAdInfo : pb::IMessage<ShoppingProductAdInfo> {
    private static readonly pb::MessageParser<ShoppingProductAdInfo> _parser = new pb::MessageParser<ShoppingProductAdInfo>(() => new ShoppingProductAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShoppingProductAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShoppingProductAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShoppingProductAdInfo(ShoppingProductAdInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShoppingProductAdInfo Clone() {
      return new ShoppingProductAdInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShoppingProductAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShoppingProductAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShoppingProductAdInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// A Shopping Comparison Listing ad.
  /// </summary>
  public sealed partial class ShoppingComparisonListingAdInfo : pb::IMessage<ShoppingComparisonListingAdInfo> {
    private static readonly pb::MessageParser<ShoppingComparisonListingAdInfo> _parser = new pb::MessageParser<ShoppingComparisonListingAdInfo>(() => new ShoppingComparisonListingAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShoppingComparisonListingAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShoppingComparisonListingAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShoppingComparisonListingAdInfo(ShoppingComparisonListingAdInfo other) : this() {
      Headline = other.Headline;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShoppingComparisonListingAdInfo Clone() {
      return new ShoppingComparisonListingAdInfo(this);
    }

    /// <summary>Field number for the "headline" field.</summary>
    public const int HeadlineFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_headline_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string headline_;
    /// <summary>
    /// Headline of the ad. This field is required. Allowed length is between 25
    /// and 45 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Headline {
      get { return headline_; }
      set {
        headline_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShoppingComparisonListingAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShoppingComparisonListingAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Headline != other.Headline) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (headline_ != null) hash ^= Headline.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (headline_ != null) {
        _single_headline_codec.WriteTagAndValue(output, Headline);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (headline_ != null) {
        size += _single_headline_codec.CalculateSizeWithTag(Headline);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShoppingComparisonListingAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.headline_ != null) {
        if (headline_ == null || other.Headline != "") {
          Headline = other.Headline;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_headline_codec.Read(input);
            if (headline_ == null || value != "") {
              Headline = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A Gmail ad.
  /// </summary>
  public sealed partial class GmailAdInfo : pb::IMessage<GmailAdInfo> {
    private static readonly pb::MessageParser<GmailAdInfo> _parser = new pb::MessageParser<GmailAdInfo>(() => new GmailAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GmailAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GmailAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GmailAdInfo(GmailAdInfo other) : this() {
      teaser_ = other.teaser_ != null ? other.teaser_.Clone() : null;
      HeaderImage = other.HeaderImage;
      MarketingImage = other.MarketingImage;
      MarketingImageHeadline = other.MarketingImageHeadline;
      MarketingImageDescription = other.MarketingImageDescription;
      marketingImageDisplayCallToAction_ = other.marketingImageDisplayCallToAction_ != null ? other.marketingImageDisplayCallToAction_.Clone() : null;
      productImages_ = other.productImages_.Clone();
      productVideos_ = other.productVideos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GmailAdInfo Clone() {
      return new GmailAdInfo(this);
    }

    /// <summary>Field number for the "teaser" field.</summary>
    public const int TeaserFieldNumber = 1;
    private global::Google.Ads.GoogleAds.V1.Common.GmailTeaser teaser_;
    /// <summary>
    /// The Gmail teaser.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Common.GmailTeaser Teaser {
      get { return teaser_; }
      set {
        teaser_ = value;
      }
    }

    /// <summary>Field number for the "header_image" field.</summary>
    public const int HeaderImageFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_headerImage_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string headerImage_;
    /// <summary>
    /// The MediaFile resource name of the header image. Valid image types are GIF,
    /// JPEG and PNG. The minimum size is 300x100 pixels and the aspect ratio must
    /// be between 3:1 and 5:1 (+-1%).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeaderImage {
      get { return headerImage_; }
      set {
        headerImage_ = value;
      }
    }


    /// <summary>Field number for the "marketing_image" field.</summary>
    public const int MarketingImageFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_marketingImage_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string marketingImage_;
    /// <summary>
    /// The MediaFile resource name of the marketing image. Valid image types are
    /// GIF, JPEG and PNG. The image must either be landscape with a minimum size
    /// of 600x314 pixels and aspect ratio of 600:314 (+-1%) or square with a
    /// minimum size of 300x300 pixels and aspect ratio of 1:1 (+-1%)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MarketingImage {
      get { return marketingImage_; }
      set {
        marketingImage_ = value;
      }
    }


    /// <summary>Field number for the "marketing_image_headline" field.</summary>
    public const int MarketingImageHeadlineFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_marketingImageHeadline_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string marketingImageHeadline_;
    /// <summary>
    /// Headline of the marketing image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MarketingImageHeadline {
      get { return marketingImageHeadline_; }
      set {
        marketingImageHeadline_ = value;
      }
    }


    /// <summary>Field number for the "marketing_image_description" field.</summary>
    public const int MarketingImageDescriptionFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_marketingImageDescription_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string marketingImageDescription_;
    /// <summary>
    /// Description of the marketing image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MarketingImageDescription {
      get { return marketingImageDescription_; }
      set {
        marketingImageDescription_ = value;
      }
    }


    /// <summary>Field number for the "marketing_image_display_call_to_action" field.</summary>
    public const int MarketingImageDisplayCallToActionFieldNumber = 6;
    private global::Google.Ads.GoogleAds.V1.Common.DisplayCallToAction marketingImageDisplayCallToAction_;
    /// <summary>
    /// Display-call-to-action of the marketing image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Common.DisplayCallToAction MarketingImageDisplayCallToAction {
      get { return marketingImageDisplayCallToAction_; }
      set {
        marketingImageDisplayCallToAction_ = value;
      }
    }

    /// <summary>Field number for the "product_images" field.</summary>
    public const int ProductImagesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.ProductImage> _repeated_productImages_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Ads.GoogleAds.V1.Common.ProductImage.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.ProductImage> productImages_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.ProductImage>();
    /// <summary>
    /// Product images. Up to 15 images are supported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.ProductImage> ProductImages {
      get { return productImages_; }
    }

    /// <summary>Field number for the "product_videos" field.</summary>
    public const int ProductVideosFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.ProductVideo> _repeated_productVideos_codec
        = pb::FieldCodec.ForMessage(66, global::Google.Ads.GoogleAds.V1.Common.ProductVideo.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.ProductVideo> productVideos_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.ProductVideo>();
    /// <summary>
    /// Product videos. Up to 7 videos are supported. At least one product video
    /// or a marketing image must be specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.ProductVideo> ProductVideos {
      get { return productVideos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GmailAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GmailAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Teaser, other.Teaser)) return false;
      if (HeaderImage != other.HeaderImage) return false;
      if (MarketingImage != other.MarketingImage) return false;
      if (MarketingImageHeadline != other.MarketingImageHeadline) return false;
      if (MarketingImageDescription != other.MarketingImageDescription) return false;
      if (!object.Equals(MarketingImageDisplayCallToAction, other.MarketingImageDisplayCallToAction)) return false;
      if(!productImages_.Equals(other.productImages_)) return false;
      if(!productVideos_.Equals(other.productVideos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (teaser_ != null) hash ^= Teaser.GetHashCode();
      if (headerImage_ != null) hash ^= HeaderImage.GetHashCode();
      if (marketingImage_ != null) hash ^= MarketingImage.GetHashCode();
      if (marketingImageHeadline_ != null) hash ^= MarketingImageHeadline.GetHashCode();
      if (marketingImageDescription_ != null) hash ^= MarketingImageDescription.GetHashCode();
      if (marketingImageDisplayCallToAction_ != null) hash ^= MarketingImageDisplayCallToAction.GetHashCode();
      hash ^= productImages_.GetHashCode();
      hash ^= productVideos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (teaser_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Teaser);
      }
      if (headerImage_ != null) {
        _single_headerImage_codec.WriteTagAndValue(output, HeaderImage);
      }
      if (marketingImage_ != null) {
        _single_marketingImage_codec.WriteTagAndValue(output, MarketingImage);
      }
      if (marketingImageHeadline_ != null) {
        _single_marketingImageHeadline_codec.WriteTagAndValue(output, MarketingImageHeadline);
      }
      if (marketingImageDescription_ != null) {
        _single_marketingImageDescription_codec.WriteTagAndValue(output, MarketingImageDescription);
      }
      if (marketingImageDisplayCallToAction_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(MarketingImageDisplayCallToAction);
      }
      productImages_.WriteTo(output, _repeated_productImages_codec);
      productVideos_.WriteTo(output, _repeated_productVideos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (teaser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Teaser);
      }
      if (headerImage_ != null) {
        size += _single_headerImage_codec.CalculateSizeWithTag(HeaderImage);
      }
      if (marketingImage_ != null) {
        size += _single_marketingImage_codec.CalculateSizeWithTag(MarketingImage);
      }
      if (marketingImageHeadline_ != null) {
        size += _single_marketingImageHeadline_codec.CalculateSizeWithTag(MarketingImageHeadline);
      }
      if (marketingImageDescription_ != null) {
        size += _single_marketingImageDescription_codec.CalculateSizeWithTag(MarketingImageDescription);
      }
      if (marketingImageDisplayCallToAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MarketingImageDisplayCallToAction);
      }
      size += productImages_.CalculateSize(_repeated_productImages_codec);
      size += productVideos_.CalculateSize(_repeated_productVideos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GmailAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.teaser_ != null) {
        if (teaser_ == null) {
          Teaser = new global::Google.Ads.GoogleAds.V1.Common.GmailTeaser();
        }
        Teaser.MergeFrom(other.Teaser);
      }
      if (other.headerImage_ != null) {
        if (headerImage_ == null || other.HeaderImage != "") {
          HeaderImage = other.HeaderImage;
        }
      }
      if (other.marketingImage_ != null) {
        if (marketingImage_ == null || other.MarketingImage != "") {
          MarketingImage = other.MarketingImage;
        }
      }
      if (other.marketingImageHeadline_ != null) {
        if (marketingImageHeadline_ == null || other.MarketingImageHeadline != "") {
          MarketingImageHeadline = other.MarketingImageHeadline;
        }
      }
      if (other.marketingImageDescription_ != null) {
        if (marketingImageDescription_ == null || other.MarketingImageDescription != "") {
          MarketingImageDescription = other.MarketingImageDescription;
        }
      }
      if (other.marketingImageDisplayCallToAction_ != null) {
        if (marketingImageDisplayCallToAction_ == null) {
          MarketingImageDisplayCallToAction = new global::Google.Ads.GoogleAds.V1.Common.DisplayCallToAction();
        }
        MarketingImageDisplayCallToAction.MergeFrom(other.MarketingImageDisplayCallToAction);
      }
      productImages_.Add(other.productImages_);
      productVideos_.Add(other.productVideos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (teaser_ == null) {
              Teaser = new global::Google.Ads.GoogleAds.V1.Common.GmailTeaser();
            }
            input.ReadMessage(Teaser);
            break;
          }
          case 18: {
            string value = _single_headerImage_codec.Read(input);
            if (headerImage_ == null || value != "") {
              HeaderImage = value;
            }
            break;
          }
          case 26: {
            string value = _single_marketingImage_codec.Read(input);
            if (marketingImage_ == null || value != "") {
              MarketingImage = value;
            }
            break;
          }
          case 34: {
            string value = _single_marketingImageHeadline_codec.Read(input);
            if (marketingImageHeadline_ == null || value != "") {
              MarketingImageHeadline = value;
            }
            break;
          }
          case 42: {
            string value = _single_marketingImageDescription_codec.Read(input);
            if (marketingImageDescription_ == null || value != "") {
              MarketingImageDescription = value;
            }
            break;
          }
          case 50: {
            if (marketingImageDisplayCallToAction_ == null) {
              MarketingImageDisplayCallToAction = new global::Google.Ads.GoogleAds.V1.Common.DisplayCallToAction();
            }
            input.ReadMessage(MarketingImageDisplayCallToAction);
            break;
          }
          case 58: {
            productImages_.AddEntriesFrom(input, _repeated_productImages_codec);
            break;
          }
          case 66: {
            productVideos_.AddEntriesFrom(input, _repeated_productVideos_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gmail teaser data. The teaser is a small header that acts as an invitation
  /// to view the rest of the ad (the body).
  /// </summary>
  public sealed partial class GmailTeaser : pb::IMessage<GmailTeaser> {
    private static readonly pb::MessageParser<GmailTeaser> _parser = new pb::MessageParser<GmailTeaser>(() => new GmailTeaser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GmailTeaser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GmailTeaser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GmailTeaser(GmailTeaser other) : this() {
      Headline = other.Headline;
      Description = other.Description;
      BusinessName = other.BusinessName;
      LogoImage = other.LogoImage;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GmailTeaser Clone() {
      return new GmailTeaser(this);
    }

    /// <summary>Field number for the "headline" field.</summary>
    public const int HeadlineFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_headline_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string headline_;
    /// <summary>
    /// Headline of the teaser.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Headline {
      get { return headline_; }
      set {
        headline_ = value;
      }
    }


    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string description_;
    /// <summary>
    /// Description of the teaser.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    /// <summary>Field number for the "business_name" field.</summary>
    public const int BusinessNameFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_businessName_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string businessName_;
    /// <summary>
    /// Business name of the advertiser.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessName {
      get { return businessName_; }
      set {
        businessName_ = value;
      }
    }


    /// <summary>Field number for the "logo_image" field.</summary>
    public const int LogoImageFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_logoImage_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string logoImage_;
    /// <summary>
    /// The MediaFile resource name of the logo image. Valid image types are GIF,
    /// JPEG and PNG. The minimum size is 144x144 pixels and the aspect ratio must
    /// be 1:1 (+-1%).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogoImage {
      get { return logoImage_; }
      set {
        logoImage_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GmailTeaser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GmailTeaser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Headline != other.Headline) return false;
      if (Description != other.Description) return false;
      if (BusinessName != other.BusinessName) return false;
      if (LogoImage != other.LogoImage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (headline_ != null) hash ^= Headline.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (businessName_ != null) hash ^= BusinessName.GetHashCode();
      if (logoImage_ != null) hash ^= LogoImage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (headline_ != null) {
        _single_headline_codec.WriteTagAndValue(output, Headline);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (businessName_ != null) {
        _single_businessName_codec.WriteTagAndValue(output, BusinessName);
      }
      if (logoImage_ != null) {
        _single_logoImage_codec.WriteTagAndValue(output, LogoImage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (headline_ != null) {
        size += _single_headline_codec.CalculateSizeWithTag(Headline);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (businessName_ != null) {
        size += _single_businessName_codec.CalculateSizeWithTag(BusinessName);
      }
      if (logoImage_ != null) {
        size += _single_logoImage_codec.CalculateSizeWithTag(LogoImage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GmailTeaser other) {
      if (other == null) {
        return;
      }
      if (other.headline_ != null) {
        if (headline_ == null || other.Headline != "") {
          Headline = other.Headline;
        }
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      if (other.businessName_ != null) {
        if (businessName_ == null || other.BusinessName != "") {
          BusinessName = other.BusinessName;
        }
      }
      if (other.logoImage_ != null) {
        if (logoImage_ == null || other.LogoImage != "") {
          LogoImage = other.LogoImage;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_headline_codec.Read(input);
            if (headline_ == null || value != "") {
              Headline = value;
            }
            break;
          }
          case 18: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 26: {
            string value = _single_businessName_codec.Read(input);
            if (businessName_ == null || value != "") {
              BusinessName = value;
            }
            break;
          }
          case 34: {
            string value = _single_logoImage_codec.Read(input);
            if (logoImage_ == null || value != "") {
              LogoImage = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Data for display call to action. The call to action is a piece of the ad
  /// that prompts the user to do something. Like clicking a link or making a phone
  /// call.
  /// </summary>
  public sealed partial class DisplayCallToAction : pb::IMessage<DisplayCallToAction> {
    private static readonly pb::MessageParser<DisplayCallToAction> _parser = new pb::MessageParser<DisplayCallToAction>(() => new DisplayCallToAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DisplayCallToAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisplayCallToAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisplayCallToAction(DisplayCallToAction other) : this() {
      Text = other.Text;
      TextColor = other.TextColor;
      UrlCollectionId = other.UrlCollectionId;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisplayCallToAction Clone() {
      return new DisplayCallToAction(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_text_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string text_;
    /// <summary>
    /// Text for the display-call-to-action.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = value;
      }
    }


    /// <summary>Field number for the "text_color" field.</summary>
    public const int TextColorFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_textColor_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string textColor_;
    /// <summary>
    /// Text color for the display-call-to-action in hexadecimal, e.g. #ffffff for
    /// white.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TextColor {
      get { return textColor_; }
      set {
        textColor_ = value;
      }
    }


    /// <summary>Field number for the "url_collection_id" field.</summary>
    public const int UrlCollectionIdFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_urlCollectionId_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string urlCollectionId_;
    /// <summary>
    /// Identifies the url collection in the ad.url_collections field. If not set
    /// the url defaults to final_url.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UrlCollectionId {
      get { return urlCollectionId_; }
      set {
        urlCollectionId_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DisplayCallToAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DisplayCallToAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if (TextColor != other.TextColor) return false;
      if (UrlCollectionId != other.UrlCollectionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (text_ != null) hash ^= Text.GetHashCode();
      if (textColor_ != null) hash ^= TextColor.GetHashCode();
      if (urlCollectionId_ != null) hash ^= UrlCollectionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (text_ != null) {
        _single_text_codec.WriteTagAndValue(output, Text);
      }
      if (textColor_ != null) {
        _single_textColor_codec.WriteTagAndValue(output, TextColor);
      }
      if (urlCollectionId_ != null) {
        _single_urlCollectionId_codec.WriteTagAndValue(output, UrlCollectionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (text_ != null) {
        size += _single_text_codec.CalculateSizeWithTag(Text);
      }
      if (textColor_ != null) {
        size += _single_textColor_codec.CalculateSizeWithTag(TextColor);
      }
      if (urlCollectionId_ != null) {
        size += _single_urlCollectionId_codec.CalculateSizeWithTag(UrlCollectionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DisplayCallToAction other) {
      if (other == null) {
        return;
      }
      if (other.text_ != null) {
        if (text_ == null || other.Text != "") {
          Text = other.Text;
        }
      }
      if (other.textColor_ != null) {
        if (textColor_ == null || other.TextColor != "") {
          TextColor = other.TextColor;
        }
      }
      if (other.urlCollectionId_ != null) {
        if (urlCollectionId_ == null || other.UrlCollectionId != "") {
          UrlCollectionId = other.UrlCollectionId;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_text_codec.Read(input);
            if (text_ == null || value != "") {
              Text = value;
            }
            break;
          }
          case 18: {
            string value = _single_textColor_codec.Read(input);
            if (textColor_ == null || value != "") {
              TextColor = value;
            }
            break;
          }
          case 26: {
            string value = _single_urlCollectionId_codec.Read(input);
            if (urlCollectionId_ == null || value != "") {
              UrlCollectionId = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Product image specific data.
  /// </summary>
  public sealed partial class ProductImage : pb::IMessage<ProductImage> {
    private static readonly pb::MessageParser<ProductImage> _parser = new pb::MessageParser<ProductImage>(() => new ProductImage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProductImage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductImage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductImage(ProductImage other) : this() {
      ProductImage_ = other.ProductImage_;
      Description = other.Description;
      displayCallToAction_ = other.displayCallToAction_ != null ? other.displayCallToAction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductImage Clone() {
      return new ProductImage(this);
    }

    /// <summary>Field number for the "product_image" field.</summary>
    public const int ProductImage_FieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_productImage_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string productImage_;
    /// <summary>
    /// The MediaFile resource name of the product image. Valid image types are
    /// GIF, JPEG and PNG. The minimum size is 300x300 pixels and the aspect ratio
    /// must be 1:1 (+-1%).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductImage_ {
      get { return productImage_; }
      set {
        productImage_ = value;
      }
    }


    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string description_;
    /// <summary>
    /// Description of the product.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    /// <summary>Field number for the "display_call_to_action" field.</summary>
    public const int DisplayCallToActionFieldNumber = 3;
    private global::Google.Ads.GoogleAds.V1.Common.DisplayCallToAction displayCallToAction_;
    /// <summary>
    /// Display-call-to-action of the product image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Common.DisplayCallToAction DisplayCallToAction {
      get { return displayCallToAction_; }
      set {
        displayCallToAction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProductImage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProductImage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductImage_ != other.ProductImage_) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(DisplayCallToAction, other.DisplayCallToAction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (productImage_ != null) hash ^= ProductImage_.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (displayCallToAction_ != null) hash ^= DisplayCallToAction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (productImage_ != null) {
        _single_productImage_codec.WriteTagAndValue(output, ProductImage_);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (displayCallToAction_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DisplayCallToAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (productImage_ != null) {
        size += _single_productImage_codec.CalculateSizeWithTag(ProductImage_);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (displayCallToAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DisplayCallToAction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProductImage other) {
      if (other == null) {
        return;
      }
      if (other.productImage_ != null) {
        if (productImage_ == null || other.ProductImage_ != "") {
          ProductImage_ = other.ProductImage_;
        }
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      if (other.displayCallToAction_ != null) {
        if (displayCallToAction_ == null) {
          DisplayCallToAction = new global::Google.Ads.GoogleAds.V1.Common.DisplayCallToAction();
        }
        DisplayCallToAction.MergeFrom(other.DisplayCallToAction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_productImage_codec.Read(input);
            if (productImage_ == null || value != "") {
              ProductImage_ = value;
            }
            break;
          }
          case 18: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 26: {
            if (displayCallToAction_ == null) {
              DisplayCallToAction = new global::Google.Ads.GoogleAds.V1.Common.DisplayCallToAction();
            }
            input.ReadMessage(DisplayCallToAction);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Product video specific data.
  /// </summary>
  public sealed partial class ProductVideo : pb::IMessage<ProductVideo> {
    private static readonly pb::MessageParser<ProductVideo> _parser = new pb::MessageParser<ProductVideo>(() => new ProductVideo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProductVideo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductVideo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductVideo(ProductVideo other) : this() {
      ProductVideo_ = other.ProductVideo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductVideo Clone() {
      return new ProductVideo(this);
    }

    /// <summary>Field number for the "product_video" field.</summary>
    public const int ProductVideo_FieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_productVideo_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string productVideo_;
    /// <summary>
    /// The MediaFile resource name of a video which must be hosted on YouTube.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductVideo_ {
      get { return productVideo_; }
      set {
        productVideo_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProductVideo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProductVideo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductVideo_ != other.ProductVideo_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (productVideo_ != null) hash ^= ProductVideo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (productVideo_ != null) {
        _single_productVideo_codec.WriteTagAndValue(output, ProductVideo_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (productVideo_ != null) {
        size += _single_productVideo_codec.CalculateSizeWithTag(ProductVideo_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProductVideo other) {
      if (other == null) {
        return;
      }
      if (other.productVideo_ != null) {
        if (productVideo_ == null || other.ProductVideo_ != "") {
          ProductVideo_ = other.ProductVideo_;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_productVideo_codec.Read(input);
            if (productVideo_ == null || value != "") {
              ProductVideo_ = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An image ad.
  /// </summary>
  public sealed partial class ImageAdInfo : pb::IMessage<ImageAdInfo> {
    private static readonly pb::MessageParser<ImageAdInfo> _parser = new pb::MessageParser<ImageAdInfo>(() => new ImageAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImageAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageAdInfo(ImageAdInfo other) : this() {
      PixelWidth = other.PixelWidth;
      PixelHeight = other.PixelHeight;
      ImageUrl = other.ImageUrl;
      PreviewPixelWidth = other.PreviewPixelWidth;
      PreviewPixelHeight = other.PreviewPixelHeight;
      PreviewImageUrl = other.PreviewImageUrl;
      mimeType_ = other.mimeType_;
      Name = other.Name;
      switch (other.ImageCase) {
        case ImageOneofCase.MediaFile:
          MediaFile = other.MediaFile;
          break;
        case ImageOneofCase.Data:
          Data = other.Data;
          break;
        case ImageOneofCase.AdIdToCopyImageFrom:
          AdIdToCopyImageFrom = other.AdIdToCopyImageFrom;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageAdInfo Clone() {
      return new ImageAdInfo(this);
    }

    /// <summary>Field number for the "pixel_width" field.</summary>
    public const int PixelWidthFieldNumber = 4;
    private static readonly pb::FieldCodec<long?> _single_pixelWidth_codec = pb::FieldCodec.ForStructWrapper<long>(34);
    private long? pixelWidth_;
    /// <summary>
    /// Width in pixels of the full size image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? PixelWidth {
      get { return pixelWidth_; }
      set {
        pixelWidth_ = value;
      }
    }


    /// <summary>Field number for the "pixel_height" field.</summary>
    public const int PixelHeightFieldNumber = 5;
    private static readonly pb::FieldCodec<long?> _single_pixelHeight_codec = pb::FieldCodec.ForStructWrapper<long>(42);
    private long? pixelHeight_;
    /// <summary>
    /// Height in pixels of the full size image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? PixelHeight {
      get { return pixelHeight_; }
      set {
        pixelHeight_ = value;
      }
    }


    /// <summary>Field number for the "image_url" field.</summary>
    public const int ImageUrlFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_imageUrl_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string imageUrl_;
    /// <summary>
    /// URL of the full size image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUrl {
      get { return imageUrl_; }
      set {
        imageUrl_ = value;
      }
    }


    /// <summary>Field number for the "preview_pixel_width" field.</summary>
    public const int PreviewPixelWidthFieldNumber = 7;
    private static readonly pb::FieldCodec<long?> _single_previewPixelWidth_codec = pb::FieldCodec.ForStructWrapper<long>(58);
    private long? previewPixelWidth_;
    /// <summary>
    /// Width in pixels of the preview size image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? PreviewPixelWidth {
      get { return previewPixelWidth_; }
      set {
        previewPixelWidth_ = value;
      }
    }


    /// <summary>Field number for the "preview_pixel_height" field.</summary>
    public const int PreviewPixelHeightFieldNumber = 8;
    private static readonly pb::FieldCodec<long?> _single_previewPixelHeight_codec = pb::FieldCodec.ForStructWrapper<long>(66);
    private long? previewPixelHeight_;
    /// <summary>
    /// Height in pixels of the preview size image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? PreviewPixelHeight {
      get { return previewPixelHeight_; }
      set {
        previewPixelHeight_ = value;
      }
    }


    /// <summary>Field number for the "preview_image_url" field.</summary>
    public const int PreviewImageUrlFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_previewImageUrl_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string previewImageUrl_;
    /// <summary>
    /// URL of the preview size image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PreviewImageUrl {
      get { return previewImageUrl_; }
      set {
        previewImageUrl_ = value;
      }
    }


    /// <summary>Field number for the "mime_type" field.</summary>
    public const int MimeTypeFieldNumber = 10;
    private global::Google.Ads.GoogleAds.V1.Enums.MimeTypeEnum.Types.MimeType mimeType_ = global::Google.Ads.GoogleAds.V1.Enums.MimeTypeEnum.Types.MimeType.Unspecified;
    /// <summary>
    /// The mime type of the image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Enums.MimeTypeEnum.Types.MimeType MimeType {
      get { return mimeType_; }
      set {
        mimeType_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string name_;
    /// <summary>
    /// The name of the image. If the image was created from a MediaFile, this is
    /// the MediaFile's name. If the image was created from bytes, this is empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }


    /// <summary>Field number for the "media_file" field.</summary>
    public const int MediaFileFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _oneof_mediaFile_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    /// <summary>
    /// The MediaFile resource to use for the image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MediaFile {
      get { return imageCase_ == ImageOneofCase.MediaFile ? (string) image_ : (string) null; }
      set {
        image_ = value;
        imageCase_ = value == null ? ImageOneofCase.None : ImageOneofCase.MediaFile;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _oneof_data_codec = pb::FieldCodec.ForClassWrapper<pb::ByteString>(18);
    /// <summary>
    /// Raw image data as bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return imageCase_ == ImageOneofCase.Data ? (pb::ByteString) image_ : (pb::ByteString) null; }
      set {
        image_ = value;
        imageCase_ = value == null ? ImageOneofCase.None : ImageOneofCase.Data;
      }
    }

    /// <summary>Field number for the "ad_id_to_copy_image_from" field.</summary>
    public const int AdIdToCopyImageFromFieldNumber = 3;
    private static readonly pb::FieldCodec<long?> _oneof_adIdToCopyImageFrom_codec = pb::FieldCodec.ForStructWrapper<long>(26);
    /// <summary>
    /// An ad ID to copy the image from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? AdIdToCopyImageFrom {
      get { return imageCase_ == ImageOneofCase.AdIdToCopyImageFrom ? (long?) image_ : (long?) null; }
      set {
        image_ = value;
        imageCase_ = value == null ? ImageOneofCase.None : ImageOneofCase.AdIdToCopyImageFrom;
      }
    }

    private object image_;
    /// <summary>Enum of possible cases for the "image" oneof.</summary>
    public enum ImageOneofCase {
      None = 0,
      MediaFile = 1,
      Data = 2,
      AdIdToCopyImageFrom = 3,
    }
    private ImageOneofCase imageCase_ = ImageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageOneofCase ImageCase {
      get { return imageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearImage() {
      imageCase_ = ImageOneofCase.None;
      image_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImageAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImageAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PixelWidth != other.PixelWidth) return false;
      if (PixelHeight != other.PixelHeight) return false;
      if (ImageUrl != other.ImageUrl) return false;
      if (PreviewPixelWidth != other.PreviewPixelWidth) return false;
      if (PreviewPixelHeight != other.PreviewPixelHeight) return false;
      if (PreviewImageUrl != other.PreviewImageUrl) return false;
      if (MimeType != other.MimeType) return false;
      if (Name != other.Name) return false;
      if (MediaFile != other.MediaFile) return false;
      if (Data != other.Data) return false;
      if (AdIdToCopyImageFrom != other.AdIdToCopyImageFrom) return false;
      if (ImageCase != other.ImageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pixelWidth_ != null) hash ^= PixelWidth.GetHashCode();
      if (pixelHeight_ != null) hash ^= PixelHeight.GetHashCode();
      if (imageUrl_ != null) hash ^= ImageUrl.GetHashCode();
      if (previewPixelWidth_ != null) hash ^= PreviewPixelWidth.GetHashCode();
      if (previewPixelHeight_ != null) hash ^= PreviewPixelHeight.GetHashCode();
      if (previewImageUrl_ != null) hash ^= PreviewImageUrl.GetHashCode();
      if (MimeType != global::Google.Ads.GoogleAds.V1.Enums.MimeTypeEnum.Types.MimeType.Unspecified) hash ^= MimeType.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (imageCase_ == ImageOneofCase.MediaFile) hash ^= MediaFile.GetHashCode();
      if (imageCase_ == ImageOneofCase.Data) hash ^= Data.GetHashCode();
      if (imageCase_ == ImageOneofCase.AdIdToCopyImageFrom) hash ^= AdIdToCopyImageFrom.GetHashCode();
      hash ^= (int) imageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (imageCase_ == ImageOneofCase.MediaFile) {
        _oneof_mediaFile_codec.WriteTagAndValue(output, (string) image_);
      }
      if (imageCase_ == ImageOneofCase.Data) {
        _oneof_data_codec.WriteTagAndValue(output, (pb::ByteString) image_);
      }
      if (imageCase_ == ImageOneofCase.AdIdToCopyImageFrom) {
        _oneof_adIdToCopyImageFrom_codec.WriteTagAndValue(output, (long?) image_);
      }
      if (pixelWidth_ != null) {
        _single_pixelWidth_codec.WriteTagAndValue(output, PixelWidth);
      }
      if (pixelHeight_ != null) {
        _single_pixelHeight_codec.WriteTagAndValue(output, PixelHeight);
      }
      if (imageUrl_ != null) {
        _single_imageUrl_codec.WriteTagAndValue(output, ImageUrl);
      }
      if (previewPixelWidth_ != null) {
        _single_previewPixelWidth_codec.WriteTagAndValue(output, PreviewPixelWidth);
      }
      if (previewPixelHeight_ != null) {
        _single_previewPixelHeight_codec.WriteTagAndValue(output, PreviewPixelHeight);
      }
      if (previewImageUrl_ != null) {
        _single_previewImageUrl_codec.WriteTagAndValue(output, PreviewImageUrl);
      }
      if (MimeType != global::Google.Ads.GoogleAds.V1.Enums.MimeTypeEnum.Types.MimeType.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) MimeType);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pixelWidth_ != null) {
        size += _single_pixelWidth_codec.CalculateSizeWithTag(PixelWidth);
      }
      if (pixelHeight_ != null) {
        size += _single_pixelHeight_codec.CalculateSizeWithTag(PixelHeight);
      }
      if (imageUrl_ != null) {
        size += _single_imageUrl_codec.CalculateSizeWithTag(ImageUrl);
      }
      if (previewPixelWidth_ != null) {
        size += _single_previewPixelWidth_codec.CalculateSizeWithTag(PreviewPixelWidth);
      }
      if (previewPixelHeight_ != null) {
        size += _single_previewPixelHeight_codec.CalculateSizeWithTag(PreviewPixelHeight);
      }
      if (previewImageUrl_ != null) {
        size += _single_previewImageUrl_codec.CalculateSizeWithTag(PreviewImageUrl);
      }
      if (MimeType != global::Google.Ads.GoogleAds.V1.Enums.MimeTypeEnum.Types.MimeType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MimeType);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (imageCase_ == ImageOneofCase.MediaFile) {
        size += _oneof_mediaFile_codec.CalculateSizeWithTag(MediaFile);
      }
      if (imageCase_ == ImageOneofCase.Data) {
        size += _oneof_data_codec.CalculateSizeWithTag(Data);
      }
      if (imageCase_ == ImageOneofCase.AdIdToCopyImageFrom) {
        size += _oneof_adIdToCopyImageFrom_codec.CalculateSizeWithTag(AdIdToCopyImageFrom);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImageAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.pixelWidth_ != null) {
        if (pixelWidth_ == null || other.PixelWidth != 0L) {
          PixelWidth = other.PixelWidth;
        }
      }
      if (other.pixelHeight_ != null) {
        if (pixelHeight_ == null || other.PixelHeight != 0L) {
          PixelHeight = other.PixelHeight;
        }
      }
      if (other.imageUrl_ != null) {
        if (imageUrl_ == null || other.ImageUrl != "") {
          ImageUrl = other.ImageUrl;
        }
      }
      if (other.previewPixelWidth_ != null) {
        if (previewPixelWidth_ == null || other.PreviewPixelWidth != 0L) {
          PreviewPixelWidth = other.PreviewPixelWidth;
        }
      }
      if (other.previewPixelHeight_ != null) {
        if (previewPixelHeight_ == null || other.PreviewPixelHeight != 0L) {
          PreviewPixelHeight = other.PreviewPixelHeight;
        }
      }
      if (other.previewImageUrl_ != null) {
        if (previewImageUrl_ == null || other.PreviewImageUrl != "") {
          PreviewImageUrl = other.PreviewImageUrl;
        }
      }
      if (other.MimeType != global::Google.Ads.GoogleAds.V1.Enums.MimeTypeEnum.Types.MimeType.Unspecified) {
        MimeType = other.MimeType;
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      switch (other.ImageCase) {
        case ImageOneofCase.MediaFile:
          MediaFile = other.MediaFile;
          break;
        case ImageOneofCase.Data:
          Data = other.Data;
          break;
        case ImageOneofCase.AdIdToCopyImageFrom:
          AdIdToCopyImageFrom = other.AdIdToCopyImageFrom;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MediaFile = _oneof_mediaFile_codec.Read(input);
            break;
          }
          case 18: {
            Data = _oneof_data_codec.Read(input);
            break;
          }
          case 26: {
            AdIdToCopyImageFrom = _oneof_adIdToCopyImageFrom_codec.Read(input);
            break;
          }
          case 34: {
            long? value = _single_pixelWidth_codec.Read(input);
            if (pixelWidth_ == null || value != 0L) {
              PixelWidth = value;
            }
            break;
          }
          case 42: {
            long? value = _single_pixelHeight_codec.Read(input);
            if (pixelHeight_ == null || value != 0L) {
              PixelHeight = value;
            }
            break;
          }
          case 50: {
            string value = _single_imageUrl_codec.Read(input);
            if (imageUrl_ == null || value != "") {
              ImageUrl = value;
            }
            break;
          }
          case 58: {
            long? value = _single_previewPixelWidth_codec.Read(input);
            if (previewPixelWidth_ == null || value != 0L) {
              PreviewPixelWidth = value;
            }
            break;
          }
          case 66: {
            long? value = _single_previewPixelHeight_codec.Read(input);
            if (previewPixelHeight_ == null || value != 0L) {
              PreviewPixelHeight = value;
            }
            break;
          }
          case 74: {
            string value = _single_previewImageUrl_codec.Read(input);
            if (previewImageUrl_ == null || value != "") {
              PreviewImageUrl = value;
            }
            break;
          }
          case 80: {
            MimeType = (global::Google.Ads.GoogleAds.V1.Enums.MimeTypeEnum.Types.MimeType) input.ReadEnum();
            break;
          }
          case 90: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Representation of video bumper in-stream ad format (very short in-stream
  /// non-skippable video ad).
  /// </summary>
  public sealed partial class VideoBumperInStreamAdInfo : pb::IMessage<VideoBumperInStreamAdInfo> {
    private static readonly pb::MessageParser<VideoBumperInStreamAdInfo> _parser = new pb::MessageParser<VideoBumperInStreamAdInfo>(() => new VideoBumperInStreamAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoBumperInStreamAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoBumperInStreamAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoBumperInStreamAdInfo(VideoBumperInStreamAdInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoBumperInStreamAdInfo Clone() {
      return new VideoBumperInStreamAdInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoBumperInStreamAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoBumperInStreamAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoBumperInStreamAdInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// Representation of video non-skippable in-stream ad format (15 second
  /// in-stream non-skippable video ad).
  /// </summary>
  public sealed partial class VideoNonSkippableInStreamAdInfo : pb::IMessage<VideoNonSkippableInStreamAdInfo> {
    private static readonly pb::MessageParser<VideoNonSkippableInStreamAdInfo> _parser = new pb::MessageParser<VideoNonSkippableInStreamAdInfo>(() => new VideoNonSkippableInStreamAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoNonSkippableInStreamAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoNonSkippableInStreamAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoNonSkippableInStreamAdInfo(VideoNonSkippableInStreamAdInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoNonSkippableInStreamAdInfo Clone() {
      return new VideoNonSkippableInStreamAdInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoNonSkippableInStreamAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoNonSkippableInStreamAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoNonSkippableInStreamAdInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// Representation of video TrueView in-stream ad format (ad shown during video
  /// playback, often at beginning, which displays a skip button a few seconds into
  /// the video).
  /// </summary>
  public sealed partial class VideoTrueViewInStreamAdInfo : pb::IMessage<VideoTrueViewInStreamAdInfo> {
    private static readonly pb::MessageParser<VideoTrueViewInStreamAdInfo> _parser = new pb::MessageParser<VideoTrueViewInStreamAdInfo>(() => new VideoTrueViewInStreamAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoTrueViewInStreamAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoTrueViewInStreamAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoTrueViewInStreamAdInfo(VideoTrueViewInStreamAdInfo other) : this() {
      ActionButtonLabel = other.ActionButtonLabel;
      ActionHeadline = other.ActionHeadline;
      CompanionBanner = other.CompanionBanner;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoTrueViewInStreamAdInfo Clone() {
      return new VideoTrueViewInStreamAdInfo(this);
    }

    /// <summary>Field number for the "action_button_label" field.</summary>
    public const int ActionButtonLabelFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_actionButtonLabel_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string actionButtonLabel_;
    /// <summary>
    /// Label on the CTA (call-to-action) button taking the user to the video ad's
    /// final URL.
    /// Required for TrueView for action campaigns, optional otherwise.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActionButtonLabel {
      get { return actionButtonLabel_; }
      set {
        actionButtonLabel_ = value;
      }
    }


    /// <summary>Field number for the "action_headline" field.</summary>
    public const int ActionHeadlineFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_actionHeadline_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string actionHeadline_;
    /// <summary>
    /// Additional text displayed with the CTA (call-to-action) button to give
    /// context and encourage clicking on the button.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActionHeadline {
      get { return actionHeadline_; }
      set {
        actionHeadline_ = value;
      }
    }


    /// <summary>Field number for the "companion_banner" field.</summary>
    public const int CompanionBannerFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_companionBanner_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string companionBanner_;
    /// <summary>
    /// The MediaFile resource name of the companion banner used with the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanionBanner {
      get { return companionBanner_; }
      set {
        companionBanner_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoTrueViewInStreamAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoTrueViewInStreamAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActionButtonLabel != other.ActionButtonLabel) return false;
      if (ActionHeadline != other.ActionHeadline) return false;
      if (CompanionBanner != other.CompanionBanner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (actionButtonLabel_ != null) hash ^= ActionButtonLabel.GetHashCode();
      if (actionHeadline_ != null) hash ^= ActionHeadline.GetHashCode();
      if (companionBanner_ != null) hash ^= CompanionBanner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (actionButtonLabel_ != null) {
        _single_actionButtonLabel_codec.WriteTagAndValue(output, ActionButtonLabel);
      }
      if (actionHeadline_ != null) {
        _single_actionHeadline_codec.WriteTagAndValue(output, ActionHeadline);
      }
      if (companionBanner_ != null) {
        _single_companionBanner_codec.WriteTagAndValue(output, CompanionBanner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (actionButtonLabel_ != null) {
        size += _single_actionButtonLabel_codec.CalculateSizeWithTag(ActionButtonLabel);
      }
      if (actionHeadline_ != null) {
        size += _single_actionHeadline_codec.CalculateSizeWithTag(ActionHeadline);
      }
      if (companionBanner_ != null) {
        size += _single_companionBanner_codec.CalculateSizeWithTag(CompanionBanner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoTrueViewInStreamAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.actionButtonLabel_ != null) {
        if (actionButtonLabel_ == null || other.ActionButtonLabel != "") {
          ActionButtonLabel = other.ActionButtonLabel;
        }
      }
      if (other.actionHeadline_ != null) {
        if (actionHeadline_ == null || other.ActionHeadline != "") {
          ActionHeadline = other.ActionHeadline;
        }
      }
      if (other.companionBanner_ != null) {
        if (companionBanner_ == null || other.CompanionBanner != "") {
          CompanionBanner = other.CompanionBanner;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_actionButtonLabel_codec.Read(input);
            if (actionButtonLabel_ == null || value != "") {
              ActionButtonLabel = value;
            }
            break;
          }
          case 18: {
            string value = _single_actionHeadline_codec.Read(input);
            if (actionHeadline_ == null || value != "") {
              ActionHeadline = value;
            }
            break;
          }
          case 26: {
            string value = _single_companionBanner_codec.Read(input);
            if (companionBanner_ == null || value != "") {
              CompanionBanner = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Representation of video out-stream ad format (ad shown alongside a feed
  /// with automatic playback, without sound).
  /// </summary>
  public sealed partial class VideoOutstreamAdInfo : pb::IMessage<VideoOutstreamAdInfo> {
    private static readonly pb::MessageParser<VideoOutstreamAdInfo> _parser = new pb::MessageParser<VideoOutstreamAdInfo>(() => new VideoOutstreamAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoOutstreamAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoOutstreamAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoOutstreamAdInfo(VideoOutstreamAdInfo other) : this() {
      Headline = other.Headline;
      Description = other.Description;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoOutstreamAdInfo Clone() {
      return new VideoOutstreamAdInfo(this);
    }

    /// <summary>Field number for the "headline" field.</summary>
    public const int HeadlineFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_headline_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string headline_;
    /// <summary>
    /// The headline of the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Headline {
      get { return headline_; }
      set {
        headline_ = value;
      }
    }


    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string description_;
    /// <summary>
    /// The description line.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoOutstreamAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoOutstreamAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Headline != other.Headline) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (headline_ != null) hash ^= Headline.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (headline_ != null) {
        _single_headline_codec.WriteTagAndValue(output, Headline);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (headline_ != null) {
        size += _single_headline_codec.CalculateSizeWithTag(Headline);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoOutstreamAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.headline_ != null) {
        if (headline_ == null || other.Headline != "") {
          Headline = other.Headline;
        }
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_headline_codec.Read(input);
            if (headline_ == null || value != "") {
              Headline = value;
            }
            break;
          }
          case 18: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A video ad.
  /// </summary>
  public sealed partial class VideoAdInfo : pb::IMessage<VideoAdInfo> {
    private static readonly pb::MessageParser<VideoAdInfo> _parser = new pb::MessageParser<VideoAdInfo>(() => new VideoAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VideoAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoAdInfo(VideoAdInfo other) : this() {
      MediaFile = other.MediaFile;
      switch (other.FormatCase) {
        case FormatOneofCase.InStream:
          InStream = other.InStream.Clone();
          break;
        case FormatOneofCase.Bumper:
          Bumper = other.Bumper.Clone();
          break;
        case FormatOneofCase.OutStream:
          OutStream = other.OutStream.Clone();
          break;
        case FormatOneofCase.NonSkippable:
          NonSkippable = other.NonSkippable.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VideoAdInfo Clone() {
      return new VideoAdInfo(this);
    }

    /// <summary>Field number for the "media_file" field.</summary>
    public const int MediaFileFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_mediaFile_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string mediaFile_;
    /// <summary>
    /// The MediaFile resource to use for the video.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MediaFile {
      get { return mediaFile_; }
      set {
        mediaFile_ = value;
      }
    }


    /// <summary>Field number for the "in_stream" field.</summary>
    public const int InStreamFieldNumber = 2;
    /// <summary>
    /// Video TrueView in-stream ad format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Common.VideoTrueViewInStreamAdInfo InStream {
      get { return formatCase_ == FormatOneofCase.InStream ? (global::Google.Ads.GoogleAds.V1.Common.VideoTrueViewInStreamAdInfo) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.InStream;
      }
    }

    /// <summary>Field number for the "bumper" field.</summary>
    public const int BumperFieldNumber = 3;
    /// <summary>
    /// Video bumper in-stream ad format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Common.VideoBumperInStreamAdInfo Bumper {
      get { return formatCase_ == FormatOneofCase.Bumper ? (global::Google.Ads.GoogleAds.V1.Common.VideoBumperInStreamAdInfo) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.Bumper;
      }
    }

    /// <summary>Field number for the "out_stream" field.</summary>
    public const int OutStreamFieldNumber = 4;
    /// <summary>
    /// Video out-stream ad format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Common.VideoOutstreamAdInfo OutStream {
      get { return formatCase_ == FormatOneofCase.OutStream ? (global::Google.Ads.GoogleAds.V1.Common.VideoOutstreamAdInfo) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.OutStream;
      }
    }

    /// <summary>Field number for the "non_skippable" field.</summary>
    public const int NonSkippableFieldNumber = 5;
    /// <summary>
    /// Video non-skippable in-stream ad format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Common.VideoNonSkippableInStreamAdInfo NonSkippable {
      get { return formatCase_ == FormatOneofCase.NonSkippable ? (global::Google.Ads.GoogleAds.V1.Common.VideoNonSkippableInStreamAdInfo) format_ : null; }
      set {
        format_ = value;
        formatCase_ = value == null ? FormatOneofCase.None : FormatOneofCase.NonSkippable;
      }
    }

    private object format_;
    /// <summary>Enum of possible cases for the "format" oneof.</summary>
    public enum FormatOneofCase {
      None = 0,
      InStream = 2,
      Bumper = 3,
      OutStream = 4,
      NonSkippable = 5,
    }
    private FormatOneofCase formatCase_ = FormatOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormatOneofCase FormatCase {
      get { return formatCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFormat() {
      formatCase_ = FormatOneofCase.None;
      format_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VideoAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VideoAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MediaFile != other.MediaFile) return false;
      if (!object.Equals(InStream, other.InStream)) return false;
      if (!object.Equals(Bumper, other.Bumper)) return false;
      if (!object.Equals(OutStream, other.OutStream)) return false;
      if (!object.Equals(NonSkippable, other.NonSkippable)) return false;
      if (FormatCase != other.FormatCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (mediaFile_ != null) hash ^= MediaFile.GetHashCode();
      if (formatCase_ == FormatOneofCase.InStream) hash ^= InStream.GetHashCode();
      if (formatCase_ == FormatOneofCase.Bumper) hash ^= Bumper.GetHashCode();
      if (formatCase_ == FormatOneofCase.OutStream) hash ^= OutStream.GetHashCode();
      if (formatCase_ == FormatOneofCase.NonSkippable) hash ^= NonSkippable.GetHashCode();
      hash ^= (int) formatCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (mediaFile_ != null) {
        _single_mediaFile_codec.WriteTagAndValue(output, MediaFile);
      }
      if (formatCase_ == FormatOneofCase.InStream) {
        output.WriteRawTag(18);
        output.WriteMessage(InStream);
      }
      if (formatCase_ == FormatOneofCase.Bumper) {
        output.WriteRawTag(26);
        output.WriteMessage(Bumper);
      }
      if (formatCase_ == FormatOneofCase.OutStream) {
        output.WriteRawTag(34);
        output.WriteMessage(OutStream);
      }
      if (formatCase_ == FormatOneofCase.NonSkippable) {
        output.WriteRawTag(42);
        output.WriteMessage(NonSkippable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (mediaFile_ != null) {
        size += _single_mediaFile_codec.CalculateSizeWithTag(MediaFile);
      }
      if (formatCase_ == FormatOneofCase.InStream) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InStream);
      }
      if (formatCase_ == FormatOneofCase.Bumper) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bumper);
      }
      if (formatCase_ == FormatOneofCase.OutStream) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutStream);
      }
      if (formatCase_ == FormatOneofCase.NonSkippable) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NonSkippable);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VideoAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.mediaFile_ != null) {
        if (mediaFile_ == null || other.MediaFile != "") {
          MediaFile = other.MediaFile;
        }
      }
      switch (other.FormatCase) {
        case FormatOneofCase.InStream:
          if (InStream == null) {
            InStream = new global::Google.Ads.GoogleAds.V1.Common.VideoTrueViewInStreamAdInfo();
          }
          InStream.MergeFrom(other.InStream);
          break;
        case FormatOneofCase.Bumper:
          if (Bumper == null) {
            Bumper = new global::Google.Ads.GoogleAds.V1.Common.VideoBumperInStreamAdInfo();
          }
          Bumper.MergeFrom(other.Bumper);
          break;
        case FormatOneofCase.OutStream:
          if (OutStream == null) {
            OutStream = new global::Google.Ads.GoogleAds.V1.Common.VideoOutstreamAdInfo();
          }
          OutStream.MergeFrom(other.OutStream);
          break;
        case FormatOneofCase.NonSkippable:
          if (NonSkippable == null) {
            NonSkippable = new global::Google.Ads.GoogleAds.V1.Common.VideoNonSkippableInStreamAdInfo();
          }
          NonSkippable.MergeFrom(other.NonSkippable);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_mediaFile_codec.Read(input);
            if (mediaFile_ == null || value != "") {
              MediaFile = value;
            }
            break;
          }
          case 18: {
            global::Google.Ads.GoogleAds.V1.Common.VideoTrueViewInStreamAdInfo subBuilder = new global::Google.Ads.GoogleAds.V1.Common.VideoTrueViewInStreamAdInfo();
            if (formatCase_ == FormatOneofCase.InStream) {
              subBuilder.MergeFrom(InStream);
            }
            input.ReadMessage(subBuilder);
            InStream = subBuilder;
            break;
          }
          case 26: {
            global::Google.Ads.GoogleAds.V1.Common.VideoBumperInStreamAdInfo subBuilder = new global::Google.Ads.GoogleAds.V1.Common.VideoBumperInStreamAdInfo();
            if (formatCase_ == FormatOneofCase.Bumper) {
              subBuilder.MergeFrom(Bumper);
            }
            input.ReadMessage(subBuilder);
            Bumper = subBuilder;
            break;
          }
          case 34: {
            global::Google.Ads.GoogleAds.V1.Common.VideoOutstreamAdInfo subBuilder = new global::Google.Ads.GoogleAds.V1.Common.VideoOutstreamAdInfo();
            if (formatCase_ == FormatOneofCase.OutStream) {
              subBuilder.MergeFrom(OutStream);
            }
            input.ReadMessage(subBuilder);
            OutStream = subBuilder;
            break;
          }
          case 42: {
            global::Google.Ads.GoogleAds.V1.Common.VideoNonSkippableInStreamAdInfo subBuilder = new global::Google.Ads.GoogleAds.V1.Common.VideoNonSkippableInStreamAdInfo();
            if (formatCase_ == FormatOneofCase.NonSkippable) {
              subBuilder.MergeFrom(NonSkippable);
            }
            input.ReadMessage(subBuilder);
            NonSkippable = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A responsive search ad.
  ///
  /// Responsive search ads let you create an ad that adapts to show more text, and
  /// more relevant messages, to your customers. Enter multiple headlines and
  /// descriptions when creating a responsive search ad, and over time, Google Ads
  /// will automatically test different combinations and learn which combinations
  /// perform best. By adapting your ad's content to more closely match potential
  /// customers' search terms, responsive search ads may improve your campaign's
  /// performance.
  ///
  /// More information at https://support.google.com/google-ads/answer/7684791
  /// </summary>
  public sealed partial class ResponsiveSearchAdInfo : pb::IMessage<ResponsiveSearchAdInfo> {
    private static readonly pb::MessageParser<ResponsiveSearchAdInfo> _parser = new pb::MessageParser<ResponsiveSearchAdInfo>(() => new ResponsiveSearchAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponsiveSearchAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponsiveSearchAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponsiveSearchAdInfo(ResponsiveSearchAdInfo other) : this() {
      headlines_ = other.headlines_.Clone();
      descriptions_ = other.descriptions_.Clone();
      Path1 = other.Path1;
      Path2 = other.Path2;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponsiveSearchAdInfo Clone() {
      return new ResponsiveSearchAdInfo(this);
    }

    /// <summary>Field number for the "headlines" field.</summary>
    public const int HeadlinesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> _repeated_headlines_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V1.Common.AdTextAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> headlines_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset>();
    /// <summary>
    /// List of text assets for headlines. When the ad serves the headlines will
    /// be selected from this list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> Headlines {
      get { return headlines_; }
    }

    /// <summary>Field number for the "descriptions" field.</summary>
    public const int DescriptionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> _repeated_descriptions_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Ads.GoogleAds.V1.Common.AdTextAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> descriptions_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset>();
    /// <summary>
    /// List of text assets for descriptions. When the ad serves the descriptions
    /// will be selected from this list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> Descriptions {
      get { return descriptions_; }
    }

    /// <summary>Field number for the "path1" field.</summary>
    public const int Path1FieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_path1_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string path1_;
    /// <summary>
    /// First part of text that may appear appended to the url displayed in the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path1 {
      get { return path1_; }
      set {
        path1_ = value;
      }
    }


    /// <summary>Field number for the "path2" field.</summary>
    public const int Path2FieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_path2_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string path2_;
    /// <summary>
    /// Second part of text that may appear appended to the url displayed in the
    /// ad. This field can only be set when path1 is also set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path2 {
      get { return path2_; }
      set {
        path2_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponsiveSearchAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponsiveSearchAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!headlines_.Equals(other.headlines_)) return false;
      if(!descriptions_.Equals(other.descriptions_)) return false;
      if (Path1 != other.Path1) return false;
      if (Path2 != other.Path2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= headlines_.GetHashCode();
      hash ^= descriptions_.GetHashCode();
      if (path1_ != null) hash ^= Path1.GetHashCode();
      if (path2_ != null) hash ^= Path2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      headlines_.WriteTo(output, _repeated_headlines_codec);
      descriptions_.WriteTo(output, _repeated_descriptions_codec);
      if (path1_ != null) {
        _single_path1_codec.WriteTagAndValue(output, Path1);
      }
      if (path2_ != null) {
        _single_path2_codec.WriteTagAndValue(output, Path2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += headlines_.CalculateSize(_repeated_headlines_codec);
      size += descriptions_.CalculateSize(_repeated_descriptions_codec);
      if (path1_ != null) {
        size += _single_path1_codec.CalculateSizeWithTag(Path1);
      }
      if (path2_ != null) {
        size += _single_path2_codec.CalculateSizeWithTag(Path2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponsiveSearchAdInfo other) {
      if (other == null) {
        return;
      }
      headlines_.Add(other.headlines_);
      descriptions_.Add(other.descriptions_);
      if (other.path1_ != null) {
        if (path1_ == null || other.Path1 != "") {
          Path1 = other.Path1;
        }
      }
      if (other.path2_ != null) {
        if (path2_ == null || other.Path2 != "") {
          Path2 = other.Path2;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            headlines_.AddEntriesFrom(input, _repeated_headlines_codec);
            break;
          }
          case 18: {
            descriptions_.AddEntriesFrom(input, _repeated_descriptions_codec);
            break;
          }
          case 26: {
            string value = _single_path1_codec.Read(input);
            if (path1_ == null || value != "") {
              Path1 = value;
            }
            break;
          }
          case 34: {
            string value = _single_path2_codec.Read(input);
            if (path2_ == null || value != "") {
              Path2 = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A legacy responsive display ad. Ads of this type are labeled 'Responsive ads'
  /// in the Google Ads UI.
  /// </summary>
  public sealed partial class LegacyResponsiveDisplayAdInfo : pb::IMessage<LegacyResponsiveDisplayAdInfo> {
    private static readonly pb::MessageParser<LegacyResponsiveDisplayAdInfo> _parser = new pb::MessageParser<LegacyResponsiveDisplayAdInfo>(() => new LegacyResponsiveDisplayAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LegacyResponsiveDisplayAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegacyResponsiveDisplayAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegacyResponsiveDisplayAdInfo(LegacyResponsiveDisplayAdInfo other) : this() {
      ShortHeadline = other.ShortHeadline;
      LongHeadline = other.LongHeadline;
      Description = other.Description;
      BusinessName = other.BusinessName;
      AllowFlexibleColor = other.AllowFlexibleColor;
      AccentColor = other.AccentColor;
      MainColor = other.MainColor;
      CallToActionText = other.CallToActionText;
      LogoImage = other.LogoImage;
      SquareLogoImage = other.SquareLogoImage;
      MarketingImage = other.MarketingImage;
      SquareMarketingImage = other.SquareMarketingImage;
      formatSetting_ = other.formatSetting_;
      PricePrefix = other.PricePrefix;
      PromoText = other.PromoText;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegacyResponsiveDisplayAdInfo Clone() {
      return new LegacyResponsiveDisplayAdInfo(this);
    }

    /// <summary>Field number for the "short_headline" field.</summary>
    public const int ShortHeadlineFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_shortHeadline_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string shortHeadline_;
    /// <summary>
    /// The short version of the ad's headline.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShortHeadline {
      get { return shortHeadline_; }
      set {
        shortHeadline_ = value;
      }
    }


    /// <summary>Field number for the "long_headline" field.</summary>
    public const int LongHeadlineFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_longHeadline_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string longHeadline_;
    /// <summary>
    /// The long version of the ad's headline.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LongHeadline {
      get { return longHeadline_; }
      set {
        longHeadline_ = value;
      }
    }


    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string description_;
    /// <summary>
    /// The description of the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    /// <summary>Field number for the "business_name" field.</summary>
    public const int BusinessNameFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_businessName_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string businessName_;
    /// <summary>
    /// The business name in the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessName {
      get { return businessName_; }
      set {
        businessName_ = value;
      }
    }


    /// <summary>Field number for the "allow_flexible_color" field.</summary>
    public const int AllowFlexibleColorFieldNumber = 5;
    private static readonly pb::FieldCodec<bool?> _single_allowFlexibleColor_codec = pb::FieldCodec.ForStructWrapper<bool>(42);
    private bool? allowFlexibleColor_;
    /// <summary>
    /// Advertiser's consent to allow flexible color. When true, the ad may be
    /// served with different color if necessary. When false, the ad will be served
    /// with the specified colors or a neutral color.
    /// The default value is true.
    /// Must be true if main_color and accent_color are not set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? AllowFlexibleColor {
      get { return allowFlexibleColor_; }
      set {
        allowFlexibleColor_ = value;
      }
    }


    /// <summary>Field number for the "accent_color" field.</summary>
    public const int AccentColorFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_accentColor_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string accentColor_;
    /// <summary>
    /// The accent color of the ad in hexadecimal, e.g. #ffffff for white.
    /// If one of main_color and accent_color is set, the other is required as
    /// well.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccentColor {
      get { return accentColor_; }
      set {
        accentColor_ = value;
      }
    }


    /// <summary>Field number for the "main_color" field.</summary>
    public const int MainColorFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_mainColor_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string mainColor_;
    /// <summary>
    /// The main color of the ad in hexadecimal, e.g. #ffffff for white.
    /// If one of main_color and accent_color is set, the other is required as
    /// well.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MainColor {
      get { return mainColor_; }
      set {
        mainColor_ = value;
      }
    }


    /// <summary>Field number for the "call_to_action_text" field.</summary>
    public const int CallToActionTextFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_callToActionText_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string callToActionText_;
    /// <summary>
    /// The call-to-action text for the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CallToActionText {
      get { return callToActionText_; }
      set {
        callToActionText_ = value;
      }
    }


    /// <summary>Field number for the "logo_image" field.</summary>
    public const int LogoImageFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_logoImage_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string logoImage_;
    /// <summary>
    /// The MediaFile resource name of the logo image used in the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogoImage {
      get { return logoImage_; }
      set {
        logoImage_ = value;
      }
    }


    /// <summary>Field number for the "square_logo_image" field.</summary>
    public const int SquareLogoImageFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_squareLogoImage_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string squareLogoImage_;
    /// <summary>
    /// The MediaFile resource name of the square logo image used in the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SquareLogoImage {
      get { return squareLogoImage_; }
      set {
        squareLogoImage_ = value;
      }
    }


    /// <summary>Field number for the "marketing_image" field.</summary>
    public const int MarketingImageFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_marketingImage_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string marketingImage_;
    /// <summary>
    /// The MediaFile resource name of the marketing image used in the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MarketingImage {
      get { return marketingImage_; }
      set {
        marketingImage_ = value;
      }
    }


    /// <summary>Field number for the "square_marketing_image" field.</summary>
    public const int SquareMarketingImageFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_squareMarketingImage_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string squareMarketingImage_;
    /// <summary>
    /// The MediaFile resource name of the square marketing image used in the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SquareMarketingImage {
      get { return squareMarketingImage_; }
      set {
        squareMarketingImage_ = value;
      }
    }


    /// <summary>Field number for the "format_setting" field.</summary>
    public const int FormatSettingFieldNumber = 13;
    private global::Google.Ads.GoogleAds.V1.Enums.DisplayAdFormatSettingEnum.Types.DisplayAdFormatSetting formatSetting_ = global::Google.Ads.GoogleAds.V1.Enums.DisplayAdFormatSettingEnum.Types.DisplayAdFormatSetting.Unspecified;
    /// <summary>
    /// Specifies which format the ad will be served in. Default is ALL_FORMATS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Enums.DisplayAdFormatSettingEnum.Types.DisplayAdFormatSetting FormatSetting {
      get { return formatSetting_; }
      set {
        formatSetting_ = value;
      }
    }

    /// <summary>Field number for the "price_prefix" field.</summary>
    public const int PricePrefixFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _single_pricePrefix_codec = pb::FieldCodec.ForClassWrapper<string>(114);
    private string pricePrefix_;
    /// <summary>
    /// Prefix before price. E.g. 'as low as'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PricePrefix {
      get { return pricePrefix_; }
      set {
        pricePrefix_ = value;
      }
    }


    /// <summary>Field number for the "promo_text" field.</summary>
    public const int PromoTextFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _single_promoText_codec = pb::FieldCodec.ForClassWrapper<string>(122);
    private string promoText_;
    /// <summary>
    /// Promotion text used for dyanmic formats of responsive ads. For example
    /// 'Free two-day shipping'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PromoText {
      get { return promoText_; }
      set {
        promoText_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LegacyResponsiveDisplayAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LegacyResponsiveDisplayAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShortHeadline != other.ShortHeadline) return false;
      if (LongHeadline != other.LongHeadline) return false;
      if (Description != other.Description) return false;
      if (BusinessName != other.BusinessName) return false;
      if (AllowFlexibleColor != other.AllowFlexibleColor) return false;
      if (AccentColor != other.AccentColor) return false;
      if (MainColor != other.MainColor) return false;
      if (CallToActionText != other.CallToActionText) return false;
      if (LogoImage != other.LogoImage) return false;
      if (SquareLogoImage != other.SquareLogoImage) return false;
      if (MarketingImage != other.MarketingImage) return false;
      if (SquareMarketingImage != other.SquareMarketingImage) return false;
      if (FormatSetting != other.FormatSetting) return false;
      if (PricePrefix != other.PricePrefix) return false;
      if (PromoText != other.PromoText) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (shortHeadline_ != null) hash ^= ShortHeadline.GetHashCode();
      if (longHeadline_ != null) hash ^= LongHeadline.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (businessName_ != null) hash ^= BusinessName.GetHashCode();
      if (allowFlexibleColor_ != null) hash ^= AllowFlexibleColor.GetHashCode();
      if (accentColor_ != null) hash ^= AccentColor.GetHashCode();
      if (mainColor_ != null) hash ^= MainColor.GetHashCode();
      if (callToActionText_ != null) hash ^= CallToActionText.GetHashCode();
      if (logoImage_ != null) hash ^= LogoImage.GetHashCode();
      if (squareLogoImage_ != null) hash ^= SquareLogoImage.GetHashCode();
      if (marketingImage_ != null) hash ^= MarketingImage.GetHashCode();
      if (squareMarketingImage_ != null) hash ^= SquareMarketingImage.GetHashCode();
      if (FormatSetting != global::Google.Ads.GoogleAds.V1.Enums.DisplayAdFormatSettingEnum.Types.DisplayAdFormatSetting.Unspecified) hash ^= FormatSetting.GetHashCode();
      if (pricePrefix_ != null) hash ^= PricePrefix.GetHashCode();
      if (promoText_ != null) hash ^= PromoText.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (shortHeadline_ != null) {
        _single_shortHeadline_codec.WriteTagAndValue(output, ShortHeadline);
      }
      if (longHeadline_ != null) {
        _single_longHeadline_codec.WriteTagAndValue(output, LongHeadline);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (businessName_ != null) {
        _single_businessName_codec.WriteTagAndValue(output, BusinessName);
      }
      if (allowFlexibleColor_ != null) {
        _single_allowFlexibleColor_codec.WriteTagAndValue(output, AllowFlexibleColor);
      }
      if (accentColor_ != null) {
        _single_accentColor_codec.WriteTagAndValue(output, AccentColor);
      }
      if (mainColor_ != null) {
        _single_mainColor_codec.WriteTagAndValue(output, MainColor);
      }
      if (callToActionText_ != null) {
        _single_callToActionText_codec.WriteTagAndValue(output, CallToActionText);
      }
      if (logoImage_ != null) {
        _single_logoImage_codec.WriteTagAndValue(output, LogoImage);
      }
      if (squareLogoImage_ != null) {
        _single_squareLogoImage_codec.WriteTagAndValue(output, SquareLogoImage);
      }
      if (marketingImage_ != null) {
        _single_marketingImage_codec.WriteTagAndValue(output, MarketingImage);
      }
      if (squareMarketingImage_ != null) {
        _single_squareMarketingImage_codec.WriteTagAndValue(output, SquareMarketingImage);
      }
      if (FormatSetting != global::Google.Ads.GoogleAds.V1.Enums.DisplayAdFormatSettingEnum.Types.DisplayAdFormatSetting.Unspecified) {
        output.WriteRawTag(104);
        output.WriteEnum((int) FormatSetting);
      }
      if (pricePrefix_ != null) {
        _single_pricePrefix_codec.WriteTagAndValue(output, PricePrefix);
      }
      if (promoText_ != null) {
        _single_promoText_codec.WriteTagAndValue(output, PromoText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (shortHeadline_ != null) {
        size += _single_shortHeadline_codec.CalculateSizeWithTag(ShortHeadline);
      }
      if (longHeadline_ != null) {
        size += _single_longHeadline_codec.CalculateSizeWithTag(LongHeadline);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (businessName_ != null) {
        size += _single_businessName_codec.CalculateSizeWithTag(BusinessName);
      }
      if (allowFlexibleColor_ != null) {
        size += _single_allowFlexibleColor_codec.CalculateSizeWithTag(AllowFlexibleColor);
      }
      if (accentColor_ != null) {
        size += _single_accentColor_codec.CalculateSizeWithTag(AccentColor);
      }
      if (mainColor_ != null) {
        size += _single_mainColor_codec.CalculateSizeWithTag(MainColor);
      }
      if (callToActionText_ != null) {
        size += _single_callToActionText_codec.CalculateSizeWithTag(CallToActionText);
      }
      if (logoImage_ != null) {
        size += _single_logoImage_codec.CalculateSizeWithTag(LogoImage);
      }
      if (squareLogoImage_ != null) {
        size += _single_squareLogoImage_codec.CalculateSizeWithTag(SquareLogoImage);
      }
      if (marketingImage_ != null) {
        size += _single_marketingImage_codec.CalculateSizeWithTag(MarketingImage);
      }
      if (squareMarketingImage_ != null) {
        size += _single_squareMarketingImage_codec.CalculateSizeWithTag(SquareMarketingImage);
      }
      if (FormatSetting != global::Google.Ads.GoogleAds.V1.Enums.DisplayAdFormatSettingEnum.Types.DisplayAdFormatSetting.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FormatSetting);
      }
      if (pricePrefix_ != null) {
        size += _single_pricePrefix_codec.CalculateSizeWithTag(PricePrefix);
      }
      if (promoText_ != null) {
        size += _single_promoText_codec.CalculateSizeWithTag(PromoText);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LegacyResponsiveDisplayAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.shortHeadline_ != null) {
        if (shortHeadline_ == null || other.ShortHeadline != "") {
          ShortHeadline = other.ShortHeadline;
        }
      }
      if (other.longHeadline_ != null) {
        if (longHeadline_ == null || other.LongHeadline != "") {
          LongHeadline = other.LongHeadline;
        }
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      if (other.businessName_ != null) {
        if (businessName_ == null || other.BusinessName != "") {
          BusinessName = other.BusinessName;
        }
      }
      if (other.allowFlexibleColor_ != null) {
        if (allowFlexibleColor_ == null || other.AllowFlexibleColor != false) {
          AllowFlexibleColor = other.AllowFlexibleColor;
        }
      }
      if (other.accentColor_ != null) {
        if (accentColor_ == null || other.AccentColor != "") {
          AccentColor = other.AccentColor;
        }
      }
      if (other.mainColor_ != null) {
        if (mainColor_ == null || other.MainColor != "") {
          MainColor = other.MainColor;
        }
      }
      if (other.callToActionText_ != null) {
        if (callToActionText_ == null || other.CallToActionText != "") {
          CallToActionText = other.CallToActionText;
        }
      }
      if (other.logoImage_ != null) {
        if (logoImage_ == null || other.LogoImage != "") {
          LogoImage = other.LogoImage;
        }
      }
      if (other.squareLogoImage_ != null) {
        if (squareLogoImage_ == null || other.SquareLogoImage != "") {
          SquareLogoImage = other.SquareLogoImage;
        }
      }
      if (other.marketingImage_ != null) {
        if (marketingImage_ == null || other.MarketingImage != "") {
          MarketingImage = other.MarketingImage;
        }
      }
      if (other.squareMarketingImage_ != null) {
        if (squareMarketingImage_ == null || other.SquareMarketingImage != "") {
          SquareMarketingImage = other.SquareMarketingImage;
        }
      }
      if (other.FormatSetting != global::Google.Ads.GoogleAds.V1.Enums.DisplayAdFormatSettingEnum.Types.DisplayAdFormatSetting.Unspecified) {
        FormatSetting = other.FormatSetting;
      }
      if (other.pricePrefix_ != null) {
        if (pricePrefix_ == null || other.PricePrefix != "") {
          PricePrefix = other.PricePrefix;
        }
      }
      if (other.promoText_ != null) {
        if (promoText_ == null || other.PromoText != "") {
          PromoText = other.PromoText;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_shortHeadline_codec.Read(input);
            if (shortHeadline_ == null || value != "") {
              ShortHeadline = value;
            }
            break;
          }
          case 18: {
            string value = _single_longHeadline_codec.Read(input);
            if (longHeadline_ == null || value != "") {
              LongHeadline = value;
            }
            break;
          }
          case 26: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 34: {
            string value = _single_businessName_codec.Read(input);
            if (businessName_ == null || value != "") {
              BusinessName = value;
            }
            break;
          }
          case 42: {
            bool? value = _single_allowFlexibleColor_codec.Read(input);
            if (allowFlexibleColor_ == null || value != false) {
              AllowFlexibleColor = value;
            }
            break;
          }
          case 50: {
            string value = _single_accentColor_codec.Read(input);
            if (accentColor_ == null || value != "") {
              AccentColor = value;
            }
            break;
          }
          case 58: {
            string value = _single_mainColor_codec.Read(input);
            if (mainColor_ == null || value != "") {
              MainColor = value;
            }
            break;
          }
          case 66: {
            string value = _single_callToActionText_codec.Read(input);
            if (callToActionText_ == null || value != "") {
              CallToActionText = value;
            }
            break;
          }
          case 74: {
            string value = _single_logoImage_codec.Read(input);
            if (logoImage_ == null || value != "") {
              LogoImage = value;
            }
            break;
          }
          case 82: {
            string value = _single_squareLogoImage_codec.Read(input);
            if (squareLogoImage_ == null || value != "") {
              SquareLogoImage = value;
            }
            break;
          }
          case 90: {
            string value = _single_marketingImage_codec.Read(input);
            if (marketingImage_ == null || value != "") {
              MarketingImage = value;
            }
            break;
          }
          case 98: {
            string value = _single_squareMarketingImage_codec.Read(input);
            if (squareMarketingImage_ == null || value != "") {
              SquareMarketingImage = value;
            }
            break;
          }
          case 104: {
            FormatSetting = (global::Google.Ads.GoogleAds.V1.Enums.DisplayAdFormatSettingEnum.Types.DisplayAdFormatSetting) input.ReadEnum();
            break;
          }
          case 114: {
            string value = _single_pricePrefix_codec.Read(input);
            if (pricePrefix_ == null || value != "") {
              PricePrefix = value;
            }
            break;
          }
          case 122: {
            string value = _single_promoText_codec.Read(input);
            if (promoText_ == null || value != "") {
              PromoText = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An app ad.
  /// </summary>
  public sealed partial class AppAdInfo : pb::IMessage<AppAdInfo> {
    private static readonly pb::MessageParser<AppAdInfo> _parser = new pb::MessageParser<AppAdInfo>(() => new AppAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppAdInfo(AppAdInfo other) : this() {
      mandatoryAdText_ = other.mandatoryAdText_ != null ? other.mandatoryAdText_.Clone() : null;
      headlines_ = other.headlines_.Clone();
      descriptions_ = other.descriptions_.Clone();
      images_ = other.images_.Clone();
      youtubeVideos_ = other.youtubeVideos_.Clone();
      html5MediaBundles_ = other.html5MediaBundles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppAdInfo Clone() {
      return new AppAdInfo(this);
    }

    /// <summary>Field number for the "mandatory_ad_text" field.</summary>
    public const int MandatoryAdTextFieldNumber = 1;
    private global::Google.Ads.GoogleAds.V1.Common.AdTextAsset mandatoryAdText_;
    /// <summary>
    /// An optional text asset that, if specified, must always be displayed when
    /// the ad is served.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Common.AdTextAsset MandatoryAdText {
      get { return mandatoryAdText_; }
      set {
        mandatoryAdText_ = value;
      }
    }

    /// <summary>Field number for the "headlines" field.</summary>
    public const int HeadlinesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> _repeated_headlines_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Ads.GoogleAds.V1.Common.AdTextAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> headlines_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset>();
    /// <summary>
    /// List of text assets for headlines. When the ad serves the headlines will
    /// be selected from this list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> Headlines {
      get { return headlines_; }
    }

    /// <summary>Field number for the "descriptions" field.</summary>
    public const int DescriptionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> _repeated_descriptions_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Ads.GoogleAds.V1.Common.AdTextAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> descriptions_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset>();
    /// <summary>
    /// List of text assets for descriptions. When the ad serves the descriptions
    /// will be selected from this list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> Descriptions {
      get { return descriptions_; }
    }

    /// <summary>Field number for the "images" field.</summary>
    public const int ImagesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset> _repeated_images_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Ads.GoogleAds.V1.Common.AdImageAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset> images_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset>();
    /// <summary>
    /// List of image assets that may be displayed with the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset> Images {
      get { return images_; }
    }

    /// <summary>Field number for the "youtube_videos" field.</summary>
    public const int YoutubeVideosFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.AdVideoAsset> _repeated_youtubeVideos_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Ads.GoogleAds.V1.Common.AdVideoAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdVideoAsset> youtubeVideos_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdVideoAsset>();
    /// <summary>
    /// List of YouTube video assets that may be displayed with the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdVideoAsset> YoutubeVideos {
      get { return youtubeVideos_; }
    }

    /// <summary>Field number for the "html5_media_bundles" field.</summary>
    public const int Html5MediaBundlesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.AdMediaBundleAsset> _repeated_html5MediaBundles_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Ads.GoogleAds.V1.Common.AdMediaBundleAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdMediaBundleAsset> html5MediaBundles_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdMediaBundleAsset>();
    /// <summary>
    /// List of media bundle assets that may be used with the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdMediaBundleAsset> Html5MediaBundles {
      get { return html5MediaBundles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MandatoryAdText, other.MandatoryAdText)) return false;
      if(!headlines_.Equals(other.headlines_)) return false;
      if(!descriptions_.Equals(other.descriptions_)) return false;
      if(!images_.Equals(other.images_)) return false;
      if(!youtubeVideos_.Equals(other.youtubeVideos_)) return false;
      if(!html5MediaBundles_.Equals(other.html5MediaBundles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (mandatoryAdText_ != null) hash ^= MandatoryAdText.GetHashCode();
      hash ^= headlines_.GetHashCode();
      hash ^= descriptions_.GetHashCode();
      hash ^= images_.GetHashCode();
      hash ^= youtubeVideos_.GetHashCode();
      hash ^= html5MediaBundles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (mandatoryAdText_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MandatoryAdText);
      }
      headlines_.WriteTo(output, _repeated_headlines_codec);
      descriptions_.WriteTo(output, _repeated_descriptions_codec);
      images_.WriteTo(output, _repeated_images_codec);
      youtubeVideos_.WriteTo(output, _repeated_youtubeVideos_codec);
      html5MediaBundles_.WriteTo(output, _repeated_html5MediaBundles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (mandatoryAdText_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MandatoryAdText);
      }
      size += headlines_.CalculateSize(_repeated_headlines_codec);
      size += descriptions_.CalculateSize(_repeated_descriptions_codec);
      size += images_.CalculateSize(_repeated_images_codec);
      size += youtubeVideos_.CalculateSize(_repeated_youtubeVideos_codec);
      size += html5MediaBundles_.CalculateSize(_repeated_html5MediaBundles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.mandatoryAdText_ != null) {
        if (mandatoryAdText_ == null) {
          MandatoryAdText = new global::Google.Ads.GoogleAds.V1.Common.AdTextAsset();
        }
        MandatoryAdText.MergeFrom(other.MandatoryAdText);
      }
      headlines_.Add(other.headlines_);
      descriptions_.Add(other.descriptions_);
      images_.Add(other.images_);
      youtubeVideos_.Add(other.youtubeVideos_);
      html5MediaBundles_.Add(other.html5MediaBundles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (mandatoryAdText_ == null) {
              MandatoryAdText = new global::Google.Ads.GoogleAds.V1.Common.AdTextAsset();
            }
            input.ReadMessage(MandatoryAdText);
            break;
          }
          case 18: {
            headlines_.AddEntriesFrom(input, _repeated_headlines_codec);
            break;
          }
          case 26: {
            descriptions_.AddEntriesFrom(input, _repeated_descriptions_codec);
            break;
          }
          case 34: {
            images_.AddEntriesFrom(input, _repeated_images_codec);
            break;
          }
          case 42: {
            youtubeVideos_.AddEntriesFrom(input, _repeated_youtubeVideos_codec);
            break;
          }
          case 50: {
            html5MediaBundles_.AddEntriesFrom(input, _repeated_html5MediaBundles_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// App engagement ads allow you to write text encouraging a specific action in
  /// the app, like checking in, making a purchase, or booking a flight.
  /// They allow you to send users to a specific part of your app where they can
  /// find what they're looking for easier and faster.
  /// </summary>
  public sealed partial class AppEngagementAdInfo : pb::IMessage<AppEngagementAdInfo> {
    private static readonly pb::MessageParser<AppEngagementAdInfo> _parser = new pb::MessageParser<AppEngagementAdInfo>(() => new AppEngagementAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppEngagementAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppEngagementAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppEngagementAdInfo(AppEngagementAdInfo other) : this() {
      headlines_ = other.headlines_.Clone();
      descriptions_ = other.descriptions_.Clone();
      images_ = other.images_.Clone();
      videos_ = other.videos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppEngagementAdInfo Clone() {
      return new AppEngagementAdInfo(this);
    }

    /// <summary>Field number for the "headlines" field.</summary>
    public const int HeadlinesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> _repeated_headlines_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V1.Common.AdTextAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> headlines_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset>();
    /// <summary>
    /// List of text assets for headlines. When the ad serves the headlines will
    /// be selected from this list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> Headlines {
      get { return headlines_; }
    }

    /// <summary>Field number for the "descriptions" field.</summary>
    public const int DescriptionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> _repeated_descriptions_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Ads.GoogleAds.V1.Common.AdTextAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> descriptions_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset>();
    /// <summary>
    /// List of text assets for descriptions. When the ad serves the descriptions
    /// will be selected from this list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> Descriptions {
      get { return descriptions_; }
    }

    /// <summary>Field number for the "images" field.</summary>
    public const int ImagesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset> _repeated_images_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Ads.GoogleAds.V1.Common.AdImageAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset> images_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset>();
    /// <summary>
    /// List of image assets that may be displayed with the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset> Images {
      get { return images_; }
    }

    /// <summary>Field number for the "videos" field.</summary>
    public const int VideosFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.AdVideoAsset> _repeated_videos_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Ads.GoogleAds.V1.Common.AdVideoAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdVideoAsset> videos_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdVideoAsset>();
    /// <summary>
    /// List of video assets that may be displayed with the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdVideoAsset> Videos {
      get { return videos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppEngagementAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppEngagementAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!headlines_.Equals(other.headlines_)) return false;
      if(!descriptions_.Equals(other.descriptions_)) return false;
      if(!images_.Equals(other.images_)) return false;
      if(!videos_.Equals(other.videos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= headlines_.GetHashCode();
      hash ^= descriptions_.GetHashCode();
      hash ^= images_.GetHashCode();
      hash ^= videos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      headlines_.WriteTo(output, _repeated_headlines_codec);
      descriptions_.WriteTo(output, _repeated_descriptions_codec);
      images_.WriteTo(output, _repeated_images_codec);
      videos_.WriteTo(output, _repeated_videos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += headlines_.CalculateSize(_repeated_headlines_codec);
      size += descriptions_.CalculateSize(_repeated_descriptions_codec);
      size += images_.CalculateSize(_repeated_images_codec);
      size += videos_.CalculateSize(_repeated_videos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppEngagementAdInfo other) {
      if (other == null) {
        return;
      }
      headlines_.Add(other.headlines_);
      descriptions_.Add(other.descriptions_);
      images_.Add(other.images_);
      videos_.Add(other.videos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            headlines_.AddEntriesFrom(input, _repeated_headlines_codec);
            break;
          }
          case 18: {
            descriptions_.AddEntriesFrom(input, _repeated_descriptions_codec);
            break;
          }
          case 26: {
            images_.AddEntriesFrom(input, _repeated_images_codec);
            break;
          }
          case 34: {
            videos_.AddEntriesFrom(input, _repeated_videos_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A legacy app install ad that only can be used by a few select customers.
  /// </summary>
  public sealed partial class LegacyAppInstallAdInfo : pb::IMessage<LegacyAppInstallAdInfo> {
    private static readonly pb::MessageParser<LegacyAppInstallAdInfo> _parser = new pb::MessageParser<LegacyAppInstallAdInfo>(() => new LegacyAppInstallAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LegacyAppInstallAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegacyAppInstallAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegacyAppInstallAdInfo(LegacyAppInstallAdInfo other) : this() {
      AppId = other.AppId;
      appStore_ = other.appStore_;
      Headline = other.Headline;
      Description1 = other.Description1;
      Description2 = other.Description2;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegacyAppInstallAdInfo Clone() {
      return new LegacyAppInstallAdInfo(this);
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_appId_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string appId_;
    /// <summary>
    /// The id of the mobile app.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = value;
      }
    }


    /// <summary>Field number for the "app_store" field.</summary>
    public const int AppStoreFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V1.Enums.LegacyAppInstallAdAppStoreEnum.Types.LegacyAppInstallAdAppStore appStore_ = global::Google.Ads.GoogleAds.V1.Enums.LegacyAppInstallAdAppStoreEnum.Types.LegacyAppInstallAdAppStore.Unspecified;
    /// <summary>
    /// The app store the mobile app is available in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Enums.LegacyAppInstallAdAppStoreEnum.Types.LegacyAppInstallAdAppStore AppStore {
      get { return appStore_; }
      set {
        appStore_ = value;
      }
    }

    /// <summary>Field number for the "headline" field.</summary>
    public const int HeadlineFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_headline_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string headline_;
    /// <summary>
    /// The headline of the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Headline {
      get { return headline_; }
      set {
        headline_ = value;
      }
    }


    /// <summary>Field number for the "description1" field.</summary>
    public const int Description1FieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_description1_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string description1_;
    /// <summary>
    /// The first description line of the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description1 {
      get { return description1_; }
      set {
        description1_ = value;
      }
    }


    /// <summary>Field number for the "description2" field.</summary>
    public const int Description2FieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_description2_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string description2_;
    /// <summary>
    /// The second description line of the ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description2 {
      get { return description2_; }
      set {
        description2_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LegacyAppInstallAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LegacyAppInstallAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (AppStore != other.AppStore) return false;
      if (Headline != other.Headline) return false;
      if (Description1 != other.Description1) return false;
      if (Description2 != other.Description2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (appId_ != null) hash ^= AppId.GetHashCode();
      if (AppStore != global::Google.Ads.GoogleAds.V1.Enums.LegacyAppInstallAdAppStoreEnum.Types.LegacyAppInstallAdAppStore.Unspecified) hash ^= AppStore.GetHashCode();
      if (headline_ != null) hash ^= Headline.GetHashCode();
      if (description1_ != null) hash ^= Description1.GetHashCode();
      if (description2_ != null) hash ^= Description2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (appId_ != null) {
        _single_appId_codec.WriteTagAndValue(output, AppId);
      }
      if (AppStore != global::Google.Ads.GoogleAds.V1.Enums.LegacyAppInstallAdAppStoreEnum.Types.LegacyAppInstallAdAppStore.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AppStore);
      }
      if (headline_ != null) {
        _single_headline_codec.WriteTagAndValue(output, Headline);
      }
      if (description1_ != null) {
        _single_description1_codec.WriteTagAndValue(output, Description1);
      }
      if (description2_ != null) {
        _single_description2_codec.WriteTagAndValue(output, Description2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (appId_ != null) {
        size += _single_appId_codec.CalculateSizeWithTag(AppId);
      }
      if (AppStore != global::Google.Ads.GoogleAds.V1.Enums.LegacyAppInstallAdAppStoreEnum.Types.LegacyAppInstallAdAppStore.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AppStore);
      }
      if (headline_ != null) {
        size += _single_headline_codec.CalculateSizeWithTag(Headline);
      }
      if (description1_ != null) {
        size += _single_description1_codec.CalculateSizeWithTag(Description1);
      }
      if (description2_ != null) {
        size += _single_description2_codec.CalculateSizeWithTag(Description2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LegacyAppInstallAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.appId_ != null) {
        if (appId_ == null || other.AppId != "") {
          AppId = other.AppId;
        }
      }
      if (other.AppStore != global::Google.Ads.GoogleAds.V1.Enums.LegacyAppInstallAdAppStoreEnum.Types.LegacyAppInstallAdAppStore.Unspecified) {
        AppStore = other.AppStore;
      }
      if (other.headline_ != null) {
        if (headline_ == null || other.Headline != "") {
          Headline = other.Headline;
        }
      }
      if (other.description1_ != null) {
        if (description1_ == null || other.Description1 != "") {
          Description1 = other.Description1;
        }
      }
      if (other.description2_ != null) {
        if (description2_ == null || other.Description2 != "") {
          Description2 = other.Description2;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_appId_codec.Read(input);
            if (appId_ == null || value != "") {
              AppId = value;
            }
            break;
          }
          case 16: {
            AppStore = (global::Google.Ads.GoogleAds.V1.Enums.LegacyAppInstallAdAppStoreEnum.Types.LegacyAppInstallAdAppStore) input.ReadEnum();
            break;
          }
          case 26: {
            string value = _single_headline_codec.Read(input);
            if (headline_ == null || value != "") {
              Headline = value;
            }
            break;
          }
          case 34: {
            string value = _single_description1_codec.Read(input);
            if (description1_ == null || value != "") {
              Description1 = value;
            }
            break;
          }
          case 42: {
            string value = _single_description2_codec.Read(input);
            if (description2_ == null || value != "") {
              Description2 = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A responsive display ad.
  /// </summary>
  public sealed partial class ResponsiveDisplayAdInfo : pb::IMessage<ResponsiveDisplayAdInfo> {
    private static readonly pb::MessageParser<ResponsiveDisplayAdInfo> _parser = new pb::MessageParser<ResponsiveDisplayAdInfo>(() => new ResponsiveDisplayAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponsiveDisplayAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponsiveDisplayAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponsiveDisplayAdInfo(ResponsiveDisplayAdInfo other) : this() {
      marketingImages_ = other.marketingImages_.Clone();
      squareMarketingImages_ = other.squareMarketingImages_.Clone();
      logoImages_ = other.logoImages_.Clone();
      squareLogoImages_ = other.squareLogoImages_.Clone();
      headlines_ = other.headlines_.Clone();
      longHeadline_ = other.longHeadline_ != null ? other.longHeadline_.Clone() : null;
      descriptions_ = other.descriptions_.Clone();
      youtubeVideos_ = other.youtubeVideos_.Clone();
      BusinessName = other.BusinessName;
      MainColor = other.MainColor;
      AccentColor = other.AccentColor;
      AllowFlexibleColor = other.AllowFlexibleColor;
      CallToActionText = other.CallToActionText;
      PricePrefix = other.PricePrefix;
      PromoText = other.PromoText;
      formatSetting_ = other.formatSetting_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponsiveDisplayAdInfo Clone() {
      return new ResponsiveDisplayAdInfo(this);
    }

    /// <summary>Field number for the "marketing_images" field.</summary>
    public const int MarketingImagesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset> _repeated_marketingImages_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V1.Common.AdImageAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset> marketingImages_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset>();
    /// <summary>
    /// Marketing images to be used in the ad. Valid image types are GIF,
    /// JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
    /// be 1.91:1 (+-1%). At least one marketing_image is required. Combined with
    /// square_marketing_images the maximum is 15.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset> MarketingImages {
      get { return marketingImages_; }
    }

    /// <summary>Field number for the "square_marketing_images" field.</summary>
    public const int SquareMarketingImagesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset> _repeated_squareMarketingImages_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Ads.GoogleAds.V1.Common.AdImageAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset> squareMarketingImages_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset>();
    /// <summary>
    /// Square marketing images to be used in the ad. Valid image types are GIF,
    /// JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
    /// be 1:1 (+-1%). At least one square marketing_image is required. Combined
    /// with marketing_images the maximum is 15.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset> SquareMarketingImages {
      get { return squareMarketingImages_; }
    }

    /// <summary>Field number for the "logo_images" field.</summary>
    public const int LogoImagesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset> _repeated_logoImages_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Ads.GoogleAds.V1.Common.AdImageAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset> logoImages_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset>();
    /// <summary>
    /// Logo images to be used in the ad. Valid image types are GIF,
    /// JPEG, and PNG. The minimum size is 512x128 and the aspect ratio must
    /// be 4:1 (+-1%). Combined with square_logo_images the maximum is 5.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset> LogoImages {
      get { return logoImages_; }
    }

    /// <summary>Field number for the "square_logo_images" field.</summary>
    public const int SquareLogoImagesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset> _repeated_squareLogoImages_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Ads.GoogleAds.V1.Common.AdImageAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset> squareLogoImages_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset>();
    /// <summary>
    /// Square logo images to be used in the ad. Valid image types are GIF,
    /// JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must
    /// be 1:1 (+-1%). Combined with square_logo_images the maximum is 5.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdImageAsset> SquareLogoImages {
      get { return squareLogoImages_; }
    }

    /// <summary>Field number for the "headlines" field.</summary>
    public const int HeadlinesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> _repeated_headlines_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Ads.GoogleAds.V1.Common.AdTextAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> headlines_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset>();
    /// <summary>
    /// Short format headlines for the ad. The maximum length is 30 characters.
    /// At least 1 and max 5 headlines can be specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> Headlines {
      get { return headlines_; }
    }

    /// <summary>Field number for the "long_headline" field.</summary>
    public const int LongHeadlineFieldNumber = 6;
    private global::Google.Ads.GoogleAds.V1.Common.AdTextAsset longHeadline_;
    /// <summary>
    /// A required long format headline. The maximum length is 90 characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Common.AdTextAsset LongHeadline {
      get { return longHeadline_; }
      set {
        longHeadline_ = value;
      }
    }

    /// <summary>Field number for the "descriptions" field.</summary>
    public const int DescriptionsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> _repeated_descriptions_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Ads.GoogleAds.V1.Common.AdTextAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> descriptions_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset>();
    /// <summary>
    /// Descriptive texts for the ad. The maximum length is 90 characters. At
    /// least 1 and max 5 headlines can be specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdTextAsset> Descriptions {
      get { return descriptions_; }
    }

    /// <summary>Field number for the "youtube_videos" field.</summary>
    public const int YoutubeVideosFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.AdVideoAsset> _repeated_youtubeVideos_codec
        = pb::FieldCodec.ForMessage(66, global::Google.Ads.GoogleAds.V1.Common.AdVideoAsset.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdVideoAsset> youtubeVideos_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdVideoAsset>();
    /// <summary>
    /// Optional YouTube videos for the ad. A maximum of 5 videos can be specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.AdVideoAsset> YoutubeVideos {
      get { return youtubeVideos_; }
    }

    /// <summary>Field number for the "business_name" field.</summary>
    public const int BusinessNameFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_businessName_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string businessName_;
    /// <summary>
    /// The advertiser/brand name. Maximum display width is 25.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessName {
      get { return businessName_; }
      set {
        businessName_ = value;
      }
    }


    /// <summary>Field number for the "main_color" field.</summary>
    public const int MainColorFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_mainColor_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string mainColor_;
    /// <summary>
    /// The main color of the ad in hexadecimal, e.g. #ffffff for white.
    /// If one of main_color and accent_color is set, the other is required as
    /// well.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MainColor {
      get { return mainColor_; }
      set {
        mainColor_ = value;
      }
    }


    /// <summary>Field number for the "accent_color" field.</summary>
    public const int AccentColorFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_accentColor_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string accentColor_;
    /// <summary>
    /// The accent color of the ad in hexadecimal, e.g. #ffffff for white.
    /// If one of main_color and accent_color is set, the other is required as
    /// well.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccentColor {
      get { return accentColor_; }
      set {
        accentColor_ = value;
      }
    }


    /// <summary>Field number for the "allow_flexible_color" field.</summary>
    public const int AllowFlexibleColorFieldNumber = 12;
    private static readonly pb::FieldCodec<bool?> _single_allowFlexibleColor_codec = pb::FieldCodec.ForStructWrapper<bool>(98);
    private bool? allowFlexibleColor_;
    /// <summary>
    /// Advertiser's consent to allow flexible color. When true, the ad may be
    /// served with different color if necessary. When false, the ad will be served
    /// with the specified colors or a neutral color.
    /// The default value is true.
    /// Must be true if main_color and accent_color are not set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? AllowFlexibleColor {
      get { return allowFlexibleColor_; }
      set {
        allowFlexibleColor_ = value;
      }
    }


    /// <summary>Field number for the "call_to_action_text" field.</summary>
    public const int CallToActionTextFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _single_callToActionText_codec = pb::FieldCodec.ForClassWrapper<string>(106);
    private string callToActionText_;
    /// <summary>
    /// The call-to-action text for the ad. Maximum display width is 30.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CallToActionText {
      get { return callToActionText_; }
      set {
        callToActionText_ = value;
      }
    }


    /// <summary>Field number for the "price_prefix" field.</summary>
    public const int PricePrefixFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _single_pricePrefix_codec = pb::FieldCodec.ForClassWrapper<string>(114);
    private string pricePrefix_;
    /// <summary>
    /// Prefix before price. E.g. 'as low as'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PricePrefix {
      get { return pricePrefix_; }
      set {
        pricePrefix_ = value;
      }
    }


    /// <summary>Field number for the "promo_text" field.</summary>
    public const int PromoTextFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _single_promoText_codec = pb::FieldCodec.ForClassWrapper<string>(122);
    private string promoText_;
    /// <summary>
    /// Promotion text used for dyanmic formats of responsive ads. For example
    /// 'Free two-day shipping'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PromoText {
      get { return promoText_; }
      set {
        promoText_ = value;
      }
    }


    /// <summary>Field number for the "format_setting" field.</summary>
    public const int FormatSettingFieldNumber = 16;
    private global::Google.Ads.GoogleAds.V1.Enums.DisplayAdFormatSettingEnum.Types.DisplayAdFormatSetting formatSetting_ = global::Google.Ads.GoogleAds.V1.Enums.DisplayAdFormatSettingEnum.Types.DisplayAdFormatSetting.Unspecified;
    /// <summary>
    /// Specifies which format the ad will be served in. Default is ALL_FORMATS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Enums.DisplayAdFormatSettingEnum.Types.DisplayAdFormatSetting FormatSetting {
      get { return formatSetting_; }
      set {
        formatSetting_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponsiveDisplayAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponsiveDisplayAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!marketingImages_.Equals(other.marketingImages_)) return false;
      if(!squareMarketingImages_.Equals(other.squareMarketingImages_)) return false;
      if(!logoImages_.Equals(other.logoImages_)) return false;
      if(!squareLogoImages_.Equals(other.squareLogoImages_)) return false;
      if(!headlines_.Equals(other.headlines_)) return false;
      if (!object.Equals(LongHeadline, other.LongHeadline)) return false;
      if(!descriptions_.Equals(other.descriptions_)) return false;
      if(!youtubeVideos_.Equals(other.youtubeVideos_)) return false;
      if (BusinessName != other.BusinessName) return false;
      if (MainColor != other.MainColor) return false;
      if (AccentColor != other.AccentColor) return false;
      if (AllowFlexibleColor != other.AllowFlexibleColor) return false;
      if (CallToActionText != other.CallToActionText) return false;
      if (PricePrefix != other.PricePrefix) return false;
      if (PromoText != other.PromoText) return false;
      if (FormatSetting != other.FormatSetting) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= marketingImages_.GetHashCode();
      hash ^= squareMarketingImages_.GetHashCode();
      hash ^= logoImages_.GetHashCode();
      hash ^= squareLogoImages_.GetHashCode();
      hash ^= headlines_.GetHashCode();
      if (longHeadline_ != null) hash ^= LongHeadline.GetHashCode();
      hash ^= descriptions_.GetHashCode();
      hash ^= youtubeVideos_.GetHashCode();
      if (businessName_ != null) hash ^= BusinessName.GetHashCode();
      if (mainColor_ != null) hash ^= MainColor.GetHashCode();
      if (accentColor_ != null) hash ^= AccentColor.GetHashCode();
      if (allowFlexibleColor_ != null) hash ^= AllowFlexibleColor.GetHashCode();
      if (callToActionText_ != null) hash ^= CallToActionText.GetHashCode();
      if (pricePrefix_ != null) hash ^= PricePrefix.GetHashCode();
      if (promoText_ != null) hash ^= PromoText.GetHashCode();
      if (FormatSetting != global::Google.Ads.GoogleAds.V1.Enums.DisplayAdFormatSettingEnum.Types.DisplayAdFormatSetting.Unspecified) hash ^= FormatSetting.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      marketingImages_.WriteTo(output, _repeated_marketingImages_codec);
      squareMarketingImages_.WriteTo(output, _repeated_squareMarketingImages_codec);
      logoImages_.WriteTo(output, _repeated_logoImages_codec);
      squareLogoImages_.WriteTo(output, _repeated_squareLogoImages_codec);
      headlines_.WriteTo(output, _repeated_headlines_codec);
      if (longHeadline_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LongHeadline);
      }
      descriptions_.WriteTo(output, _repeated_descriptions_codec);
      youtubeVideos_.WriteTo(output, _repeated_youtubeVideos_codec);
      if (businessName_ != null) {
        _single_businessName_codec.WriteTagAndValue(output, BusinessName);
      }
      if (mainColor_ != null) {
        _single_mainColor_codec.WriteTagAndValue(output, MainColor);
      }
      if (accentColor_ != null) {
        _single_accentColor_codec.WriteTagAndValue(output, AccentColor);
      }
      if (allowFlexibleColor_ != null) {
        _single_allowFlexibleColor_codec.WriteTagAndValue(output, AllowFlexibleColor);
      }
      if (callToActionText_ != null) {
        _single_callToActionText_codec.WriteTagAndValue(output, CallToActionText);
      }
      if (pricePrefix_ != null) {
        _single_pricePrefix_codec.WriteTagAndValue(output, PricePrefix);
      }
      if (promoText_ != null) {
        _single_promoText_codec.WriteTagAndValue(output, PromoText);
      }
      if (FormatSetting != global::Google.Ads.GoogleAds.V1.Enums.DisplayAdFormatSettingEnum.Types.DisplayAdFormatSetting.Unspecified) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) FormatSetting);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += marketingImages_.CalculateSize(_repeated_marketingImages_codec);
      size += squareMarketingImages_.CalculateSize(_repeated_squareMarketingImages_codec);
      size += logoImages_.CalculateSize(_repeated_logoImages_codec);
      size += squareLogoImages_.CalculateSize(_repeated_squareLogoImages_codec);
      size += headlines_.CalculateSize(_repeated_headlines_codec);
      if (longHeadline_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LongHeadline);
      }
      size += descriptions_.CalculateSize(_repeated_descriptions_codec);
      size += youtubeVideos_.CalculateSize(_repeated_youtubeVideos_codec);
      if (businessName_ != null) {
        size += _single_businessName_codec.CalculateSizeWithTag(BusinessName);
      }
      if (mainColor_ != null) {
        size += _single_mainColor_codec.CalculateSizeWithTag(MainColor);
      }
      if (accentColor_ != null) {
        size += _single_accentColor_codec.CalculateSizeWithTag(AccentColor);
      }
      if (allowFlexibleColor_ != null) {
        size += _single_allowFlexibleColor_codec.CalculateSizeWithTag(AllowFlexibleColor);
      }
      if (callToActionText_ != null) {
        size += _single_callToActionText_codec.CalculateSizeWithTag(CallToActionText);
      }
      if (pricePrefix_ != null) {
        size += _single_pricePrefix_codec.CalculateSizeWithTag(PricePrefix);
      }
      if (promoText_ != null) {
        size += _single_promoText_codec.CalculateSizeWithTag(PromoText);
      }
      if (FormatSetting != global::Google.Ads.GoogleAds.V1.Enums.DisplayAdFormatSettingEnum.Types.DisplayAdFormatSetting.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) FormatSetting);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponsiveDisplayAdInfo other) {
      if (other == null) {
        return;
      }
      marketingImages_.Add(other.marketingImages_);
      squareMarketingImages_.Add(other.squareMarketingImages_);
      logoImages_.Add(other.logoImages_);
      squareLogoImages_.Add(other.squareLogoImages_);
      headlines_.Add(other.headlines_);
      if (other.longHeadline_ != null) {
        if (longHeadline_ == null) {
          LongHeadline = new global::Google.Ads.GoogleAds.V1.Common.AdTextAsset();
        }
        LongHeadline.MergeFrom(other.LongHeadline);
      }
      descriptions_.Add(other.descriptions_);
      youtubeVideos_.Add(other.youtubeVideos_);
      if (other.businessName_ != null) {
        if (businessName_ == null || other.BusinessName != "") {
          BusinessName = other.BusinessName;
        }
      }
      if (other.mainColor_ != null) {
        if (mainColor_ == null || other.MainColor != "") {
          MainColor = other.MainColor;
        }
      }
      if (other.accentColor_ != null) {
        if (accentColor_ == null || other.AccentColor != "") {
          AccentColor = other.AccentColor;
        }
      }
      if (other.allowFlexibleColor_ != null) {
        if (allowFlexibleColor_ == null || other.AllowFlexibleColor != false) {
          AllowFlexibleColor = other.AllowFlexibleColor;
        }
      }
      if (other.callToActionText_ != null) {
        if (callToActionText_ == null || other.CallToActionText != "") {
          CallToActionText = other.CallToActionText;
        }
      }
      if (other.pricePrefix_ != null) {
        if (pricePrefix_ == null || other.PricePrefix != "") {
          PricePrefix = other.PricePrefix;
        }
      }
      if (other.promoText_ != null) {
        if (promoText_ == null || other.PromoText != "") {
          PromoText = other.PromoText;
        }
      }
      if (other.FormatSetting != global::Google.Ads.GoogleAds.V1.Enums.DisplayAdFormatSettingEnum.Types.DisplayAdFormatSetting.Unspecified) {
        FormatSetting = other.FormatSetting;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            marketingImages_.AddEntriesFrom(input, _repeated_marketingImages_codec);
            break;
          }
          case 18: {
            squareMarketingImages_.AddEntriesFrom(input, _repeated_squareMarketingImages_codec);
            break;
          }
          case 26: {
            logoImages_.AddEntriesFrom(input, _repeated_logoImages_codec);
            break;
          }
          case 34: {
            squareLogoImages_.AddEntriesFrom(input, _repeated_squareLogoImages_codec);
            break;
          }
          case 42: {
            headlines_.AddEntriesFrom(input, _repeated_headlines_codec);
            break;
          }
          case 50: {
            if (longHeadline_ == null) {
              LongHeadline = new global::Google.Ads.GoogleAds.V1.Common.AdTextAsset();
            }
            input.ReadMessage(LongHeadline);
            break;
          }
          case 58: {
            descriptions_.AddEntriesFrom(input, _repeated_descriptions_codec);
            break;
          }
          case 66: {
            youtubeVideos_.AddEntriesFrom(input, _repeated_youtubeVideos_codec);
            break;
          }
          case 74: {
            string value = _single_businessName_codec.Read(input);
            if (businessName_ == null || value != "") {
              BusinessName = value;
            }
            break;
          }
          case 82: {
            string value = _single_mainColor_codec.Read(input);
            if (mainColor_ == null || value != "") {
              MainColor = value;
            }
            break;
          }
          case 90: {
            string value = _single_accentColor_codec.Read(input);
            if (accentColor_ == null || value != "") {
              AccentColor = value;
            }
            break;
          }
          case 98: {
            bool? value = _single_allowFlexibleColor_codec.Read(input);
            if (allowFlexibleColor_ == null || value != false) {
              AllowFlexibleColor = value;
            }
            break;
          }
          case 106: {
            string value = _single_callToActionText_codec.Read(input);
            if (callToActionText_ == null || value != "") {
              CallToActionText = value;
            }
            break;
          }
          case 114: {
            string value = _single_pricePrefix_codec.Read(input);
            if (pricePrefix_ == null || value != "") {
              PricePrefix = value;
            }
            break;
          }
          case 122: {
            string value = _single_promoText_codec.Read(input);
            if (promoText_ == null || value != "") {
              PromoText = value;
            }
            break;
          }
          case 128: {
            FormatSetting = (global::Google.Ads.GoogleAds.V1.Enums.DisplayAdFormatSettingEnum.Types.DisplayAdFormatSetting) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A generic type of display ad. The exact ad format is controlled by the
  /// display_upload_product_type field, which determines what kinds of data
  /// need to be included with the ad.
  /// </summary>
  public sealed partial class DisplayUploadAdInfo : pb::IMessage<DisplayUploadAdInfo> {
    private static readonly pb::MessageParser<DisplayUploadAdInfo> _parser = new pb::MessageParser<DisplayUploadAdInfo>(() => new DisplayUploadAdInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DisplayUploadAdInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.AdTypeInfosReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisplayUploadAdInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisplayUploadAdInfo(DisplayUploadAdInfo other) : this() {
      displayUploadProductType_ = other.displayUploadProductType_;
      switch (other.MediaAssetCase) {
        case MediaAssetOneofCase.MediaBundle:
          MediaBundle = other.MediaBundle.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisplayUploadAdInfo Clone() {
      return new DisplayUploadAdInfo(this);
    }

    /// <summary>Field number for the "display_upload_product_type" field.</summary>
    public const int DisplayUploadProductTypeFieldNumber = 1;
    private global::Google.Ads.GoogleAds.V1.Enums.DisplayUploadProductTypeEnum.Types.DisplayUploadProductType displayUploadProductType_ = global::Google.Ads.GoogleAds.V1.Enums.DisplayUploadProductTypeEnum.Types.DisplayUploadProductType.Unspecified;
    /// <summary>
    /// The product type of this ad. See comments on the enum for details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Enums.DisplayUploadProductTypeEnum.Types.DisplayUploadProductType DisplayUploadProductType {
      get { return displayUploadProductType_; }
      set {
        displayUploadProductType_ = value;
      }
    }

    /// <summary>Field number for the "media_bundle" field.</summary>
    public const int MediaBundleFieldNumber = 2;
    /// <summary>
    /// A media bundle asset to be used in the ad. For information about the
    /// media bundle for HTML5_UPLOAD_AD see
    /// https://support.google.com/google-ads/answer/1722096
    /// Media bundles that are part of dynamic product types use a special format
    /// that needs to be created through the Google Web Designer. See
    /// https://support.google.com/webdesigner/answer/7543898 for more
    /// information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Common.AdMediaBundleAsset MediaBundle {
      get { return mediaAssetCase_ == MediaAssetOneofCase.MediaBundle ? (global::Google.Ads.GoogleAds.V1.Common.AdMediaBundleAsset) mediaAsset_ : null; }
      set {
        mediaAsset_ = value;
        mediaAssetCase_ = value == null ? MediaAssetOneofCase.None : MediaAssetOneofCase.MediaBundle;
      }
    }

    private object mediaAsset_;
    /// <summary>Enum of possible cases for the "media_asset" oneof.</summary>
    public enum MediaAssetOneofCase {
      None = 0,
      MediaBundle = 2,
    }
    private MediaAssetOneofCase mediaAssetCase_ = MediaAssetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaAssetOneofCase MediaAssetCase {
      get { return mediaAssetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMediaAsset() {
      mediaAssetCase_ = MediaAssetOneofCase.None;
      mediaAsset_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DisplayUploadAdInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DisplayUploadAdInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayUploadProductType != other.DisplayUploadProductType) return false;
      if (!object.Equals(MediaBundle, other.MediaBundle)) return false;
      if (MediaAssetCase != other.MediaAssetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DisplayUploadProductType != global::Google.Ads.GoogleAds.V1.Enums.DisplayUploadProductTypeEnum.Types.DisplayUploadProductType.Unspecified) hash ^= DisplayUploadProductType.GetHashCode();
      if (mediaAssetCase_ == MediaAssetOneofCase.MediaBundle) hash ^= MediaBundle.GetHashCode();
      hash ^= (int) mediaAssetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DisplayUploadProductType != global::Google.Ads.GoogleAds.V1.Enums.DisplayUploadProductTypeEnum.Types.DisplayUploadProductType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DisplayUploadProductType);
      }
      if (mediaAssetCase_ == MediaAssetOneofCase.MediaBundle) {
        output.WriteRawTag(18);
        output.WriteMessage(MediaBundle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DisplayUploadProductType != global::Google.Ads.GoogleAds.V1.Enums.DisplayUploadProductTypeEnum.Types.DisplayUploadProductType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DisplayUploadProductType);
      }
      if (mediaAssetCase_ == MediaAssetOneofCase.MediaBundle) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MediaBundle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DisplayUploadAdInfo other) {
      if (other == null) {
        return;
      }
      if (other.DisplayUploadProductType != global::Google.Ads.GoogleAds.V1.Enums.DisplayUploadProductTypeEnum.Types.DisplayUploadProductType.Unspecified) {
        DisplayUploadProductType = other.DisplayUploadProductType;
      }
      switch (other.MediaAssetCase) {
        case MediaAssetOneofCase.MediaBundle:
          if (MediaBundle == null) {
            MediaBundle = new global::Google.Ads.GoogleAds.V1.Common.AdMediaBundleAsset();
          }
          MediaBundle.MergeFrom(other.MediaBundle);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DisplayUploadProductType = (global::Google.Ads.GoogleAds.V1.Enums.DisplayUploadProductTypeEnum.Types.DisplayUploadProductType) input.ReadEnum();
            break;
          }
          case 18: {
            global::Google.Ads.GoogleAds.V1.Common.AdMediaBundleAsset subBuilder = new global::Google.Ads.GoogleAds.V1.Common.AdMediaBundleAsset();
            if (mediaAssetCase_ == MediaAssetOneofCase.MediaBundle) {
              subBuilder.MergeFrom(MediaBundle);
            }
            input.ReadMessage(subBuilder);
            MediaBundle = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
