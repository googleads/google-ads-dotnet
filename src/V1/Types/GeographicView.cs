// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v1/resources/geographic_view.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V1.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v1/resources/geographic_view.proto</summary>
  public static partial class GeographicViewReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v1/resources/geographic_view.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GeographicViewReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjdnb29nbGUvYWRzL2dvb2dsZWFkcy92MS9yZXNvdXJjZXMvZ2VvZ3JhcGhp",
            "Y192aWV3LnByb3RvEiFnb29nbGUuYWRzLmdvb2dsZWFkcy52MS5yZXNvdXJj",
            "ZXMaNmdvb2dsZS9hZHMvZ29vZ2xlYWRzL3YxL2VudW1zL2dlb190YXJnZXRp",
            "bmdfdHlwZS5wcm90bxofZ29vZ2xlL2FwaS9maWVsZF9iZWhhdmlvci5wcm90",
            "bxoZZ29vZ2xlL2FwaS9yZXNvdXJjZS5wcm90bxoeZ29vZ2xlL3Byb3RvYnVm",
            "L3dyYXBwZXJzLnByb3RvGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3Rv",
            "IpcDCg5HZW9ncmFwaGljVmlldxJGCg1yZXNvdXJjZV9uYW1lGAEgASgJQi/g",
            "QQP6QSkKJ2dvb2dsZWFkcy5nb29nbGVhcGlzLmNvbS9HZW9ncmFwaGljVmll",
            "dxJ1Chtjb3VudHJ5X2dlb190YXJnZXRfY29uc3RhbnQYAiABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWVCMuBBA/pBLAoqZ29vZ2xlYWRzLmdv",
            "b2dsZWFwaXMuY29tL0dlb1RhcmdldENvbnN0YW50EmAKDWxvY2F0aW9uX3R5",
            "cGUYAyABKA4yRC5nb29nbGUuYWRzLmdvb2dsZWFkcy52MS5lbnVtcy5HZW9U",
            "YXJnZXRpbmdUeXBlRW51bS5HZW9UYXJnZXRpbmdUeXBlQgPgQQM6ZOpBYQon",
            "Z29vZ2xlYWRzLmdvb2dsZWFwaXMuY29tL0dlb2dyYXBoaWNWaWV3EjZjdXN0",
            "b21lcnMve2N1c3RvbWVyfS9nZW9ncmFwaGljVmlld3Mve2dlb2dyYXBoaWNf",
            "dmlld31CgAIKJWNvbS5nb29nbGUuYWRzLmdvb2dsZWFkcy52MS5yZXNvdXJj",
            "ZXNCE0dlb2dyYXBoaWNWaWV3UHJvdG9QAVpKZ29vZ2xlLmdvbGFuZy5vcmcv",
            "Z2VucHJvdG8vZ29vZ2xlYXBpcy9hZHMvZ29vZ2xlYWRzL3YxL3Jlc291cmNl",
            "cztyZXNvdXJjZXOiAgNHQUGqAiFHb29nbGUuQWRzLkdvb2dsZUFkcy5WMS5S",
            "ZXNvdXJjZXPKAiFHb29nbGVcQWRzXEdvb2dsZUFkc1xWMVxSZXNvdXJjZXPq",
            "AiVHb29nbGU6OkFkczo6R29vZ2xlQWRzOjpWMTo6UmVzb3VyY2VzYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V1.Enums.GeoTargetingTypeReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Resources.GeographicView), global::Google.Ads.GoogleAds.V1.Resources.GeographicView.Parser, new[]{ "ResourceName", "CountryGeoTargetConstant", "LocationType" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A geographic view.
  ///
  /// Geographic View includes all metrics aggregated at the country level,
  /// one row per country. It reports metrics at either actual physical location of
  /// the user or an area of interest. If other segment fields are used, you may
  /// get more than one row per country.
  /// </summary>
  public sealed partial class GeographicView : pb::IMessage<GeographicView> {
    private static readonly pb::MessageParser<GeographicView> _parser = new pb::MessageParser<GeographicView>(() => new GeographicView());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GeographicView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Resources.GeographicViewReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeographicView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeographicView(GeographicView other) : this() {
      resourceName_ = other.resourceName_;
      CountryGeoTargetConstant = other.CountryGeoTargetConstant;
      locationType_ = other.locationType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeographicView Clone() {
      return new GeographicView(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// Output only. The resource name of the geographic view.
    /// Geographic view resource names have the form:
    ///
    /// `customers/{customer_id}/geographicViews/{country_criterion_id}~{location_type}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "country_geo_target_constant" field.</summary>
    public const int CountryGeoTargetConstantFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_countryGeoTargetConstant_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string countryGeoTargetConstant_;
    /// <summary>
    /// Output only. CriterionId for the geo target for a country.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryGeoTargetConstant {
      get { return countryGeoTargetConstant_; }
      set {
        countryGeoTargetConstant_ = value;
      }
    }


    /// <summary>Field number for the "location_type" field.</summary>
    public const int LocationTypeFieldNumber = 3;
    private global::Google.Ads.GoogleAds.V1.Enums.GeoTargetingTypeEnum.Types.GeoTargetingType locationType_ = global::Google.Ads.GoogleAds.V1.Enums.GeoTargetingTypeEnum.Types.GeoTargetingType.Unspecified;
    /// <summary>
    /// Output only. Type of the geo targeting of the campaign.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V1.Enums.GeoTargetingTypeEnum.Types.GeoTargetingType LocationType {
      get { return locationType_; }
      set {
        locationType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GeographicView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GeographicView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (CountryGeoTargetConstant != other.CountryGeoTargetConstant) return false;
      if (LocationType != other.LocationType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (countryGeoTargetConstant_ != null) hash ^= CountryGeoTargetConstant.GetHashCode();
      if (LocationType != global::Google.Ads.GoogleAds.V1.Enums.GeoTargetingTypeEnum.Types.GeoTargetingType.Unspecified) hash ^= LocationType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (countryGeoTargetConstant_ != null) {
        _single_countryGeoTargetConstant_codec.WriteTagAndValue(output, CountryGeoTargetConstant);
      }
      if (LocationType != global::Google.Ads.GoogleAds.V1.Enums.GeoTargetingTypeEnum.Types.GeoTargetingType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) LocationType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (countryGeoTargetConstant_ != null) {
        size += _single_countryGeoTargetConstant_codec.CalculateSizeWithTag(CountryGeoTargetConstant);
      }
      if (LocationType != global::Google.Ads.GoogleAds.V1.Enums.GeoTargetingTypeEnum.Types.GeoTargetingType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LocationType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GeographicView other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.countryGeoTargetConstant_ != null) {
        if (countryGeoTargetConstant_ == null || other.CountryGeoTargetConstant != "") {
          CountryGeoTargetConstant = other.CountryGeoTargetConstant;
        }
      }
      if (other.LocationType != global::Google.Ads.GoogleAds.V1.Enums.GeoTargetingTypeEnum.Types.GeoTargetingType.Unspecified) {
        LocationType = other.LocationType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 18: {
            string value = _single_countryGeoTargetConstant_codec.Read(input);
            if (countryGeoTargetConstant_ == null || value != "") {
              CountryGeoTargetConstant = value;
            }
            break;
          }
          case 24: {
            LocationType = (global::Google.Ads.GoogleAds.V1.Enums.GeoTargetingTypeEnum.Types.GeoTargetingType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
