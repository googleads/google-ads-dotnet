// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v1/common/simulation.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V1.Common {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v1/common/simulation.proto</summary>
  public static partial class SimulationReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v1/common/simulation.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SimulationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9nb29nbGUvYWRzL2dvb2dsZWFkcy92MS9jb21tb24vc2ltdWxhdGlvbi5w",
            "cm90bxIeZ29vZ2xlLmFkcy5nb29nbGVhZHMudjEuY29tbW9uGh5nb29nbGUv",
            "cHJvdG9idWYvd3JhcHBlcnMucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlv",
            "bnMucHJvdG8ibAoeQmlkTW9kaWZpZXJTaW11bGF0aW9uUG9pbnRMaXN0EkoK",
            "BnBvaW50cxgBIAMoCzI6Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxLmNvbW1v",
            "bi5CaWRNb2RpZmllclNpbXVsYXRpb25Qb2ludCJiChlDcGNCaWRTaW11bGF0",
            "aW9uUG9pbnRMaXN0EkUKBnBvaW50cxgBIAMoCzI1Lmdvb2dsZS5hZHMuZ29v",
            "Z2xlYWRzLnYxLmNvbW1vbi5DcGNCaWRTaW11bGF0aW9uUG9pbnQiYgoZQ3B2",
            "QmlkU2ltdWxhdGlvblBvaW50TGlzdBJFCgZwb2ludHMYASADKAsyNS5nb29n",
            "bGUuYWRzLmdvb2dsZWFkcy52MS5jb21tb24uQ3B2QmlkU2ltdWxhdGlvblBv",
            "aW50ImgKHFRhcmdldENwYVNpbXVsYXRpb25Qb2ludExpc3QSSAoGcG9pbnRz",
            "GAEgAygLMjguZ29vZ2xlLmFkcy5nb29nbGVhZHMudjEuY29tbW9uLlRhcmdl",
            "dENwYVNpbXVsYXRpb25Qb2ludCKOBgoaQmlkTW9kaWZpZXJTaW11bGF0aW9u",
            "UG9pbnQSMgoMYmlkX21vZGlmaWVyGAEgASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LkRvdWJsZVZhbHVlEjoKFGJpZGRhYmxlX2NvbnZlcnNpb25zGAIgASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLkRvdWJsZVZhbHVlEkAKGmJpZGRhYmxlX2NvbnZl",
            "cnNpb25zX3ZhbHVlGAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLkRvdWJsZVZh",
            "bHVlEisKBmNsaWNrcxgEIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZh",
            "bHVlEjAKC2Nvc3RfbWljcm9zGAUgASgLMhsuZ29vZ2xlLnByb3RvYnVmLklu",
            "dDY0VmFsdWUSMAoLaW1wcmVzc2lvbnMYBiABKAsyGy5nb29nbGUucHJvdG9i",
            "dWYuSW50NjRWYWx1ZRI5ChR0b3Bfc2xvdF9pbXByZXNzaW9ucxgHIAEoCzIb",
            "Lmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEkEKG3BhcmVudF9iaWRkYWJs",
            "ZV9jb252ZXJzaW9ucxgIIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5Eb3VibGVW",
            "YWx1ZRJHCiFwYXJlbnRfYmlkZGFibGVfY29udmVyc2lvbnNfdmFsdWUYCSAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuRG91YmxlVmFsdWUSMgoNcGFyZW50X2Ns",
            "aWNrcxgKIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEjcKEnBh",
            "cmVudF9jb3N0X21pY3JvcxgLIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2",
            "NFZhbHVlEjcKEnBhcmVudF9pbXByZXNzaW9ucxgMIAEoCzIbLmdvb2dsZS5w",
            "cm90b2J1Zi5JbnQ2NFZhbHVlEkAKG3BhcmVudF90b3Bfc2xvdF9pbXByZXNz",
            "aW9ucxgNIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlIpYDChVD",
            "cGNCaWRTaW11bGF0aW9uUG9pbnQSMwoOY3BjX2JpZF9taWNyb3MYASABKAsy",
            "Gy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZRI6ChRiaWRkYWJsZV9jb252",
            "ZXJzaW9ucxgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5Eb3VibGVWYWx1ZRJA",
            "ChpiaWRkYWJsZV9jb252ZXJzaW9uc192YWx1ZRgDIAEoCzIcLmdvb2dsZS5w",
            "cm90b2J1Zi5Eb3VibGVWYWx1ZRIrCgZjbGlja3MYBCABKAsyGy5nb29nbGUu",
            "cHJvdG9idWYuSW50NjRWYWx1ZRIwCgtjb3N0X21pY3JvcxgFIAEoCzIbLmdv",
            "b2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEjAKC2ltcHJlc3Npb25zGAYgASgL",
            "MhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSOQoUdG9wX3Nsb3RfaW1w",
            "cmVzc2lvbnMYByABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZSKw",
            "AQoVQ3B2QmlkU2ltdWxhdGlvblBvaW50EjMKDmNwdl9iaWRfbWljcm9zGAEg",
            "ASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSMAoLY29zdF9taWNy",
            "b3MYAiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZRIwCgtpbXBy",
            "ZXNzaW9ucxgDIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlIpwD",
            "ChhUYXJnZXRDcGFTaW11bGF0aW9uUG9pbnQSNgoRdGFyZ2V0X2NwYV9taWNy",
            "b3MYASABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZRI6ChRiaWRk",
            "YWJsZV9jb252ZXJzaW9ucxgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5Eb3Vi",
            "bGVWYWx1ZRJAChpiaWRkYWJsZV9jb252ZXJzaW9uc192YWx1ZRgDIAEoCzIc",
            "Lmdvb2dsZS5wcm90b2J1Zi5Eb3VibGVWYWx1ZRIrCgZjbGlja3MYBCABKAsy",
            "Gy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZRIwCgtjb3N0X21pY3JvcxgF",
            "IAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEjAKC2ltcHJlc3Np",
            "b25zGAYgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSOQoUdG9w",
            "X3Nsb3RfaW1wcmVzc2lvbnMYByABKAsyGy5nb29nbGUucHJvdG9idWYuSW50",
            "NjRWYWx1ZULqAQoiY29tLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxLmNvbW1v",
            "bkIPU2ltdWxhdGlvblByb3RvUAFaRGdvb2dsZS5nb2xhbmcub3JnL2dlbnBy",
            "b3RvL2dvb2dsZWFwaXMvYWRzL2dvb2dsZWFkcy92MS9jb21tb247Y29tbW9u",
            "ogIDR0FBqgIeR29vZ2xlLkFkcy5Hb29nbGVBZHMuVjEuQ29tbW9uygIeR29v",
            "Z2xlXEFkc1xHb29nbGVBZHNcVjFcQ29tbW9u6gIiR29vZ2xlOjpBZHM6Okdv",
            "b2dsZUFkczo6VjE6OkNvbW1vbmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.BidModifierSimulationPointList), global::Google.Ads.GoogleAds.V1.Common.BidModifierSimulationPointList.Parser, new[]{ "Points" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.CpcBidSimulationPointList), global::Google.Ads.GoogleAds.V1.Common.CpcBidSimulationPointList.Parser, new[]{ "Points" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.CpvBidSimulationPointList), global::Google.Ads.GoogleAds.V1.Common.CpvBidSimulationPointList.Parser, new[]{ "Points" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.TargetCpaSimulationPointList), global::Google.Ads.GoogleAds.V1.Common.TargetCpaSimulationPointList.Parser, new[]{ "Points" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.BidModifierSimulationPoint), global::Google.Ads.GoogleAds.V1.Common.BidModifierSimulationPoint.Parser, new[]{ "BidModifier", "BiddableConversions", "BiddableConversionsValue", "Clicks", "CostMicros", "Impressions", "TopSlotImpressions", "ParentBiddableConversions", "ParentBiddableConversionsValue", "ParentClicks", "ParentCostMicros", "ParentImpressions", "ParentTopSlotImpressions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.CpcBidSimulationPoint), global::Google.Ads.GoogleAds.V1.Common.CpcBidSimulationPoint.Parser, new[]{ "CpcBidMicros", "BiddableConversions", "BiddableConversionsValue", "Clicks", "CostMicros", "Impressions", "TopSlotImpressions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.CpvBidSimulationPoint), global::Google.Ads.GoogleAds.V1.Common.CpvBidSimulationPoint.Parser, new[]{ "CpvBidMicros", "CostMicros", "Impressions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V1.Common.TargetCpaSimulationPoint), global::Google.Ads.GoogleAds.V1.Common.TargetCpaSimulationPoint.Parser, new[]{ "TargetCpaMicros", "BiddableConversions", "BiddableConversionsValue", "Clicks", "CostMicros", "Impressions", "TopSlotImpressions" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A container for simulation points for simulations of type BID_MODIFIER.
  /// </summary>
  public sealed partial class BidModifierSimulationPointList : pb::IMessage<BidModifierSimulationPointList> {
    private static readonly pb::MessageParser<BidModifierSimulationPointList> _parser = new pb::MessageParser<BidModifierSimulationPointList>(() => new BidModifierSimulationPointList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BidModifierSimulationPointList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.SimulationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BidModifierSimulationPointList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BidModifierSimulationPointList(BidModifierSimulationPointList other) : this() {
      points_ = other.points_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BidModifierSimulationPointList Clone() {
      return new BidModifierSimulationPointList(this);
    }

    /// <summary>Field number for the "points" field.</summary>
    public const int PointsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.BidModifierSimulationPoint> _repeated_points_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V1.Common.BidModifierSimulationPoint.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.BidModifierSimulationPoint> points_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.BidModifierSimulationPoint>();
    /// <summary>
    /// Projected metrics for a series of bid modifier amounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.BidModifierSimulationPoint> Points {
      get { return points_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BidModifierSimulationPointList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BidModifierSimulationPointList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!points_.Equals(other.points_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= points_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      points_.WriteTo(output, _repeated_points_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += points_.CalculateSize(_repeated_points_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BidModifierSimulationPointList other) {
      if (other == null) {
        return;
      }
      points_.Add(other.points_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            points_.AddEntriesFrom(input, _repeated_points_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A container for simulation points for simulations of type CPC_BID.
  /// </summary>
  public sealed partial class CpcBidSimulationPointList : pb::IMessage<CpcBidSimulationPointList> {
    private static readonly pb::MessageParser<CpcBidSimulationPointList> _parser = new pb::MessageParser<CpcBidSimulationPointList>(() => new CpcBidSimulationPointList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CpcBidSimulationPointList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.SimulationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CpcBidSimulationPointList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CpcBidSimulationPointList(CpcBidSimulationPointList other) : this() {
      points_ = other.points_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CpcBidSimulationPointList Clone() {
      return new CpcBidSimulationPointList(this);
    }

    /// <summary>Field number for the "points" field.</summary>
    public const int PointsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.CpcBidSimulationPoint> _repeated_points_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V1.Common.CpcBidSimulationPoint.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.CpcBidSimulationPoint> points_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.CpcBidSimulationPoint>();
    /// <summary>
    /// Projected metrics for a series of CPC bid amounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.CpcBidSimulationPoint> Points {
      get { return points_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CpcBidSimulationPointList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CpcBidSimulationPointList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!points_.Equals(other.points_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= points_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      points_.WriteTo(output, _repeated_points_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += points_.CalculateSize(_repeated_points_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CpcBidSimulationPointList other) {
      if (other == null) {
        return;
      }
      points_.Add(other.points_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            points_.AddEntriesFrom(input, _repeated_points_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A container for simulation points for simulations of type CPV_BID.
  /// </summary>
  public sealed partial class CpvBidSimulationPointList : pb::IMessage<CpvBidSimulationPointList> {
    private static readonly pb::MessageParser<CpvBidSimulationPointList> _parser = new pb::MessageParser<CpvBidSimulationPointList>(() => new CpvBidSimulationPointList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CpvBidSimulationPointList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.SimulationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CpvBidSimulationPointList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CpvBidSimulationPointList(CpvBidSimulationPointList other) : this() {
      points_ = other.points_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CpvBidSimulationPointList Clone() {
      return new CpvBidSimulationPointList(this);
    }

    /// <summary>Field number for the "points" field.</summary>
    public const int PointsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.CpvBidSimulationPoint> _repeated_points_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V1.Common.CpvBidSimulationPoint.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.CpvBidSimulationPoint> points_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.CpvBidSimulationPoint>();
    /// <summary>
    /// Projected metrics for a series of CPV bid amounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.CpvBidSimulationPoint> Points {
      get { return points_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CpvBidSimulationPointList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CpvBidSimulationPointList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!points_.Equals(other.points_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= points_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      points_.WriteTo(output, _repeated_points_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += points_.CalculateSize(_repeated_points_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CpvBidSimulationPointList other) {
      if (other == null) {
        return;
      }
      points_.Add(other.points_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            points_.AddEntriesFrom(input, _repeated_points_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A container for simulation points for simulations of type TARGET_CPA.
  /// </summary>
  public sealed partial class TargetCpaSimulationPointList : pb::IMessage<TargetCpaSimulationPointList> {
    private static readonly pb::MessageParser<TargetCpaSimulationPointList> _parser = new pb::MessageParser<TargetCpaSimulationPointList>(() => new TargetCpaSimulationPointList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TargetCpaSimulationPointList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.SimulationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetCpaSimulationPointList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetCpaSimulationPointList(TargetCpaSimulationPointList other) : this() {
      points_ = other.points_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetCpaSimulationPointList Clone() {
      return new TargetCpaSimulationPointList(this);
    }

    /// <summary>Field number for the "points" field.</summary>
    public const int PointsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V1.Common.TargetCpaSimulationPoint> _repeated_points_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V1.Common.TargetCpaSimulationPoint.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.TargetCpaSimulationPoint> points_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.TargetCpaSimulationPoint>();
    /// <summary>
    /// Projected metrics for a series of target CPA amounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V1.Common.TargetCpaSimulationPoint> Points {
      get { return points_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TargetCpaSimulationPointList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TargetCpaSimulationPointList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!points_.Equals(other.points_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= points_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      points_.WriteTo(output, _repeated_points_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += points_.CalculateSize(_repeated_points_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TargetCpaSimulationPointList other) {
      if (other == null) {
        return;
      }
      points_.Add(other.points_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            points_.AddEntriesFrom(input, _repeated_points_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Projected metrics for a specific bid modifier amount.
  /// </summary>
  public sealed partial class BidModifierSimulationPoint : pb::IMessage<BidModifierSimulationPoint> {
    private static readonly pb::MessageParser<BidModifierSimulationPoint> _parser = new pb::MessageParser<BidModifierSimulationPoint>(() => new BidModifierSimulationPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BidModifierSimulationPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.SimulationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BidModifierSimulationPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BidModifierSimulationPoint(BidModifierSimulationPoint other) : this() {
      BidModifier = other.BidModifier;
      BiddableConversions = other.BiddableConversions;
      BiddableConversionsValue = other.BiddableConversionsValue;
      Clicks = other.Clicks;
      CostMicros = other.CostMicros;
      Impressions = other.Impressions;
      TopSlotImpressions = other.TopSlotImpressions;
      ParentBiddableConversions = other.ParentBiddableConversions;
      ParentBiddableConversionsValue = other.ParentBiddableConversionsValue;
      ParentClicks = other.ParentClicks;
      ParentCostMicros = other.ParentCostMicros;
      ParentImpressions = other.ParentImpressions;
      ParentTopSlotImpressions = other.ParentTopSlotImpressions;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BidModifierSimulationPoint Clone() {
      return new BidModifierSimulationPoint(this);
    }

    /// <summary>Field number for the "bid_modifier" field.</summary>
    public const int BidModifierFieldNumber = 1;
    private static readonly pb::FieldCodec<double?> _single_bidModifier_codec = pb::FieldCodec.ForStructWrapper<double>(10);
    private double? bidModifier_;
    /// <summary>
    /// The simulated bid modifier upon which projected metrics are based.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? BidModifier {
      get { return bidModifier_; }
      set {
        bidModifier_ = value;
      }
    }


    /// <summary>Field number for the "biddable_conversions" field.</summary>
    public const int BiddableConversionsFieldNumber = 2;
    private static readonly pb::FieldCodec<double?> _single_biddableConversions_codec = pb::FieldCodec.ForStructWrapper<double>(18);
    private double? biddableConversions_;
    /// <summary>
    /// Projected number of biddable conversions.
    /// Only search advertising channel type supports this field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? BiddableConversions {
      get { return biddableConversions_; }
      set {
        biddableConversions_ = value;
      }
    }


    /// <summary>Field number for the "biddable_conversions_value" field.</summary>
    public const int BiddableConversionsValueFieldNumber = 3;
    private static readonly pb::FieldCodec<double?> _single_biddableConversionsValue_codec = pb::FieldCodec.ForStructWrapper<double>(26);
    private double? biddableConversionsValue_;
    /// <summary>
    /// Projected total value of biddable conversions.
    /// Only search advertising channel type supports this field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? BiddableConversionsValue {
      get { return biddableConversionsValue_; }
      set {
        biddableConversionsValue_ = value;
      }
    }


    /// <summary>Field number for the "clicks" field.</summary>
    public const int ClicksFieldNumber = 4;
    private static readonly pb::FieldCodec<long?> _single_clicks_codec = pb::FieldCodec.ForStructWrapper<long>(34);
    private long? clicks_;
    /// <summary>
    /// Projected number of clicks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Clicks {
      get { return clicks_; }
      set {
        clicks_ = value;
      }
    }


    /// <summary>Field number for the "cost_micros" field.</summary>
    public const int CostMicrosFieldNumber = 5;
    private static readonly pb::FieldCodec<long?> _single_costMicros_codec = pb::FieldCodec.ForStructWrapper<long>(42);
    private long? costMicros_;
    /// <summary>
    /// Projected cost in micros.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? CostMicros {
      get { return costMicros_; }
      set {
        costMicros_ = value;
      }
    }


    /// <summary>Field number for the "impressions" field.</summary>
    public const int ImpressionsFieldNumber = 6;
    private static readonly pb::FieldCodec<long?> _single_impressions_codec = pb::FieldCodec.ForStructWrapper<long>(50);
    private long? impressions_;
    /// <summary>
    /// Projected number of impressions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Impressions {
      get { return impressions_; }
      set {
        impressions_ = value;
      }
    }


    /// <summary>Field number for the "top_slot_impressions" field.</summary>
    public const int TopSlotImpressionsFieldNumber = 7;
    private static readonly pb::FieldCodec<long?> _single_topSlotImpressions_codec = pb::FieldCodec.ForStructWrapper<long>(58);
    private long? topSlotImpressions_;
    /// <summary>
    /// Projected number of top slot impressions.
    /// Only search advertising channel type supports this field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? TopSlotImpressions {
      get { return topSlotImpressions_; }
      set {
        topSlotImpressions_ = value;
      }
    }


    /// <summary>Field number for the "parent_biddable_conversions" field.</summary>
    public const int ParentBiddableConversionsFieldNumber = 8;
    private static readonly pb::FieldCodec<double?> _single_parentBiddableConversions_codec = pb::FieldCodec.ForStructWrapper<double>(66);
    private double? parentBiddableConversions_;
    /// <summary>
    /// Projected number of biddable conversions for the parent resource.
    /// Only search advertising channel type supports this field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? ParentBiddableConversions {
      get { return parentBiddableConversions_; }
      set {
        parentBiddableConversions_ = value;
      }
    }


    /// <summary>Field number for the "parent_biddable_conversions_value" field.</summary>
    public const int ParentBiddableConversionsValueFieldNumber = 9;
    private static readonly pb::FieldCodec<double?> _single_parentBiddableConversionsValue_codec = pb::FieldCodec.ForStructWrapper<double>(74);
    private double? parentBiddableConversionsValue_;
    /// <summary>
    /// Projected total value of biddable conversions for the parent resource.
    /// Only search advertising channel type supports this field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? ParentBiddableConversionsValue {
      get { return parentBiddableConversionsValue_; }
      set {
        parentBiddableConversionsValue_ = value;
      }
    }


    /// <summary>Field number for the "parent_clicks" field.</summary>
    public const int ParentClicksFieldNumber = 10;
    private static readonly pb::FieldCodec<long?> _single_parentClicks_codec = pb::FieldCodec.ForStructWrapper<long>(82);
    private long? parentClicks_;
    /// <summary>
    /// Projected number of clicks for the parent resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? ParentClicks {
      get { return parentClicks_; }
      set {
        parentClicks_ = value;
      }
    }


    /// <summary>Field number for the "parent_cost_micros" field.</summary>
    public const int ParentCostMicrosFieldNumber = 11;
    private static readonly pb::FieldCodec<long?> _single_parentCostMicros_codec = pb::FieldCodec.ForStructWrapper<long>(90);
    private long? parentCostMicros_;
    /// <summary>
    /// Projected cost in micros for the parent resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? ParentCostMicros {
      get { return parentCostMicros_; }
      set {
        parentCostMicros_ = value;
      }
    }


    /// <summary>Field number for the "parent_impressions" field.</summary>
    public const int ParentImpressionsFieldNumber = 12;
    private static readonly pb::FieldCodec<long?> _single_parentImpressions_codec = pb::FieldCodec.ForStructWrapper<long>(98);
    private long? parentImpressions_;
    /// <summary>
    /// Projected number of impressions for the parent resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? ParentImpressions {
      get { return parentImpressions_; }
      set {
        parentImpressions_ = value;
      }
    }


    /// <summary>Field number for the "parent_top_slot_impressions" field.</summary>
    public const int ParentTopSlotImpressionsFieldNumber = 13;
    private static readonly pb::FieldCodec<long?> _single_parentTopSlotImpressions_codec = pb::FieldCodec.ForStructWrapper<long>(106);
    private long? parentTopSlotImpressions_;
    /// <summary>
    /// Projected number of top slot impressions for the parent resource.
    /// Only search advertising channel type supports this field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? ParentTopSlotImpressions {
      get { return parentTopSlotImpressions_; }
      set {
        parentTopSlotImpressions_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BidModifierSimulationPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BidModifierSimulationPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(BidModifier, other.BidModifier)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(BiddableConversions, other.BiddableConversions)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(BiddableConversionsValue, other.BiddableConversionsValue)) return false;
      if (Clicks != other.Clicks) return false;
      if (CostMicros != other.CostMicros) return false;
      if (Impressions != other.Impressions) return false;
      if (TopSlotImpressions != other.TopSlotImpressions) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(ParentBiddableConversions, other.ParentBiddableConversions)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(ParentBiddableConversionsValue, other.ParentBiddableConversionsValue)) return false;
      if (ParentClicks != other.ParentClicks) return false;
      if (ParentCostMicros != other.ParentCostMicros) return false;
      if (ParentImpressions != other.ParentImpressions) return false;
      if (ParentTopSlotImpressions != other.ParentTopSlotImpressions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (bidModifier_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(BidModifier);
      if (biddableConversions_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(BiddableConversions);
      if (biddableConversionsValue_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(BiddableConversionsValue);
      if (clicks_ != null) hash ^= Clicks.GetHashCode();
      if (costMicros_ != null) hash ^= CostMicros.GetHashCode();
      if (impressions_ != null) hash ^= Impressions.GetHashCode();
      if (topSlotImpressions_ != null) hash ^= TopSlotImpressions.GetHashCode();
      if (parentBiddableConversions_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(ParentBiddableConversions);
      if (parentBiddableConversionsValue_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(ParentBiddableConversionsValue);
      if (parentClicks_ != null) hash ^= ParentClicks.GetHashCode();
      if (parentCostMicros_ != null) hash ^= ParentCostMicros.GetHashCode();
      if (parentImpressions_ != null) hash ^= ParentImpressions.GetHashCode();
      if (parentTopSlotImpressions_ != null) hash ^= ParentTopSlotImpressions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (bidModifier_ != null) {
        _single_bidModifier_codec.WriteTagAndValue(output, BidModifier);
      }
      if (biddableConversions_ != null) {
        _single_biddableConversions_codec.WriteTagAndValue(output, BiddableConversions);
      }
      if (biddableConversionsValue_ != null) {
        _single_biddableConversionsValue_codec.WriteTagAndValue(output, BiddableConversionsValue);
      }
      if (clicks_ != null) {
        _single_clicks_codec.WriteTagAndValue(output, Clicks);
      }
      if (costMicros_ != null) {
        _single_costMicros_codec.WriteTagAndValue(output, CostMicros);
      }
      if (impressions_ != null) {
        _single_impressions_codec.WriteTagAndValue(output, Impressions);
      }
      if (topSlotImpressions_ != null) {
        _single_topSlotImpressions_codec.WriteTagAndValue(output, TopSlotImpressions);
      }
      if (parentBiddableConversions_ != null) {
        _single_parentBiddableConversions_codec.WriteTagAndValue(output, ParentBiddableConversions);
      }
      if (parentBiddableConversionsValue_ != null) {
        _single_parentBiddableConversionsValue_codec.WriteTagAndValue(output, ParentBiddableConversionsValue);
      }
      if (parentClicks_ != null) {
        _single_parentClicks_codec.WriteTagAndValue(output, ParentClicks);
      }
      if (parentCostMicros_ != null) {
        _single_parentCostMicros_codec.WriteTagAndValue(output, ParentCostMicros);
      }
      if (parentImpressions_ != null) {
        _single_parentImpressions_codec.WriteTagAndValue(output, ParentImpressions);
      }
      if (parentTopSlotImpressions_ != null) {
        _single_parentTopSlotImpressions_codec.WriteTagAndValue(output, ParentTopSlotImpressions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (bidModifier_ != null) {
        size += _single_bidModifier_codec.CalculateSizeWithTag(BidModifier);
      }
      if (biddableConversions_ != null) {
        size += _single_biddableConversions_codec.CalculateSizeWithTag(BiddableConversions);
      }
      if (biddableConversionsValue_ != null) {
        size += _single_biddableConversionsValue_codec.CalculateSizeWithTag(BiddableConversionsValue);
      }
      if (clicks_ != null) {
        size += _single_clicks_codec.CalculateSizeWithTag(Clicks);
      }
      if (costMicros_ != null) {
        size += _single_costMicros_codec.CalculateSizeWithTag(CostMicros);
      }
      if (impressions_ != null) {
        size += _single_impressions_codec.CalculateSizeWithTag(Impressions);
      }
      if (topSlotImpressions_ != null) {
        size += _single_topSlotImpressions_codec.CalculateSizeWithTag(TopSlotImpressions);
      }
      if (parentBiddableConversions_ != null) {
        size += _single_parentBiddableConversions_codec.CalculateSizeWithTag(ParentBiddableConversions);
      }
      if (parentBiddableConversionsValue_ != null) {
        size += _single_parentBiddableConversionsValue_codec.CalculateSizeWithTag(ParentBiddableConversionsValue);
      }
      if (parentClicks_ != null) {
        size += _single_parentClicks_codec.CalculateSizeWithTag(ParentClicks);
      }
      if (parentCostMicros_ != null) {
        size += _single_parentCostMicros_codec.CalculateSizeWithTag(ParentCostMicros);
      }
      if (parentImpressions_ != null) {
        size += _single_parentImpressions_codec.CalculateSizeWithTag(ParentImpressions);
      }
      if (parentTopSlotImpressions_ != null) {
        size += _single_parentTopSlotImpressions_codec.CalculateSizeWithTag(ParentTopSlotImpressions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BidModifierSimulationPoint other) {
      if (other == null) {
        return;
      }
      if (other.bidModifier_ != null) {
        if (bidModifier_ == null || other.BidModifier != 0D) {
          BidModifier = other.BidModifier;
        }
      }
      if (other.biddableConversions_ != null) {
        if (biddableConversions_ == null || other.BiddableConversions != 0D) {
          BiddableConversions = other.BiddableConversions;
        }
      }
      if (other.biddableConversionsValue_ != null) {
        if (biddableConversionsValue_ == null || other.BiddableConversionsValue != 0D) {
          BiddableConversionsValue = other.BiddableConversionsValue;
        }
      }
      if (other.clicks_ != null) {
        if (clicks_ == null || other.Clicks != 0L) {
          Clicks = other.Clicks;
        }
      }
      if (other.costMicros_ != null) {
        if (costMicros_ == null || other.CostMicros != 0L) {
          CostMicros = other.CostMicros;
        }
      }
      if (other.impressions_ != null) {
        if (impressions_ == null || other.Impressions != 0L) {
          Impressions = other.Impressions;
        }
      }
      if (other.topSlotImpressions_ != null) {
        if (topSlotImpressions_ == null || other.TopSlotImpressions != 0L) {
          TopSlotImpressions = other.TopSlotImpressions;
        }
      }
      if (other.parentBiddableConversions_ != null) {
        if (parentBiddableConversions_ == null || other.ParentBiddableConversions != 0D) {
          ParentBiddableConversions = other.ParentBiddableConversions;
        }
      }
      if (other.parentBiddableConversionsValue_ != null) {
        if (parentBiddableConversionsValue_ == null || other.ParentBiddableConversionsValue != 0D) {
          ParentBiddableConversionsValue = other.ParentBiddableConversionsValue;
        }
      }
      if (other.parentClicks_ != null) {
        if (parentClicks_ == null || other.ParentClicks != 0L) {
          ParentClicks = other.ParentClicks;
        }
      }
      if (other.parentCostMicros_ != null) {
        if (parentCostMicros_ == null || other.ParentCostMicros != 0L) {
          ParentCostMicros = other.ParentCostMicros;
        }
      }
      if (other.parentImpressions_ != null) {
        if (parentImpressions_ == null || other.ParentImpressions != 0L) {
          ParentImpressions = other.ParentImpressions;
        }
      }
      if (other.parentTopSlotImpressions_ != null) {
        if (parentTopSlotImpressions_ == null || other.ParentTopSlotImpressions != 0L) {
          ParentTopSlotImpressions = other.ParentTopSlotImpressions;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            double? value = _single_bidModifier_codec.Read(input);
            if (bidModifier_ == null || value != 0D) {
              BidModifier = value;
            }
            break;
          }
          case 18: {
            double? value = _single_biddableConversions_codec.Read(input);
            if (biddableConversions_ == null || value != 0D) {
              BiddableConversions = value;
            }
            break;
          }
          case 26: {
            double? value = _single_biddableConversionsValue_codec.Read(input);
            if (biddableConversionsValue_ == null || value != 0D) {
              BiddableConversionsValue = value;
            }
            break;
          }
          case 34: {
            long? value = _single_clicks_codec.Read(input);
            if (clicks_ == null || value != 0L) {
              Clicks = value;
            }
            break;
          }
          case 42: {
            long? value = _single_costMicros_codec.Read(input);
            if (costMicros_ == null || value != 0L) {
              CostMicros = value;
            }
            break;
          }
          case 50: {
            long? value = _single_impressions_codec.Read(input);
            if (impressions_ == null || value != 0L) {
              Impressions = value;
            }
            break;
          }
          case 58: {
            long? value = _single_topSlotImpressions_codec.Read(input);
            if (topSlotImpressions_ == null || value != 0L) {
              TopSlotImpressions = value;
            }
            break;
          }
          case 66: {
            double? value = _single_parentBiddableConversions_codec.Read(input);
            if (parentBiddableConversions_ == null || value != 0D) {
              ParentBiddableConversions = value;
            }
            break;
          }
          case 74: {
            double? value = _single_parentBiddableConversionsValue_codec.Read(input);
            if (parentBiddableConversionsValue_ == null || value != 0D) {
              ParentBiddableConversionsValue = value;
            }
            break;
          }
          case 82: {
            long? value = _single_parentClicks_codec.Read(input);
            if (parentClicks_ == null || value != 0L) {
              ParentClicks = value;
            }
            break;
          }
          case 90: {
            long? value = _single_parentCostMicros_codec.Read(input);
            if (parentCostMicros_ == null || value != 0L) {
              ParentCostMicros = value;
            }
            break;
          }
          case 98: {
            long? value = _single_parentImpressions_codec.Read(input);
            if (parentImpressions_ == null || value != 0L) {
              ParentImpressions = value;
            }
            break;
          }
          case 106: {
            long? value = _single_parentTopSlotImpressions_codec.Read(input);
            if (parentTopSlotImpressions_ == null || value != 0L) {
              ParentTopSlotImpressions = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Projected metrics for a specific CPC bid amount.
  /// </summary>
  public sealed partial class CpcBidSimulationPoint : pb::IMessage<CpcBidSimulationPoint> {
    private static readonly pb::MessageParser<CpcBidSimulationPoint> _parser = new pb::MessageParser<CpcBidSimulationPoint>(() => new CpcBidSimulationPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CpcBidSimulationPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.SimulationReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CpcBidSimulationPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CpcBidSimulationPoint(CpcBidSimulationPoint other) : this() {
      CpcBidMicros = other.CpcBidMicros;
      BiddableConversions = other.BiddableConversions;
      BiddableConversionsValue = other.BiddableConversionsValue;
      Clicks = other.Clicks;
      CostMicros = other.CostMicros;
      Impressions = other.Impressions;
      TopSlotImpressions = other.TopSlotImpressions;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CpcBidSimulationPoint Clone() {
      return new CpcBidSimulationPoint(this);
    }

    /// <summary>Field number for the "cpc_bid_micros" field.</summary>
    public const int CpcBidMicrosFieldNumber = 1;
    private static readonly pb::FieldCodec<long?> _single_cpcBidMicros_codec = pb::FieldCodec.ForStructWrapper<long>(10);
    private long? cpcBidMicros_;
    /// <summary>
    /// The simulated CPC bid upon which projected metrics are based.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? CpcBidMicros {
      get { return cpcBidMicros_; }
      set {
        cpcBidMicros_ = value;
      }
    }


    /// <summary>Field number for the "biddable_conversions" field.</summary>
    public const int BiddableConversionsFieldNumber = 2;
    private static readonly pb::FieldCodec<double?> _single_biddableConversions_codec = pb::FieldCodec.ForStructWrapper<double>(18);
    private double? biddableConversions_;
    /// <summary>
    /// Projected number of biddable conversions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? BiddableConversions {
      get { return biddableConversions_; }
      set {
        biddableConversions_ = value;
      }
    }


    /// <summary>Field number for the "biddable_conversions_value" field.</summary>
    public const int BiddableConversionsValueFieldNumber = 3;
    private static readonly pb::FieldCodec<double?> _single_biddableConversionsValue_codec = pb::FieldCodec.ForStructWrapper<double>(26);
    private double? biddableConversionsValue_;
    /// <summary>
    /// Projected total value of biddable conversions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? BiddableConversionsValue {
      get { return biddableConversionsValue_; }
      set {
        biddableConversionsValue_ = value;
      }
    }


    /// <summary>Field number for the "clicks" field.</summary>
    public const int ClicksFieldNumber = 4;
    private static readonly pb::FieldCodec<long?> _single_clicks_codec = pb::FieldCodec.ForStructWrapper<long>(34);
    private long? clicks_;
    /// <summary>
    /// Projected number of clicks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Clicks {
      get { return clicks_; }
      set {
        clicks_ = value;
      }
    }


    /// <summary>Field number for the "cost_micros" field.</summary>
    public const int CostMicrosFieldNumber = 5;
    private static readonly pb::FieldCodec<long?> _single_costMicros_codec = pb::FieldCodec.ForStructWrapper<long>(42);
    private long? costMicros_;
    /// <summary>
    /// Projected cost in micros.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? CostMicros {
      get { return costMicros_; }
      set {
        costMicros_ = value;
      }
    }


    /// <summary>Field number for the "impressions" field.</summary>
    public const int ImpressionsFieldNumber = 6;
    private static readonly pb::FieldCodec<long?> _single_impressions_codec = pb::FieldCodec.ForStructWrapper<long>(50);
    private long? impressions_;
    /// <summary>
    /// Projected number of impressions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Impressions {
      get { return impressions_; }
      set {
        impressions_ = value;
      }
    }


    /// <summary>Field number for the "top_slot_impressions" field.</summary>
    public const int TopSlotImpressionsFieldNumber = 7;
    private static readonly pb::FieldCodec<long?> _single_topSlotImpressions_codec = pb::FieldCodec.ForStructWrapper<long>(58);
    private long? topSlotImpressions_;
    /// <summary>
    /// Projected number of top slot impressions.
    /// Only search advertising channel type supports this field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? TopSlotImpressions {
      get { return topSlotImpressions_; }
      set {
        topSlotImpressions_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CpcBidSimulationPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CpcBidSimulationPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CpcBidMicros != other.CpcBidMicros) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(BiddableConversions, other.BiddableConversions)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(BiddableConversionsValue, other.BiddableConversionsValue)) return false;
      if (Clicks != other.Clicks) return false;
      if (CostMicros != other.CostMicros) return false;
      if (Impressions != other.Impressions) return false;
      if (TopSlotImpressions != other.TopSlotImpressions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cpcBidMicros_ != null) hash ^= CpcBidMicros.GetHashCode();
      if (biddableConversions_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(BiddableConversions);
      if (biddableConversionsValue_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(BiddableConversionsValue);
      if (clicks_ != null) hash ^= Clicks.GetHashCode();
      if (costMicros_ != null) hash ^= CostMicros.GetHashCode();
      if (impressions_ != null) hash ^= Impressions.GetHashCode();
      if (topSlotImpressions_ != null) hash ^= TopSlotImpressions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (cpcBidMicros_ != null) {
        _single_cpcBidMicros_codec.WriteTagAndValue(output, CpcBidMicros);
      }
      if (biddableConversions_ != null) {
        _single_biddableConversions_codec.WriteTagAndValue(output, BiddableConversions);
      }
      if (biddableConversionsValue_ != null) {
        _single_biddableConversionsValue_codec.WriteTagAndValue(output, BiddableConversionsValue);
      }
      if (clicks_ != null) {
        _single_clicks_codec.WriteTagAndValue(output, Clicks);
      }
      if (costMicros_ != null) {
        _single_costMicros_codec.WriteTagAndValue(output, CostMicros);
      }
      if (impressions_ != null) {
        _single_impressions_codec.WriteTagAndValue(output, Impressions);
      }
      if (topSlotImpressions_ != null) {
        _single_topSlotImpressions_codec.WriteTagAndValue(output, TopSlotImpressions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cpcBidMicros_ != null) {
        size += _single_cpcBidMicros_codec.CalculateSizeWithTag(CpcBidMicros);
      }
      if (biddableConversions_ != null) {
        size += _single_biddableConversions_codec.CalculateSizeWithTag(BiddableConversions);
      }
      if (biddableConversionsValue_ != null) {
        size += _single_biddableConversionsValue_codec.CalculateSizeWithTag(BiddableConversionsValue);
      }
      if (clicks_ != null) {
        size += _single_clicks_codec.CalculateSizeWithTag(Clicks);
      }
      if (costMicros_ != null) {
        size += _single_costMicros_codec.CalculateSizeWithTag(CostMicros);
      }
      if (impressions_ != null) {
        size += _single_impressions_codec.CalculateSizeWithTag(Impressions);
      }
      if (topSlotImpressions_ != null) {
        size += _single_topSlotImpressions_codec.CalculateSizeWithTag(TopSlotImpressions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CpcBidSimulationPoint other) {
      if (other == null) {
        return;
      }
      if (other.cpcBidMicros_ != null) {
        if (cpcBidMicros_ == null || other.CpcBidMicros != 0L) {
          CpcBidMicros = other.CpcBidMicros;
        }
      }
      if (other.biddableConversions_ != null) {
        if (biddableConversions_ == null || other.BiddableConversions != 0D) {
          BiddableConversions = other.BiddableConversions;
        }
      }
      if (other.biddableConversionsValue_ != null) {
        if (biddableConversionsValue_ == null || other.BiddableConversionsValue != 0D) {
          BiddableConversionsValue = other.BiddableConversionsValue;
        }
      }
      if (other.clicks_ != null) {
        if (clicks_ == null || other.Clicks != 0L) {
          Clicks = other.Clicks;
        }
      }
      if (other.costMicros_ != null) {
        if (costMicros_ == null || other.CostMicros != 0L) {
          CostMicros = other.CostMicros;
        }
      }
      if (other.impressions_ != null) {
        if (impressions_ == null || other.Impressions != 0L) {
          Impressions = other.Impressions;
        }
      }
      if (other.topSlotImpressions_ != null) {
        if (topSlotImpressions_ == null || other.TopSlotImpressions != 0L) {
          TopSlotImpressions = other.TopSlotImpressions;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            long? value = _single_cpcBidMicros_codec.Read(input);
            if (cpcBidMicros_ == null || value != 0L) {
              CpcBidMicros = value;
            }
            break;
          }
          case 18: {
            double? value = _single_biddableConversions_codec.Read(input);
            if (biddableConversions_ == null || value != 0D) {
              BiddableConversions = value;
            }
            break;
          }
          case 26: {
            double? value = _single_biddableConversionsValue_codec.Read(input);
            if (biddableConversionsValue_ == null || value != 0D) {
              BiddableConversionsValue = value;
            }
            break;
          }
          case 34: {
            long? value = _single_clicks_codec.Read(input);
            if (clicks_ == null || value != 0L) {
              Clicks = value;
            }
            break;
          }
          case 42: {
            long? value = _single_costMicros_codec.Read(input);
            if (costMicros_ == null || value != 0L) {
              CostMicros = value;
            }
            break;
          }
          case 50: {
            long? value = _single_impressions_codec.Read(input);
            if (impressions_ == null || value != 0L) {
              Impressions = value;
            }
            break;
          }
          case 58: {
            long? value = _single_topSlotImpressions_codec.Read(input);
            if (topSlotImpressions_ == null || value != 0L) {
              TopSlotImpressions = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Projected metrics for a specific CPV bid amount.
  /// </summary>
  public sealed partial class CpvBidSimulationPoint : pb::IMessage<CpvBidSimulationPoint> {
    private static readonly pb::MessageParser<CpvBidSimulationPoint> _parser = new pb::MessageParser<CpvBidSimulationPoint>(() => new CpvBidSimulationPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CpvBidSimulationPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.SimulationReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CpvBidSimulationPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CpvBidSimulationPoint(CpvBidSimulationPoint other) : this() {
      CpvBidMicros = other.CpvBidMicros;
      CostMicros = other.CostMicros;
      Impressions = other.Impressions;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CpvBidSimulationPoint Clone() {
      return new CpvBidSimulationPoint(this);
    }

    /// <summary>Field number for the "cpv_bid_micros" field.</summary>
    public const int CpvBidMicrosFieldNumber = 1;
    private static readonly pb::FieldCodec<long?> _single_cpvBidMicros_codec = pb::FieldCodec.ForStructWrapper<long>(10);
    private long? cpvBidMicros_;
    /// <summary>
    /// The simulated CPV bid upon which projected metrics are based.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? CpvBidMicros {
      get { return cpvBidMicros_; }
      set {
        cpvBidMicros_ = value;
      }
    }


    /// <summary>Field number for the "cost_micros" field.</summary>
    public const int CostMicrosFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_costMicros_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? costMicros_;
    /// <summary>
    /// Projected cost in micros.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? CostMicros {
      get { return costMicros_; }
      set {
        costMicros_ = value;
      }
    }


    /// <summary>Field number for the "impressions" field.</summary>
    public const int ImpressionsFieldNumber = 3;
    private static readonly pb::FieldCodec<long?> _single_impressions_codec = pb::FieldCodec.ForStructWrapper<long>(26);
    private long? impressions_;
    /// <summary>
    /// Projected number of impressions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Impressions {
      get { return impressions_; }
      set {
        impressions_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CpvBidSimulationPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CpvBidSimulationPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CpvBidMicros != other.CpvBidMicros) return false;
      if (CostMicros != other.CostMicros) return false;
      if (Impressions != other.Impressions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cpvBidMicros_ != null) hash ^= CpvBidMicros.GetHashCode();
      if (costMicros_ != null) hash ^= CostMicros.GetHashCode();
      if (impressions_ != null) hash ^= Impressions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (cpvBidMicros_ != null) {
        _single_cpvBidMicros_codec.WriteTagAndValue(output, CpvBidMicros);
      }
      if (costMicros_ != null) {
        _single_costMicros_codec.WriteTagAndValue(output, CostMicros);
      }
      if (impressions_ != null) {
        _single_impressions_codec.WriteTagAndValue(output, Impressions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cpvBidMicros_ != null) {
        size += _single_cpvBidMicros_codec.CalculateSizeWithTag(CpvBidMicros);
      }
      if (costMicros_ != null) {
        size += _single_costMicros_codec.CalculateSizeWithTag(CostMicros);
      }
      if (impressions_ != null) {
        size += _single_impressions_codec.CalculateSizeWithTag(Impressions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CpvBidSimulationPoint other) {
      if (other == null) {
        return;
      }
      if (other.cpvBidMicros_ != null) {
        if (cpvBidMicros_ == null || other.CpvBidMicros != 0L) {
          CpvBidMicros = other.CpvBidMicros;
        }
      }
      if (other.costMicros_ != null) {
        if (costMicros_ == null || other.CostMicros != 0L) {
          CostMicros = other.CostMicros;
        }
      }
      if (other.impressions_ != null) {
        if (impressions_ == null || other.Impressions != 0L) {
          Impressions = other.Impressions;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            long? value = _single_cpvBidMicros_codec.Read(input);
            if (cpvBidMicros_ == null || value != 0L) {
              CpvBidMicros = value;
            }
            break;
          }
          case 18: {
            long? value = _single_costMicros_codec.Read(input);
            if (costMicros_ == null || value != 0L) {
              CostMicros = value;
            }
            break;
          }
          case 26: {
            long? value = _single_impressions_codec.Read(input);
            if (impressions_ == null || value != 0L) {
              Impressions = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Projected metrics for a specific target CPA amount.
  /// </summary>
  public sealed partial class TargetCpaSimulationPoint : pb::IMessage<TargetCpaSimulationPoint> {
    private static readonly pb::MessageParser<TargetCpaSimulationPoint> _parser = new pb::MessageParser<TargetCpaSimulationPoint>(() => new TargetCpaSimulationPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TargetCpaSimulationPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V1.Common.SimulationReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetCpaSimulationPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetCpaSimulationPoint(TargetCpaSimulationPoint other) : this() {
      TargetCpaMicros = other.TargetCpaMicros;
      BiddableConversions = other.BiddableConversions;
      BiddableConversionsValue = other.BiddableConversionsValue;
      Clicks = other.Clicks;
      CostMicros = other.CostMicros;
      Impressions = other.Impressions;
      TopSlotImpressions = other.TopSlotImpressions;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetCpaSimulationPoint Clone() {
      return new TargetCpaSimulationPoint(this);
    }

    /// <summary>Field number for the "target_cpa_micros" field.</summary>
    public const int TargetCpaMicrosFieldNumber = 1;
    private static readonly pb::FieldCodec<long?> _single_targetCpaMicros_codec = pb::FieldCodec.ForStructWrapper<long>(10);
    private long? targetCpaMicros_;
    /// <summary>
    /// The simulated target CPA upon which projected metrics are based.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? TargetCpaMicros {
      get { return targetCpaMicros_; }
      set {
        targetCpaMicros_ = value;
      }
    }


    /// <summary>Field number for the "biddable_conversions" field.</summary>
    public const int BiddableConversionsFieldNumber = 2;
    private static readonly pb::FieldCodec<double?> _single_biddableConversions_codec = pb::FieldCodec.ForStructWrapper<double>(18);
    private double? biddableConversions_;
    /// <summary>
    /// Projected number of biddable conversions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? BiddableConversions {
      get { return biddableConversions_; }
      set {
        biddableConversions_ = value;
      }
    }


    /// <summary>Field number for the "biddable_conversions_value" field.</summary>
    public const int BiddableConversionsValueFieldNumber = 3;
    private static readonly pb::FieldCodec<double?> _single_biddableConversionsValue_codec = pb::FieldCodec.ForStructWrapper<double>(26);
    private double? biddableConversionsValue_;
    /// <summary>
    /// Projected total value of biddable conversions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? BiddableConversionsValue {
      get { return biddableConversionsValue_; }
      set {
        biddableConversionsValue_ = value;
      }
    }


    /// <summary>Field number for the "clicks" field.</summary>
    public const int ClicksFieldNumber = 4;
    private static readonly pb::FieldCodec<long?> _single_clicks_codec = pb::FieldCodec.ForStructWrapper<long>(34);
    private long? clicks_;
    /// <summary>
    /// Projected number of clicks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Clicks {
      get { return clicks_; }
      set {
        clicks_ = value;
      }
    }


    /// <summary>Field number for the "cost_micros" field.</summary>
    public const int CostMicrosFieldNumber = 5;
    private static readonly pb::FieldCodec<long?> _single_costMicros_codec = pb::FieldCodec.ForStructWrapper<long>(42);
    private long? costMicros_;
    /// <summary>
    /// Projected cost in micros.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? CostMicros {
      get { return costMicros_; }
      set {
        costMicros_ = value;
      }
    }


    /// <summary>Field number for the "impressions" field.</summary>
    public const int ImpressionsFieldNumber = 6;
    private static readonly pb::FieldCodec<long?> _single_impressions_codec = pb::FieldCodec.ForStructWrapper<long>(50);
    private long? impressions_;
    /// <summary>
    /// Projected number of impressions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Impressions {
      get { return impressions_; }
      set {
        impressions_ = value;
      }
    }


    /// <summary>Field number for the "top_slot_impressions" field.</summary>
    public const int TopSlotImpressionsFieldNumber = 7;
    private static readonly pb::FieldCodec<long?> _single_topSlotImpressions_codec = pb::FieldCodec.ForStructWrapper<long>(58);
    private long? topSlotImpressions_;
    /// <summary>
    /// Projected number of top slot impressions.
    /// Only search advertising channel type supports this field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? TopSlotImpressions {
      get { return topSlotImpressions_; }
      set {
        topSlotImpressions_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TargetCpaSimulationPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TargetCpaSimulationPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetCpaMicros != other.TargetCpaMicros) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(BiddableConversions, other.BiddableConversions)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(BiddableConversionsValue, other.BiddableConversionsValue)) return false;
      if (Clicks != other.Clicks) return false;
      if (CostMicros != other.CostMicros) return false;
      if (Impressions != other.Impressions) return false;
      if (TopSlotImpressions != other.TopSlotImpressions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (targetCpaMicros_ != null) hash ^= TargetCpaMicros.GetHashCode();
      if (biddableConversions_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(BiddableConversions);
      if (biddableConversionsValue_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(BiddableConversionsValue);
      if (clicks_ != null) hash ^= Clicks.GetHashCode();
      if (costMicros_ != null) hash ^= CostMicros.GetHashCode();
      if (impressions_ != null) hash ^= Impressions.GetHashCode();
      if (topSlotImpressions_ != null) hash ^= TopSlotImpressions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (targetCpaMicros_ != null) {
        _single_targetCpaMicros_codec.WriteTagAndValue(output, TargetCpaMicros);
      }
      if (biddableConversions_ != null) {
        _single_biddableConversions_codec.WriteTagAndValue(output, BiddableConversions);
      }
      if (biddableConversionsValue_ != null) {
        _single_biddableConversionsValue_codec.WriteTagAndValue(output, BiddableConversionsValue);
      }
      if (clicks_ != null) {
        _single_clicks_codec.WriteTagAndValue(output, Clicks);
      }
      if (costMicros_ != null) {
        _single_costMicros_codec.WriteTagAndValue(output, CostMicros);
      }
      if (impressions_ != null) {
        _single_impressions_codec.WriteTagAndValue(output, Impressions);
      }
      if (topSlotImpressions_ != null) {
        _single_topSlotImpressions_codec.WriteTagAndValue(output, TopSlotImpressions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (targetCpaMicros_ != null) {
        size += _single_targetCpaMicros_codec.CalculateSizeWithTag(TargetCpaMicros);
      }
      if (biddableConversions_ != null) {
        size += _single_biddableConversions_codec.CalculateSizeWithTag(BiddableConversions);
      }
      if (biddableConversionsValue_ != null) {
        size += _single_biddableConversionsValue_codec.CalculateSizeWithTag(BiddableConversionsValue);
      }
      if (clicks_ != null) {
        size += _single_clicks_codec.CalculateSizeWithTag(Clicks);
      }
      if (costMicros_ != null) {
        size += _single_costMicros_codec.CalculateSizeWithTag(CostMicros);
      }
      if (impressions_ != null) {
        size += _single_impressions_codec.CalculateSizeWithTag(Impressions);
      }
      if (topSlotImpressions_ != null) {
        size += _single_topSlotImpressions_codec.CalculateSizeWithTag(TopSlotImpressions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TargetCpaSimulationPoint other) {
      if (other == null) {
        return;
      }
      if (other.targetCpaMicros_ != null) {
        if (targetCpaMicros_ == null || other.TargetCpaMicros != 0L) {
          TargetCpaMicros = other.TargetCpaMicros;
        }
      }
      if (other.biddableConversions_ != null) {
        if (biddableConversions_ == null || other.BiddableConversions != 0D) {
          BiddableConversions = other.BiddableConversions;
        }
      }
      if (other.biddableConversionsValue_ != null) {
        if (biddableConversionsValue_ == null || other.BiddableConversionsValue != 0D) {
          BiddableConversionsValue = other.BiddableConversionsValue;
        }
      }
      if (other.clicks_ != null) {
        if (clicks_ == null || other.Clicks != 0L) {
          Clicks = other.Clicks;
        }
      }
      if (other.costMicros_ != null) {
        if (costMicros_ == null || other.CostMicros != 0L) {
          CostMicros = other.CostMicros;
        }
      }
      if (other.impressions_ != null) {
        if (impressions_ == null || other.Impressions != 0L) {
          Impressions = other.Impressions;
        }
      }
      if (other.topSlotImpressions_ != null) {
        if (topSlotImpressions_ == null || other.TopSlotImpressions != 0L) {
          TopSlotImpressions = other.TopSlotImpressions;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            long? value = _single_targetCpaMicros_codec.Read(input);
            if (targetCpaMicros_ == null || value != 0L) {
              TargetCpaMicros = value;
            }
            break;
          }
          case 18: {
            double? value = _single_biddableConversions_codec.Read(input);
            if (biddableConversions_ == null || value != 0D) {
              BiddableConversions = value;
            }
            break;
          }
          case 26: {
            double? value = _single_biddableConversionsValue_codec.Read(input);
            if (biddableConversionsValue_ == null || value != 0D) {
              BiddableConversionsValue = value;
            }
            break;
          }
          case 34: {
            long? value = _single_clicks_codec.Read(input);
            if (clicks_ == null || value != 0L) {
              Clicks = value;
            }
            break;
          }
          case 42: {
            long? value = _single_costMicros_codec.Read(input);
            if (costMicros_ == null || value != 0L) {
              CostMicros = value;
            }
            break;
          }
          case 50: {
            long? value = _single_impressions_codec.Read(input);
            if (impressions_ == null || value != 0L) {
              Impressions = value;
            }
            break;
          }
          case 58: {
            long? value = _single_topSlotImpressions_codec.Read(input);
            if (topSlotImpressions_ == null || value != 0L) {
              TopSlotImpressions = value;
            }
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
