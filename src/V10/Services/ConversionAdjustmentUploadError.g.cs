// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v10/errors/conversion_adjustment_upload_error.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V10.Errors {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v10/errors/conversion_adjustment_upload_error.proto</summary>
  public static partial class ConversionAdjustmentUploadErrorReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v10/errors/conversion_adjustment_upload_error.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConversionAdjustmentUploadErrorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ckhnb29nbGUvYWRzL2dvb2dsZWFkcy92MTAvZXJyb3JzL2NvbnZlcnNpb25f",
            "YWRqdXN0bWVudF91cGxvYWRfZXJyb3IucHJvdG8SH2dvb2dsZS5hZHMuZ29v",
            "Z2xlYWRzLnYxMC5lcnJvcnMaHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJv",
            "dG8i+gYKI0NvbnZlcnNpb25BZGp1c3RtZW50VXBsb2FkRXJyb3JFbnVtItIG",
            "Ch9Db252ZXJzaW9uQWRqdXN0bWVudFVwbG9hZEVycm9yEg8KC1VOU1BFQ0lG",
            "SUVEEAASCwoHVU5LTk9XThABEiAKHFRPT19SRUNFTlRfQ09OVkVSU0lPTl9B",
            "Q1RJT04QAhIdChlJTlZBTElEX0NPTlZFUlNJT05fQUNUSU9OEAMSIAocQ09O",
            "VkVSU0lPTl9BTFJFQURZX1JFVFJBQ1RFRBAEEhgKFENPTlZFUlNJT05fTk9U",
            "X0ZPVU5EEAUSFgoSQ09OVkVSU0lPTl9FWFBJUkVEEAYSIgoeQURKVVNUTUVO",
            "VF9QUkVDRURFU19DT05WRVJTSU9OEAcSIQodTU9SRV9SRUNFTlRfUkVTVEFU",
            "RU1FTlRfRk9VTkQQCBIZChVUT09fUkVDRU5UX0NPTlZFUlNJT04QCRJOCkpD",
            "QU5OT1RfUkVTVEFURV9DT05WRVJTSU9OX0FDVElPTl9USEFUX0FMV0FZU19V",
            "U0VTX0RFRkFVTFRfQ09OVkVSU0lPTl9WQUxVRRAKEiMKH1RPT19NQU5ZX0FE",
            "SlVTVE1FTlRTX0lOX1JFUVVFU1QQCxIYChRUT09fTUFOWV9BREpVU1RNRU5U",
            "UxAMEh4KGlJFU1RBVEVNRU5UX0FMUkVBRFlfRVhJU1RTEA0SIwofRFVQTElD",
            "QVRFX0FESlVTVE1FTlRfSU5fUkVRVUVTVBAOEi0KKUNVU1RPTUVSX05PVF9B",
            "Q0NFUFRFRF9DVVNUT01FUl9EQVRBX1RFUk1TEA8SMgouQ09OVkVSU0lPTl9B",
            "Q1RJT05fTk9UX0VMSUdJQkxFX0ZPUl9FTkhBTkNFTUVOVBAQEhsKF0lOVkFM",
            "SURfVVNFUl9JREVOVElGSUVSEBESHwobVU5TVVBQT1JURURfVVNFUl9JREVO",
            "VElGSUVSEBISLgoqR0NMSURfREFURV9USU1FX1BBSVJfQU5EX09SREVSX0lE",
            "X0JPVEhfU0VUEBQSHwobQ09OVkVSU0lPTl9BTFJFQURZX0VOSEFOQ0VEEBUS",
            "JAogRFVQTElDQVRFX0VOSEFOQ0VNRU5UX0lOX1JFUVVFU1QQFhIuCipDVVNU",
            "T01FUl9EQVRBX1BPTElDWV9QUk9ISUJJVFNfRU5IQU5DRU1FTlQQF0KEAgoj",
            "Y29tLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYxMC5lcnJvcnNCJENvbnZlcnNp",
            "b25BZGp1c3RtZW50VXBsb2FkRXJyb3JQcm90b1ABWkVnb29nbGUuZ29sYW5n",
            "Lm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2Fkcy9nb29nbGVhZHMvdjEwL2Vy",
            "cm9ycztlcnJvcnOiAgNHQUGqAh9Hb29nbGUuQWRzLkdvb2dsZUFkcy5WMTAu",
            "RXJyb3JzygIfR29vZ2xlXEFkc1xHb29nbGVBZHNcVjEwXEVycm9yc+oCI0dv",
            "b2dsZTo6QWRzOjpHb29nbGVBZHM6OlYxMDo6RXJyb3JzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V10.Errors.ConversionAdjustmentUploadErrorEnum), global::Google.Ads.GoogleAds.V10.Errors.ConversionAdjustmentUploadErrorEnum.Parser, null, null, new[]{ typeof(global::Google.Ads.GoogleAds.V10.Errors.ConversionAdjustmentUploadErrorEnum.Types.ConversionAdjustmentUploadError) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Container for enum describing possible conversion adjustment upload errors.
  /// </summary>
  public sealed partial class ConversionAdjustmentUploadErrorEnum : pb::IMessage<ConversionAdjustmentUploadErrorEnum>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConversionAdjustmentUploadErrorEnum> _parser = new pb::MessageParser<ConversionAdjustmentUploadErrorEnum>(() => new ConversionAdjustmentUploadErrorEnum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConversionAdjustmentUploadErrorEnum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V10.Errors.ConversionAdjustmentUploadErrorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConversionAdjustmentUploadErrorEnum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConversionAdjustmentUploadErrorEnum(ConversionAdjustmentUploadErrorEnum other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConversionAdjustmentUploadErrorEnum Clone() {
      return new ConversionAdjustmentUploadErrorEnum(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConversionAdjustmentUploadErrorEnum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConversionAdjustmentUploadErrorEnum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConversionAdjustmentUploadErrorEnum other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ConversionAdjustmentUploadErrorEnum message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Enum describing possible conversion adjustment upload errors.
      /// </summary>
      public enum ConversionAdjustmentUploadError {
        /// <summary>
        /// Not specified.
        /// </summary>
        [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The received error code is not known in this version.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 1,
        /// <summary>
        /// The specified conversion action was created too recently.
        /// Please try the upload again after 4-6 hours have passed since the
        /// conversion action was created.
        /// </summary>
        [pbr::OriginalName("TOO_RECENT_CONVERSION_ACTION")] TooRecentConversionAction = 2,
        /// <summary>
        /// No conversion action of a supported ConversionActionType that matches the
        /// provided information can be found for the customer.
        /// </summary>
        [pbr::OriginalName("INVALID_CONVERSION_ACTION")] InvalidConversionAction = 3,
        /// <summary>
        /// A retraction was already reported for this conversion.
        /// </summary>
        [pbr::OriginalName("CONVERSION_ALREADY_RETRACTED")] ConversionAlreadyRetracted = 4,
        /// <summary>
        /// A conversion for the supplied combination of conversion
        /// action and conversion identifier could not be found.
        /// </summary>
        [pbr::OriginalName("CONVERSION_NOT_FOUND")] ConversionNotFound = 5,
        /// <summary>
        /// The specified conversion has already expired. Conversions expire after 55
        /// days, after which adjustments cannot be reported against them.
        /// </summary>
        [pbr::OriginalName("CONVERSION_EXPIRED")] ConversionExpired = 6,
        /// <summary>
        /// The supplied adjustment date time precedes that of the original
        /// conversion.
        /// </summary>
        [pbr::OriginalName("ADJUSTMENT_PRECEDES_CONVERSION")] AdjustmentPrecedesConversion = 7,
        /// <summary>
        /// A restatement with a more recent adjustment date time was already
        /// reported for this conversion.
        /// </summary>
        [pbr::OriginalName("MORE_RECENT_RESTATEMENT_FOUND")] MoreRecentRestatementFound = 8,
        /// <summary>
        /// The conversion was created too recently.
        /// </summary>
        [pbr::OriginalName("TOO_RECENT_CONVERSION")] TooRecentConversion = 9,
        /// <summary>
        /// Restatements cannot be reported for a conversion action that always uses
        /// the default value.
        /// </summary>
        [pbr::OriginalName("CANNOT_RESTATE_CONVERSION_ACTION_THAT_ALWAYS_USES_DEFAULT_CONVERSION_VALUE")] CannotRestateConversionActionThatAlwaysUsesDefaultConversionValue = 10,
        /// <summary>
        /// The request contained more than 2000 adjustments.
        /// </summary>
        [pbr::OriginalName("TOO_MANY_ADJUSTMENTS_IN_REQUEST")] TooManyAdjustmentsInRequest = 11,
        /// <summary>
        /// The conversion has been adjusted too many times.
        /// </summary>
        [pbr::OriginalName("TOO_MANY_ADJUSTMENTS")] TooManyAdjustments = 12,
        /// <summary>
        /// A restatement with this timestamp already exists for this conversion. To
        /// upload another adjustment, please use a different timestamp.
        /// </summary>
        [pbr::OriginalName("RESTATEMENT_ALREADY_EXISTS")] RestatementAlreadyExists = 13,
        /// <summary>
        /// This adjustment has the same timestamp as another adjustment in the
        /// request for this conversion. To upload another adjustment, please use a
        /// different timestamp.
        /// </summary>
        [pbr::OriginalName("DUPLICATE_ADJUSTMENT_IN_REQUEST")] DuplicateAdjustmentInRequest = 14,
        /// <summary>
        /// The customer has not accepted the customer data terms in the conversion
        /// settings page.
        /// </summary>
        [pbr::OriginalName("CUSTOMER_NOT_ACCEPTED_CUSTOMER_DATA_TERMS")] CustomerNotAcceptedCustomerDataTerms = 15,
        /// <summary>
        /// The enhanced conversion settings of the conversion action supplied is
        /// not eligible for enhancements.
        /// </summary>
        [pbr::OriginalName("CONVERSION_ACTION_NOT_ELIGIBLE_FOR_ENHANCEMENT")] ConversionActionNotEligibleForEnhancement = 16,
        /// <summary>
        /// The provided user identifier is not a SHA-256 hash. It is either unhashed
        /// or hashed using a different hash function.
        /// </summary>
        [pbr::OriginalName("INVALID_USER_IDENTIFIER")] InvalidUserIdentifier = 17,
        /// <summary>
        /// The provided user identifier is not supported.
        /// ConversionAdjustmentUploadService only supports hashed_email,
        /// hashed_phone_number, and address_info.
        /// </summary>
        [pbr::OriginalName("UNSUPPORTED_USER_IDENTIFIER")] UnsupportedUserIdentifier = 18,
        /// <summary>
        /// Cannot set both gclid_date_time_pair and order_id.
        /// </summary>
        [pbr::OriginalName("GCLID_DATE_TIME_PAIR_AND_ORDER_ID_BOTH_SET")] GclidDateTimePairAndOrderIdBothSet = 20,
        /// <summary>
        /// An enhancement with this conversion action and order_id already exists
        /// for this conversion.
        /// </summary>
        [pbr::OriginalName("CONVERSION_ALREADY_ENHANCED")] ConversionAlreadyEnhanced = 21,
        /// <summary>
        /// This enhancement has the same conversion action and order_id as
        /// another enhancement in the request.
        /// </summary>
        [pbr::OriginalName("DUPLICATE_ENHANCEMENT_IN_REQUEST")] DuplicateEnhancementInRequest = 22,
        /// <summary>
        /// Per our customer data policies, enhancement has been prohibited in your
        /// account. If you have any questions, please contact your Google
        /// representative.
        /// </summary>
        [pbr::OriginalName("CUSTOMER_DATA_POLICY_PROHIBITS_ENHANCEMENT")] CustomerDataPolicyProhibitsEnhancement = 23,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
