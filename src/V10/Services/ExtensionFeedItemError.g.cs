// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v10/errors/extension_feed_item_error.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V10.Errors {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v10/errors/extension_feed_item_error.proto</summary>
  public static partial class ExtensionFeedItemErrorReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v10/errors/extension_feed_item_error.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ExtensionFeedItemErrorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj9nb29nbGUvYWRzL2dvb2dsZWFkcy92MTAvZXJyb3JzL2V4dGVuc2lvbl9m",
            "ZWVkX2l0ZW1fZXJyb3IucHJvdG8SH2dvb2dsZS5hZHMuZ29vZ2xlYWRzLnYx",
            "MC5lcnJvcnMaHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8i9g0KGkV4",
            "dGVuc2lvbkZlZWRJdGVtRXJyb3JFbnVtItcNChZFeHRlbnNpb25GZWVkSXRl",
            "bUVycm9yEg8KC1VOU1BFQ0lGSUVEEAASCwoHVU5LTk9XThABEhYKElZBTFVF",
            "X09VVF9PRl9SQU5HRRACEhUKEVVSTF9MSVNUX1RPT19MT05HEAMSMgouQ0FO",
            "Tk9UX0hBVkVfUkVTVFJJQ1RJT05fT05fRU1QVFlfR0VPX1RBUkdFVElORxAE",
            "Eh4KGkNBTk5PVF9TRVRfV0lUSF9GSU5BTF9VUkxTEAUSIQodQ0FOTk9UX1NF",
            "VF9XSVRIT1VUX0ZJTkFMX1VSTFMQBhIYChRJTlZBTElEX1BIT05FX05VTUJF",
            "UhAHEioKJlBIT05FX05VTUJFUl9OT1RfU1VQUE9SVEVEX0ZPUl9DT1VOVFJZ",
            "EAgSLQopQ0FSUklFUl9TUEVDSUZJQ19TSE9SVF9OVU1CRVJfTk9UX0FMTE9X",
            "RUQQCRIjCh9QUkVNSVVNX1JBVEVfTlVNQkVSX05PVF9BTExPV0VEEAoSGgoW",
            "RElTQUxMT1dFRF9OVU1CRVJfVFlQRRALEigKJElOVkFMSURfRE9NRVNUSUNf",
            "UEhPTkVfTlVNQkVSX0ZPUk1BVBAMEiMKH1ZBTklUWV9QSE9ORV9OVU1CRVJf",
            "Tk9UX0FMTE9XRUQQDRIiCh5JTlZBTElEX0NBTExfQ09OVkVSU0lPTl9BQ1RJ",
            "T04QDhIuCipDVVNUT01FUl9OT1RfT05fQUxMT1dMSVNUX0ZPUl9DQUxMVFJB",
            "Q0tJTkcQLxIqCiZDQUxMVFJBQ0tJTkdfTk9UX1NVUFBPUlRFRF9GT1JfQ09V",
            "TlRSWRAQEjAKLENVU1RPTUVSX0NPTlNFTlRfRk9SX0NBTExfUkVDT1JESU5H",
            "X1JFUVVJUkVEEBESEgoOSU5WQUxJRF9BUFBfSUQQEhImCiJRVU9URVNfSU5f",
            "UkVWSUVXX0VYVEVOU0lPTl9TTklQUEVUEBMSJwojSFlQSEVOU19JTl9SRVZJ",
            "RVdfRVhURU5TSU9OX1NOSVBQRVQQFBImCiJSRVZJRVdfRVhURU5TSU9OX1NP",
            "VVJDRV9JTkVMSUdJQkxFEBUSKAokU09VUkNFX05BTUVfSU5fUkVWSUVXX0VY",
            "VEVOU0lPTl9URVhUEBYSHwobSU5DT05TSVNURU5UX0NVUlJFTkNZX0NPREVT",
            "EBcSKgomUFJJQ0VfRVhURU5TSU9OX0hBU19EVVBMSUNBVEVEX0hFQURFUlMQ",
            "GBI0CjBQUklDRV9JVEVNX0hBU19EVVBMSUNBVEVEX0hFQURFUl9BTkRfREVT",
            "Q1JJUFRJT04QGRIlCiFQUklDRV9FWFRFTlNJT05fSEFTX1RPT19GRVdfSVRF",
            "TVMQGhImCiJQUklDRV9FWFRFTlNJT05fSEFTX1RPT19NQU5ZX0lURU1TEBsS",
            "FQoRVU5TVVBQT1JURURfVkFMVUUQHBIqCiZVTlNVUFBPUlRFRF9WQUxVRV9J",
            "Tl9TRUxFQ1RFRF9MQU5HVUFHRRAdEh0KGUlOVkFMSURfREVWSUNFX1BSRUZF",
            "UkVOQ0UQHhIYChRJTlZBTElEX1NDSEVEVUxFX0VORBAfEioKJkRBVEVfVElN",
            "RV9NVVNUX0JFX0lOX0FDQ09VTlRfVElNRV9aT05FECASGwoXSU5WQUxJRF9T",
            "TklQUEVUU19IRUFERVIQIRInCiNDQU5OT1RfT1BFUkFURV9PTl9SRU1PVkVE",
            "X0ZFRURfSVRFTRAiEjwKOFBIT05FX05VTUJFUl9OT1RfU1VQUE9SVEVEX1dJ",
            "VEhfQ0FMTFRSQUNLSU5HX0ZPUl9DT1VOVFJZECMSKAokQ09ORkxJQ1RJTkdf",
            "Q0FMTF9DT05WRVJTSU9OX1NFVFRJTkdTECQSGwoXRVhURU5TSU9OX1RZUEVf",
            "TUlTTUFUQ0gQJRIeChpFWFRFTlNJT05fU1VCVFlQRV9SRVFVSVJFRBAmEh4K",
            "GkVYVEVOU0lPTl9UWVBFX1VOU1VQUE9SVEVEECcSMQotQ0FOTk9UX09QRVJB",
            "VEVfT05fRkVFRF9XSVRIX01VTFRJUExFX01BUFBJTkdTECgSLgoqQ0FOTk9U",
            "X09QRVJBVEVfT05fRkVFRF9XSVRIX0tFWV9BVFRSSUJVVEVTECkSGAoUSU5W",
            "QUxJRF9QUklDRV9GT1JNQVQQKhIaChZQUk9NT1RJT05fSU5WQUxJRF9USU1F",
            "ECsSJQohVE9PX01BTllfREVDSU1BTF9QTEFDRVNfU1BFQ0lGSUVEECwSJAog",
            "Q09OQ1JFVEVfRVhURU5TSU9OX1RZUEVfUkVRVUlSRUQQLRIgChxTQ0hFRFVM",
            "RV9FTkRfTk9UX0FGVEVSX1NUQVJUEC5C+wEKI2NvbS5nb29nbGUuYWRzLmdv",
            "b2dsZWFkcy52MTAuZXJyb3JzQhtFeHRlbnNpb25GZWVkSXRlbUVycm9yUHJv",
            "dG9QAVpFZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9h",
            "ZHMvZ29vZ2xlYWRzL3YxMC9lcnJvcnM7ZXJyb3JzogIDR0FBqgIfR29vZ2xl",
            "LkFkcy5Hb29nbGVBZHMuVjEwLkVycm9yc8oCH0dvb2dsZVxBZHNcR29vZ2xl",
            "QWRzXFYxMFxFcnJvcnPqAiNHb29nbGU6OkFkczo6R29vZ2xlQWRzOjpWMTA6",
            "OkVycm9yc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V10.Errors.ExtensionFeedItemErrorEnum), global::Google.Ads.GoogleAds.V10.Errors.ExtensionFeedItemErrorEnum.Parser, null, null, new[]{ typeof(global::Google.Ads.GoogleAds.V10.Errors.ExtensionFeedItemErrorEnum.Types.ExtensionFeedItemError) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Container for enum describing possible extension feed item error.
  /// </summary>
  public sealed partial class ExtensionFeedItemErrorEnum : pb::IMessage<ExtensionFeedItemErrorEnum>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExtensionFeedItemErrorEnum> _parser = new pb::MessageParser<ExtensionFeedItemErrorEnum>(() => new ExtensionFeedItemErrorEnum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExtensionFeedItemErrorEnum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V10.Errors.ExtensionFeedItemErrorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExtensionFeedItemErrorEnum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExtensionFeedItemErrorEnum(ExtensionFeedItemErrorEnum other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExtensionFeedItemErrorEnum Clone() {
      return new ExtensionFeedItemErrorEnum(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExtensionFeedItemErrorEnum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExtensionFeedItemErrorEnum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExtensionFeedItemErrorEnum other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ExtensionFeedItemErrorEnum message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Enum describing possible extension feed item errors.
      /// </summary>
      public enum ExtensionFeedItemError {
        /// <summary>
        /// Enum unspecified.
        /// </summary>
        [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The received error code is not known in this version.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 1,
        /// <summary>
        /// Value is not within the accepted range.
        /// </summary>
        [pbr::OriginalName("VALUE_OUT_OF_RANGE")] ValueOutOfRange = 2,
        /// <summary>
        /// Url list is too long.
        /// </summary>
        [pbr::OriginalName("URL_LIST_TOO_LONG")] UrlListTooLong = 3,
        /// <summary>
        /// Cannot have a geo targeting restriction without having geo targeting.
        /// </summary>
        [pbr::OriginalName("CANNOT_HAVE_RESTRICTION_ON_EMPTY_GEO_TARGETING")] CannotHaveRestrictionOnEmptyGeoTargeting = 4,
        /// <summary>
        /// Cannot simultaneously set sitelink field with final urls.
        /// </summary>
        [pbr::OriginalName("CANNOT_SET_WITH_FINAL_URLS")] CannotSetWithFinalUrls = 5,
        /// <summary>
        /// Must set field with final urls.
        /// </summary>
        [pbr::OriginalName("CANNOT_SET_WITHOUT_FINAL_URLS")] CannotSetWithoutFinalUrls = 6,
        /// <summary>
        /// Phone number for a call extension is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_PHONE_NUMBER")] InvalidPhoneNumber = 7,
        /// <summary>
        /// Phone number for a call extension is not supported for the given country
        /// code.
        /// </summary>
        [pbr::OriginalName("PHONE_NUMBER_NOT_SUPPORTED_FOR_COUNTRY")] PhoneNumberNotSupportedForCountry = 8,
        /// <summary>
        /// A carrier specific number in short format is not allowed for call
        /// extensions.
        /// </summary>
        [pbr::OriginalName("CARRIER_SPECIFIC_SHORT_NUMBER_NOT_ALLOWED")] CarrierSpecificShortNumberNotAllowed = 9,
        /// <summary>
        /// Premium rate numbers are not allowed for call extensions.
        /// </summary>
        [pbr::OriginalName("PREMIUM_RATE_NUMBER_NOT_ALLOWED")] PremiumRateNumberNotAllowed = 10,
        /// <summary>
        /// Phone number type for a call extension is not allowed.
        /// For example, personal number is not allowed for a call extension in
        /// most regions.
        /// </summary>
        [pbr::OriginalName("DISALLOWED_NUMBER_TYPE")] DisallowedNumberType = 11,
        /// <summary>
        /// Phone number for a call extension does not meet domestic format
        /// requirements.
        /// </summary>
        [pbr::OriginalName("INVALID_DOMESTIC_PHONE_NUMBER_FORMAT")] InvalidDomesticPhoneNumberFormat = 12,
        /// <summary>
        /// Vanity phone numbers (i.e. those including letters) are not allowed for
        /// call extensions.
        /// </summary>
        [pbr::OriginalName("VANITY_PHONE_NUMBER_NOT_ALLOWED")] VanityPhoneNumberNotAllowed = 13,
        /// <summary>
        /// Call conversion action provided for a call extension is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_CALL_CONVERSION_ACTION")] InvalidCallConversionAction = 14,
        /// <summary>
        /// For a call extension, the customer is not on the allow-list for call
        /// tracking.
        /// </summary>
        [pbr::OriginalName("CUSTOMER_NOT_ON_ALLOWLIST_FOR_CALLTRACKING")] CustomerNotOnAllowlistForCalltracking = 47,
        /// <summary>
        /// Call tracking is not supported for the given country for a call
        /// extension.
        /// </summary>
        [pbr::OriginalName("CALLTRACKING_NOT_SUPPORTED_FOR_COUNTRY")] CalltrackingNotSupportedForCountry = 16,
        /// <summary>
        /// Customer hasn't consented for call recording, which is required for
        /// creating/updating call feed items. Please see
        /// https://support.google.com/google-ads/answer/7412639.
        /// </summary>
        [pbr::OriginalName("CUSTOMER_CONSENT_FOR_CALL_RECORDING_REQUIRED")] CustomerConsentForCallRecordingRequired = 17,
        /// <summary>
        /// App id provided for an app extension is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_APP_ID")] InvalidAppId = 18,
        /// <summary>
        /// Quotation marks present in the review text for a review extension.
        /// </summary>
        [pbr::OriginalName("QUOTES_IN_REVIEW_EXTENSION_SNIPPET")] QuotesInReviewExtensionSnippet = 19,
        /// <summary>
        /// Hyphen character present in the review text for a review extension.
        /// </summary>
        [pbr::OriginalName("HYPHENS_IN_REVIEW_EXTENSION_SNIPPET")] HyphensInReviewExtensionSnippet = 20,
        /// <summary>
        /// A denylisted review source name or url was provided for a review
        /// extension.
        /// </summary>
        [pbr::OriginalName("REVIEW_EXTENSION_SOURCE_INELIGIBLE")] ReviewExtensionSourceIneligible = 21,
        /// <summary>
        /// Review source name should not be found in the review text.
        /// </summary>
        [pbr::OriginalName("SOURCE_NAME_IN_REVIEW_EXTENSION_TEXT")] SourceNameInReviewExtensionText = 22,
        /// <summary>
        /// Inconsistent currency codes.
        /// </summary>
        [pbr::OriginalName("INCONSISTENT_CURRENCY_CODES")] InconsistentCurrencyCodes = 23,
        /// <summary>
        /// Price extension cannot have duplicated headers.
        /// </summary>
        [pbr::OriginalName("PRICE_EXTENSION_HAS_DUPLICATED_HEADERS")] PriceExtensionHasDuplicatedHeaders = 24,
        /// <summary>
        /// Price item cannot have duplicated header and description.
        /// </summary>
        [pbr::OriginalName("PRICE_ITEM_HAS_DUPLICATED_HEADER_AND_DESCRIPTION")] PriceItemHasDuplicatedHeaderAndDescription = 25,
        /// <summary>
        /// Price extension has too few items.
        /// </summary>
        [pbr::OriginalName("PRICE_EXTENSION_HAS_TOO_FEW_ITEMS")] PriceExtensionHasTooFewItems = 26,
        /// <summary>
        /// Price extension has too many items.
        /// </summary>
        [pbr::OriginalName("PRICE_EXTENSION_HAS_TOO_MANY_ITEMS")] PriceExtensionHasTooManyItems = 27,
        /// <summary>
        /// The input value is not currently supported.
        /// </summary>
        [pbr::OriginalName("UNSUPPORTED_VALUE")] UnsupportedValue = 28,
        /// <summary>
        /// The input value is not currently supported in the selected language of an
        /// extension.
        /// </summary>
        [pbr::OriginalName("UNSUPPORTED_VALUE_IN_SELECTED_LANGUAGE")] UnsupportedValueInSelectedLanguage = 29,
        /// <summary>
        /// Unknown or unsupported device preference.
        /// </summary>
        [pbr::OriginalName("INVALID_DEVICE_PREFERENCE")] InvalidDevicePreference = 30,
        /// <summary>
        /// Invalid feed item schedule end time (i.e., endHour = 24 and endMinute !=
        /// 0).
        /// </summary>
        [pbr::OriginalName("INVALID_SCHEDULE_END")] InvalidScheduleEnd = 31,
        /// <summary>
        /// Date time zone does not match the account's time zone.
        /// </summary>
        [pbr::OriginalName("DATE_TIME_MUST_BE_IN_ACCOUNT_TIME_ZONE")] DateTimeMustBeInAccountTimeZone = 32,
        /// <summary>
        /// Invalid structured snippet header.
        /// </summary>
        [pbr::OriginalName("INVALID_SNIPPETS_HEADER")] InvalidSnippetsHeader = 33,
        /// <summary>
        /// Cannot operate on removed feed item.
        /// </summary>
        [pbr::OriginalName("CANNOT_OPERATE_ON_REMOVED_FEED_ITEM")] CannotOperateOnRemovedFeedItem = 34,
        /// <summary>
        /// Phone number not supported when call tracking enabled for country.
        /// </summary>
        [pbr::OriginalName("PHONE_NUMBER_NOT_SUPPORTED_WITH_CALLTRACKING_FOR_COUNTRY")] PhoneNumberNotSupportedWithCalltrackingForCountry = 35,
        /// <summary>
        /// Cannot set call_conversion_action while call_conversion_tracking_enabled
        /// is set to true.
        /// </summary>
        [pbr::OriginalName("CONFLICTING_CALL_CONVERSION_SETTINGS")] ConflictingCallConversionSettings = 36,
        /// <summary>
        /// The type of the input extension feed item doesn't match the existing
        /// extension feed item.
        /// </summary>
        [pbr::OriginalName("EXTENSION_TYPE_MISMATCH")] ExtensionTypeMismatch = 37,
        /// <summary>
        /// The oneof field extension i.e. subtype of extension feed item is
        /// required.
        /// </summary>
        [pbr::OriginalName("EXTENSION_SUBTYPE_REQUIRED")] ExtensionSubtypeRequired = 38,
        /// <summary>
        /// The referenced feed item is not mapped to a supported extension type.
        /// </summary>
        [pbr::OriginalName("EXTENSION_TYPE_UNSUPPORTED")] ExtensionTypeUnsupported = 39,
        /// <summary>
        /// Cannot operate on a Feed with more than one active FeedMapping.
        /// </summary>
        [pbr::OriginalName("CANNOT_OPERATE_ON_FEED_WITH_MULTIPLE_MAPPINGS")] CannotOperateOnFeedWithMultipleMappings = 40,
        /// <summary>
        /// Cannot operate on a Feed that has key attributes.
        /// </summary>
        [pbr::OriginalName("CANNOT_OPERATE_ON_FEED_WITH_KEY_ATTRIBUTES")] CannotOperateOnFeedWithKeyAttributes = 41,
        /// <summary>
        /// Input price is not in a valid format.
        /// </summary>
        [pbr::OriginalName("INVALID_PRICE_FORMAT")] InvalidPriceFormat = 42,
        /// <summary>
        /// The promotion time is invalid.
        /// </summary>
        [pbr::OriginalName("PROMOTION_INVALID_TIME")] PromotionInvalidTime = 43,
        /// <summary>
        /// This field has too many decimal places specified.
        /// </summary>
        [pbr::OriginalName("TOO_MANY_DECIMAL_PLACES_SPECIFIED")] TooManyDecimalPlacesSpecified = 44,
        /// <summary>
        /// Concrete sub type of ExtensionFeedItem is required for this operation.
        /// </summary>
        [pbr::OriginalName("CONCRETE_EXTENSION_TYPE_REQUIRED")] ConcreteExtensionTypeRequired = 45,
        /// <summary>
        /// Feed item schedule end time must be after start time.
        /// </summary>
        [pbr::OriginalName("SCHEDULE_END_NOT_AFTER_START")] ScheduleEndNotAfterStart = 46,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
