// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v2/services/reach_plan_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Ads.GoogleAds.V2.Services {
  /// <summary>
  /// Reach Plan Service gives users information about audience size that can
  /// be reached through advertisement on YouTube. In particular,
  /// GenerateReachForecast provides estimated number of people of specified
  /// demographics that can be reached by an ad in a given market by a campaign of
  /// certain duration with a defined budget.
  /// </summary>
  public static partial class ReachPlanService
  {
    static readonly string __ServiceName = "google.ads.googleads.v2.services.ReachPlanService";

    static readonly grpc::Marshaller<global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsRequest> __Marshaller_google_ads_googleads_v2_services_ListPlannableLocationsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsResponse> __Marshaller_google_ads_googleads_v2_services_ListPlannableLocationsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsRequest> __Marshaller_google_ads_googleads_v2_services_ListPlannableProductsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsResponse> __Marshaller_google_ads_googleads_v2_services_ListPlannableProductsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasRequest> __Marshaller_google_ads_googleads_v2_services_GenerateProductMixIdeasRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasResponse> __Marshaller_google_ads_googleads_v2_services_GenerateProductMixIdeasResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastRequest> __Marshaller_google_ads_googleads_v2_services_GenerateReachForecastRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastResponse> __Marshaller_google_ads_googleads_v2_services_GenerateReachForecastResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsRequest, global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsResponse> __Method_ListPlannableLocations = new grpc::Method<global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsRequest, global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListPlannableLocations",
        __Marshaller_google_ads_googleads_v2_services_ListPlannableLocationsRequest,
        __Marshaller_google_ads_googleads_v2_services_ListPlannableLocationsResponse);

    static readonly grpc::Method<global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsRequest, global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsResponse> __Method_ListPlannableProducts = new grpc::Method<global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsRequest, global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListPlannableProducts",
        __Marshaller_google_ads_googleads_v2_services_ListPlannableProductsRequest,
        __Marshaller_google_ads_googleads_v2_services_ListPlannableProductsResponse);

    static readonly grpc::Method<global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasRequest, global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasResponse> __Method_GenerateProductMixIdeas = new grpc::Method<global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasRequest, global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GenerateProductMixIdeas",
        __Marshaller_google_ads_googleads_v2_services_GenerateProductMixIdeasRequest,
        __Marshaller_google_ads_googleads_v2_services_GenerateProductMixIdeasResponse);

    static readonly grpc::Method<global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastRequest, global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastResponse> __Method_GenerateReachForecast = new grpc::Method<global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastRequest, global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GenerateReachForecast",
        __Marshaller_google_ads_googleads_v2_services_GenerateReachForecastRequest,
        __Marshaller_google_ads_googleads_v2_services_GenerateReachForecastResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Ads.GoogleAds.V2.Services.ReachPlanServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ReachPlanService</summary>
    [grpc::BindServiceMethod(typeof(ReachPlanService), "BindService")]
    public abstract partial class ReachPlanServiceBase
    {
      /// <summary>
      /// Returns the list of plannable locations (for example, countries &amp; DMAs).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsResponse> ListPlannableLocations(global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the list of per-location plannable YouTube ad formats with allowed
      /// targeting.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsResponse> ListPlannableProducts(global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Generates a product mix ideas given a set of preferences. This method
      /// helps the advertiser to obtain a good mix of ad formats and budget
      /// allocations based on its preferences.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasResponse> GenerateProductMixIdeas(global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Generates a reach forecast for a given targeting / product mix.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastResponse> GenerateReachForecast(global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ReachPlanService</summary>
    public partial class ReachPlanServiceClient : grpc::ClientBase<ReachPlanServiceClient>
    {
      /// <summary>Creates a new client for ReachPlanService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ReachPlanServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ReachPlanService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ReachPlanServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ReachPlanServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ReachPlanServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Returns the list of plannable locations (for example, countries &amp; DMAs).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsResponse ListPlannableLocations(global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPlannableLocations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the list of plannable locations (for example, countries &amp; DMAs).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsResponse ListPlannableLocations(global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListPlannableLocations, null, options, request);
      }
      /// <summary>
      /// Returns the list of plannable locations (for example, countries &amp; DMAs).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsResponse> ListPlannableLocationsAsync(global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPlannableLocationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the list of plannable locations (for example, countries &amp; DMAs).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsResponse> ListPlannableLocationsAsync(global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListPlannableLocations, null, options, request);
      }
      /// <summary>
      /// Returns the list of per-location plannable YouTube ad formats with allowed
      /// targeting.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsResponse ListPlannableProducts(global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPlannableProducts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the list of per-location plannable YouTube ad formats with allowed
      /// targeting.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsResponse ListPlannableProducts(global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListPlannableProducts, null, options, request);
      }
      /// <summary>
      /// Returns the list of per-location plannable YouTube ad formats with allowed
      /// targeting.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsResponse> ListPlannableProductsAsync(global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPlannableProductsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the list of per-location plannable YouTube ad formats with allowed
      /// targeting.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsResponse> ListPlannableProductsAsync(global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListPlannableProducts, null, options, request);
      }
      /// <summary>
      /// Generates a product mix ideas given a set of preferences. This method
      /// helps the advertiser to obtain a good mix of ad formats and budget
      /// allocations based on its preferences.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasResponse GenerateProductMixIdeas(global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateProductMixIdeas(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generates a product mix ideas given a set of preferences. This method
      /// helps the advertiser to obtain a good mix of ad formats and budget
      /// allocations based on its preferences.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasResponse GenerateProductMixIdeas(global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GenerateProductMixIdeas, null, options, request);
      }
      /// <summary>
      /// Generates a product mix ideas given a set of preferences. This method
      /// helps the advertiser to obtain a good mix of ad formats and budget
      /// allocations based on its preferences.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasResponse> GenerateProductMixIdeasAsync(global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateProductMixIdeasAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generates a product mix ideas given a set of preferences. This method
      /// helps the advertiser to obtain a good mix of ad formats and budget
      /// allocations based on its preferences.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasResponse> GenerateProductMixIdeasAsync(global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GenerateProductMixIdeas, null, options, request);
      }
      /// <summary>
      /// Generates a reach forecast for a given targeting / product mix.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastResponse GenerateReachForecast(global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateReachForecast(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generates a reach forecast for a given targeting / product mix.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastResponse GenerateReachForecast(global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GenerateReachForecast, null, options, request);
      }
      /// <summary>
      /// Generates a reach forecast for a given targeting / product mix.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastResponse> GenerateReachForecastAsync(global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateReachForecastAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generates a reach forecast for a given targeting / product mix.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastResponse> GenerateReachForecastAsync(global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GenerateReachForecast, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ReachPlanServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ReachPlanServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ReachPlanServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListPlannableLocations, serviceImpl.ListPlannableLocations)
          .AddMethod(__Method_ListPlannableProducts, serviceImpl.ListPlannableProducts)
          .AddMethod(__Method_GenerateProductMixIdeas, serviceImpl.GenerateProductMixIdeas)
          .AddMethod(__Method_GenerateReachForecast, serviceImpl.GenerateReachForecast).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ReachPlanServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListPlannableLocations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsRequest, global::Google.Ads.GoogleAds.V2.Services.ListPlannableLocationsResponse>(serviceImpl.ListPlannableLocations));
      serviceBinder.AddMethod(__Method_ListPlannableProducts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsRequest, global::Google.Ads.GoogleAds.V2.Services.ListPlannableProductsResponse>(serviceImpl.ListPlannableProducts));
      serviceBinder.AddMethod(__Method_GenerateProductMixIdeas, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasRequest, global::Google.Ads.GoogleAds.V2.Services.GenerateProductMixIdeasResponse>(serviceImpl.GenerateProductMixIdeas));
      serviceBinder.AddMethod(__Method_GenerateReachForecast, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastRequest, global::Google.Ads.GoogleAds.V2.Services.GenerateReachForecastResponse>(serviceImpl.GenerateReachForecast));
    }

  }
}
#endregion
