// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v2/resources/domain_category.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V2.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v2/resources/domain_category.proto</summary>
  public static partial class DomainCategoryReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v2/resources/domain_category.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DomainCategoryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjdnb29nbGUvYWRzL2dvb2dsZWFkcy92Mi9yZXNvdXJjZXMvZG9tYWluX2Nh",
            "dGVnb3J5LnByb3RvEiFnb29nbGUuYWRzLmdvb2dsZWFkcy52Mi5yZXNvdXJj",
            "ZXMaH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZpb3IucHJvdG8aGWdvb2dsZS9h",
            "cGkvcmVzb3VyY2UucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5w",
            "cm90bxocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90byKwBQoORG9tYWlu",
            "Q2F0ZWdvcnkSRgoNcmVzb3VyY2VfbmFtZRgBIAEoCUIv4EED+kEpCidnb29n",
            "bGVhZHMuZ29vZ2xlYXBpcy5jb20vRG9tYWluQ2F0ZWdvcnkSWQoIY2FtcGFp",
            "Z24YAiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWVCKeBBA/pB",
            "IwohZ29vZ2xlYWRzLmdvb2dsZWFwaXMuY29tL0NhbXBhaWduEjMKCGNhdGVn",
            "b3J5GAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlQgPgQQMS",
            "OAoNbGFuZ3VhZ2VfY29kZRgEIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJp",
            "bmdWYWx1ZUID4EEDEjEKBmRvbWFpbhgFIAEoCzIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZUID4EEDEjwKEWNvdmVyYWdlX2ZyYWN0aW9uGAYgASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLkRvdWJsZVZhbHVlQgPgQQMSNwoNY2F0ZWdv",
            "cnlfcmFuaxgHIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlQgPg",
            "QQMSNQoMaGFzX2NoaWxkcmVuGAggASgLMhouZ29vZ2xlLnByb3RvYnVmLkJv",
            "b2xWYWx1ZUID4EEDEkQKGnJlY29tbWVuZGVkX2NwY19iaWRfbWljcm9zGAkg",
            "ASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWVCA+BBAzpl6kFiCidn",
            "b29nbGVhZHMuZ29vZ2xlYXBpcy5jb20vRG9tYWluQ2F0ZWdvcnkSN2N1c3Rv",
            "bWVycy97Y3VzdG9tZXJ9L2RvbWFpbkNhdGVnb3JpZXMve2RvbWFpbl9jYXRl",
            "Z29yeX1CgAIKJWNvbS5nb29nbGUuYWRzLmdvb2dsZWFkcy52Mi5yZXNvdXJj",
            "ZXNCE0RvbWFpbkNhdGVnb3J5UHJvdG9QAVpKZ29vZ2xlLmdvbGFuZy5vcmcv",
            "Z2VucHJvdG8vZ29vZ2xlYXBpcy9hZHMvZ29vZ2xlYWRzL3YyL3Jlc291cmNl",
            "cztyZXNvdXJjZXOiAgNHQUGqAiFHb29nbGUuQWRzLkdvb2dsZUFkcy5WMi5S",
            "ZXNvdXJjZXPKAiFHb29nbGVcQWRzXEdvb2dsZUFkc1xWMlxSZXNvdXJjZXPq",
            "AiVHb29nbGU6OkFkczo6R29vZ2xlQWRzOjpWMjo6UmVzb3VyY2VzYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V2.Resources.DomainCategory), global::Google.Ads.GoogleAds.V2.Resources.DomainCategory.Parser, new[]{ "ResourceName", "Campaign", "Category", "LanguageCode", "Domain", "CoverageFraction", "CategoryRank", "HasChildren", "RecommendedCpcBidMicros" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A category generated automatically by crawling a domain. If a campaign uses
  /// the DynamicSearchAdsSetting, then domain categories will be generated for
  /// the domain. The categories can be targeted using WebpageConditionInfo.
  /// See: https://support.google.com/google-ads/answer/2471185
  /// </summary>
  public sealed partial class DomainCategory : pb::IMessage<DomainCategory> {
    private static readonly pb::MessageParser<DomainCategory> _parser = new pb::MessageParser<DomainCategory>(() => new DomainCategory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DomainCategory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V2.Resources.DomainCategoryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DomainCategory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DomainCategory(DomainCategory other) : this() {
      resourceName_ = other.resourceName_;
      Campaign = other.Campaign;
      Category = other.Category;
      LanguageCode = other.LanguageCode;
      Domain = other.Domain;
      CoverageFraction = other.CoverageFraction;
      CategoryRank = other.CategoryRank;
      HasChildren = other.HasChildren;
      RecommendedCpcBidMicros = other.RecommendedCpcBidMicros;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DomainCategory Clone() {
      return new DomainCategory(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// Output only. The resource name of the domain category.
    /// Domain category resource names have the form:
    ///
    /// `customers/{customer_id}/domainCategories/{campaign_id}~{category_base64}~{language_code}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "campaign" field.</summary>
    public const int CampaignFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_campaign_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string campaign_;
    /// <summary>
    /// Output only. The campaign this category is recommended for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Campaign {
      get { return campaign_; }
      set {
        campaign_ = value;
      }
    }


    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_category_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string category_;
    /// <summary>
    /// Output only. Recommended category for the website domain. e.g. if you have a website
    /// about electronics, the categories could be "cameras", "televisions", etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }


    /// <summary>Field number for the "language_code" field.</summary>
    public const int LanguageCodeFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_languageCode_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string languageCode_;
    /// <summary>
    /// Output only. The language code specifying the language of the website. e.g. "en" for
    /// English. The language can be specified in the DynamicSearchAdsSetting
    /// required for dynamic search ads. This is the language of the pages from
    /// your website that you want Google Ads to find, create ads for,
    /// and match searches with.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = value;
      }
    }


    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_domain_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string domain_;
    /// <summary>
    /// Output only. The domain for the website. The domain can be specified in the
    /// DynamicSearchAdsSetting required for dynamic search ads.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = value;
      }
    }


    /// <summary>Field number for the "coverage_fraction" field.</summary>
    public const int CoverageFractionFieldNumber = 6;
    private static readonly pb::FieldCodec<double?> _single_coverageFraction_codec = pb::FieldCodec.ForStructWrapper<double>(50);
    private double? coverageFraction_;
    /// <summary>
    /// Output only. Fraction of pages on your site that this category matches.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? CoverageFraction {
      get { return coverageFraction_; }
      set {
        coverageFraction_ = value;
      }
    }


    /// <summary>Field number for the "category_rank" field.</summary>
    public const int CategoryRankFieldNumber = 7;
    private static readonly pb::FieldCodec<long?> _single_categoryRank_codec = pb::FieldCodec.ForStructWrapper<long>(58);
    private long? categoryRank_;
    /// <summary>
    /// Output only. The position of this category in the set of categories. Lower numbers
    /// indicate a better match for the domain. null indicates not recommended.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? CategoryRank {
      get { return categoryRank_; }
      set {
        categoryRank_ = value;
      }
    }


    /// <summary>Field number for the "has_children" field.</summary>
    public const int HasChildrenFieldNumber = 8;
    private static readonly pb::FieldCodec<bool?> _single_hasChildren_codec = pb::FieldCodec.ForStructWrapper<bool>(66);
    private bool? hasChildren_;
    /// <summary>
    /// Output only. Indicates whether this category has sub-categories.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? HasChildren {
      get { return hasChildren_; }
      set {
        hasChildren_ = value;
      }
    }


    /// <summary>Field number for the "recommended_cpc_bid_micros" field.</summary>
    public const int RecommendedCpcBidMicrosFieldNumber = 9;
    private static readonly pb::FieldCodec<long?> _single_recommendedCpcBidMicros_codec = pb::FieldCodec.ForStructWrapper<long>(74);
    private long? recommendedCpcBidMicros_;
    /// <summary>
    /// Output only. The recommended cost per click for the category.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? RecommendedCpcBidMicros {
      get { return recommendedCpcBidMicros_; }
      set {
        recommendedCpcBidMicros_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DomainCategory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DomainCategory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (Campaign != other.Campaign) return false;
      if (Category != other.Category) return false;
      if (LanguageCode != other.LanguageCode) return false;
      if (Domain != other.Domain) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(CoverageFraction, other.CoverageFraction)) return false;
      if (CategoryRank != other.CategoryRank) return false;
      if (HasChildren != other.HasChildren) return false;
      if (RecommendedCpcBidMicros != other.RecommendedCpcBidMicros) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (campaign_ != null) hash ^= Campaign.GetHashCode();
      if (category_ != null) hash ^= Category.GetHashCode();
      if (languageCode_ != null) hash ^= LanguageCode.GetHashCode();
      if (domain_ != null) hash ^= Domain.GetHashCode();
      if (coverageFraction_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(CoverageFraction);
      if (categoryRank_ != null) hash ^= CategoryRank.GetHashCode();
      if (hasChildren_ != null) hash ^= HasChildren.GetHashCode();
      if (recommendedCpcBidMicros_ != null) hash ^= RecommendedCpcBidMicros.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (campaign_ != null) {
        _single_campaign_codec.WriteTagAndValue(output, Campaign);
      }
      if (category_ != null) {
        _single_category_codec.WriteTagAndValue(output, Category);
      }
      if (languageCode_ != null) {
        _single_languageCode_codec.WriteTagAndValue(output, LanguageCode);
      }
      if (domain_ != null) {
        _single_domain_codec.WriteTagAndValue(output, Domain);
      }
      if (coverageFraction_ != null) {
        _single_coverageFraction_codec.WriteTagAndValue(output, CoverageFraction);
      }
      if (categoryRank_ != null) {
        _single_categoryRank_codec.WriteTagAndValue(output, CategoryRank);
      }
      if (hasChildren_ != null) {
        _single_hasChildren_codec.WriteTagAndValue(output, HasChildren);
      }
      if (recommendedCpcBidMicros_ != null) {
        _single_recommendedCpcBidMicros_codec.WriteTagAndValue(output, RecommendedCpcBidMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (campaign_ != null) {
        size += _single_campaign_codec.CalculateSizeWithTag(Campaign);
      }
      if (category_ != null) {
        size += _single_category_codec.CalculateSizeWithTag(Category);
      }
      if (languageCode_ != null) {
        size += _single_languageCode_codec.CalculateSizeWithTag(LanguageCode);
      }
      if (domain_ != null) {
        size += _single_domain_codec.CalculateSizeWithTag(Domain);
      }
      if (coverageFraction_ != null) {
        size += _single_coverageFraction_codec.CalculateSizeWithTag(CoverageFraction);
      }
      if (categoryRank_ != null) {
        size += _single_categoryRank_codec.CalculateSizeWithTag(CategoryRank);
      }
      if (hasChildren_ != null) {
        size += _single_hasChildren_codec.CalculateSizeWithTag(HasChildren);
      }
      if (recommendedCpcBidMicros_ != null) {
        size += _single_recommendedCpcBidMicros_codec.CalculateSizeWithTag(RecommendedCpcBidMicros);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DomainCategory other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.campaign_ != null) {
        if (campaign_ == null || other.Campaign != "") {
          Campaign = other.Campaign;
        }
      }
      if (other.category_ != null) {
        if (category_ == null || other.Category != "") {
          Category = other.Category;
        }
      }
      if (other.languageCode_ != null) {
        if (languageCode_ == null || other.LanguageCode != "") {
          LanguageCode = other.LanguageCode;
        }
      }
      if (other.domain_ != null) {
        if (domain_ == null || other.Domain != "") {
          Domain = other.Domain;
        }
      }
      if (other.coverageFraction_ != null) {
        if (coverageFraction_ == null || other.CoverageFraction != 0D) {
          CoverageFraction = other.CoverageFraction;
        }
      }
      if (other.categoryRank_ != null) {
        if (categoryRank_ == null || other.CategoryRank != 0L) {
          CategoryRank = other.CategoryRank;
        }
      }
      if (other.hasChildren_ != null) {
        if (hasChildren_ == null || other.HasChildren != false) {
          HasChildren = other.HasChildren;
        }
      }
      if (other.recommendedCpcBidMicros_ != null) {
        if (recommendedCpcBidMicros_ == null || other.RecommendedCpcBidMicros != 0L) {
          RecommendedCpcBidMicros = other.RecommendedCpcBidMicros;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 18: {
            string value = _single_campaign_codec.Read(input);
            if (campaign_ == null || value != "") {
              Campaign = value;
            }
            break;
          }
          case 26: {
            string value = _single_category_codec.Read(input);
            if (category_ == null || value != "") {
              Category = value;
            }
            break;
          }
          case 34: {
            string value = _single_languageCode_codec.Read(input);
            if (languageCode_ == null || value != "") {
              LanguageCode = value;
            }
            break;
          }
          case 42: {
            string value = _single_domain_codec.Read(input);
            if (domain_ == null || value != "") {
              Domain = value;
            }
            break;
          }
          case 50: {
            double? value = _single_coverageFraction_codec.Read(input);
            if (coverageFraction_ == null || value != 0D) {
              CoverageFraction = value;
            }
            break;
          }
          case 58: {
            long? value = _single_categoryRank_codec.Read(input);
            if (categoryRank_ == null || value != 0L) {
              CategoryRank = value;
            }
            break;
          }
          case 66: {
            bool? value = _single_hasChildren_codec.Read(input);
            if (hasChildren_ == null || value != false) {
              HasChildren = value;
            }
            break;
          }
          case 74: {
            long? value = _single_recommendedCpcBidMicros_codec.Read(input);
            if (recommendedCpcBidMicros_ == null || value != 0L) {
              RecommendedCpcBidMicros = value;
            }
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
