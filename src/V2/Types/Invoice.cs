// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v2/resources/invoice.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V2.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v2/resources/invoice.proto</summary>
  public static partial class InvoiceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v2/resources/invoice.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InvoiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9nb29nbGUvYWRzL2dvb2dsZWFkcy92Mi9yZXNvdXJjZXMvaW52b2ljZS5w",
            "cm90bxIhZ29vZ2xlLmFkcy5nb29nbGVhZHMudjIucmVzb3VyY2VzGipnb29n",
            "bGUvYWRzL2dvb2dsZWFkcy92Mi9jb21tb24vZGF0ZXMucHJvdG8aMGdvb2ds",
            "ZS9hZHMvZ29vZ2xlYWRzL3YyL2VudW1zL2ludm9pY2VfdHlwZS5wcm90bxof",
            "Z29vZ2xlL2FwaS9maWVsZF9iZWhhdmlvci5wcm90bxoZZ29vZ2xlL2FwaS9y",
            "ZXNvdXJjZS5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3Rv",
            "Ghxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3RvIssOCgdJbnZvaWNlEj8K",
            "DXJlc291cmNlX25hbWUYASABKAlCKOBBA/pBIgogZ29vZ2xlYWRzLmdvb2ds",
            "ZWFwaXMuY29tL0ludm9pY2USLQoCaWQYAiABKAsyHC5nb29nbGUucHJvdG9i",
            "dWYuU3RyaW5nVmFsdWVCA+BBAxJNCgR0eXBlGAMgASgOMjouZ29vZ2xlLmFk",
            "cy5nb29nbGVhZHMudjIuZW51bXMuSW52b2ljZVR5cGVFbnVtLkludm9pY2VU",
            "eXBlQgPgQQMSOAoNYmlsbGluZ19zZXR1cBgEIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZUID4EEDEj4KE3BheW1lbnRzX2FjY291bnRfaWQY",
            "BSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWVCA+BBAxI+ChNw",
            "YXltZW50c19wcm9maWxlX2lkGAYgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0",
            "cmluZ1ZhbHVlQgPgQQMSNQoKaXNzdWVfZGF0ZRgHIAEoCzIcLmdvb2dsZS5w",
            "cm90b2J1Zi5TdHJpbmdWYWx1ZUID4EEDEjMKCGR1ZV9kYXRlGAggASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlQgPgQQMSSgoSc2VydmljZV9k",
            "YXRlX3JhbmdlGAkgASgLMikuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjIuY29t",
            "bW9uLkRhdGVSYW5nZUID4EEDEjgKDWN1cnJlbmN5X2NvZGUYCiABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWVCA+BBAxJKCiBpbnZvaWNlX2xl",
            "dmVsX2FkanVzdG1lbnRzX21pY3JvcxgLIAEoCzIbLmdvb2dsZS5wcm90b2J1",
            "Zi5JbnQ2NFZhbHVlQgPgQQMSQAoWc3VidG90YWxfYW1vdW50X21pY3JvcxgM",
            "IAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlQgPgQQMSOwoRdGF4",
            "X2Ftb3VudF9taWNyb3MYDSABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRW",
            "YWx1ZUID4EEDEj0KE3RvdGFsX2Ftb3VudF9taWNyb3MYDiABKAsyGy5nb29n",
            "bGUucHJvdG9idWYuSW50NjRWYWx1ZUID4EEDEjwKEWNvcnJlY3RlZF9pbnZv",
            "aWNlGA8gASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlQgPgQQMS",
            "PAoRcmVwbGFjZWRfaW52b2ljZXMYECADKAsyHC5nb29nbGUucHJvdG9idWYu",
            "U3RyaW5nVmFsdWVCA+BBAxIyCgdwZGZfdXJsGBEgASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlQgPgQQMSZgoYYWNjb3VudF9idWRnZXRfc3Vt",
            "bWFyaWVzGBIgAygLMj8uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjIucmVzb3Vy",
            "Y2VzLkludm9pY2UuQWNjb3VudEJ1ZGdldFN1bW1hcnlCA+BBAxriBAoUQWNj",
            "b3VudEJ1ZGdldFN1bW1hcnkSMwoIY3VzdG9tZXIYASABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWVCA+BBAxJEChljdXN0b21lcl9kZXNjcmlw",
            "dGl2ZV9uYW1lGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "QgPgQQMSOQoOYWNjb3VudF9idWRnZXQYAyABKAsyHC5nb29nbGUucHJvdG9i",
            "dWYuU3RyaW5nVmFsdWVCA+BBAxI+ChNhY2NvdW50X2J1ZGdldF9uYW1lGAQg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlQgPgQQMSQAoVcHVy",
            "Y2hhc2Vfb3JkZXJfbnVtYmVyGAUgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0",
            "cmluZ1ZhbHVlQgPgQQMSQAoWc3VidG90YWxfYW1vdW50X21pY3JvcxgGIAEo",
            "CzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlQgPgQQMSOwoRdGF4X2Ft",
            "b3VudF9taWNyb3MYByABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1",
            "ZUID4EEDEj0KE3RvdGFsX2Ftb3VudF9taWNyb3MYCCABKAsyGy5nb29nbGUu",
            "cHJvdG9idWYuSW50NjRWYWx1ZUID4EEDElQKHGJpbGxhYmxlX2FjdGl2aXR5",
            "X2RhdGVfcmFuZ2UYCSABKAsyKS5nb29nbGUuYWRzLmdvb2dsZWFkcy52Mi5j",
            "b21tb24uRGF0ZVJhbmdlQgPgQQM6TupBSwogZ29vZ2xlYWRzLmdvb2dsZWFw",
            "aXMuY29tL0ludm9pY2USJ2N1c3RvbWVycy97Y3VzdG9tZXJ9L2ludm9pY2Vz",
            "L3tpbnZvaWNlfUL5AQolY29tLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYyLnJl",
            "c291cmNlc0IMSW52b2ljZVByb3RvUAFaSmdvb2dsZS5nb2xhbmcub3JnL2dl",
            "bnByb3RvL2dvb2dsZWFwaXMvYWRzL2dvb2dsZWFkcy92Mi9yZXNvdXJjZXM7",
            "cmVzb3VyY2VzogIDR0FBqgIhR29vZ2xlLkFkcy5Hb29nbGVBZHMuVjIuUmVz",
            "b3VyY2VzygIhR29vZ2xlXEFkc1xHb29nbGVBZHNcVjJcUmVzb3VyY2Vz6gIl",
            "R29vZ2xlOjpBZHM6Okdvb2dsZUFkczo6VjI6OlJlc291cmNlc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V2.Common.DatesReflection.Descriptor, global::Google.Ads.GoogleAds.V2.Enums.InvoiceTypeReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V2.Resources.Invoice), global::Google.Ads.GoogleAds.V2.Resources.Invoice.Parser, new[]{ "ResourceName", "Id", "Type", "BillingSetup", "PaymentsAccountId", "PaymentsProfileId", "IssueDate", "DueDate", "ServiceDateRange", "CurrencyCode", "InvoiceLevelAdjustmentsMicros", "SubtotalAmountMicros", "TaxAmountMicros", "TotalAmountMicros", "CorrectedInvoice", "ReplacedInvoices", "PdfUrl", "AccountBudgetSummaries" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V2.Resources.Invoice.Types.AccountBudgetSummary), global::Google.Ads.GoogleAds.V2.Resources.Invoice.Types.AccountBudgetSummary.Parser, new[]{ "Customer", "CustomerDescriptiveName", "AccountBudget", "AccountBudgetName", "PurchaseOrderNumber", "SubtotalAmountMicros", "TaxAmountMicros", "TotalAmountMicros", "BillableActivityDateRange" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// An invoice. All invoice information is snapshotted to match the PDF invoice.
  /// For invoices older than the launch of InvoiceService, the snapshotted
  /// information may not match the PDF invoice.
  /// </summary>
  public sealed partial class Invoice : pb::IMessage<Invoice> {
    private static readonly pb::MessageParser<Invoice> _parser = new pb::MessageParser<Invoice>(() => new Invoice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Invoice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V2.Resources.InvoiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Invoice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Invoice(Invoice other) : this() {
      resourceName_ = other.resourceName_;
      Id = other.Id;
      type_ = other.type_;
      BillingSetup = other.BillingSetup;
      PaymentsAccountId = other.PaymentsAccountId;
      PaymentsProfileId = other.PaymentsProfileId;
      IssueDate = other.IssueDate;
      DueDate = other.DueDate;
      serviceDateRange_ = other.serviceDateRange_ != null ? other.serviceDateRange_.Clone() : null;
      CurrencyCode = other.CurrencyCode;
      InvoiceLevelAdjustmentsMicros = other.InvoiceLevelAdjustmentsMicros;
      SubtotalAmountMicros = other.SubtotalAmountMicros;
      TaxAmountMicros = other.TaxAmountMicros;
      TotalAmountMicros = other.TotalAmountMicros;
      CorrectedInvoice = other.CorrectedInvoice;
      replacedInvoices_ = other.replacedInvoices_.Clone();
      PdfUrl = other.PdfUrl;
      accountBudgetSummaries_ = other.accountBudgetSummaries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Invoice Clone() {
      return new Invoice(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// Output only. The resource name of the invoice. Multiple customers can share a given
    /// invoice, so multiple resource names may point to the same invoice.
    /// Invoice resource names have the form:
    ///
    /// `customers/{customer_id}/invoices/{invoice_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_id_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string id_;
    /// <summary>
    /// Output only. The ID of the invoice. It appears on the invoice PDF as "Invoice number".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Google.Ads.GoogleAds.V2.Enums.InvoiceTypeEnum.Types.InvoiceType type_ = global::Google.Ads.GoogleAds.V2.Enums.InvoiceTypeEnum.Types.InvoiceType.Unspecified;
    /// <summary>
    /// Output only. The type of invoice.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V2.Enums.InvoiceTypeEnum.Types.InvoiceType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "billing_setup" field.</summary>
    public const int BillingSetupFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_billingSetup_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string billingSetup_;
    /// <summary>
    /// Output only. The resource name of this invoice’s billing setup.
    ///
    /// `customers/{customer_id}/billingSetups/{billing_setup_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BillingSetup {
      get { return billingSetup_; }
      set {
        billingSetup_ = value;
      }
    }


    /// <summary>Field number for the "payments_account_id" field.</summary>
    public const int PaymentsAccountIdFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_paymentsAccountId_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string paymentsAccountId_;
    /// <summary>
    /// Output only. A 16 digit ID used to identify the payments account associated with the
    /// billing setup, e.g. "1234-5678-9012-3456". It appears on the invoice PDF as
    /// "Billing Account Number".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaymentsAccountId {
      get { return paymentsAccountId_; }
      set {
        paymentsAccountId_ = value;
      }
    }


    /// <summary>Field number for the "payments_profile_id" field.</summary>
    public const int PaymentsProfileIdFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_paymentsProfileId_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string paymentsProfileId_;
    /// <summary>
    /// Output only. A 12 digit ID used to identify the payments profile associated with the
    /// billing setup, e.g. "1234-5678-9012". It appears on the invoice PDF as
    /// "Billing ID".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaymentsProfileId {
      get { return paymentsProfileId_; }
      set {
        paymentsProfileId_ = value;
      }
    }


    /// <summary>Field number for the "issue_date" field.</summary>
    public const int IssueDateFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_issueDate_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string issueDate_;
    /// <summary>
    /// Output only. The issue date in yyyy-mm-dd format. It appears on the invoice PDF as
    /// either "Issue date" or "Invoice date".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IssueDate {
      get { return issueDate_; }
      set {
        issueDate_ = value;
      }
    }


    /// <summary>Field number for the "due_date" field.</summary>
    public const int DueDateFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_dueDate_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string dueDate_;
    /// <summary>
    /// Output only. The due date in yyyy-mm-dd format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DueDate {
      get { return dueDate_; }
      set {
        dueDate_ = value;
      }
    }


    /// <summary>Field number for the "service_date_range" field.</summary>
    public const int ServiceDateRangeFieldNumber = 9;
    private global::Google.Ads.GoogleAds.V2.Common.DateRange serviceDateRange_;
    /// <summary>
    /// Output only. The service period date range of this invoice. The end date is inclusive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V2.Common.DateRange ServiceDateRange {
      get { return serviceDateRange_; }
      set {
        serviceDateRange_ = value;
      }
    }

    /// <summary>Field number for the "currency_code" field.</summary>
    public const int CurrencyCodeFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_currencyCode_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string currencyCode_;
    /// <summary>
    /// Output only. The currency code. All costs are returned in this currency. A subset of the
    /// currency codes derived from the ISO 4217 standard is supported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = value;
      }
    }


    /// <summary>Field number for the "invoice_level_adjustments_micros" field.</summary>
    public const int InvoiceLevelAdjustmentsMicrosFieldNumber = 11;
    private static readonly pb::FieldCodec<long?> _single_invoiceLevelAdjustmentsMicros_codec = pb::FieldCodec.ForStructWrapper<long>(90);
    private long? invoiceLevelAdjustmentsMicros_;
    /// <summary>
    /// Output only. The total amount of invoice level adjustments. These adjustments are made
    /// on the invoice, not on a specific account budget.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? InvoiceLevelAdjustmentsMicros {
      get { return invoiceLevelAdjustmentsMicros_; }
      set {
        invoiceLevelAdjustmentsMicros_ = value;
      }
    }


    /// <summary>Field number for the "subtotal_amount_micros" field.</summary>
    public const int SubtotalAmountMicrosFieldNumber = 12;
    private static readonly pb::FieldCodec<long?> _single_subtotalAmountMicros_codec = pb::FieldCodec.ForStructWrapper<long>(98);
    private long? subtotalAmountMicros_;
    /// <summary>
    /// Output only. The pretax subtotal amount, in micros. This equals the sum of the
    /// AccountBudgetSummary subtotal amounts, plus the invoice level adjustments.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? SubtotalAmountMicros {
      get { return subtotalAmountMicros_; }
      set {
        subtotalAmountMicros_ = value;
      }
    }


    /// <summary>Field number for the "tax_amount_micros" field.</summary>
    public const int TaxAmountMicrosFieldNumber = 13;
    private static readonly pb::FieldCodec<long?> _single_taxAmountMicros_codec = pb::FieldCodec.ForStructWrapper<long>(106);
    private long? taxAmountMicros_;
    /// <summary>
    /// Output only. The sum of all taxes on the invoice, in micros. This equals the sum of the
    /// AccountBudgetSummary tax amounts, plus taxes not associated with a specific
    /// account budget.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? TaxAmountMicros {
      get { return taxAmountMicros_; }
      set {
        taxAmountMicros_ = value;
      }
    }


    /// <summary>Field number for the "total_amount_micros" field.</summary>
    public const int TotalAmountMicrosFieldNumber = 14;
    private static readonly pb::FieldCodec<long?> _single_totalAmountMicros_codec = pb::FieldCodec.ForStructWrapper<long>(114);
    private long? totalAmountMicros_;
    /// <summary>
    /// Output only. The total amount, in micros. This equals the sum of the invoice subtotal
    /// amount and the invoice tax amount.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? TotalAmountMicros {
      get { return totalAmountMicros_; }
      set {
        totalAmountMicros_ = value;
      }
    }


    /// <summary>Field number for the "corrected_invoice" field.</summary>
    public const int CorrectedInvoiceFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _single_correctedInvoice_codec = pb::FieldCodec.ForClassWrapper<string>(122);
    private string correctedInvoice_;
    /// <summary>
    /// Output only. The resource name of the original invoice corrected, wrote off, or canceled
    /// by this invoice, if applicable. If `corrected_invoice` is set,
    /// `replaced_invoices` will not be set.
    /// Invoice resource names have the form:
    ///
    /// `customers/{customer_id}/invoices/{invoice_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CorrectedInvoice {
      get { return correctedInvoice_; }
      set {
        correctedInvoice_ = value;
      }
    }


    /// <summary>Field number for the "replaced_invoices" field.</summary>
    public const int ReplacedInvoicesFieldNumber = 16;
    private static readonly pb::FieldCodec<string> _repeated_replacedInvoices_codec
        = pb::FieldCodec.ForClassWrapper<string>(130);
    private readonly pbc::RepeatedField<string> replacedInvoices_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Output only. The resource name of the original invoice(s) being rebilled or replaced by
    /// this invoice, if applicable. There might be multiple replaced invoices due
    /// to invoice consolidation. The replaced invoices may not belong to the same
    /// payments account. If `replaced_invoices` is set, `corrected_invoice` will
    /// not be set.
    /// Invoice resource names have the form:
    ///
    /// `customers/{customer_id}/invoices/{invoice_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ReplacedInvoices {
      get { return replacedInvoices_; }
    }

    /// <summary>Field number for the "pdf_url" field.</summary>
    public const int PdfUrlFieldNumber = 17;
    private static readonly pb::FieldCodec<string> _single_pdfUrl_codec = pb::FieldCodec.ForClassWrapper<string>(138);
    private string pdfUrl_;
    /// <summary>
    /// Output only. The URL to a PDF copy of the invoice. Users need to pass in their OAuth
    /// token to request the PDF with this URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PdfUrl {
      get { return pdfUrl_; }
      set {
        pdfUrl_ = value;
      }
    }


    /// <summary>Field number for the "account_budget_summaries" field.</summary>
    public const int AccountBudgetSummariesFieldNumber = 18;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V2.Resources.Invoice.Types.AccountBudgetSummary> _repeated_accountBudgetSummaries_codec
        = pb::FieldCodec.ForMessage(146, global::Google.Ads.GoogleAds.V2.Resources.Invoice.Types.AccountBudgetSummary.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V2.Resources.Invoice.Types.AccountBudgetSummary> accountBudgetSummaries_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V2.Resources.Invoice.Types.AccountBudgetSummary>();
    /// <summary>
    /// Output only. The list of summarized account budget information associated with this
    /// invoice.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V2.Resources.Invoice.Types.AccountBudgetSummary> AccountBudgetSummaries {
      get { return accountBudgetSummaries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Invoice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Invoice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (BillingSetup != other.BillingSetup) return false;
      if (PaymentsAccountId != other.PaymentsAccountId) return false;
      if (PaymentsProfileId != other.PaymentsProfileId) return false;
      if (IssueDate != other.IssueDate) return false;
      if (DueDate != other.DueDate) return false;
      if (!object.Equals(ServiceDateRange, other.ServiceDateRange)) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (InvoiceLevelAdjustmentsMicros != other.InvoiceLevelAdjustmentsMicros) return false;
      if (SubtotalAmountMicros != other.SubtotalAmountMicros) return false;
      if (TaxAmountMicros != other.TaxAmountMicros) return false;
      if (TotalAmountMicros != other.TotalAmountMicros) return false;
      if (CorrectedInvoice != other.CorrectedInvoice) return false;
      if(!replacedInvoices_.Equals(other.replacedInvoices_)) return false;
      if (PdfUrl != other.PdfUrl) return false;
      if(!accountBudgetSummaries_.Equals(other.accountBudgetSummaries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (Type != global::Google.Ads.GoogleAds.V2.Enums.InvoiceTypeEnum.Types.InvoiceType.Unspecified) hash ^= Type.GetHashCode();
      if (billingSetup_ != null) hash ^= BillingSetup.GetHashCode();
      if (paymentsAccountId_ != null) hash ^= PaymentsAccountId.GetHashCode();
      if (paymentsProfileId_ != null) hash ^= PaymentsProfileId.GetHashCode();
      if (issueDate_ != null) hash ^= IssueDate.GetHashCode();
      if (dueDate_ != null) hash ^= DueDate.GetHashCode();
      if (serviceDateRange_ != null) hash ^= ServiceDateRange.GetHashCode();
      if (currencyCode_ != null) hash ^= CurrencyCode.GetHashCode();
      if (invoiceLevelAdjustmentsMicros_ != null) hash ^= InvoiceLevelAdjustmentsMicros.GetHashCode();
      if (subtotalAmountMicros_ != null) hash ^= SubtotalAmountMicros.GetHashCode();
      if (taxAmountMicros_ != null) hash ^= TaxAmountMicros.GetHashCode();
      if (totalAmountMicros_ != null) hash ^= TotalAmountMicros.GetHashCode();
      if (correctedInvoice_ != null) hash ^= CorrectedInvoice.GetHashCode();
      hash ^= replacedInvoices_.GetHashCode();
      if (pdfUrl_ != null) hash ^= PdfUrl.GetHashCode();
      hash ^= accountBudgetSummaries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (Type != global::Google.Ads.GoogleAds.V2.Enums.InvoiceTypeEnum.Types.InvoiceType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (billingSetup_ != null) {
        _single_billingSetup_codec.WriteTagAndValue(output, BillingSetup);
      }
      if (paymentsAccountId_ != null) {
        _single_paymentsAccountId_codec.WriteTagAndValue(output, PaymentsAccountId);
      }
      if (paymentsProfileId_ != null) {
        _single_paymentsProfileId_codec.WriteTagAndValue(output, PaymentsProfileId);
      }
      if (issueDate_ != null) {
        _single_issueDate_codec.WriteTagAndValue(output, IssueDate);
      }
      if (dueDate_ != null) {
        _single_dueDate_codec.WriteTagAndValue(output, DueDate);
      }
      if (serviceDateRange_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ServiceDateRange);
      }
      if (currencyCode_ != null) {
        _single_currencyCode_codec.WriteTagAndValue(output, CurrencyCode);
      }
      if (invoiceLevelAdjustmentsMicros_ != null) {
        _single_invoiceLevelAdjustmentsMicros_codec.WriteTagAndValue(output, InvoiceLevelAdjustmentsMicros);
      }
      if (subtotalAmountMicros_ != null) {
        _single_subtotalAmountMicros_codec.WriteTagAndValue(output, SubtotalAmountMicros);
      }
      if (taxAmountMicros_ != null) {
        _single_taxAmountMicros_codec.WriteTagAndValue(output, TaxAmountMicros);
      }
      if (totalAmountMicros_ != null) {
        _single_totalAmountMicros_codec.WriteTagAndValue(output, TotalAmountMicros);
      }
      if (correctedInvoice_ != null) {
        _single_correctedInvoice_codec.WriteTagAndValue(output, CorrectedInvoice);
      }
      replacedInvoices_.WriteTo(output, _repeated_replacedInvoices_codec);
      if (pdfUrl_ != null) {
        _single_pdfUrl_codec.WriteTagAndValue(output, PdfUrl);
      }
      accountBudgetSummaries_.WriteTo(output, _repeated_accountBudgetSummaries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (Type != global::Google.Ads.GoogleAds.V2.Enums.InvoiceTypeEnum.Types.InvoiceType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (billingSetup_ != null) {
        size += _single_billingSetup_codec.CalculateSizeWithTag(BillingSetup);
      }
      if (paymentsAccountId_ != null) {
        size += _single_paymentsAccountId_codec.CalculateSizeWithTag(PaymentsAccountId);
      }
      if (paymentsProfileId_ != null) {
        size += _single_paymentsProfileId_codec.CalculateSizeWithTag(PaymentsProfileId);
      }
      if (issueDate_ != null) {
        size += _single_issueDate_codec.CalculateSizeWithTag(IssueDate);
      }
      if (dueDate_ != null) {
        size += _single_dueDate_codec.CalculateSizeWithTag(DueDate);
      }
      if (serviceDateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServiceDateRange);
      }
      if (currencyCode_ != null) {
        size += _single_currencyCode_codec.CalculateSizeWithTag(CurrencyCode);
      }
      if (invoiceLevelAdjustmentsMicros_ != null) {
        size += _single_invoiceLevelAdjustmentsMicros_codec.CalculateSizeWithTag(InvoiceLevelAdjustmentsMicros);
      }
      if (subtotalAmountMicros_ != null) {
        size += _single_subtotalAmountMicros_codec.CalculateSizeWithTag(SubtotalAmountMicros);
      }
      if (taxAmountMicros_ != null) {
        size += _single_taxAmountMicros_codec.CalculateSizeWithTag(TaxAmountMicros);
      }
      if (totalAmountMicros_ != null) {
        size += _single_totalAmountMicros_codec.CalculateSizeWithTag(TotalAmountMicros);
      }
      if (correctedInvoice_ != null) {
        size += _single_correctedInvoice_codec.CalculateSizeWithTag(CorrectedInvoice);
      }
      size += replacedInvoices_.CalculateSize(_repeated_replacedInvoices_codec);
      if (pdfUrl_ != null) {
        size += _single_pdfUrl_codec.CalculateSizeWithTag(PdfUrl);
      }
      size += accountBudgetSummaries_.CalculateSize(_repeated_accountBudgetSummaries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Invoice other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != "") {
          Id = other.Id;
        }
      }
      if (other.Type != global::Google.Ads.GoogleAds.V2.Enums.InvoiceTypeEnum.Types.InvoiceType.Unspecified) {
        Type = other.Type;
      }
      if (other.billingSetup_ != null) {
        if (billingSetup_ == null || other.BillingSetup != "") {
          BillingSetup = other.BillingSetup;
        }
      }
      if (other.paymentsAccountId_ != null) {
        if (paymentsAccountId_ == null || other.PaymentsAccountId != "") {
          PaymentsAccountId = other.PaymentsAccountId;
        }
      }
      if (other.paymentsProfileId_ != null) {
        if (paymentsProfileId_ == null || other.PaymentsProfileId != "") {
          PaymentsProfileId = other.PaymentsProfileId;
        }
      }
      if (other.issueDate_ != null) {
        if (issueDate_ == null || other.IssueDate != "") {
          IssueDate = other.IssueDate;
        }
      }
      if (other.dueDate_ != null) {
        if (dueDate_ == null || other.DueDate != "") {
          DueDate = other.DueDate;
        }
      }
      if (other.serviceDateRange_ != null) {
        if (serviceDateRange_ == null) {
          ServiceDateRange = new global::Google.Ads.GoogleAds.V2.Common.DateRange();
        }
        ServiceDateRange.MergeFrom(other.ServiceDateRange);
      }
      if (other.currencyCode_ != null) {
        if (currencyCode_ == null || other.CurrencyCode != "") {
          CurrencyCode = other.CurrencyCode;
        }
      }
      if (other.invoiceLevelAdjustmentsMicros_ != null) {
        if (invoiceLevelAdjustmentsMicros_ == null || other.InvoiceLevelAdjustmentsMicros != 0L) {
          InvoiceLevelAdjustmentsMicros = other.InvoiceLevelAdjustmentsMicros;
        }
      }
      if (other.subtotalAmountMicros_ != null) {
        if (subtotalAmountMicros_ == null || other.SubtotalAmountMicros != 0L) {
          SubtotalAmountMicros = other.SubtotalAmountMicros;
        }
      }
      if (other.taxAmountMicros_ != null) {
        if (taxAmountMicros_ == null || other.TaxAmountMicros != 0L) {
          TaxAmountMicros = other.TaxAmountMicros;
        }
      }
      if (other.totalAmountMicros_ != null) {
        if (totalAmountMicros_ == null || other.TotalAmountMicros != 0L) {
          TotalAmountMicros = other.TotalAmountMicros;
        }
      }
      if (other.correctedInvoice_ != null) {
        if (correctedInvoice_ == null || other.CorrectedInvoice != "") {
          CorrectedInvoice = other.CorrectedInvoice;
        }
      }
      replacedInvoices_.Add(other.replacedInvoices_);
      if (other.pdfUrl_ != null) {
        if (pdfUrl_ == null || other.PdfUrl != "") {
          PdfUrl = other.PdfUrl;
        }
      }
      accountBudgetSummaries_.Add(other.accountBudgetSummaries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 18: {
            string value = _single_id_codec.Read(input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 24: {
            Type = (global::Google.Ads.GoogleAds.V2.Enums.InvoiceTypeEnum.Types.InvoiceType) input.ReadEnum();
            break;
          }
          case 34: {
            string value = _single_billingSetup_codec.Read(input);
            if (billingSetup_ == null || value != "") {
              BillingSetup = value;
            }
            break;
          }
          case 42: {
            string value = _single_paymentsAccountId_codec.Read(input);
            if (paymentsAccountId_ == null || value != "") {
              PaymentsAccountId = value;
            }
            break;
          }
          case 50: {
            string value = _single_paymentsProfileId_codec.Read(input);
            if (paymentsProfileId_ == null || value != "") {
              PaymentsProfileId = value;
            }
            break;
          }
          case 58: {
            string value = _single_issueDate_codec.Read(input);
            if (issueDate_ == null || value != "") {
              IssueDate = value;
            }
            break;
          }
          case 66: {
            string value = _single_dueDate_codec.Read(input);
            if (dueDate_ == null || value != "") {
              DueDate = value;
            }
            break;
          }
          case 74: {
            if (serviceDateRange_ == null) {
              ServiceDateRange = new global::Google.Ads.GoogleAds.V2.Common.DateRange();
            }
            input.ReadMessage(ServiceDateRange);
            break;
          }
          case 82: {
            string value = _single_currencyCode_codec.Read(input);
            if (currencyCode_ == null || value != "") {
              CurrencyCode = value;
            }
            break;
          }
          case 90: {
            long? value = _single_invoiceLevelAdjustmentsMicros_codec.Read(input);
            if (invoiceLevelAdjustmentsMicros_ == null || value != 0L) {
              InvoiceLevelAdjustmentsMicros = value;
            }
            break;
          }
          case 98: {
            long? value = _single_subtotalAmountMicros_codec.Read(input);
            if (subtotalAmountMicros_ == null || value != 0L) {
              SubtotalAmountMicros = value;
            }
            break;
          }
          case 106: {
            long? value = _single_taxAmountMicros_codec.Read(input);
            if (taxAmountMicros_ == null || value != 0L) {
              TaxAmountMicros = value;
            }
            break;
          }
          case 114: {
            long? value = _single_totalAmountMicros_codec.Read(input);
            if (totalAmountMicros_ == null || value != 0L) {
              TotalAmountMicros = value;
            }
            break;
          }
          case 122: {
            string value = _single_correctedInvoice_codec.Read(input);
            if (correctedInvoice_ == null || value != "") {
              CorrectedInvoice = value;
            }
            break;
          }
          case 130: {
            replacedInvoices_.AddEntriesFrom(input, _repeated_replacedInvoices_codec);
            break;
          }
          case 138: {
            string value = _single_pdfUrl_codec.Read(input);
            if (pdfUrl_ == null || value != "") {
              PdfUrl = value;
            }
            break;
          }
          case 146: {
            accountBudgetSummaries_.AddEntriesFrom(input, _repeated_accountBudgetSummaries_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Invoice message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Represents a summarized account budget billable cost.
      /// </summary>
      public sealed partial class AccountBudgetSummary : pb::IMessage<AccountBudgetSummary> {
        private static readonly pb::MessageParser<AccountBudgetSummary> _parser = new pb::MessageParser<AccountBudgetSummary>(() => new AccountBudgetSummary());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AccountBudgetSummary> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.GoogleAds.V2.Resources.Invoice.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AccountBudgetSummary() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AccountBudgetSummary(AccountBudgetSummary other) : this() {
          Customer = other.Customer;
          CustomerDescriptiveName = other.CustomerDescriptiveName;
          AccountBudget = other.AccountBudget;
          AccountBudgetName = other.AccountBudgetName;
          PurchaseOrderNumber = other.PurchaseOrderNumber;
          SubtotalAmountMicros = other.SubtotalAmountMicros;
          TaxAmountMicros = other.TaxAmountMicros;
          TotalAmountMicros = other.TotalAmountMicros;
          billableActivityDateRange_ = other.billableActivityDateRange_ != null ? other.billableActivityDateRange_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AccountBudgetSummary Clone() {
          return new AccountBudgetSummary(this);
        }

        /// <summary>Field number for the "customer" field.</summary>
        public const int CustomerFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _single_customer_codec = pb::FieldCodec.ForClassWrapper<string>(10);
        private string customer_;
        /// <summary>
        /// Output only. The resource name of the customer associated with this account budget.
        /// This contains the customer ID, which appears on the invoice PDF as
        /// "Account ID".
        /// Customer resource names have the form:
        ///
        /// `customers/{customer_id}`
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Customer {
          get { return customer_; }
          set {
            customer_ = value;
          }
        }


        /// <summary>Field number for the "customer_descriptive_name" field.</summary>
        public const int CustomerDescriptiveNameFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _single_customerDescriptiveName_codec = pb::FieldCodec.ForClassWrapper<string>(18);
        private string customerDescriptiveName_;
        /// <summary>
        /// Output only. The descriptive name of the account budget’s customer. It appears on the
        /// invoice PDF as "Account".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CustomerDescriptiveName {
          get { return customerDescriptiveName_; }
          set {
            customerDescriptiveName_ = value;
          }
        }


        /// <summary>Field number for the "account_budget" field.</summary>
        public const int AccountBudgetFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _single_accountBudget_codec = pb::FieldCodec.ForClassWrapper<string>(26);
        private string accountBudget_;
        /// <summary>
        /// Output only. The resource name of the account budget associated with this summarized
        /// billable cost.
        /// AccountBudget resource names have the form:
        ///
        /// `customers/{customer_id}/accountBudgets/{account_budget_id}`
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AccountBudget {
          get { return accountBudget_; }
          set {
            accountBudget_ = value;
          }
        }


        /// <summary>Field number for the "account_budget_name" field.</summary>
        public const int AccountBudgetNameFieldNumber = 4;
        private static readonly pb::FieldCodec<string> _single_accountBudgetName_codec = pb::FieldCodec.ForClassWrapper<string>(34);
        private string accountBudgetName_;
        /// <summary>
        /// Output only. The name of the account budget. It appears on the invoice PDF as "Account
        /// budget".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AccountBudgetName {
          get { return accountBudgetName_; }
          set {
            accountBudgetName_ = value;
          }
        }


        /// <summary>Field number for the "purchase_order_number" field.</summary>
        public const int PurchaseOrderNumberFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _single_purchaseOrderNumber_codec = pb::FieldCodec.ForClassWrapper<string>(42);
        private string purchaseOrderNumber_;
        /// <summary>
        /// Output only. The purchase order number of the account budget. It appears on the
        /// invoice PDF as "Purchase order".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string PurchaseOrderNumber {
          get { return purchaseOrderNumber_; }
          set {
            purchaseOrderNumber_ = value;
          }
        }


        /// <summary>Field number for the "subtotal_amount_micros" field.</summary>
        public const int SubtotalAmountMicrosFieldNumber = 6;
        private static readonly pb::FieldCodec<long?> _single_subtotalAmountMicros_codec = pb::FieldCodec.ForStructWrapper<long>(50);
        private long? subtotalAmountMicros_;
        /// <summary>
        /// Output only. The pretax subtotal amount attributable to this budget during the service
        /// period, in micros.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long? SubtotalAmountMicros {
          get { return subtotalAmountMicros_; }
          set {
            subtotalAmountMicros_ = value;
          }
        }


        /// <summary>Field number for the "tax_amount_micros" field.</summary>
        public const int TaxAmountMicrosFieldNumber = 7;
        private static readonly pb::FieldCodec<long?> _single_taxAmountMicros_codec = pb::FieldCodec.ForStructWrapper<long>(58);
        private long? taxAmountMicros_;
        /// <summary>
        /// Output only. The tax amount attributable to this budget during the service period, in
        /// micros.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long? TaxAmountMicros {
          get { return taxAmountMicros_; }
          set {
            taxAmountMicros_ = value;
          }
        }


        /// <summary>Field number for the "total_amount_micros" field.</summary>
        public const int TotalAmountMicrosFieldNumber = 8;
        private static readonly pb::FieldCodec<long?> _single_totalAmountMicros_codec = pb::FieldCodec.ForStructWrapper<long>(66);
        private long? totalAmountMicros_;
        /// <summary>
        /// Output only. The total amount attributable to this budget during the service period,
        /// in micros. This equals the sum of the account budget subtotal amount and
        /// the account budget tax amount.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long? TotalAmountMicros {
          get { return totalAmountMicros_; }
          set {
            totalAmountMicros_ = value;
          }
        }


        /// <summary>Field number for the "billable_activity_date_range" field.</summary>
        public const int BillableActivityDateRangeFieldNumber = 9;
        private global::Google.Ads.GoogleAds.V2.Common.DateRange billableActivityDateRange_;
        /// <summary>
        /// Output only. The billable activity date range of the account budget, within the
        /// service date range of this invoice. The end date is inclusive. This can
        /// be different from the account budget's start and end time.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Ads.GoogleAds.V2.Common.DateRange BillableActivityDateRange {
          get { return billableActivityDateRange_; }
          set {
            billableActivityDateRange_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AccountBudgetSummary);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AccountBudgetSummary other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Customer != other.Customer) return false;
          if (CustomerDescriptiveName != other.CustomerDescriptiveName) return false;
          if (AccountBudget != other.AccountBudget) return false;
          if (AccountBudgetName != other.AccountBudgetName) return false;
          if (PurchaseOrderNumber != other.PurchaseOrderNumber) return false;
          if (SubtotalAmountMicros != other.SubtotalAmountMicros) return false;
          if (TaxAmountMicros != other.TaxAmountMicros) return false;
          if (TotalAmountMicros != other.TotalAmountMicros) return false;
          if (!object.Equals(BillableActivityDateRange, other.BillableActivityDateRange)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (customer_ != null) hash ^= Customer.GetHashCode();
          if (customerDescriptiveName_ != null) hash ^= CustomerDescriptiveName.GetHashCode();
          if (accountBudget_ != null) hash ^= AccountBudget.GetHashCode();
          if (accountBudgetName_ != null) hash ^= AccountBudgetName.GetHashCode();
          if (purchaseOrderNumber_ != null) hash ^= PurchaseOrderNumber.GetHashCode();
          if (subtotalAmountMicros_ != null) hash ^= SubtotalAmountMicros.GetHashCode();
          if (taxAmountMicros_ != null) hash ^= TaxAmountMicros.GetHashCode();
          if (totalAmountMicros_ != null) hash ^= TotalAmountMicros.GetHashCode();
          if (billableActivityDateRange_ != null) hash ^= BillableActivityDateRange.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (customer_ != null) {
            _single_customer_codec.WriteTagAndValue(output, Customer);
          }
          if (customerDescriptiveName_ != null) {
            _single_customerDescriptiveName_codec.WriteTagAndValue(output, CustomerDescriptiveName);
          }
          if (accountBudget_ != null) {
            _single_accountBudget_codec.WriteTagAndValue(output, AccountBudget);
          }
          if (accountBudgetName_ != null) {
            _single_accountBudgetName_codec.WriteTagAndValue(output, AccountBudgetName);
          }
          if (purchaseOrderNumber_ != null) {
            _single_purchaseOrderNumber_codec.WriteTagAndValue(output, PurchaseOrderNumber);
          }
          if (subtotalAmountMicros_ != null) {
            _single_subtotalAmountMicros_codec.WriteTagAndValue(output, SubtotalAmountMicros);
          }
          if (taxAmountMicros_ != null) {
            _single_taxAmountMicros_codec.WriteTagAndValue(output, TaxAmountMicros);
          }
          if (totalAmountMicros_ != null) {
            _single_totalAmountMicros_codec.WriteTagAndValue(output, TotalAmountMicros);
          }
          if (billableActivityDateRange_ != null) {
            output.WriteRawTag(74);
            output.WriteMessage(BillableActivityDateRange);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (customer_ != null) {
            size += _single_customer_codec.CalculateSizeWithTag(Customer);
          }
          if (customerDescriptiveName_ != null) {
            size += _single_customerDescriptiveName_codec.CalculateSizeWithTag(CustomerDescriptiveName);
          }
          if (accountBudget_ != null) {
            size += _single_accountBudget_codec.CalculateSizeWithTag(AccountBudget);
          }
          if (accountBudgetName_ != null) {
            size += _single_accountBudgetName_codec.CalculateSizeWithTag(AccountBudgetName);
          }
          if (purchaseOrderNumber_ != null) {
            size += _single_purchaseOrderNumber_codec.CalculateSizeWithTag(PurchaseOrderNumber);
          }
          if (subtotalAmountMicros_ != null) {
            size += _single_subtotalAmountMicros_codec.CalculateSizeWithTag(SubtotalAmountMicros);
          }
          if (taxAmountMicros_ != null) {
            size += _single_taxAmountMicros_codec.CalculateSizeWithTag(TaxAmountMicros);
          }
          if (totalAmountMicros_ != null) {
            size += _single_totalAmountMicros_codec.CalculateSizeWithTag(TotalAmountMicros);
          }
          if (billableActivityDateRange_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BillableActivityDateRange);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AccountBudgetSummary other) {
          if (other == null) {
            return;
          }
          if (other.customer_ != null) {
            if (customer_ == null || other.Customer != "") {
              Customer = other.Customer;
            }
          }
          if (other.customerDescriptiveName_ != null) {
            if (customerDescriptiveName_ == null || other.CustomerDescriptiveName != "") {
              CustomerDescriptiveName = other.CustomerDescriptiveName;
            }
          }
          if (other.accountBudget_ != null) {
            if (accountBudget_ == null || other.AccountBudget != "") {
              AccountBudget = other.AccountBudget;
            }
          }
          if (other.accountBudgetName_ != null) {
            if (accountBudgetName_ == null || other.AccountBudgetName != "") {
              AccountBudgetName = other.AccountBudgetName;
            }
          }
          if (other.purchaseOrderNumber_ != null) {
            if (purchaseOrderNumber_ == null || other.PurchaseOrderNumber != "") {
              PurchaseOrderNumber = other.PurchaseOrderNumber;
            }
          }
          if (other.subtotalAmountMicros_ != null) {
            if (subtotalAmountMicros_ == null || other.SubtotalAmountMicros != 0L) {
              SubtotalAmountMicros = other.SubtotalAmountMicros;
            }
          }
          if (other.taxAmountMicros_ != null) {
            if (taxAmountMicros_ == null || other.TaxAmountMicros != 0L) {
              TaxAmountMicros = other.TaxAmountMicros;
            }
          }
          if (other.totalAmountMicros_ != null) {
            if (totalAmountMicros_ == null || other.TotalAmountMicros != 0L) {
              TotalAmountMicros = other.TotalAmountMicros;
            }
          }
          if (other.billableActivityDateRange_ != null) {
            if (billableActivityDateRange_ == null) {
              BillableActivityDateRange = new global::Google.Ads.GoogleAds.V2.Common.DateRange();
            }
            BillableActivityDateRange.MergeFrom(other.BillableActivityDateRange);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                string value = _single_customer_codec.Read(input);
                if (customer_ == null || value != "") {
                  Customer = value;
                }
                break;
              }
              case 18: {
                string value = _single_customerDescriptiveName_codec.Read(input);
                if (customerDescriptiveName_ == null || value != "") {
                  CustomerDescriptiveName = value;
                }
                break;
              }
              case 26: {
                string value = _single_accountBudget_codec.Read(input);
                if (accountBudget_ == null || value != "") {
                  AccountBudget = value;
                }
                break;
              }
              case 34: {
                string value = _single_accountBudgetName_codec.Read(input);
                if (accountBudgetName_ == null || value != "") {
                  AccountBudgetName = value;
                }
                break;
              }
              case 42: {
                string value = _single_purchaseOrderNumber_codec.Read(input);
                if (purchaseOrderNumber_ == null || value != "") {
                  PurchaseOrderNumber = value;
                }
                break;
              }
              case 50: {
                long? value = _single_subtotalAmountMicros_codec.Read(input);
                if (subtotalAmountMicros_ == null || value != 0L) {
                  SubtotalAmountMicros = value;
                }
                break;
              }
              case 58: {
                long? value = _single_taxAmountMicros_codec.Read(input);
                if (taxAmountMicros_ == null || value != 0L) {
                  TaxAmountMicros = value;
                }
                break;
              }
              case 66: {
                long? value = _single_totalAmountMicros_codec.Read(input);
                if (totalAmountMicros_ == null || value != 0L) {
                  TotalAmountMicros = value;
                }
                break;
              }
              case 74: {
                if (billableActivityDateRange_ == null) {
                  BillableActivityDateRange = new global::Google.Ads.GoogleAds.V2.Common.DateRange();
                }
                input.ReadMessage(BillableActivityDateRange);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
