// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v2/resources/keyword_plan.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V2.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v2/resources/keyword_plan.proto</summary>
  public static partial class KeywordPlanReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v2/resources/keyword_plan.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static KeywordPlanReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjRnb29nbGUvYWRzL2dvb2dsZWFkcy92Mi9yZXNvdXJjZXMva2V5d29yZF9w",
            "bGFuLnByb3RvEiFnb29nbGUuYWRzLmdvb2dsZWFkcy52Mi5yZXNvdXJjZXMa",
            "Kmdvb2dsZS9hZHMvZ29vZ2xlYWRzL3YyL2NvbW1vbi9kYXRlcy5wcm90bxpC",
            "Z29vZ2xlL2Fkcy9nb29nbGVhZHMvdjIvZW51bXMva2V5d29yZF9wbGFuX2Zv",
            "cmVjYXN0X2ludGVydmFsLnByb3RvGh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2",
            "aW9yLnByb3RvGhlnb29nbGUvYXBpL3Jlc291cmNlLnByb3RvGh5nb29nbGUv",
            "cHJvdG9idWYvd3JhcHBlcnMucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlv",
            "bnMucHJvdG8i4AIKC0tleXdvcmRQbGFuEkMKDXJlc291cmNlX25hbWUYASAB",
            "KAlCLOBBBfpBJgokZ29vZ2xlYWRzLmdvb2dsZWFwaXMuY29tL0tleXdvcmRQ",
            "bGFuEiwKAmlkGAIgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWVC",
            "A+BBAxIqCgRuYW1lGAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1Zh",
            "bHVlElUKD2ZvcmVjYXN0X3BlcmlvZBgEIAEoCzI8Lmdvb2dsZS5hZHMuZ29v",
            "Z2xlYWRzLnYyLnJlc291cmNlcy5LZXl3b3JkUGxhbkZvcmVjYXN0UGVyaW9k",
            "OlvqQVgKJGdvb2dsZWFkcy5nb29nbGVhcGlzLmNvbS9LZXl3b3JkUGxhbhIw",
            "Y3VzdG9tZXJzL3tjdXN0b21lcn0va2V5d29yZFBsYW5zL3trZXl3b3JkX3Bs",
            "YW59It0BChlLZXl3b3JkUGxhbkZvcmVjYXN0UGVyaW9kEnMKDWRhdGVfaW50",
            "ZXJ2YWwYASABKA4yWi5nb29nbGUuYWRzLmdvb2dsZWFkcy52Mi5lbnVtcy5L",
            "ZXl3b3JkUGxhbkZvcmVjYXN0SW50ZXJ2YWxFbnVtLktleXdvcmRQbGFuRm9y",
            "ZWNhc3RJbnRlcnZhbEgAEj8KCmRhdGVfcmFuZ2UYAiABKAsyKS5nb29nbGUu",
            "YWRzLmdvb2dsZWFkcy52Mi5jb21tb24uRGF0ZVJhbmdlSABCCgoIaW50ZXJ2",
            "YWxC/QEKJWNvbS5nb29nbGUuYWRzLmdvb2dsZWFkcy52Mi5yZXNvdXJjZXNC",
            "EEtleXdvcmRQbGFuUHJvdG9QAVpKZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJv",
            "dG8vZ29vZ2xlYXBpcy9hZHMvZ29vZ2xlYWRzL3YyL3Jlc291cmNlcztyZXNv",
            "dXJjZXOiAgNHQUGqAiFHb29nbGUuQWRzLkdvb2dsZUFkcy5WMi5SZXNvdXJj",
            "ZXPKAiFHb29nbGVcQWRzXEdvb2dsZUFkc1xWMlxSZXNvdXJjZXPqAiVHb29n",
            "bGU6OkFkczo6R29vZ2xlQWRzOjpWMjo6UmVzb3VyY2VzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V2.Common.DatesReflection.Descriptor, global::Google.Ads.GoogleAds.V2.Enums.KeywordPlanForecastIntervalReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V2.Resources.KeywordPlan), global::Google.Ads.GoogleAds.V2.Resources.KeywordPlan.Parser, new[]{ "ResourceName", "Id", "Name", "ForecastPeriod" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V2.Resources.KeywordPlanForecastPeriod), global::Google.Ads.GoogleAds.V2.Resources.KeywordPlanForecastPeriod.Parser, new[]{ "DateInterval", "DateRange" }, new[]{ "Interval" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A Keyword Planner plan.
  /// Max number of saved keyword plans: 10000.
  /// It's possible to remove plans if limit is reached.
  /// </summary>
  public sealed partial class KeywordPlan : pb::IMessage<KeywordPlan> {
    private static readonly pb::MessageParser<KeywordPlan> _parser = new pb::MessageParser<KeywordPlan>(() => new KeywordPlan());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeywordPlan> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V2.Resources.KeywordPlanReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordPlan() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordPlan(KeywordPlan other) : this() {
      resourceName_ = other.resourceName_;
      Id = other.Id;
      Name = other.Name;
      forecastPeriod_ = other.forecastPeriod_ != null ? other.forecastPeriod_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordPlan Clone() {
      return new KeywordPlan(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// Immutable. The resource name of the Keyword Planner plan.
    /// KeywordPlan resource names have the form:
    ///
    /// `customers/{customer_id}/keywordPlans/{kp_plan_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_id_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? id_;
    /// <summary>
    /// Output only. The ID of the keyword plan.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string name_;
    /// <summary>
    /// The name of the keyword plan.
    ///
    /// This field is required and should not be empty when creating new keyword
    /// plans.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }


    /// <summary>Field number for the "forecast_period" field.</summary>
    public const int ForecastPeriodFieldNumber = 4;
    private global::Google.Ads.GoogleAds.V2.Resources.KeywordPlanForecastPeriod forecastPeriod_;
    /// <summary>
    /// The date period used for forecasting the plan.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V2.Resources.KeywordPlanForecastPeriod ForecastPeriod {
      get { return forecastPeriod_; }
      set {
        forecastPeriod_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeywordPlan);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeywordPlan other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(ForecastPeriod, other.ForecastPeriod)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (forecastPeriod_ != null) hash ^= ForecastPeriod.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (forecastPeriod_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ForecastPeriod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (forecastPeriod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ForecastPeriod);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeywordPlan other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0L) {
          Id = other.Id;
        }
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.forecastPeriod_ != null) {
        if (forecastPeriod_ == null) {
          ForecastPeriod = new global::Google.Ads.GoogleAds.V2.Resources.KeywordPlanForecastPeriod();
        }
        ForecastPeriod.MergeFrom(other.ForecastPeriod);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 18: {
            long? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0L) {
              Id = value;
            }
            break;
          }
          case 26: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 34: {
            if (forecastPeriod_ == null) {
              ForecastPeriod = new global::Google.Ads.GoogleAds.V2.Resources.KeywordPlanForecastPeriod();
            }
            input.ReadMessage(ForecastPeriod);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The forecasting period associated with the keyword plan.
  /// </summary>
  public sealed partial class KeywordPlanForecastPeriod : pb::IMessage<KeywordPlanForecastPeriod> {
    private static readonly pb::MessageParser<KeywordPlanForecastPeriod> _parser = new pb::MessageParser<KeywordPlanForecastPeriod>(() => new KeywordPlanForecastPeriod());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeywordPlanForecastPeriod> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V2.Resources.KeywordPlanReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordPlanForecastPeriod() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordPlanForecastPeriod(KeywordPlanForecastPeriod other) : this() {
      switch (other.IntervalCase) {
        case IntervalOneofCase.DateInterval:
          DateInterval = other.DateInterval;
          break;
        case IntervalOneofCase.DateRange:
          DateRange = other.DateRange.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordPlanForecastPeriod Clone() {
      return new KeywordPlanForecastPeriod(this);
    }

    /// <summary>Field number for the "date_interval" field.</summary>
    public const int DateIntervalFieldNumber = 1;
    /// <summary>
    /// A future date range relative to the current date used for forecasting.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V2.Enums.KeywordPlanForecastIntervalEnum.Types.KeywordPlanForecastInterval DateInterval {
      get { return intervalCase_ == IntervalOneofCase.DateInterval ? (global::Google.Ads.GoogleAds.V2.Enums.KeywordPlanForecastIntervalEnum.Types.KeywordPlanForecastInterval) interval_ : global::Google.Ads.GoogleAds.V2.Enums.KeywordPlanForecastIntervalEnum.Types.KeywordPlanForecastInterval.Unspecified; }
      set {
        interval_ = value;
        intervalCase_ = IntervalOneofCase.DateInterval;
      }
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 2;
    /// <summary>
    /// The custom date range used for forecasting.
    /// The start and end dates must be in the future. Otherwise, an error will
    /// be returned when the forecasting action is performed.
    /// The start and end dates are inclusive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V2.Common.DateRange DateRange {
      get { return intervalCase_ == IntervalOneofCase.DateRange ? (global::Google.Ads.GoogleAds.V2.Common.DateRange) interval_ : null; }
      set {
        interval_ = value;
        intervalCase_ = value == null ? IntervalOneofCase.None : IntervalOneofCase.DateRange;
      }
    }

    private object interval_;
    /// <summary>Enum of possible cases for the "interval" oneof.</summary>
    public enum IntervalOneofCase {
      None = 0,
      DateInterval = 1,
      DateRange = 2,
    }
    private IntervalOneofCase intervalCase_ = IntervalOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntervalOneofCase IntervalCase {
      get { return intervalCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInterval() {
      intervalCase_ = IntervalOneofCase.None;
      interval_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeywordPlanForecastPeriod);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeywordPlanForecastPeriod other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DateInterval != other.DateInterval) return false;
      if (!object.Equals(DateRange, other.DateRange)) return false;
      if (IntervalCase != other.IntervalCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (intervalCase_ == IntervalOneofCase.DateInterval) hash ^= DateInterval.GetHashCode();
      if (intervalCase_ == IntervalOneofCase.DateRange) hash ^= DateRange.GetHashCode();
      hash ^= (int) intervalCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (intervalCase_ == IntervalOneofCase.DateInterval) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DateInterval);
      }
      if (intervalCase_ == IntervalOneofCase.DateRange) {
        output.WriteRawTag(18);
        output.WriteMessage(DateRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (intervalCase_ == IntervalOneofCase.DateInterval) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DateInterval);
      }
      if (intervalCase_ == IntervalOneofCase.DateRange) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeywordPlanForecastPeriod other) {
      if (other == null) {
        return;
      }
      switch (other.IntervalCase) {
        case IntervalOneofCase.DateInterval:
          DateInterval = other.DateInterval;
          break;
        case IntervalOneofCase.DateRange:
          if (DateRange == null) {
            DateRange = new global::Google.Ads.GoogleAds.V2.Common.DateRange();
          }
          DateRange.MergeFrom(other.DateRange);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            interval_ = input.ReadEnum();
            intervalCase_ = IntervalOneofCase.DateInterval;
            break;
          }
          case 18: {
            global::Google.Ads.GoogleAds.V2.Common.DateRange subBuilder = new global::Google.Ads.GoogleAds.V2.Common.DateRange();
            if (intervalCase_ == IntervalOneofCase.DateRange) {
              subBuilder.MergeFrom(DateRange);
            }
            input.ReadMessage(subBuilder);
            DateRange = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
