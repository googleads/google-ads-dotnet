// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v2/resources/mutate_job.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V2.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v2/resources/mutate_job.proto</summary>
  public static partial class MutateJobReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v2/resources/mutate_job.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MutateJobReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJnb29nbGUvYWRzL2dvb2dsZWFkcy92Mi9yZXNvdXJjZXMvbXV0YXRlX2pv",
            "Yi5wcm90bxIhZ29vZ2xlLmFkcy5nb29nbGVhZHMudjIucmVzb3VyY2VzGjVn",
            "b29nbGUvYWRzL2dvb2dsZWFkcy92Mi9lbnVtcy9tdXRhdGVfam9iX3N0YXR1",
            "cy5wcm90bxofZ29vZ2xlL2FwaS9maWVsZF9iZWhhdmlvci5wcm90bxoZZ29v",
            "Z2xlL2FwaS9yZXNvdXJjZS5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBw",
            "ZXJzLnByb3RvGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3RvIuYGCglN",
            "dXRhdGVKb2ISQQoNcmVzb3VyY2VfbmFtZRgBIAEoCUIq4EEF+kEkCiJnb29n",
            "bGVhZHMuZ29vZ2xlYXBpcy5jb20vTXV0YXRlSm9iEiwKAmlkGAIgASgLMhsu",
            "Z29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWVCA+BBAxJCChduZXh0X2FkZF9z",
            "ZXF1ZW5jZV90b2tlbhgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZUID4EEDElUKCG1ldGFkYXRhGAQgASgLMj4uZ29vZ2xlLmFkcy5nb29n",
            "bGVhZHMudjIucmVzb3VyY2VzLk11dGF0ZUpvYi5NdXRhdGVKb2JNZXRhZGF0",
            "YUID4EEDElcKBnN0YXR1cxgFIAEoDjJCLmdvb2dsZS5hZHMuZ29vZ2xlYWRz",
            "LnYyLmVudW1zLk11dGF0ZUpvYlN0YXR1c0VudW0uTXV0YXRlSm9iU3RhdHVz",
            "QgPgQQMSQQoWbG9uZ19ydW5uaW5nX29wZXJhdGlvbhgGIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZUID4EEDGtkCChFNdXRhdGVKb2JNZXRh",
            "ZGF0YRI9ChJjcmVhdGlvbl9kYXRlX3RpbWUYASABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWVCA+BBAxI/ChRjb21wbGV0aW9uX2RhdGVfdGlt",
            "ZRgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZUID4EEDEkUK",
            "GmVzdGltYXRlZF9jb21wbGV0aW9uX3JhdGlvGAMgASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLkRvdWJsZVZhbHVlQgPgQQMSOQoPb3BlcmF0aW9uX2NvdW50GAQg",
            "ASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWVCA+BBAxJCChhleGVj",
            "dXRlZF9vcGVyYXRpb25fY291bnQYBSABKAsyGy5nb29nbGUucHJvdG9idWYu",
            "SW50NjRWYWx1ZUID4EEDOlXqQVIKImdvb2dsZWFkcy5nb29nbGVhcGlzLmNv",
            "bS9NdXRhdGVKb2ISLGN1c3RvbWVycy97Y3VzdG9tZXJ9L211dGF0ZUpvYnMv",
            "e211dGF0ZV9qb2J9QvsBCiVjb20uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjIu",
            "cmVzb3VyY2VzQg5NdXRhdGVKb2JQcm90b1ABWkpnb29nbGUuZ29sYW5nLm9y",
            "Zy9nZW5wcm90by9nb29nbGVhcGlzL2Fkcy9nb29nbGVhZHMvdjIvcmVzb3Vy",
            "Y2VzO3Jlc291cmNlc6ICA0dBQaoCIUdvb2dsZS5BZHMuR29vZ2xlQWRzLlYy",
            "LlJlc291cmNlc8oCIUdvb2dsZVxBZHNcR29vZ2xlQWRzXFYyXFJlc291cmNl",
            "c+oCJUdvb2dsZTo6QWRzOjpHb29nbGVBZHM6OlYyOjpSZXNvdXJjZXNiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V2.Enums.MutateJobStatusReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V2.Resources.MutateJob), global::Google.Ads.GoogleAds.V2.Resources.MutateJob.Parser, new[]{ "ResourceName", "Id", "NextAddSequenceToken", "Metadata", "Status", "LongRunningOperation" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V2.Resources.MutateJob.Types.MutateJobMetadata), global::Google.Ads.GoogleAds.V2.Resources.MutateJob.Types.MutateJobMetadata.Parser, new[]{ "CreationDateTime", "CompletionDateTime", "EstimatedCompletionRatio", "OperationCount", "ExecutedOperationCount" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A list of mutates being processed asynchronously. The mutates are uploaded
  /// by the user. The mutates themselves aren't readable and the results of the
  /// job can only be read using MutateJobService.ListMutateJobResults.
  /// </summary>
  public sealed partial class MutateJob : pb::IMessage<MutateJob> {
    private static readonly pb::MessageParser<MutateJob> _parser = new pb::MessageParser<MutateJob>(() => new MutateJob());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MutateJob> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V2.Resources.MutateJobReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MutateJob() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MutateJob(MutateJob other) : this() {
      resourceName_ = other.resourceName_;
      Id = other.Id;
      NextAddSequenceToken = other.NextAddSequenceToken;
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      status_ = other.status_;
      LongRunningOperation = other.LongRunningOperation;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MutateJob Clone() {
      return new MutateJob(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// Immutable. The resource name of the mutate job.
    /// Mutate job resource names have the form:
    ///
    /// `customers/{customer_id}/mutateJobs/{mutate_job_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_id_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? id_;
    /// <summary>
    /// Output only. ID of this mutate job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "next_add_sequence_token" field.</summary>
    public const int NextAddSequenceTokenFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_nextAddSequenceToken_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string nextAddSequenceToken_;
    /// <summary>
    /// Output only. The next sequence token to use when adding operations. Only set when the
    /// mutate job status is PENDING.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextAddSequenceToken {
      get { return nextAddSequenceToken_; }
      set {
        nextAddSequenceToken_ = value;
      }
    }


    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 4;
    private global::Google.Ads.GoogleAds.V2.Resources.MutateJob.Types.MutateJobMetadata metadata_;
    /// <summary>
    /// Output only. Contains additional information about this mutate job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V2.Resources.MutateJob.Types.MutateJobMetadata Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private global::Google.Ads.GoogleAds.V2.Enums.MutateJobStatusEnum.Types.MutateJobStatus status_ = global::Google.Ads.GoogleAds.V2.Enums.MutateJobStatusEnum.Types.MutateJobStatus.Unspecified;
    /// <summary>
    /// Output only. Status of this mutate job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V2.Enums.MutateJobStatusEnum.Types.MutateJobStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "long_running_operation" field.</summary>
    public const int LongRunningOperationFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_longRunningOperation_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string longRunningOperation_;
    /// <summary>
    /// Output only. The resource name of the long-running operation that can be used to poll
    /// for completion. Only set when the mutate job status is RUNNING or DONE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LongRunningOperation {
      get { return longRunningOperation_; }
      set {
        longRunningOperation_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MutateJob);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MutateJob other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (Id != other.Id) return false;
      if (NextAddSequenceToken != other.NextAddSequenceToken) return false;
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (Status != other.Status) return false;
      if (LongRunningOperation != other.LongRunningOperation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (nextAddSequenceToken_ != null) hash ^= NextAddSequenceToken.GetHashCode();
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (Status != global::Google.Ads.GoogleAds.V2.Enums.MutateJobStatusEnum.Types.MutateJobStatus.Unspecified) hash ^= Status.GetHashCode();
      if (longRunningOperation_ != null) hash ^= LongRunningOperation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (nextAddSequenceToken_ != null) {
        _single_nextAddSequenceToken_codec.WriteTagAndValue(output, NextAddSequenceToken);
      }
      if (metadata_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Metadata);
      }
      if (Status != global::Google.Ads.GoogleAds.V2.Enums.MutateJobStatusEnum.Types.MutateJobStatus.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Status);
      }
      if (longRunningOperation_ != null) {
        _single_longRunningOperation_codec.WriteTagAndValue(output, LongRunningOperation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (nextAddSequenceToken_ != null) {
        size += _single_nextAddSequenceToken_codec.CalculateSizeWithTag(NextAddSequenceToken);
      }
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (Status != global::Google.Ads.GoogleAds.V2.Enums.MutateJobStatusEnum.Types.MutateJobStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (longRunningOperation_ != null) {
        size += _single_longRunningOperation_codec.CalculateSizeWithTag(LongRunningOperation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MutateJob other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0L) {
          Id = other.Id;
        }
      }
      if (other.nextAddSequenceToken_ != null) {
        if (nextAddSequenceToken_ == null || other.NextAddSequenceToken != "") {
          NextAddSequenceToken = other.NextAddSequenceToken;
        }
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::Google.Ads.GoogleAds.V2.Resources.MutateJob.Types.MutateJobMetadata();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.Status != global::Google.Ads.GoogleAds.V2.Enums.MutateJobStatusEnum.Types.MutateJobStatus.Unspecified) {
        Status = other.Status;
      }
      if (other.longRunningOperation_ != null) {
        if (longRunningOperation_ == null || other.LongRunningOperation != "") {
          LongRunningOperation = other.LongRunningOperation;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 18: {
            long? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0L) {
              Id = value;
            }
            break;
          }
          case 26: {
            string value = _single_nextAddSequenceToken_codec.Read(input);
            if (nextAddSequenceToken_ == null || value != "") {
              NextAddSequenceToken = value;
            }
            break;
          }
          case 34: {
            if (metadata_ == null) {
              Metadata = new global::Google.Ads.GoogleAds.V2.Resources.MutateJob.Types.MutateJobMetadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 40: {
            Status = (global::Google.Ads.GoogleAds.V2.Enums.MutateJobStatusEnum.Types.MutateJobStatus) input.ReadEnum();
            break;
          }
          case 50: {
            string value = _single_longRunningOperation_codec.Read(input);
            if (longRunningOperation_ == null || value != "") {
              LongRunningOperation = value;
            }
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the MutateJob message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Additional information about the mutate job. This message is also used as
      /// metadata returned in mutate job Long Running Operations.
      /// </summary>
      public sealed partial class MutateJobMetadata : pb::IMessage<MutateJobMetadata> {
        private static readonly pb::MessageParser<MutateJobMetadata> _parser = new pb::MessageParser<MutateJobMetadata>(() => new MutateJobMetadata());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MutateJobMetadata> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.GoogleAds.V2.Resources.MutateJob.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MutateJobMetadata() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MutateJobMetadata(MutateJobMetadata other) : this() {
          CreationDateTime = other.CreationDateTime;
          CompletionDateTime = other.CompletionDateTime;
          EstimatedCompletionRatio = other.EstimatedCompletionRatio;
          OperationCount = other.OperationCount;
          ExecutedOperationCount = other.ExecutedOperationCount;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MutateJobMetadata Clone() {
          return new MutateJobMetadata(this);
        }

        /// <summary>Field number for the "creation_date_time" field.</summary>
        public const int CreationDateTimeFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _single_creationDateTime_codec = pb::FieldCodec.ForClassWrapper<string>(10);
        private string creationDateTime_;
        /// <summary>
        /// Output only. The time when this mutate job was created.
        /// Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:00"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CreationDateTime {
          get { return creationDateTime_; }
          set {
            creationDateTime_ = value;
          }
        }


        /// <summary>Field number for the "completion_date_time" field.</summary>
        public const int CompletionDateTimeFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _single_completionDateTime_codec = pb::FieldCodec.ForClassWrapper<string>(18);
        private string completionDateTime_;
        /// <summary>
        /// Output only. The time when this mutate job was completed.
        /// Formatted as yyyy-MM-dd HH:mm:ss. Example: "2018-03-05 09:16:00"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CompletionDateTime {
          get { return completionDateTime_; }
          set {
            completionDateTime_ = value;
          }
        }


        /// <summary>Field number for the "estimated_completion_ratio" field.</summary>
        public const int EstimatedCompletionRatioFieldNumber = 3;
        private static readonly pb::FieldCodec<double?> _single_estimatedCompletionRatio_codec = pb::FieldCodec.ForStructWrapper<double>(26);
        private double? estimatedCompletionRatio_;
        /// <summary>
        /// Output only. The fraction (between 0.0 and 1.0) of mutates that have been processed.
        /// This is empty if the job hasn't started running yet.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double? EstimatedCompletionRatio {
          get { return estimatedCompletionRatio_; }
          set {
            estimatedCompletionRatio_ = value;
          }
        }


        /// <summary>Field number for the "operation_count" field.</summary>
        public const int OperationCountFieldNumber = 4;
        private static readonly pb::FieldCodec<long?> _single_operationCount_codec = pb::FieldCodec.ForStructWrapper<long>(34);
        private long? operationCount_;
        /// <summary>
        /// Output only. The number of mutate operations in the mutate job.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long? OperationCount {
          get { return operationCount_; }
          set {
            operationCount_ = value;
          }
        }


        /// <summary>Field number for the "executed_operation_count" field.</summary>
        public const int ExecutedOperationCountFieldNumber = 5;
        private static readonly pb::FieldCodec<long?> _single_executedOperationCount_codec = pb::FieldCodec.ForStructWrapper<long>(42);
        private long? executedOperationCount_;
        /// <summary>
        /// Output only. The number of mutate operations executed by the mutate job.
        /// Present only if the job has started running.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long? ExecutedOperationCount {
          get { return executedOperationCount_; }
          set {
            executedOperationCount_ = value;
          }
        }


        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MutateJobMetadata);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MutateJobMetadata other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CreationDateTime != other.CreationDateTime) return false;
          if (CompletionDateTime != other.CompletionDateTime) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(EstimatedCompletionRatio, other.EstimatedCompletionRatio)) return false;
          if (OperationCount != other.OperationCount) return false;
          if (ExecutedOperationCount != other.ExecutedOperationCount) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (creationDateTime_ != null) hash ^= CreationDateTime.GetHashCode();
          if (completionDateTime_ != null) hash ^= CompletionDateTime.GetHashCode();
          if (estimatedCompletionRatio_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(EstimatedCompletionRatio);
          if (operationCount_ != null) hash ^= OperationCount.GetHashCode();
          if (executedOperationCount_ != null) hash ^= ExecutedOperationCount.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (creationDateTime_ != null) {
            _single_creationDateTime_codec.WriteTagAndValue(output, CreationDateTime);
          }
          if (completionDateTime_ != null) {
            _single_completionDateTime_codec.WriteTagAndValue(output, CompletionDateTime);
          }
          if (estimatedCompletionRatio_ != null) {
            _single_estimatedCompletionRatio_codec.WriteTagAndValue(output, EstimatedCompletionRatio);
          }
          if (operationCount_ != null) {
            _single_operationCount_codec.WriteTagAndValue(output, OperationCount);
          }
          if (executedOperationCount_ != null) {
            _single_executedOperationCount_codec.WriteTagAndValue(output, ExecutedOperationCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (creationDateTime_ != null) {
            size += _single_creationDateTime_codec.CalculateSizeWithTag(CreationDateTime);
          }
          if (completionDateTime_ != null) {
            size += _single_completionDateTime_codec.CalculateSizeWithTag(CompletionDateTime);
          }
          if (estimatedCompletionRatio_ != null) {
            size += _single_estimatedCompletionRatio_codec.CalculateSizeWithTag(EstimatedCompletionRatio);
          }
          if (operationCount_ != null) {
            size += _single_operationCount_codec.CalculateSizeWithTag(OperationCount);
          }
          if (executedOperationCount_ != null) {
            size += _single_executedOperationCount_codec.CalculateSizeWithTag(ExecutedOperationCount);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MutateJobMetadata other) {
          if (other == null) {
            return;
          }
          if (other.creationDateTime_ != null) {
            if (creationDateTime_ == null || other.CreationDateTime != "") {
              CreationDateTime = other.CreationDateTime;
            }
          }
          if (other.completionDateTime_ != null) {
            if (completionDateTime_ == null || other.CompletionDateTime != "") {
              CompletionDateTime = other.CompletionDateTime;
            }
          }
          if (other.estimatedCompletionRatio_ != null) {
            if (estimatedCompletionRatio_ == null || other.EstimatedCompletionRatio != 0D) {
              EstimatedCompletionRatio = other.EstimatedCompletionRatio;
            }
          }
          if (other.operationCount_ != null) {
            if (operationCount_ == null || other.OperationCount != 0L) {
              OperationCount = other.OperationCount;
            }
          }
          if (other.executedOperationCount_ != null) {
            if (executedOperationCount_ == null || other.ExecutedOperationCount != 0L) {
              ExecutedOperationCount = other.ExecutedOperationCount;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                string value = _single_creationDateTime_codec.Read(input);
                if (creationDateTime_ == null || value != "") {
                  CreationDateTime = value;
                }
                break;
              }
              case 18: {
                string value = _single_completionDateTime_codec.Read(input);
                if (completionDateTime_ == null || value != "") {
                  CompletionDateTime = value;
                }
                break;
              }
              case 26: {
                double? value = _single_estimatedCompletionRatio_codec.Read(input);
                if (estimatedCompletionRatio_ == null || value != 0D) {
                  EstimatedCompletionRatio = value;
                }
                break;
              }
              case 34: {
                long? value = _single_operationCount_codec.Read(input);
                if (operationCount_ == null || value != 0L) {
                  OperationCount = value;
                }
                break;
              }
              case 42: {
                long? value = _single_executedOperationCount_codec.Read(input);
                if (executedOperationCount_ == null || value != 0L) {
                  ExecutedOperationCount = value;
                }
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
