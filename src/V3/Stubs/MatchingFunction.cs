// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v3/common/matching_function.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V3.Common {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v3/common/matching_function.proto</summary>
  public static partial class MatchingFunctionReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v3/common/matching_function.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MatchingFunctionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjZnb29nbGUvYWRzL2dvb2dsZWFkcy92My9jb21tb24vbWF0Y2hpbmdfZnVu",
            "Y3Rpb24ucHJvdG8SHmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYzLmNvbW1vbhpC",
            "Z29vZ2xlL2Fkcy9nb29nbGVhZHMvdjMvZW51bXMvbWF0Y2hpbmdfZnVuY3Rp",
            "b25fY29udGV4dF90eXBlLnByb3RvGj5nb29nbGUvYWRzL2dvb2dsZWFkcy92",
            "My9lbnVtcy9tYXRjaGluZ19mdW5jdGlvbl9vcGVyYXRvci5wcm90bxoeZ29v",
            "Z2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGhxnb29nbGUvYXBpL2Fubm90",
            "YXRpb25zLnByb3RvIrICChBNYXRjaGluZ0Z1bmN0aW9uEjUKD2Z1bmN0aW9u",
            "X3N0cmluZxgBIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRJm",
            "CghvcGVyYXRvchgEIAEoDjJULmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYzLmVu",
            "dW1zLk1hdGNoaW5nRnVuY3Rpb25PcGVyYXRvckVudW0uTWF0Y2hpbmdGdW5j",
            "dGlvbk9wZXJhdG9yEj4KDWxlZnRfb3BlcmFuZHMYAiADKAsyJy5nb29nbGUu",
            "YWRzLmdvb2dsZWFkcy52My5jb21tb24uT3BlcmFuZBI/Cg5yaWdodF9vcGVy",
            "YW5kcxgDIAMoCzInLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYzLmNvbW1vbi5P",
            "cGVyYW5kIv4HCgdPcGVyYW5kElMKEGNvbnN0YW50X29wZXJhbmQYASABKAsy",
            "Ny5nb29nbGUuYWRzLmdvb2dsZWFkcy52My5jb21tb24uT3BlcmFuZC5Db25z",
            "dGFudE9wZXJhbmRIABJeChZmZWVkX2F0dHJpYnV0ZV9vcGVyYW5kGAIgASgL",
            "MjwuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjMuY29tbW9uLk9wZXJhbmQuRmVl",
            "ZEF0dHJpYnV0ZU9wZXJhbmRIABJTChBmdW5jdGlvbl9vcGVyYW5kGAMgASgL",
            "MjcuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjMuY29tbW9uLk9wZXJhbmQuRnVu",
            "Y3Rpb25PcGVyYW5kSAASYAoXcmVxdWVzdF9jb250ZXh0X29wZXJhbmQYBCAB",
            "KAsyPS5nb29nbGUuYWRzLmdvb2dsZWFkcy52My5jb21tb24uT3BlcmFuZC5S",
            "ZXF1ZXN0Q29udGV4dE9wZXJhbmRIABr/AQoPQ29uc3RhbnRPcGVyYW5kEjQK",
            "DHN0cmluZ192YWx1ZRgBIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZUgAEjEKCmxvbmdfdmFsdWUYAiABKAsyGy5nb29nbGUucHJvdG9idWYu",
            "SW50NjRWYWx1ZUgAEjMKDWJvb2xlYW5fdmFsdWUYAyABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuQm9vbFZhbHVlSAASNAoMZG91YmxlX3ZhbHVlGAQgASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLkRvdWJsZVZhbHVlSABCGAoWY29uc3RhbnRfb3Bl",
            "cmFuZF92YWx1ZRp8ChRGZWVkQXR0cmlidXRlT3BlcmFuZBIsCgdmZWVkX2lk",
            "GAEgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSNgoRZmVlZF9h",
            "dHRyaWJ1dGVfaWQYAiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1",
            "ZRpeCg9GdW5jdGlvbk9wZXJhbmQSSwoRbWF0Y2hpbmdfZnVuY3Rpb24YASAB",
            "KAsyMC5nb29nbGUuYWRzLmdvb2dsZWFkcy52My5jb21tb24uTWF0Y2hpbmdG",
            "dW5jdGlvbhqJAQoVUmVxdWVzdENvbnRleHRPcGVyYW5kEnAKDGNvbnRleHRf",
            "dHlwZRgBIAEoDjJaLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYzLmVudW1zLk1h",
            "dGNoaW5nRnVuY3Rpb25Db250ZXh0VHlwZUVudW0uTWF0Y2hpbmdGdW5jdGlv",
            "bkNvbnRleHRUeXBlQhsKGWZ1bmN0aW9uX2FyZ3VtZW50X29wZXJhbmRC8AEK",
            "ImNvbS5nb29nbGUuYWRzLmdvb2dsZWFkcy52My5jb21tb25CFU1hdGNoaW5n",
            "RnVuY3Rpb25Qcm90b1ABWkRnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9n",
            "b29nbGVhcGlzL2Fkcy9nb29nbGVhZHMvdjMvY29tbW9uO2NvbW1vbqICA0dB",
            "QaoCHkdvb2dsZS5BZHMuR29vZ2xlQWRzLlYzLkNvbW1vbsoCHkdvb2dsZVxB",
            "ZHNcR29vZ2xlQWRzXFYzXENvbW1vbuoCIkdvb2dsZTo6QWRzOjpHb29nbGVB",
            "ZHM6OlYzOjpDb21tb25iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V3.Enums.MatchingFunctionContextTypeReflection.Descriptor, global::Google.Ads.GoogleAds.V3.Enums.MatchingFunctionOperatorReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Common.MatchingFunction), global::Google.Ads.GoogleAds.V3.Common.MatchingFunction.Parser, new[]{ "FunctionString", "Operator", "LeftOperands", "RightOperands" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Common.Operand), global::Google.Ads.GoogleAds.V3.Common.Operand.Parser, new[]{ "ConstantOperand", "FeedAttributeOperand", "FunctionOperand", "RequestContextOperand" }, new[]{ "FunctionArgumentOperand" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Common.Operand.Types.ConstantOperand), global::Google.Ads.GoogleAds.V3.Common.Operand.Types.ConstantOperand.Parser, new[]{ "StringValue", "LongValue", "BooleanValue", "DoubleValue" }, new[]{ "ConstantOperandValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Common.Operand.Types.FeedAttributeOperand), global::Google.Ads.GoogleAds.V3.Common.Operand.Types.FeedAttributeOperand.Parser, new[]{ "FeedId", "FeedAttributeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Common.Operand.Types.FunctionOperand), global::Google.Ads.GoogleAds.V3.Common.Operand.Types.FunctionOperand.Parser, new[]{ "MatchingFunction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Common.Operand.Types.RequestContextOperand), global::Google.Ads.GoogleAds.V3.Common.Operand.Types.RequestContextOperand.Parser, new[]{ "ContextType" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Matching function associated with a
  /// CustomerFeed, CampaignFeed, or AdGroupFeed. The matching function is used
  /// to filter the set of feed items selected.
  /// </summary>
  public sealed partial class MatchingFunction : pb::IMessage<MatchingFunction> {
    private static readonly pb::MessageParser<MatchingFunction> _parser = new pb::MessageParser<MatchingFunction>(() => new MatchingFunction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchingFunction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Common.MatchingFunctionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchingFunction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchingFunction(MatchingFunction other) : this() {
      FunctionString = other.FunctionString;
      operator_ = other.operator_;
      leftOperands_ = other.leftOperands_.Clone();
      rightOperands_ = other.rightOperands_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchingFunction Clone() {
      return new MatchingFunction(this);
    }

    /// <summary>Field number for the "function_string" field.</summary>
    public const int FunctionStringFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_functionString_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string functionString_;
    /// <summary>
    /// String representation of the Function.
    ///
    /// Examples:
    ///
    /// 1. IDENTITY(true) or IDENTITY(false). All or no feed items served.
    /// 2. EQUALS(CONTEXT.DEVICE,"Mobile")
    /// 3. IN(FEED_ITEM_ID,{1000001,1000002,1000003})
    /// 4. CONTAINS_ANY(FeedAttribute[12345678,0],{"Mars cruise","Venus cruise"})
    /// 5. AND(IN(FEED_ITEM_ID,{10001,10002}),EQUALS(CONTEXT.DEVICE,"Mobile"))
    ///
    /// For more details, visit
    /// https://developers.google.com/adwords/api/docs/guides/feed-matching-functions
    ///
    /// Note that because multiple strings may represent the same underlying
    /// function (whitespace and single versus double quotation marks, for
    /// example), the value returned may not be identical to the string sent in a
    /// mutate request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionString {
      get { return functionString_; }
      set {
        functionString_ = value;
      }
    }


    /// <summary>Field number for the "operator" field.</summary>
    public const int OperatorFieldNumber = 4;
    private global::Google.Ads.GoogleAds.V3.Enums.MatchingFunctionOperatorEnum.Types.MatchingFunctionOperator operator_ = global::Google.Ads.GoogleAds.V3.Enums.MatchingFunctionOperatorEnum.Types.MatchingFunctionOperator.Unspecified;
    /// <summary>
    /// Operator for a function.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Enums.MatchingFunctionOperatorEnum.Types.MatchingFunctionOperator Operator {
      get { return operator_; }
      set {
        operator_ = value;
      }
    }

    /// <summary>Field number for the "left_operands" field.</summary>
    public const int LeftOperandsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V3.Common.Operand> _repeated_leftOperands_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Ads.GoogleAds.V3.Common.Operand.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Common.Operand> leftOperands_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Common.Operand>();
    /// <summary>
    /// The operands on the left hand side of the equation. This is also the
    /// operand to be used for single operand expressions such as NOT.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Common.Operand> LeftOperands {
      get { return leftOperands_; }
    }

    /// <summary>Field number for the "right_operands" field.</summary>
    public const int RightOperandsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V3.Common.Operand> _repeated_rightOperands_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Ads.GoogleAds.V3.Common.Operand.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Common.Operand> rightOperands_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Common.Operand>();
    /// <summary>
    /// The operands on the right hand side of the equation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Common.Operand> RightOperands {
      get { return rightOperands_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchingFunction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchingFunction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionString != other.FunctionString) return false;
      if (Operator != other.Operator) return false;
      if(!leftOperands_.Equals(other.leftOperands_)) return false;
      if(!rightOperands_.Equals(other.rightOperands_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (functionString_ != null) hash ^= FunctionString.GetHashCode();
      if (Operator != global::Google.Ads.GoogleAds.V3.Enums.MatchingFunctionOperatorEnum.Types.MatchingFunctionOperator.Unspecified) hash ^= Operator.GetHashCode();
      hash ^= leftOperands_.GetHashCode();
      hash ^= rightOperands_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (functionString_ != null) {
        _single_functionString_codec.WriteTagAndValue(output, FunctionString);
      }
      leftOperands_.WriteTo(output, _repeated_leftOperands_codec);
      rightOperands_.WriteTo(output, _repeated_rightOperands_codec);
      if (Operator != global::Google.Ads.GoogleAds.V3.Enums.MatchingFunctionOperatorEnum.Types.MatchingFunctionOperator.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Operator);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (functionString_ != null) {
        size += _single_functionString_codec.CalculateSizeWithTag(FunctionString);
      }
      if (Operator != global::Google.Ads.GoogleAds.V3.Enums.MatchingFunctionOperatorEnum.Types.MatchingFunctionOperator.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Operator);
      }
      size += leftOperands_.CalculateSize(_repeated_leftOperands_codec);
      size += rightOperands_.CalculateSize(_repeated_rightOperands_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchingFunction other) {
      if (other == null) {
        return;
      }
      if (other.functionString_ != null) {
        if (functionString_ == null || other.FunctionString != "") {
          FunctionString = other.FunctionString;
        }
      }
      if (other.Operator != global::Google.Ads.GoogleAds.V3.Enums.MatchingFunctionOperatorEnum.Types.MatchingFunctionOperator.Unspecified) {
        Operator = other.Operator;
      }
      leftOperands_.Add(other.leftOperands_);
      rightOperands_.Add(other.rightOperands_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_functionString_codec.Read(input);
            if (functionString_ == null || value != "") {
              FunctionString = value;
            }
            break;
          }
          case 18: {
            leftOperands_.AddEntriesFrom(input, _repeated_leftOperands_codec);
            break;
          }
          case 26: {
            rightOperands_.AddEntriesFrom(input, _repeated_rightOperands_codec);
            break;
          }
          case 32: {
            Operator = (global::Google.Ads.GoogleAds.V3.Enums.MatchingFunctionOperatorEnum.Types.MatchingFunctionOperator) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An operand in a matching function.
  /// </summary>
  public sealed partial class Operand : pb::IMessage<Operand> {
    private static readonly pb::MessageParser<Operand> _parser = new pb::MessageParser<Operand>(() => new Operand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Operand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Common.MatchingFunctionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Operand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Operand(Operand other) : this() {
      switch (other.FunctionArgumentOperandCase) {
        case FunctionArgumentOperandOneofCase.ConstantOperand:
          ConstantOperand = other.ConstantOperand.Clone();
          break;
        case FunctionArgumentOperandOneofCase.FeedAttributeOperand:
          FeedAttributeOperand = other.FeedAttributeOperand.Clone();
          break;
        case FunctionArgumentOperandOneofCase.FunctionOperand:
          FunctionOperand = other.FunctionOperand.Clone();
          break;
        case FunctionArgumentOperandOneofCase.RequestContextOperand:
          RequestContextOperand = other.RequestContextOperand.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Operand Clone() {
      return new Operand(this);
    }

    /// <summary>Field number for the "constant_operand" field.</summary>
    public const int ConstantOperandFieldNumber = 1;
    /// <summary>
    /// A constant operand in a matching function.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Common.Operand.Types.ConstantOperand ConstantOperand {
      get { return functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.ConstantOperand ? (global::Google.Ads.GoogleAds.V3.Common.Operand.Types.ConstantOperand) functionArgumentOperand_ : null; }
      set {
        functionArgumentOperand_ = value;
        functionArgumentOperandCase_ = value == null ? FunctionArgumentOperandOneofCase.None : FunctionArgumentOperandOneofCase.ConstantOperand;
      }
    }

    /// <summary>Field number for the "feed_attribute_operand" field.</summary>
    public const int FeedAttributeOperandFieldNumber = 2;
    /// <summary>
    /// This operand specifies a feed attribute in feed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Common.Operand.Types.FeedAttributeOperand FeedAttributeOperand {
      get { return functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.FeedAttributeOperand ? (global::Google.Ads.GoogleAds.V3.Common.Operand.Types.FeedAttributeOperand) functionArgumentOperand_ : null; }
      set {
        functionArgumentOperand_ = value;
        functionArgumentOperandCase_ = value == null ? FunctionArgumentOperandOneofCase.None : FunctionArgumentOperandOneofCase.FeedAttributeOperand;
      }
    }

    /// <summary>Field number for the "function_operand" field.</summary>
    public const int FunctionOperandFieldNumber = 3;
    /// <summary>
    /// A function operand in a matching function.
    /// Used to represent nested functions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Common.Operand.Types.FunctionOperand FunctionOperand {
      get { return functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.FunctionOperand ? (global::Google.Ads.GoogleAds.V3.Common.Operand.Types.FunctionOperand) functionArgumentOperand_ : null; }
      set {
        functionArgumentOperand_ = value;
        functionArgumentOperandCase_ = value == null ? FunctionArgumentOperandOneofCase.None : FunctionArgumentOperandOneofCase.FunctionOperand;
      }
    }

    /// <summary>Field number for the "request_context_operand" field.</summary>
    public const int RequestContextOperandFieldNumber = 4;
    /// <summary>
    /// An operand in a function referring to a value in the request context.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Common.Operand.Types.RequestContextOperand RequestContextOperand {
      get { return functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.RequestContextOperand ? (global::Google.Ads.GoogleAds.V3.Common.Operand.Types.RequestContextOperand) functionArgumentOperand_ : null; }
      set {
        functionArgumentOperand_ = value;
        functionArgumentOperandCase_ = value == null ? FunctionArgumentOperandOneofCase.None : FunctionArgumentOperandOneofCase.RequestContextOperand;
      }
    }

    private object functionArgumentOperand_;
    /// <summary>Enum of possible cases for the "function_argument_operand" oneof.</summary>
    public enum FunctionArgumentOperandOneofCase {
      None = 0,
      ConstantOperand = 1,
      FeedAttributeOperand = 2,
      FunctionOperand = 3,
      RequestContextOperand = 4,
    }
    private FunctionArgumentOperandOneofCase functionArgumentOperandCase_ = FunctionArgumentOperandOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionArgumentOperandOneofCase FunctionArgumentOperandCase {
      get { return functionArgumentOperandCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFunctionArgumentOperand() {
      functionArgumentOperandCase_ = FunctionArgumentOperandOneofCase.None;
      functionArgumentOperand_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Operand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Operand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConstantOperand, other.ConstantOperand)) return false;
      if (!object.Equals(FeedAttributeOperand, other.FeedAttributeOperand)) return false;
      if (!object.Equals(FunctionOperand, other.FunctionOperand)) return false;
      if (!object.Equals(RequestContextOperand, other.RequestContextOperand)) return false;
      if (FunctionArgumentOperandCase != other.FunctionArgumentOperandCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.ConstantOperand) hash ^= ConstantOperand.GetHashCode();
      if (functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.FeedAttributeOperand) hash ^= FeedAttributeOperand.GetHashCode();
      if (functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.FunctionOperand) hash ^= FunctionOperand.GetHashCode();
      if (functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.RequestContextOperand) hash ^= RequestContextOperand.GetHashCode();
      hash ^= (int) functionArgumentOperandCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.ConstantOperand) {
        output.WriteRawTag(10);
        output.WriteMessage(ConstantOperand);
      }
      if (functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.FeedAttributeOperand) {
        output.WriteRawTag(18);
        output.WriteMessage(FeedAttributeOperand);
      }
      if (functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.FunctionOperand) {
        output.WriteRawTag(26);
        output.WriteMessage(FunctionOperand);
      }
      if (functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.RequestContextOperand) {
        output.WriteRawTag(34);
        output.WriteMessage(RequestContextOperand);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.ConstantOperand) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConstantOperand);
      }
      if (functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.FeedAttributeOperand) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FeedAttributeOperand);
      }
      if (functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.FunctionOperand) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FunctionOperand);
      }
      if (functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.RequestContextOperand) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestContextOperand);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Operand other) {
      if (other == null) {
        return;
      }
      switch (other.FunctionArgumentOperandCase) {
        case FunctionArgumentOperandOneofCase.ConstantOperand:
          if (ConstantOperand == null) {
            ConstantOperand = new global::Google.Ads.GoogleAds.V3.Common.Operand.Types.ConstantOperand();
          }
          ConstantOperand.MergeFrom(other.ConstantOperand);
          break;
        case FunctionArgumentOperandOneofCase.FeedAttributeOperand:
          if (FeedAttributeOperand == null) {
            FeedAttributeOperand = new global::Google.Ads.GoogleAds.V3.Common.Operand.Types.FeedAttributeOperand();
          }
          FeedAttributeOperand.MergeFrom(other.FeedAttributeOperand);
          break;
        case FunctionArgumentOperandOneofCase.FunctionOperand:
          if (FunctionOperand == null) {
            FunctionOperand = new global::Google.Ads.GoogleAds.V3.Common.Operand.Types.FunctionOperand();
          }
          FunctionOperand.MergeFrom(other.FunctionOperand);
          break;
        case FunctionArgumentOperandOneofCase.RequestContextOperand:
          if (RequestContextOperand == null) {
            RequestContextOperand = new global::Google.Ads.GoogleAds.V3.Common.Operand.Types.RequestContextOperand();
          }
          RequestContextOperand.MergeFrom(other.RequestContextOperand);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Ads.GoogleAds.V3.Common.Operand.Types.ConstantOperand subBuilder = new global::Google.Ads.GoogleAds.V3.Common.Operand.Types.ConstantOperand();
            if (functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.ConstantOperand) {
              subBuilder.MergeFrom(ConstantOperand);
            }
            input.ReadMessage(subBuilder);
            ConstantOperand = subBuilder;
            break;
          }
          case 18: {
            global::Google.Ads.GoogleAds.V3.Common.Operand.Types.FeedAttributeOperand subBuilder = new global::Google.Ads.GoogleAds.V3.Common.Operand.Types.FeedAttributeOperand();
            if (functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.FeedAttributeOperand) {
              subBuilder.MergeFrom(FeedAttributeOperand);
            }
            input.ReadMessage(subBuilder);
            FeedAttributeOperand = subBuilder;
            break;
          }
          case 26: {
            global::Google.Ads.GoogleAds.V3.Common.Operand.Types.FunctionOperand subBuilder = new global::Google.Ads.GoogleAds.V3.Common.Operand.Types.FunctionOperand();
            if (functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.FunctionOperand) {
              subBuilder.MergeFrom(FunctionOperand);
            }
            input.ReadMessage(subBuilder);
            FunctionOperand = subBuilder;
            break;
          }
          case 34: {
            global::Google.Ads.GoogleAds.V3.Common.Operand.Types.RequestContextOperand subBuilder = new global::Google.Ads.GoogleAds.V3.Common.Operand.Types.RequestContextOperand();
            if (functionArgumentOperandCase_ == FunctionArgumentOperandOneofCase.RequestContextOperand) {
              subBuilder.MergeFrom(RequestContextOperand);
            }
            input.ReadMessage(subBuilder);
            RequestContextOperand = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Operand message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A constant operand in a matching function.
      /// </summary>
      public sealed partial class ConstantOperand : pb::IMessage<ConstantOperand> {
        private static readonly pb::MessageParser<ConstantOperand> _parser = new pb::MessageParser<ConstantOperand>(() => new ConstantOperand());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ConstantOperand> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.GoogleAds.V3.Common.Operand.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConstantOperand() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConstantOperand(ConstantOperand other) : this() {
          switch (other.ConstantOperandValueCase) {
            case ConstantOperandValueOneofCase.StringValue:
              StringValue = other.StringValue;
              break;
            case ConstantOperandValueOneofCase.LongValue:
              LongValue = other.LongValue;
              break;
            case ConstantOperandValueOneofCase.BooleanValue:
              BooleanValue = other.BooleanValue;
              break;
            case ConstantOperandValueOneofCase.DoubleValue:
              DoubleValue = other.DoubleValue;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConstantOperand Clone() {
          return new ConstantOperand(this);
        }

        /// <summary>Field number for the "string_value" field.</summary>
        public const int StringValueFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _oneof_stringValue_codec = pb::FieldCodec.ForClassWrapper<string>(10);
        /// <summary>
        /// String value of the operand if it is a string type.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StringValue {
          get { return constantOperandValueCase_ == ConstantOperandValueOneofCase.StringValue ? (string) constantOperandValue_ : (string) null; }
          set {
            constantOperandValue_ = value;
            constantOperandValueCase_ = value == null ? ConstantOperandValueOneofCase.None : ConstantOperandValueOneofCase.StringValue;
          }
        }

        /// <summary>Field number for the "long_value" field.</summary>
        public const int LongValueFieldNumber = 2;
        private static readonly pb::FieldCodec<long?> _oneof_longValue_codec = pb::FieldCodec.ForStructWrapper<long>(18);
        /// <summary>
        /// Int64 value of the operand if it is a int64 type.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long? LongValue {
          get { return constantOperandValueCase_ == ConstantOperandValueOneofCase.LongValue ? (long?) constantOperandValue_ : (long?) null; }
          set {
            constantOperandValue_ = value;
            constantOperandValueCase_ = value == null ? ConstantOperandValueOneofCase.None : ConstantOperandValueOneofCase.LongValue;
          }
        }

        /// <summary>Field number for the "boolean_value" field.</summary>
        public const int BooleanValueFieldNumber = 3;
        private static readonly pb::FieldCodec<bool?> _oneof_booleanValue_codec = pb::FieldCodec.ForStructWrapper<bool>(26);
        /// <summary>
        /// Boolean value of the operand if it is a boolean type.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? BooleanValue {
          get { return constantOperandValueCase_ == ConstantOperandValueOneofCase.BooleanValue ? (bool?) constantOperandValue_ : (bool?) null; }
          set {
            constantOperandValue_ = value;
            constantOperandValueCase_ = value == null ? ConstantOperandValueOneofCase.None : ConstantOperandValueOneofCase.BooleanValue;
          }
        }

        /// <summary>Field number for the "double_value" field.</summary>
        public const int DoubleValueFieldNumber = 4;
        private static readonly pb::FieldCodec<double?> _oneof_doubleValue_codec = pb::FieldCodec.ForStructWrapper<double>(34);
        /// <summary>
        /// Double value of the operand if it is a double type.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double? DoubleValue {
          get { return constantOperandValueCase_ == ConstantOperandValueOneofCase.DoubleValue ? (double?) constantOperandValue_ : (double?) null; }
          set {
            constantOperandValue_ = value;
            constantOperandValueCase_ = value == null ? ConstantOperandValueOneofCase.None : ConstantOperandValueOneofCase.DoubleValue;
          }
        }

        private object constantOperandValue_;
        /// <summary>Enum of possible cases for the "constant_operand_value" oneof.</summary>
        public enum ConstantOperandValueOneofCase {
          None = 0,
          StringValue = 1,
          LongValue = 2,
          BooleanValue = 3,
          DoubleValue = 4,
        }
        private ConstantOperandValueOneofCase constantOperandValueCase_ = ConstantOperandValueOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConstantOperandValueOneofCase ConstantOperandValueCase {
          get { return constantOperandValueCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearConstantOperandValue() {
          constantOperandValueCase_ = ConstantOperandValueOneofCase.None;
          constantOperandValue_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ConstantOperand);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ConstantOperand other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (StringValue != other.StringValue) return false;
          if (LongValue != other.LongValue) return false;
          if (BooleanValue != other.BooleanValue) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(DoubleValue, other.DoubleValue)) return false;
          if (ConstantOperandValueCase != other.ConstantOperandValueCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (constantOperandValueCase_ == ConstantOperandValueOneofCase.StringValue) hash ^= StringValue.GetHashCode();
          if (constantOperandValueCase_ == ConstantOperandValueOneofCase.LongValue) hash ^= LongValue.GetHashCode();
          if (constantOperandValueCase_ == ConstantOperandValueOneofCase.BooleanValue) hash ^= BooleanValue.GetHashCode();
          if (constantOperandValueCase_ == ConstantOperandValueOneofCase.DoubleValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(DoubleValue);
          hash ^= (int) constantOperandValueCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (constantOperandValueCase_ == ConstantOperandValueOneofCase.StringValue) {
            _oneof_stringValue_codec.WriteTagAndValue(output, (string) constantOperandValue_);
          }
          if (constantOperandValueCase_ == ConstantOperandValueOneofCase.LongValue) {
            _oneof_longValue_codec.WriteTagAndValue(output, (long?) constantOperandValue_);
          }
          if (constantOperandValueCase_ == ConstantOperandValueOneofCase.BooleanValue) {
            _oneof_booleanValue_codec.WriteTagAndValue(output, (bool?) constantOperandValue_);
          }
          if (constantOperandValueCase_ == ConstantOperandValueOneofCase.DoubleValue) {
            _oneof_doubleValue_codec.WriteTagAndValue(output, (double?) constantOperandValue_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (constantOperandValueCase_ == ConstantOperandValueOneofCase.StringValue) {
            size += _oneof_stringValue_codec.CalculateSizeWithTag(StringValue);
          }
          if (constantOperandValueCase_ == ConstantOperandValueOneofCase.LongValue) {
            size += _oneof_longValue_codec.CalculateSizeWithTag(LongValue);
          }
          if (constantOperandValueCase_ == ConstantOperandValueOneofCase.BooleanValue) {
            size += _oneof_booleanValue_codec.CalculateSizeWithTag(BooleanValue);
          }
          if (constantOperandValueCase_ == ConstantOperandValueOneofCase.DoubleValue) {
            size += _oneof_doubleValue_codec.CalculateSizeWithTag(DoubleValue);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ConstantOperand other) {
          if (other == null) {
            return;
          }
          switch (other.ConstantOperandValueCase) {
            case ConstantOperandValueOneofCase.StringValue:
              StringValue = other.StringValue;
              break;
            case ConstantOperandValueOneofCase.LongValue:
              LongValue = other.LongValue;
              break;
            case ConstantOperandValueOneofCase.BooleanValue:
              BooleanValue = other.BooleanValue;
              break;
            case ConstantOperandValueOneofCase.DoubleValue:
              DoubleValue = other.DoubleValue;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                StringValue = _oneof_stringValue_codec.Read(input);
                break;
              }
              case 18: {
                LongValue = _oneof_longValue_codec.Read(input);
                break;
              }
              case 26: {
                BooleanValue = _oneof_booleanValue_codec.Read(input);
                break;
              }
              case 34: {
                DoubleValue = _oneof_doubleValue_codec.Read(input);
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// A feed attribute operand in a matching function.
      /// Used to represent a feed attribute in feed.
      /// </summary>
      public sealed partial class FeedAttributeOperand : pb::IMessage<FeedAttributeOperand> {
        private static readonly pb::MessageParser<FeedAttributeOperand> _parser = new pb::MessageParser<FeedAttributeOperand>(() => new FeedAttributeOperand());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FeedAttributeOperand> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.GoogleAds.V3.Common.Operand.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FeedAttributeOperand() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FeedAttributeOperand(FeedAttributeOperand other) : this() {
          FeedId = other.FeedId;
          FeedAttributeId = other.FeedAttributeId;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FeedAttributeOperand Clone() {
          return new FeedAttributeOperand(this);
        }

        /// <summary>Field number for the "feed_id" field.</summary>
        public const int FeedIdFieldNumber = 1;
        private static readonly pb::FieldCodec<long?> _single_feedId_codec = pb::FieldCodec.ForStructWrapper<long>(10);
        private long? feedId_;
        /// <summary>
        /// The associated feed. Required.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long? FeedId {
          get { return feedId_; }
          set {
            feedId_ = value;
          }
        }


        /// <summary>Field number for the "feed_attribute_id" field.</summary>
        public const int FeedAttributeIdFieldNumber = 2;
        private static readonly pb::FieldCodec<long?> _single_feedAttributeId_codec = pb::FieldCodec.ForStructWrapper<long>(18);
        private long? feedAttributeId_;
        /// <summary>
        /// Id of the referenced feed attribute. Required.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long? FeedAttributeId {
          get { return feedAttributeId_; }
          set {
            feedAttributeId_ = value;
          }
        }


        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FeedAttributeOperand);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FeedAttributeOperand other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (FeedId != other.FeedId) return false;
          if (FeedAttributeId != other.FeedAttributeId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (feedId_ != null) hash ^= FeedId.GetHashCode();
          if (feedAttributeId_ != null) hash ^= FeedAttributeId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (feedId_ != null) {
            _single_feedId_codec.WriteTagAndValue(output, FeedId);
          }
          if (feedAttributeId_ != null) {
            _single_feedAttributeId_codec.WriteTagAndValue(output, FeedAttributeId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (feedId_ != null) {
            size += _single_feedId_codec.CalculateSizeWithTag(FeedId);
          }
          if (feedAttributeId_ != null) {
            size += _single_feedAttributeId_codec.CalculateSizeWithTag(FeedAttributeId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FeedAttributeOperand other) {
          if (other == null) {
            return;
          }
          if (other.feedId_ != null) {
            if (feedId_ == null || other.FeedId != 0L) {
              FeedId = other.FeedId;
            }
          }
          if (other.feedAttributeId_ != null) {
            if (feedAttributeId_ == null || other.FeedAttributeId != 0L) {
              FeedAttributeId = other.FeedAttributeId;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                long? value = _single_feedId_codec.Read(input);
                if (feedId_ == null || value != 0L) {
                  FeedId = value;
                }
                break;
              }
              case 18: {
                long? value = _single_feedAttributeId_codec.Read(input);
                if (feedAttributeId_ == null || value != 0L) {
                  FeedAttributeId = value;
                }
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// A function operand in a matching function.
      /// Used to represent nested functions.
      /// </summary>
      public sealed partial class FunctionOperand : pb::IMessage<FunctionOperand> {
        private static readonly pb::MessageParser<FunctionOperand> _parser = new pb::MessageParser<FunctionOperand>(() => new FunctionOperand());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FunctionOperand> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.GoogleAds.V3.Common.Operand.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FunctionOperand() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FunctionOperand(FunctionOperand other) : this() {
          matchingFunction_ = other.matchingFunction_ != null ? other.matchingFunction_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FunctionOperand Clone() {
          return new FunctionOperand(this);
        }

        /// <summary>Field number for the "matching_function" field.</summary>
        public const int MatchingFunctionFieldNumber = 1;
        private global::Google.Ads.GoogleAds.V3.Common.MatchingFunction matchingFunction_;
        /// <summary>
        /// The matching function held in this operand.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Ads.GoogleAds.V3.Common.MatchingFunction MatchingFunction {
          get { return matchingFunction_; }
          set {
            matchingFunction_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FunctionOperand);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FunctionOperand other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(MatchingFunction, other.MatchingFunction)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (matchingFunction_ != null) hash ^= MatchingFunction.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (matchingFunction_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(MatchingFunction);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (matchingFunction_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatchingFunction);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FunctionOperand other) {
          if (other == null) {
            return;
          }
          if (other.matchingFunction_ != null) {
            if (matchingFunction_ == null) {
              MatchingFunction = new global::Google.Ads.GoogleAds.V3.Common.MatchingFunction();
            }
            MatchingFunction.MergeFrom(other.MatchingFunction);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (matchingFunction_ == null) {
                  MatchingFunction = new global::Google.Ads.GoogleAds.V3.Common.MatchingFunction();
                }
                input.ReadMessage(MatchingFunction);
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// An operand in a function referring to a value in the request context.
      /// </summary>
      public sealed partial class RequestContextOperand : pb::IMessage<RequestContextOperand> {
        private static readonly pb::MessageParser<RequestContextOperand> _parser = new pb::MessageParser<RequestContextOperand>(() => new RequestContextOperand());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RequestContextOperand> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.GoogleAds.V3.Common.Operand.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequestContextOperand() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequestContextOperand(RequestContextOperand other) : this() {
          contextType_ = other.contextType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RequestContextOperand Clone() {
          return new RequestContextOperand(this);
        }

        /// <summary>Field number for the "context_type" field.</summary>
        public const int ContextTypeFieldNumber = 1;
        private global::Google.Ads.GoogleAds.V3.Enums.MatchingFunctionContextTypeEnum.Types.MatchingFunctionContextType contextType_ = global::Google.Ads.GoogleAds.V3.Enums.MatchingFunctionContextTypeEnum.Types.MatchingFunctionContextType.Unspecified;
        /// <summary>
        /// Type of value to be referred in the request context.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Ads.GoogleAds.V3.Enums.MatchingFunctionContextTypeEnum.Types.MatchingFunctionContextType ContextType {
          get { return contextType_; }
          set {
            contextType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RequestContextOperand);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RequestContextOperand other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ContextType != other.ContextType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ContextType != global::Google.Ads.GoogleAds.V3.Enums.MatchingFunctionContextTypeEnum.Types.MatchingFunctionContextType.Unspecified) hash ^= ContextType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ContextType != global::Google.Ads.GoogleAds.V3.Enums.MatchingFunctionContextTypeEnum.Types.MatchingFunctionContextType.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) ContextType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ContextType != global::Google.Ads.GoogleAds.V3.Enums.MatchingFunctionContextTypeEnum.Types.MatchingFunctionContextType.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContextType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RequestContextOperand other) {
          if (other == null) {
            return;
          }
          if (other.ContextType != global::Google.Ads.GoogleAds.V3.Enums.MatchingFunctionContextTypeEnum.Types.MatchingFunctionContextType.Unspecified) {
            ContextType = other.ContextType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ContextType = (global::Google.Ads.GoogleAds.V3.Enums.MatchingFunctionContextTypeEnum.Types.MatchingFunctionContextType) input.ReadEnum();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
