// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v3/errors/media_upload_error.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V3.Errors {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v3/errors/media_upload_error.proto</summary>
  public static partial class MediaUploadErrorReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v3/errors/media_upload_error.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MediaUploadErrorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjdnb29nbGUvYWRzL2dvb2dsZWFkcy92My9lcnJvcnMvbWVkaWFfdXBsb2Fk",
            "X2Vycm9yLnByb3RvEh5nb29nbGUuYWRzLmdvb2dsZWFkcy52My5lcnJvcnMa",
            "HGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8iiwIKFE1lZGlhVXBsb2Fk",
            "RXJyb3JFbnVtIvIBChBNZWRpYVVwbG9hZEVycm9yEg8KC1VOU1BFQ0lGSUVE",
            "EAASCwoHVU5LTk9XThABEhAKDEZJTEVfVE9PX0JJRxACEhUKEVVOUEFSU0VB",
            "QkxFX0lNQUdFEAMSHgoaQU5JTUFURURfSU1BR0VfTk9UX0FMTE9XRUQQBBIW",
            "ChJGT1JNQVRfTk9UX0FMTE9XRUQQBRIcChhFWFRFUk5BTF9VUkxfTk9UX0FM",
            "TE9XRUQQBhIZChVJTlZBTElEX1VSTF9SRUZFUkVOQ0UQBxImCiJNSVNTSU5H",
            "X1BSSU1BUllfTUVESUFfQlVORExFX0VOVFJZEAhC8AEKImNvbS5nb29nbGUu",
            "YWRzLmdvb2dsZWFkcy52My5lcnJvcnNCFU1lZGlhVXBsb2FkRXJyb3JQcm90",
            "b1ABWkRnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2Fk",
            "cy9nb29nbGVhZHMvdjMvZXJyb3JzO2Vycm9yc6ICA0dBQaoCHkdvb2dsZS5B",
            "ZHMuR29vZ2xlQWRzLlYzLkVycm9yc8oCHkdvb2dsZVxBZHNcR29vZ2xlQWRz",
            "XFYzXEVycm9yc+oCIkdvb2dsZTo6QWRzOjpHb29nbGVBZHM6OlYzOjpFcnJv",
            "cnNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Errors.MediaUploadErrorEnum), global::Google.Ads.GoogleAds.V3.Errors.MediaUploadErrorEnum.Parser, null, null, new[]{ typeof(global::Google.Ads.GoogleAds.V3.Errors.MediaUploadErrorEnum.Types.MediaUploadError) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Container for enum describing possible media uploading errors.
  /// </summary>
  public sealed partial class MediaUploadErrorEnum : pb::IMessage<MediaUploadErrorEnum> {
    private static readonly pb::MessageParser<MediaUploadErrorEnum> _parser = new pb::MessageParser<MediaUploadErrorEnum>(() => new MediaUploadErrorEnum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MediaUploadErrorEnum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Errors.MediaUploadErrorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaUploadErrorEnum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaUploadErrorEnum(MediaUploadErrorEnum other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaUploadErrorEnum Clone() {
      return new MediaUploadErrorEnum(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MediaUploadErrorEnum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MediaUploadErrorEnum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MediaUploadErrorEnum other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the MediaUploadErrorEnum message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Enum describing possible media uploading errors.
      /// </summary>
      public enum MediaUploadError {
        /// <summary>
        /// Enum unspecified.
        /// </summary>
        [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The received error code is not known in this version.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 1,
        /// <summary>
        /// The uploaded file is too big.
        /// </summary>
        [pbr::OriginalName("FILE_TOO_BIG")] FileTooBig = 2,
        /// <summary>
        /// Image data is unparseable.
        /// </summary>
        [pbr::OriginalName("UNPARSEABLE_IMAGE")] UnparseableImage = 3,
        /// <summary>
        /// Animated images are not allowed.
        /// </summary>
        [pbr::OriginalName("ANIMATED_IMAGE_NOT_ALLOWED")] AnimatedImageNotAllowed = 4,
        /// <summary>
        /// The image or media bundle format is not allowed.
        /// </summary>
        [pbr::OriginalName("FORMAT_NOT_ALLOWED")] FormatNotAllowed = 5,
        /// <summary>
        /// Cannot reference URL external to the media bundle.
        /// </summary>
        [pbr::OriginalName("EXTERNAL_URL_NOT_ALLOWED")] ExternalUrlNotAllowed = 6,
        /// <summary>
        /// HTML5 ad is trying to reference an asset not in .ZIP file.
        /// </summary>
        [pbr::OriginalName("INVALID_URL_REFERENCE")] InvalidUrlReference = 7,
        /// <summary>
        /// The media bundle contains no primary entry.
        /// </summary>
        [pbr::OriginalName("MISSING_PRIMARY_MEDIA_BUNDLE_ENTRY")] MissingPrimaryMediaBundleEntry = 8,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
