// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v3/common/offline_user_data.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V3.Common {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v3/common/offline_user_data.proto</summary>
  public static partial class OfflineUserDataReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v3/common/offline_user_data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OfflineUserDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjZnb29nbGUvYWRzL2dvb2dsZWFkcy92My9jb21tb24vb2ZmbGluZV91c2Vy",
            "X2RhdGEucHJvdG8SHmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYzLmNvbW1vbhoe",
            "Z29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGhxnb29nbGUvYXBpL2Fu",
            "bm90YXRpb25zLnByb3RvIskCChZPZmZsaW5lVXNlckFkZHJlc3NJbmZvEjcK",
            "EWhhc2hlZF9maXJzdF9uYW1lGAEgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0",
            "cmluZ1ZhbHVlEjYKEGhhc2hlZF9sYXN0X25hbWUYAiABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWUSKgoEY2l0eRgDIAEoCzIcLmdvb2dsZS5w",
            "cm90b2J1Zi5TdHJpbmdWYWx1ZRIrCgVzdGF0ZRgEIAEoCzIcLmdvb2dsZS5w",
            "cm90b2J1Zi5TdHJpbmdWYWx1ZRIyCgxjb3VudHJ5X2NvZGUYBSABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMQoLcG9zdGFsX2NvZGUYBiAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUi0QIKDlVzZXJJZGVu",
            "dGlmaWVyEjQKDGhhc2hlZF9lbWFpbBgBIAEoCzIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZUgAEjsKE2hhc2hlZF9waG9uZV9udW1iZXIYAiABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWVIABIxCgltb2JpbGVfaWQY",
            "AyABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWVIABI7ChN0aGly",
            "ZF9wYXJ0eV91c2VyX2lkGAQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlSAASTgoMYWRkcmVzc19pbmZvGAUgASgLMjYuZ29vZ2xlLmFkcy5n",
            "b29nbGVhZHMudjMuY29tbW9uLk9mZmxpbmVVc2VyQWRkcmVzc0luZm9IAEIM",
            "CgppZGVudGlmaWVyIq8DChRUcmFuc2FjdGlvbkF0dHJpYnV0ZRI7ChV0cmFu",
            "c2FjdGlvbl9kYXRlX3RpbWUYASABKAsyHC5nb29nbGUucHJvdG9idWYuU3Ry",
            "aW5nVmFsdWUSPwoZdHJhbnNhY3Rpb25fYW1vdW50X21pY3JvcxgCIAEoCzIc",
            "Lmdvb2dsZS5wcm90b2J1Zi5Eb3VibGVWYWx1ZRIzCg1jdXJyZW5jeV9jb2Rl",
            "GAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjcKEWNvbnZl",
            "cnNpb25fYWN0aW9uGAQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1Zh",
            "bHVlEi4KCG9yZGVyX2lkGAUgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlEkcKD3N0b3JlX2F0dHJpYnV0ZRgGIAEoCzIuLmdvb2dsZS5hZHMu",
            "Z29vZ2xlYWRzLnYzLmNvbW1vbi5TdG9yZUF0dHJpYnV0ZRIyCgxjdXN0b21f",
            "dmFsdWUYByABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUiQgoO",
            "U3RvcmVBdHRyaWJ1dGUSMAoKc3RvcmVfY29kZRgBIAEoCzIcLmdvb2dsZS5w",
            "cm90b2J1Zi5TdHJpbmdWYWx1ZSKpAQoIVXNlckRhdGESSAoQdXNlcl9pZGVu",
            "dGlmaWVycxgBIAMoCzIuLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYzLmNvbW1v",
            "bi5Vc2VySWRlbnRpZmllchJTChV0cmFuc2FjdGlvbl9hdHRyaWJ1dGUYAiAB",
            "KAsyNC5nb29nbGUuYWRzLmdvb2dsZWFkcy52My5jb21tb24uVHJhbnNhY3Rp",
            "b25BdHRyaWJ1dGUiUAodQ3VzdG9tZXJNYXRjaFVzZXJMaXN0TWV0YWRhdGES",
            "LwoJdXNlcl9saXN0GAEgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1Zh",
            "bHVlIp0CChJTdG9yZVNhbGVzTWV0YWRhdGESNgoQbG95YWx0eV9mcmFjdGlv",
            "bhgBIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5Eb3VibGVWYWx1ZRJBCht0cmFu",
            "c2FjdGlvbl91cGxvYWRfZnJhY3Rpb24YAiABKAsyHC5nb29nbGUucHJvdG9i",
            "dWYuRG91YmxlVmFsdWUSMAoKY3VzdG9tX2tleRgEIAEoCzIcLmdvb2dsZS5w",
            "cm90b2J1Zi5TdHJpbmdWYWx1ZRJaChR0aGlyZF9wYXJ0eV9tZXRhZGF0YRgD",
            "IAEoCzI8Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYzLmNvbW1vbi5TdG9yZVNh",
            "bGVzVGhpcmRQYXJ0eU1ldGFkYXRhIo4DChxTdG9yZVNhbGVzVGhpcmRQYXJ0",
            "eU1ldGFkYXRhEkEKG2FkdmVydGlzZXJfdXBsb2FkX2RhdGVfdGltZRgBIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRJAChp2YWxpZF90cmFu",
            "c2FjdGlvbl9mcmFjdGlvbhgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5Eb3Vi",
            "bGVWYWx1ZRI8ChZwYXJ0bmVyX21hdGNoX2ZyYWN0aW9uGAMgASgLMhwuZ29v",
            "Z2xlLnByb3RvYnVmLkRvdWJsZVZhbHVlEj0KF3BhcnRuZXJfdXBsb2FkX2Zy",
            "YWN0aW9uGAQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLkRvdWJsZVZhbHVlEjsK",
            "FWJyaWRnZV9tYXBfdmVyc2lvbl9pZBgFIAEoCzIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZRIvCgpwYXJ0bmVyX2lkGAYgASgLMhsuZ29vZ2xlLnBy",
            "b3RvYnVmLkludDY0VmFsdWVC7wEKImNvbS5nb29nbGUuYWRzLmdvb2dsZWFk",
            "cy52My5jb21tb25CFE9mZmxpbmVVc2VyRGF0YVByb3RvUAFaRGdvb2dsZS5n",
            "b2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvYWRzL2dvb2dsZWFkcy92",
            "My9jb21tb247Y29tbW9uogIDR0FBqgIeR29vZ2xlLkFkcy5Hb29nbGVBZHMu",
            "VjMuQ29tbW9uygIeR29vZ2xlXEFkc1xHb29nbGVBZHNcVjNcQ29tbW9u6gIi",
            "R29vZ2xlOjpBZHM6Okdvb2dsZUFkczo6VjM6OkNvbW1vbmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Common.OfflineUserAddressInfo), global::Google.Ads.GoogleAds.V3.Common.OfflineUserAddressInfo.Parser, new[]{ "HashedFirstName", "HashedLastName", "City", "State", "CountryCode", "PostalCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Common.UserIdentifier), global::Google.Ads.GoogleAds.V3.Common.UserIdentifier.Parser, new[]{ "HashedEmail", "HashedPhoneNumber", "MobileId", "ThirdPartyUserId", "AddressInfo" }, new[]{ "Identifier" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Common.TransactionAttribute), global::Google.Ads.GoogleAds.V3.Common.TransactionAttribute.Parser, new[]{ "TransactionDateTime", "TransactionAmountMicros", "CurrencyCode", "ConversionAction", "OrderId", "StoreAttribute", "CustomValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Common.StoreAttribute), global::Google.Ads.GoogleAds.V3.Common.StoreAttribute.Parser, new[]{ "StoreCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Common.UserData), global::Google.Ads.GoogleAds.V3.Common.UserData.Parser, new[]{ "UserIdentifiers", "TransactionAttribute" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Common.CustomerMatchUserListMetadata), global::Google.Ads.GoogleAds.V3.Common.CustomerMatchUserListMetadata.Parser, new[]{ "UserList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Common.StoreSalesMetadata), global::Google.Ads.GoogleAds.V3.Common.StoreSalesMetadata.Parser, new[]{ "LoyaltyFraction", "TransactionUploadFraction", "CustomKey", "ThirdPartyMetadata" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Common.StoreSalesThirdPartyMetadata), global::Google.Ads.GoogleAds.V3.Common.StoreSalesThirdPartyMetadata.Parser, new[]{ "AdvertiserUploadDateTime", "ValidTransactionFraction", "PartnerMatchFraction", "PartnerUploadFraction", "BridgeMapVersionId", "PartnerId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Address identifier of offline data.
  /// </summary>
  public sealed partial class OfflineUserAddressInfo : pb::IMessage<OfflineUserAddressInfo> {
    private static readonly pb::MessageParser<OfflineUserAddressInfo> _parser = new pb::MessageParser<OfflineUserAddressInfo>(() => new OfflineUserAddressInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfflineUserAddressInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Common.OfflineUserDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfflineUserAddressInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfflineUserAddressInfo(OfflineUserAddressInfo other) : this() {
      HashedFirstName = other.HashedFirstName;
      HashedLastName = other.HashedLastName;
      City = other.City;
      State = other.State;
      CountryCode = other.CountryCode;
      PostalCode = other.PostalCode;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfflineUserAddressInfo Clone() {
      return new OfflineUserAddressInfo(this);
    }

    /// <summary>Field number for the "hashed_first_name" field.</summary>
    public const int HashedFirstNameFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_hashedFirstName_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string hashedFirstName_;
    /// <summary>
    /// First name of the user, which is hashed as SHA-256 after normalized
    /// (Lowercase all characters; Remove any extra spaces before, after, and in
    /// between).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HashedFirstName {
      get { return hashedFirstName_; }
      set {
        hashedFirstName_ = value;
      }
    }


    /// <summary>Field number for the "hashed_last_name" field.</summary>
    public const int HashedLastNameFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_hashedLastName_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string hashedLastName_;
    /// <summary>
    /// Last name of the user, which is hashed as SHA-256 after normalized (lower
    /// case only and no punctuation).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HashedLastName {
      get { return hashedLastName_; }
      set {
        hashedLastName_ = value;
      }
    }


    /// <summary>Field number for the "city" field.</summary>
    public const int CityFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_city_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string city_;
    /// <summary>
    /// City of the address. Only accepted for Store Sales Direct data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = value;
      }
    }


    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_state_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string state_;
    /// <summary>
    /// State code of the address. Only accepted for Store Sales Direct data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string State {
      get { return state_; }
      set {
        state_ = value;
      }
    }


    /// <summary>Field number for the "country_code" field.</summary>
    public const int CountryCodeFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_countryCode_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string countryCode_;
    /// <summary>
    /// 2-letter country code in ISO-3166-1 alpha-2 of the user's address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryCode {
      get { return countryCode_; }
      set {
        countryCode_ = value;
      }
    }


    /// <summary>Field number for the "postal_code" field.</summary>
    public const int PostalCodeFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_postalCode_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string postalCode_;
    /// <summary>
    /// Postal code of the user's address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PostalCode {
      get { return postalCode_; }
      set {
        postalCode_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfflineUserAddressInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfflineUserAddressInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HashedFirstName != other.HashedFirstName) return false;
      if (HashedLastName != other.HashedLastName) return false;
      if (City != other.City) return false;
      if (State != other.State) return false;
      if (CountryCode != other.CountryCode) return false;
      if (PostalCode != other.PostalCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hashedFirstName_ != null) hash ^= HashedFirstName.GetHashCode();
      if (hashedLastName_ != null) hash ^= HashedLastName.GetHashCode();
      if (city_ != null) hash ^= City.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (countryCode_ != null) hash ^= CountryCode.GetHashCode();
      if (postalCode_ != null) hash ^= PostalCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hashedFirstName_ != null) {
        _single_hashedFirstName_codec.WriteTagAndValue(output, HashedFirstName);
      }
      if (hashedLastName_ != null) {
        _single_hashedLastName_codec.WriteTagAndValue(output, HashedLastName);
      }
      if (city_ != null) {
        _single_city_codec.WriteTagAndValue(output, City);
      }
      if (state_ != null) {
        _single_state_codec.WriteTagAndValue(output, State);
      }
      if (countryCode_ != null) {
        _single_countryCode_codec.WriteTagAndValue(output, CountryCode);
      }
      if (postalCode_ != null) {
        _single_postalCode_codec.WriteTagAndValue(output, PostalCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hashedFirstName_ != null) {
        size += _single_hashedFirstName_codec.CalculateSizeWithTag(HashedFirstName);
      }
      if (hashedLastName_ != null) {
        size += _single_hashedLastName_codec.CalculateSizeWithTag(HashedLastName);
      }
      if (city_ != null) {
        size += _single_city_codec.CalculateSizeWithTag(City);
      }
      if (state_ != null) {
        size += _single_state_codec.CalculateSizeWithTag(State);
      }
      if (countryCode_ != null) {
        size += _single_countryCode_codec.CalculateSizeWithTag(CountryCode);
      }
      if (postalCode_ != null) {
        size += _single_postalCode_codec.CalculateSizeWithTag(PostalCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfflineUserAddressInfo other) {
      if (other == null) {
        return;
      }
      if (other.hashedFirstName_ != null) {
        if (hashedFirstName_ == null || other.HashedFirstName != "") {
          HashedFirstName = other.HashedFirstName;
        }
      }
      if (other.hashedLastName_ != null) {
        if (hashedLastName_ == null || other.HashedLastName != "") {
          HashedLastName = other.HashedLastName;
        }
      }
      if (other.city_ != null) {
        if (city_ == null || other.City != "") {
          City = other.City;
        }
      }
      if (other.state_ != null) {
        if (state_ == null || other.State != "") {
          State = other.State;
        }
      }
      if (other.countryCode_ != null) {
        if (countryCode_ == null || other.CountryCode != "") {
          CountryCode = other.CountryCode;
        }
      }
      if (other.postalCode_ != null) {
        if (postalCode_ == null || other.PostalCode != "") {
          PostalCode = other.PostalCode;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_hashedFirstName_codec.Read(input);
            if (hashedFirstName_ == null || value != "") {
              HashedFirstName = value;
            }
            break;
          }
          case 18: {
            string value = _single_hashedLastName_codec.Read(input);
            if (hashedLastName_ == null || value != "") {
              HashedLastName = value;
            }
            break;
          }
          case 26: {
            string value = _single_city_codec.Read(input);
            if (city_ == null || value != "") {
              City = value;
            }
            break;
          }
          case 34: {
            string value = _single_state_codec.Read(input);
            if (state_ == null || value != "") {
              State = value;
            }
            break;
          }
          case 42: {
            string value = _single_countryCode_codec.Read(input);
            if (countryCode_ == null || value != "") {
              CountryCode = value;
            }
            break;
          }
          case 50: {
            string value = _single_postalCode_codec.Read(input);
            if (postalCode_ == null || value != "") {
              PostalCode = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Hashed user identifying information.
  /// </summary>
  public sealed partial class UserIdentifier : pb::IMessage<UserIdentifier> {
    private static readonly pb::MessageParser<UserIdentifier> _parser = new pb::MessageParser<UserIdentifier>(() => new UserIdentifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserIdentifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Common.OfflineUserDataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserIdentifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserIdentifier(UserIdentifier other) : this() {
      switch (other.IdentifierCase) {
        case IdentifierOneofCase.HashedEmail:
          HashedEmail = other.HashedEmail;
          break;
        case IdentifierOneofCase.HashedPhoneNumber:
          HashedPhoneNumber = other.HashedPhoneNumber;
          break;
        case IdentifierOneofCase.MobileId:
          MobileId = other.MobileId;
          break;
        case IdentifierOneofCase.ThirdPartyUserId:
          ThirdPartyUserId = other.ThirdPartyUserId;
          break;
        case IdentifierOneofCase.AddressInfo:
          AddressInfo = other.AddressInfo.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserIdentifier Clone() {
      return new UserIdentifier(this);
    }

    /// <summary>Field number for the "hashed_email" field.</summary>
    public const int HashedEmailFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _oneof_hashedEmail_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    /// <summary>
    /// Hashed email address using SHA-256 hash function after normalization.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HashedEmail {
      get { return identifierCase_ == IdentifierOneofCase.HashedEmail ? (string) identifier_ : (string) null; }
      set {
        identifier_ = value;
        identifierCase_ = value == null ? IdentifierOneofCase.None : IdentifierOneofCase.HashedEmail;
      }
    }

    /// <summary>Field number for the "hashed_phone_number" field.</summary>
    public const int HashedPhoneNumberFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _oneof_hashedPhoneNumber_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    /// <summary>
    /// Hashed phone number using SHA-256 hash function after normalization
    /// (E164 standard).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HashedPhoneNumber {
      get { return identifierCase_ == IdentifierOneofCase.HashedPhoneNumber ? (string) identifier_ : (string) null; }
      set {
        identifier_ = value;
        identifierCase_ = value == null ? IdentifierOneofCase.None : IdentifierOneofCase.HashedPhoneNumber;
      }
    }

    /// <summary>Field number for the "mobile_id" field.</summary>
    public const int MobileIdFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _oneof_mobileId_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    /// <summary>
    /// Mobile device ID (advertising ID/IDFA).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MobileId {
      get { return identifierCase_ == IdentifierOneofCase.MobileId ? (string) identifier_ : (string) null; }
      set {
        identifier_ = value;
        identifierCase_ = value == null ? IdentifierOneofCase.None : IdentifierOneofCase.MobileId;
      }
    }

    /// <summary>Field number for the "third_party_user_id" field.</summary>
    public const int ThirdPartyUserIdFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _oneof_thirdPartyUserId_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    /// <summary>
    /// Advertiser-assigned user ID for Customer Match upload, or
    /// third-party-assigned user ID for SSD.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThirdPartyUserId {
      get { return identifierCase_ == IdentifierOneofCase.ThirdPartyUserId ? (string) identifier_ : (string) null; }
      set {
        identifier_ = value;
        identifierCase_ = value == null ? IdentifierOneofCase.None : IdentifierOneofCase.ThirdPartyUserId;
      }
    }

    /// <summary>Field number for the "address_info" field.</summary>
    public const int AddressInfoFieldNumber = 5;
    /// <summary>
    /// Address information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Common.OfflineUserAddressInfo AddressInfo {
      get { return identifierCase_ == IdentifierOneofCase.AddressInfo ? (global::Google.Ads.GoogleAds.V3.Common.OfflineUserAddressInfo) identifier_ : null; }
      set {
        identifier_ = value;
        identifierCase_ = value == null ? IdentifierOneofCase.None : IdentifierOneofCase.AddressInfo;
      }
    }

    private object identifier_;
    /// <summary>Enum of possible cases for the "identifier" oneof.</summary>
    public enum IdentifierOneofCase {
      None = 0,
      HashedEmail = 1,
      HashedPhoneNumber = 2,
      MobileId = 3,
      ThirdPartyUserId = 4,
      AddressInfo = 5,
    }
    private IdentifierOneofCase identifierCase_ = IdentifierOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentifierOneofCase IdentifierCase {
      get { return identifierCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIdentifier() {
      identifierCase_ = IdentifierOneofCase.None;
      identifier_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserIdentifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserIdentifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HashedEmail != other.HashedEmail) return false;
      if (HashedPhoneNumber != other.HashedPhoneNumber) return false;
      if (MobileId != other.MobileId) return false;
      if (ThirdPartyUserId != other.ThirdPartyUserId) return false;
      if (!object.Equals(AddressInfo, other.AddressInfo)) return false;
      if (IdentifierCase != other.IdentifierCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (identifierCase_ == IdentifierOneofCase.HashedEmail) hash ^= HashedEmail.GetHashCode();
      if (identifierCase_ == IdentifierOneofCase.HashedPhoneNumber) hash ^= HashedPhoneNumber.GetHashCode();
      if (identifierCase_ == IdentifierOneofCase.MobileId) hash ^= MobileId.GetHashCode();
      if (identifierCase_ == IdentifierOneofCase.ThirdPartyUserId) hash ^= ThirdPartyUserId.GetHashCode();
      if (identifierCase_ == IdentifierOneofCase.AddressInfo) hash ^= AddressInfo.GetHashCode();
      hash ^= (int) identifierCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (identifierCase_ == IdentifierOneofCase.HashedEmail) {
        _oneof_hashedEmail_codec.WriteTagAndValue(output, (string) identifier_);
      }
      if (identifierCase_ == IdentifierOneofCase.HashedPhoneNumber) {
        _oneof_hashedPhoneNumber_codec.WriteTagAndValue(output, (string) identifier_);
      }
      if (identifierCase_ == IdentifierOneofCase.MobileId) {
        _oneof_mobileId_codec.WriteTagAndValue(output, (string) identifier_);
      }
      if (identifierCase_ == IdentifierOneofCase.ThirdPartyUserId) {
        _oneof_thirdPartyUserId_codec.WriteTagAndValue(output, (string) identifier_);
      }
      if (identifierCase_ == IdentifierOneofCase.AddressInfo) {
        output.WriteRawTag(42);
        output.WriteMessage(AddressInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (identifierCase_ == IdentifierOneofCase.HashedEmail) {
        size += _oneof_hashedEmail_codec.CalculateSizeWithTag(HashedEmail);
      }
      if (identifierCase_ == IdentifierOneofCase.HashedPhoneNumber) {
        size += _oneof_hashedPhoneNumber_codec.CalculateSizeWithTag(HashedPhoneNumber);
      }
      if (identifierCase_ == IdentifierOneofCase.MobileId) {
        size += _oneof_mobileId_codec.CalculateSizeWithTag(MobileId);
      }
      if (identifierCase_ == IdentifierOneofCase.ThirdPartyUserId) {
        size += _oneof_thirdPartyUserId_codec.CalculateSizeWithTag(ThirdPartyUserId);
      }
      if (identifierCase_ == IdentifierOneofCase.AddressInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddressInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserIdentifier other) {
      if (other == null) {
        return;
      }
      switch (other.IdentifierCase) {
        case IdentifierOneofCase.HashedEmail:
          HashedEmail = other.HashedEmail;
          break;
        case IdentifierOneofCase.HashedPhoneNumber:
          HashedPhoneNumber = other.HashedPhoneNumber;
          break;
        case IdentifierOneofCase.MobileId:
          MobileId = other.MobileId;
          break;
        case IdentifierOneofCase.ThirdPartyUserId:
          ThirdPartyUserId = other.ThirdPartyUserId;
          break;
        case IdentifierOneofCase.AddressInfo:
          if (AddressInfo == null) {
            AddressInfo = new global::Google.Ads.GoogleAds.V3.Common.OfflineUserAddressInfo();
          }
          AddressInfo.MergeFrom(other.AddressInfo);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HashedEmail = _oneof_hashedEmail_codec.Read(input);
            break;
          }
          case 18: {
            HashedPhoneNumber = _oneof_hashedPhoneNumber_codec.Read(input);
            break;
          }
          case 26: {
            MobileId = _oneof_mobileId_codec.Read(input);
            break;
          }
          case 34: {
            ThirdPartyUserId = _oneof_thirdPartyUserId_codec.Read(input);
            break;
          }
          case 42: {
            global::Google.Ads.GoogleAds.V3.Common.OfflineUserAddressInfo subBuilder = new global::Google.Ads.GoogleAds.V3.Common.OfflineUserAddressInfo();
            if (identifierCase_ == IdentifierOneofCase.AddressInfo) {
              subBuilder.MergeFrom(AddressInfo);
            }
            input.ReadMessage(subBuilder);
            AddressInfo = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Attribute of the store sales transaction.
  /// </summary>
  public sealed partial class TransactionAttribute : pb::IMessage<TransactionAttribute> {
    private static readonly pb::MessageParser<TransactionAttribute> _parser = new pb::MessageParser<TransactionAttribute>(() => new TransactionAttribute());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionAttribute> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Common.OfflineUserDataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionAttribute() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionAttribute(TransactionAttribute other) : this() {
      TransactionDateTime = other.TransactionDateTime;
      TransactionAmountMicros = other.TransactionAmountMicros;
      CurrencyCode = other.CurrencyCode;
      ConversionAction = other.ConversionAction;
      OrderId = other.OrderId;
      storeAttribute_ = other.storeAttribute_ != null ? other.storeAttribute_.Clone() : null;
      CustomValue = other.CustomValue;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionAttribute Clone() {
      return new TransactionAttribute(this);
    }

    /// <summary>Field number for the "transaction_date_time" field.</summary>
    public const int TransactionDateTimeFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_transactionDateTime_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string transactionDateTime_;
    /// <summary>
    /// Timestamp when transaction occurred. Required.
    /// The format is "YYYY-MM-DD HH:MM:SS".
    /// Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionDateTime {
      get { return transactionDateTime_; }
      set {
        transactionDateTime_ = value;
      }
    }


    /// <summary>Field number for the "transaction_amount_micros" field.</summary>
    public const int TransactionAmountMicrosFieldNumber = 2;
    private static readonly pb::FieldCodec<double?> _single_transactionAmountMicros_codec = pb::FieldCodec.ForStructWrapper<double>(18);
    private double? transactionAmountMicros_;
    /// <summary>
    /// Transaction amount in micros. Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? TransactionAmountMicros {
      get { return transactionAmountMicros_; }
      set {
        transactionAmountMicros_ = value;
      }
    }


    /// <summary>Field number for the "currency_code" field.</summary>
    public const int CurrencyCodeFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_currencyCode_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string currencyCode_;
    /// <summary>
    /// Transaction currency code. ISO 4217 three-letter code is used. Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = value;
      }
    }


    /// <summary>Field number for the "conversion_action" field.</summary>
    public const int ConversionActionFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_conversionAction_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string conversionAction_;
    /// <summary>
    /// The resource name of conversion action to report conversions to.
    /// Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConversionAction {
      get { return conversionAction_; }
      set {
        conversionAction_ = value;
      }
    }


    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_orderId_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string orderId_;
    /// <summary>
    /// Transaction order id.
    /// Accessible to whitelisted customers only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderId {
      get { return orderId_; }
      set {
        orderId_ = value;
      }
    }


    /// <summary>Field number for the "store_attribute" field.</summary>
    public const int StoreAttributeFieldNumber = 6;
    private global::Google.Ads.GoogleAds.V3.Common.StoreAttribute storeAttribute_;
    /// <summary>
    /// Store attributes of the transaction.
    /// Accessible to whitelisted customers only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Common.StoreAttribute StoreAttribute {
      get { return storeAttribute_; }
      set {
        storeAttribute_ = value;
      }
    }

    /// <summary>Field number for the "custom_value" field.</summary>
    public const int CustomValueFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_customValue_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string customValue_;
    /// <summary>
    /// Value of the custom variable for each transaction.
    /// Accessible to whitelisted customers only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomValue {
      get { return customValue_; }
      set {
        customValue_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionAttribute);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionAttribute other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionDateTime != other.TransactionDateTime) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(TransactionAmountMicros, other.TransactionAmountMicros)) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (ConversionAction != other.ConversionAction) return false;
      if (OrderId != other.OrderId) return false;
      if (!object.Equals(StoreAttribute, other.StoreAttribute)) return false;
      if (CustomValue != other.CustomValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transactionDateTime_ != null) hash ^= TransactionDateTime.GetHashCode();
      if (transactionAmountMicros_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(TransactionAmountMicros);
      if (currencyCode_ != null) hash ^= CurrencyCode.GetHashCode();
      if (conversionAction_ != null) hash ^= ConversionAction.GetHashCode();
      if (orderId_ != null) hash ^= OrderId.GetHashCode();
      if (storeAttribute_ != null) hash ^= StoreAttribute.GetHashCode();
      if (customValue_ != null) hash ^= CustomValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transactionDateTime_ != null) {
        _single_transactionDateTime_codec.WriteTagAndValue(output, TransactionDateTime);
      }
      if (transactionAmountMicros_ != null) {
        _single_transactionAmountMicros_codec.WriteTagAndValue(output, TransactionAmountMicros);
      }
      if (currencyCode_ != null) {
        _single_currencyCode_codec.WriteTagAndValue(output, CurrencyCode);
      }
      if (conversionAction_ != null) {
        _single_conversionAction_codec.WriteTagAndValue(output, ConversionAction);
      }
      if (orderId_ != null) {
        _single_orderId_codec.WriteTagAndValue(output, OrderId);
      }
      if (storeAttribute_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(StoreAttribute);
      }
      if (customValue_ != null) {
        _single_customValue_codec.WriteTagAndValue(output, CustomValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transactionDateTime_ != null) {
        size += _single_transactionDateTime_codec.CalculateSizeWithTag(TransactionDateTime);
      }
      if (transactionAmountMicros_ != null) {
        size += _single_transactionAmountMicros_codec.CalculateSizeWithTag(TransactionAmountMicros);
      }
      if (currencyCode_ != null) {
        size += _single_currencyCode_codec.CalculateSizeWithTag(CurrencyCode);
      }
      if (conversionAction_ != null) {
        size += _single_conversionAction_codec.CalculateSizeWithTag(ConversionAction);
      }
      if (orderId_ != null) {
        size += _single_orderId_codec.CalculateSizeWithTag(OrderId);
      }
      if (storeAttribute_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StoreAttribute);
      }
      if (customValue_ != null) {
        size += _single_customValue_codec.CalculateSizeWithTag(CustomValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionAttribute other) {
      if (other == null) {
        return;
      }
      if (other.transactionDateTime_ != null) {
        if (transactionDateTime_ == null || other.TransactionDateTime != "") {
          TransactionDateTime = other.TransactionDateTime;
        }
      }
      if (other.transactionAmountMicros_ != null) {
        if (transactionAmountMicros_ == null || other.TransactionAmountMicros != 0D) {
          TransactionAmountMicros = other.TransactionAmountMicros;
        }
      }
      if (other.currencyCode_ != null) {
        if (currencyCode_ == null || other.CurrencyCode != "") {
          CurrencyCode = other.CurrencyCode;
        }
      }
      if (other.conversionAction_ != null) {
        if (conversionAction_ == null || other.ConversionAction != "") {
          ConversionAction = other.ConversionAction;
        }
      }
      if (other.orderId_ != null) {
        if (orderId_ == null || other.OrderId != "") {
          OrderId = other.OrderId;
        }
      }
      if (other.storeAttribute_ != null) {
        if (storeAttribute_ == null) {
          StoreAttribute = new global::Google.Ads.GoogleAds.V3.Common.StoreAttribute();
        }
        StoreAttribute.MergeFrom(other.StoreAttribute);
      }
      if (other.customValue_ != null) {
        if (customValue_ == null || other.CustomValue != "") {
          CustomValue = other.CustomValue;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_transactionDateTime_codec.Read(input);
            if (transactionDateTime_ == null || value != "") {
              TransactionDateTime = value;
            }
            break;
          }
          case 18: {
            double? value = _single_transactionAmountMicros_codec.Read(input);
            if (transactionAmountMicros_ == null || value != 0D) {
              TransactionAmountMicros = value;
            }
            break;
          }
          case 26: {
            string value = _single_currencyCode_codec.Read(input);
            if (currencyCode_ == null || value != "") {
              CurrencyCode = value;
            }
            break;
          }
          case 34: {
            string value = _single_conversionAction_codec.Read(input);
            if (conversionAction_ == null || value != "") {
              ConversionAction = value;
            }
            break;
          }
          case 42: {
            string value = _single_orderId_codec.Read(input);
            if (orderId_ == null || value != "") {
              OrderId = value;
            }
            break;
          }
          case 50: {
            if (storeAttribute_ == null) {
              StoreAttribute = new global::Google.Ads.GoogleAds.V3.Common.StoreAttribute();
            }
            input.ReadMessage(StoreAttribute);
            break;
          }
          case 58: {
            string value = _single_customValue_codec.Read(input);
            if (customValue_ == null || value != "") {
              CustomValue = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Store attributes of the transaction.
  /// </summary>
  public sealed partial class StoreAttribute : pb::IMessage<StoreAttribute> {
    private static readonly pb::MessageParser<StoreAttribute> _parser = new pb::MessageParser<StoreAttribute>(() => new StoreAttribute());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StoreAttribute> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Common.OfflineUserDataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoreAttribute() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoreAttribute(StoreAttribute other) : this() {
      StoreCode = other.StoreCode;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoreAttribute Clone() {
      return new StoreAttribute(this);
    }

    /// <summary>Field number for the "store_code" field.</summary>
    public const int StoreCodeFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_storeCode_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string storeCode_;
    /// <summary>
    /// Store code from
    /// https://support.google.com/business/answer/3370250#storecode
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StoreCode {
      get { return storeCode_; }
      set {
        storeCode_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StoreAttribute);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StoreAttribute other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StoreCode != other.StoreCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (storeCode_ != null) hash ^= StoreCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (storeCode_ != null) {
        _single_storeCode_codec.WriteTagAndValue(output, StoreCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (storeCode_ != null) {
        size += _single_storeCode_codec.CalculateSizeWithTag(StoreCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StoreAttribute other) {
      if (other == null) {
        return;
      }
      if (other.storeCode_ != null) {
        if (storeCode_ == null || other.StoreCode != "") {
          StoreCode = other.StoreCode;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_storeCode_codec.Read(input);
            if (storeCode_ == null || value != "") {
              StoreCode = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// User data holding user identifiers and attributes.
  /// </summary>
  public sealed partial class UserData : pb::IMessage<UserData> {
    private static readonly pb::MessageParser<UserData> _parser = new pb::MessageParser<UserData>(() => new UserData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Common.OfflineUserDataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserData(UserData other) : this() {
      userIdentifiers_ = other.userIdentifiers_.Clone();
      transactionAttribute_ = other.transactionAttribute_ != null ? other.transactionAttribute_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserData Clone() {
      return new UserData(this);
    }

    /// <summary>Field number for the "user_identifiers" field.</summary>
    public const int UserIdentifiersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V3.Common.UserIdentifier> _repeated_userIdentifiers_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V3.Common.UserIdentifier.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Common.UserIdentifier> userIdentifiers_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Common.UserIdentifier>();
    /// <summary>
    /// User identification info. Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Common.UserIdentifier> UserIdentifiers {
      get { return userIdentifiers_; }
    }

    /// <summary>Field number for the "transaction_attribute" field.</summary>
    public const int TransactionAttributeFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V3.Common.TransactionAttribute transactionAttribute_;
    /// <summary>
    /// Additional transactions/attributes associated with the user.
    /// Required when updating store sales data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Common.TransactionAttribute TransactionAttribute {
      get { return transactionAttribute_; }
      set {
        transactionAttribute_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!userIdentifiers_.Equals(other.userIdentifiers_)) return false;
      if (!object.Equals(TransactionAttribute, other.TransactionAttribute)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= userIdentifiers_.GetHashCode();
      if (transactionAttribute_ != null) hash ^= TransactionAttribute.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      userIdentifiers_.WriteTo(output, _repeated_userIdentifiers_codec);
      if (transactionAttribute_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TransactionAttribute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += userIdentifiers_.CalculateSize(_repeated_userIdentifiers_codec);
      if (transactionAttribute_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionAttribute);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserData other) {
      if (other == null) {
        return;
      }
      userIdentifiers_.Add(other.userIdentifiers_);
      if (other.transactionAttribute_ != null) {
        if (transactionAttribute_ == null) {
          TransactionAttribute = new global::Google.Ads.GoogleAds.V3.Common.TransactionAttribute();
        }
        TransactionAttribute.MergeFrom(other.TransactionAttribute);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            userIdentifiers_.AddEntriesFrom(input, _repeated_userIdentifiers_codec);
            break;
          }
          case 18: {
            if (transactionAttribute_ == null) {
              TransactionAttribute = new global::Google.Ads.GoogleAds.V3.Common.TransactionAttribute();
            }
            input.ReadMessage(TransactionAttribute);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Metadata for customer match user list.
  /// </summary>
  public sealed partial class CustomerMatchUserListMetadata : pb::IMessage<CustomerMatchUserListMetadata> {
    private static readonly pb::MessageParser<CustomerMatchUserListMetadata> _parser = new pb::MessageParser<CustomerMatchUserListMetadata>(() => new CustomerMatchUserListMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomerMatchUserListMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Common.OfflineUserDataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerMatchUserListMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerMatchUserListMetadata(CustomerMatchUserListMetadata other) : this() {
      UserList = other.UserList;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerMatchUserListMetadata Clone() {
      return new CustomerMatchUserListMetadata(this);
    }

    /// <summary>Field number for the "user_list" field.</summary>
    public const int UserListFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_userList_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string userList_;
    /// <summary>
    /// The resource name of remarketing list to update data.
    /// Required for job of CUSTOMER_MATCH_USER_LIST type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserList {
      get { return userList_; }
      set {
        userList_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomerMatchUserListMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomerMatchUserListMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserList != other.UserList) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userList_ != null) hash ^= UserList.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userList_ != null) {
        _single_userList_codec.WriteTagAndValue(output, UserList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userList_ != null) {
        size += _single_userList_codec.CalculateSizeWithTag(UserList);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomerMatchUserListMetadata other) {
      if (other == null) {
        return;
      }
      if (other.userList_ != null) {
        if (userList_ == null || other.UserList != "") {
          UserList = other.UserList;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_userList_codec.Read(input);
            if (userList_ == null || value != "") {
              UserList = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Metadata for Store Sales Direct.
  /// </summary>
  public sealed partial class StoreSalesMetadata : pb::IMessage<StoreSalesMetadata> {
    private static readonly pb::MessageParser<StoreSalesMetadata> _parser = new pb::MessageParser<StoreSalesMetadata>(() => new StoreSalesMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StoreSalesMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Common.OfflineUserDataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoreSalesMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoreSalesMetadata(StoreSalesMetadata other) : this() {
      LoyaltyFraction = other.LoyaltyFraction;
      TransactionUploadFraction = other.TransactionUploadFraction;
      CustomKey = other.CustomKey;
      thirdPartyMetadata_ = other.thirdPartyMetadata_ != null ? other.thirdPartyMetadata_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoreSalesMetadata Clone() {
      return new StoreSalesMetadata(this);
    }

    /// <summary>Field number for the "loyalty_fraction" field.</summary>
    public const int LoyaltyFractionFieldNumber = 1;
    private static readonly pb::FieldCodec<double?> _single_loyaltyFraction_codec = pb::FieldCodec.ForStructWrapper<double>(10);
    private double? loyaltyFraction_;
    /// <summary>
    /// This is the fraction of all transactions that are identifiable (i.e.,
    /// associated with any form of customer information).
    /// Required.
    /// The fraction needs to be between 0 and 1 (excluding 0).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? LoyaltyFraction {
      get { return loyaltyFraction_; }
      set {
        loyaltyFraction_ = value;
      }
    }


    /// <summary>Field number for the "transaction_upload_fraction" field.</summary>
    public const int TransactionUploadFractionFieldNumber = 2;
    private static readonly pb::FieldCodec<double?> _single_transactionUploadFraction_codec = pb::FieldCodec.ForStructWrapper<double>(18);
    private double? transactionUploadFraction_;
    /// <summary>
    /// This is the ratio of sales being uploaded compared to the overall sales
    /// that can be associated with a customer. Required.
    /// The fraction needs to be between 0 and 1 (excluding 0). For example, if you
    /// upload half the sales that you are able to associate with a customer, this
    /// would be 0.5.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? TransactionUploadFraction {
      get { return transactionUploadFraction_; }
      set {
        transactionUploadFraction_ = value;
      }
    }


    /// <summary>Field number for the "custom_key" field.</summary>
    public const int CustomKeyFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_customKey_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string customKey_;
    /// <summary>
    /// Name of the store sales custom variable key. A predefined key that
    /// can be applied to the transaction and then later used for custom
    /// segementation in reporting.
    /// Accessible to whitelisted customers only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomKey {
      get { return customKey_; }
      set {
        customKey_ = value;
      }
    }


    /// <summary>Field number for the "third_party_metadata" field.</summary>
    public const int ThirdPartyMetadataFieldNumber = 3;
    private global::Google.Ads.GoogleAds.V3.Common.StoreSalesThirdPartyMetadata thirdPartyMetadata_;
    /// <summary>
    /// Metadata for a third party Store Sales upload.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Common.StoreSalesThirdPartyMetadata ThirdPartyMetadata {
      get { return thirdPartyMetadata_; }
      set {
        thirdPartyMetadata_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StoreSalesMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StoreSalesMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(LoyaltyFraction, other.LoyaltyFraction)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(TransactionUploadFraction, other.TransactionUploadFraction)) return false;
      if (CustomKey != other.CustomKey) return false;
      if (!object.Equals(ThirdPartyMetadata, other.ThirdPartyMetadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (loyaltyFraction_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(LoyaltyFraction);
      if (transactionUploadFraction_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(TransactionUploadFraction);
      if (customKey_ != null) hash ^= CustomKey.GetHashCode();
      if (thirdPartyMetadata_ != null) hash ^= ThirdPartyMetadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (loyaltyFraction_ != null) {
        _single_loyaltyFraction_codec.WriteTagAndValue(output, LoyaltyFraction);
      }
      if (transactionUploadFraction_ != null) {
        _single_transactionUploadFraction_codec.WriteTagAndValue(output, TransactionUploadFraction);
      }
      if (thirdPartyMetadata_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ThirdPartyMetadata);
      }
      if (customKey_ != null) {
        _single_customKey_codec.WriteTagAndValue(output, CustomKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (loyaltyFraction_ != null) {
        size += _single_loyaltyFraction_codec.CalculateSizeWithTag(LoyaltyFraction);
      }
      if (transactionUploadFraction_ != null) {
        size += _single_transactionUploadFraction_codec.CalculateSizeWithTag(TransactionUploadFraction);
      }
      if (customKey_ != null) {
        size += _single_customKey_codec.CalculateSizeWithTag(CustomKey);
      }
      if (thirdPartyMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ThirdPartyMetadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StoreSalesMetadata other) {
      if (other == null) {
        return;
      }
      if (other.loyaltyFraction_ != null) {
        if (loyaltyFraction_ == null || other.LoyaltyFraction != 0D) {
          LoyaltyFraction = other.LoyaltyFraction;
        }
      }
      if (other.transactionUploadFraction_ != null) {
        if (transactionUploadFraction_ == null || other.TransactionUploadFraction != 0D) {
          TransactionUploadFraction = other.TransactionUploadFraction;
        }
      }
      if (other.customKey_ != null) {
        if (customKey_ == null || other.CustomKey != "") {
          CustomKey = other.CustomKey;
        }
      }
      if (other.thirdPartyMetadata_ != null) {
        if (thirdPartyMetadata_ == null) {
          ThirdPartyMetadata = new global::Google.Ads.GoogleAds.V3.Common.StoreSalesThirdPartyMetadata();
        }
        ThirdPartyMetadata.MergeFrom(other.ThirdPartyMetadata);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            double? value = _single_loyaltyFraction_codec.Read(input);
            if (loyaltyFraction_ == null || value != 0D) {
              LoyaltyFraction = value;
            }
            break;
          }
          case 18: {
            double? value = _single_transactionUploadFraction_codec.Read(input);
            if (transactionUploadFraction_ == null || value != 0D) {
              TransactionUploadFraction = value;
            }
            break;
          }
          case 26: {
            if (thirdPartyMetadata_ == null) {
              ThirdPartyMetadata = new global::Google.Ads.GoogleAds.V3.Common.StoreSalesThirdPartyMetadata();
            }
            input.ReadMessage(ThirdPartyMetadata);
            break;
          }
          case 34: {
            string value = _single_customKey_codec.Read(input);
            if (customKey_ == null || value != "") {
              CustomKey = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Metadata for a third party Store Sales.
  /// This is a whitelisted only product. Please contact your Google business
  /// development representative for details on the upload configuration.
  /// </summary>
  public sealed partial class StoreSalesThirdPartyMetadata : pb::IMessage<StoreSalesThirdPartyMetadata> {
    private static readonly pb::MessageParser<StoreSalesThirdPartyMetadata> _parser = new pb::MessageParser<StoreSalesThirdPartyMetadata>(() => new StoreSalesThirdPartyMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StoreSalesThirdPartyMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Common.OfflineUserDataReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoreSalesThirdPartyMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoreSalesThirdPartyMetadata(StoreSalesThirdPartyMetadata other) : this() {
      AdvertiserUploadDateTime = other.AdvertiserUploadDateTime;
      ValidTransactionFraction = other.ValidTransactionFraction;
      PartnerMatchFraction = other.PartnerMatchFraction;
      PartnerUploadFraction = other.PartnerUploadFraction;
      BridgeMapVersionId = other.BridgeMapVersionId;
      PartnerId = other.PartnerId;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StoreSalesThirdPartyMetadata Clone() {
      return new StoreSalesThirdPartyMetadata(this);
    }

    /// <summary>Field number for the "advertiser_upload_date_time" field.</summary>
    public const int AdvertiserUploadDateTimeFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_advertiserUploadDateTime_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string advertiserUploadDateTime_;
    /// <summary>
    /// Time the advertiser uploaded the data to the partner. Required.
    /// The format is "YYYY-MM-DD HH:MM:SS".
    /// Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AdvertiserUploadDateTime {
      get { return advertiserUploadDateTime_; }
      set {
        advertiserUploadDateTime_ = value;
      }
    }


    /// <summary>Field number for the "valid_transaction_fraction" field.</summary>
    public const int ValidTransactionFractionFieldNumber = 2;
    private static readonly pb::FieldCodec<double?> _single_validTransactionFraction_codec = pb::FieldCodec.ForStructWrapper<double>(18);
    private double? validTransactionFraction_;
    /// <summary>
    /// The fraction of transactions that are valid. Invalid transactions may
    /// include invalid formats or values.
    /// Required.
    /// The fraction needs to be between 0 and 1 (excluding 0).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? ValidTransactionFraction {
      get { return validTransactionFraction_; }
      set {
        validTransactionFraction_ = value;
      }
    }


    /// <summary>Field number for the "partner_match_fraction" field.</summary>
    public const int PartnerMatchFractionFieldNumber = 3;
    private static readonly pb::FieldCodec<double?> _single_partnerMatchFraction_codec = pb::FieldCodec.ForStructWrapper<double>(26);
    private double? partnerMatchFraction_;
    /// <summary>
    /// The fraction of valid transactions that are matched to a third party
    /// assigned user ID on the partner side.
    /// Required.
    /// The fraction needs to be between 0 and 1 (excluding 0).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? PartnerMatchFraction {
      get { return partnerMatchFraction_; }
      set {
        partnerMatchFraction_ = value;
      }
    }


    /// <summary>Field number for the "partner_upload_fraction" field.</summary>
    public const int PartnerUploadFractionFieldNumber = 4;
    private static readonly pb::FieldCodec<double?> _single_partnerUploadFraction_codec = pb::FieldCodec.ForStructWrapper<double>(34);
    private double? partnerUploadFraction_;
    /// <summary>
    /// The fraction of valid transactions that are uploaded by the partner to
    /// Google.
    /// Required.
    /// The fraction needs to be between 0 and 1 (excluding 0).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? PartnerUploadFraction {
      get { return partnerUploadFraction_; }
      set {
        partnerUploadFraction_ = value;
      }
    }


    /// <summary>Field number for the "bridge_map_version_id" field.</summary>
    public const int BridgeMapVersionIdFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_bridgeMapVersionId_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string bridgeMapVersionId_;
    /// <summary>
    /// Version of partner IDs to be used for uploads. Required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BridgeMapVersionId {
      get { return bridgeMapVersionId_; }
      set {
        bridgeMapVersionId_ = value;
      }
    }


    /// <summary>Field number for the "partner_id" field.</summary>
    public const int PartnerIdFieldNumber = 6;
    private static readonly pb::FieldCodec<long?> _single_partnerId_codec = pb::FieldCodec.ForStructWrapper<long>(50);
    private long? partnerId_;
    /// <summary>
    /// ID of the third party partner updating the transaction feed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? PartnerId {
      get { return partnerId_; }
      set {
        partnerId_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StoreSalesThirdPartyMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StoreSalesThirdPartyMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AdvertiserUploadDateTime != other.AdvertiserUploadDateTime) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(ValidTransactionFraction, other.ValidTransactionFraction)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(PartnerMatchFraction, other.PartnerMatchFraction)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(PartnerUploadFraction, other.PartnerUploadFraction)) return false;
      if (BridgeMapVersionId != other.BridgeMapVersionId) return false;
      if (PartnerId != other.PartnerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (advertiserUploadDateTime_ != null) hash ^= AdvertiserUploadDateTime.GetHashCode();
      if (validTransactionFraction_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(ValidTransactionFraction);
      if (partnerMatchFraction_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(PartnerMatchFraction);
      if (partnerUploadFraction_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(PartnerUploadFraction);
      if (bridgeMapVersionId_ != null) hash ^= BridgeMapVersionId.GetHashCode();
      if (partnerId_ != null) hash ^= PartnerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (advertiserUploadDateTime_ != null) {
        _single_advertiserUploadDateTime_codec.WriteTagAndValue(output, AdvertiserUploadDateTime);
      }
      if (validTransactionFraction_ != null) {
        _single_validTransactionFraction_codec.WriteTagAndValue(output, ValidTransactionFraction);
      }
      if (partnerMatchFraction_ != null) {
        _single_partnerMatchFraction_codec.WriteTagAndValue(output, PartnerMatchFraction);
      }
      if (partnerUploadFraction_ != null) {
        _single_partnerUploadFraction_codec.WriteTagAndValue(output, PartnerUploadFraction);
      }
      if (bridgeMapVersionId_ != null) {
        _single_bridgeMapVersionId_codec.WriteTagAndValue(output, BridgeMapVersionId);
      }
      if (partnerId_ != null) {
        _single_partnerId_codec.WriteTagAndValue(output, PartnerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (advertiserUploadDateTime_ != null) {
        size += _single_advertiserUploadDateTime_codec.CalculateSizeWithTag(AdvertiserUploadDateTime);
      }
      if (validTransactionFraction_ != null) {
        size += _single_validTransactionFraction_codec.CalculateSizeWithTag(ValidTransactionFraction);
      }
      if (partnerMatchFraction_ != null) {
        size += _single_partnerMatchFraction_codec.CalculateSizeWithTag(PartnerMatchFraction);
      }
      if (partnerUploadFraction_ != null) {
        size += _single_partnerUploadFraction_codec.CalculateSizeWithTag(PartnerUploadFraction);
      }
      if (bridgeMapVersionId_ != null) {
        size += _single_bridgeMapVersionId_codec.CalculateSizeWithTag(BridgeMapVersionId);
      }
      if (partnerId_ != null) {
        size += _single_partnerId_codec.CalculateSizeWithTag(PartnerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StoreSalesThirdPartyMetadata other) {
      if (other == null) {
        return;
      }
      if (other.advertiserUploadDateTime_ != null) {
        if (advertiserUploadDateTime_ == null || other.AdvertiserUploadDateTime != "") {
          AdvertiserUploadDateTime = other.AdvertiserUploadDateTime;
        }
      }
      if (other.validTransactionFraction_ != null) {
        if (validTransactionFraction_ == null || other.ValidTransactionFraction != 0D) {
          ValidTransactionFraction = other.ValidTransactionFraction;
        }
      }
      if (other.partnerMatchFraction_ != null) {
        if (partnerMatchFraction_ == null || other.PartnerMatchFraction != 0D) {
          PartnerMatchFraction = other.PartnerMatchFraction;
        }
      }
      if (other.partnerUploadFraction_ != null) {
        if (partnerUploadFraction_ == null || other.PartnerUploadFraction != 0D) {
          PartnerUploadFraction = other.PartnerUploadFraction;
        }
      }
      if (other.bridgeMapVersionId_ != null) {
        if (bridgeMapVersionId_ == null || other.BridgeMapVersionId != "") {
          BridgeMapVersionId = other.BridgeMapVersionId;
        }
      }
      if (other.partnerId_ != null) {
        if (partnerId_ == null || other.PartnerId != 0L) {
          PartnerId = other.PartnerId;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_advertiserUploadDateTime_codec.Read(input);
            if (advertiserUploadDateTime_ == null || value != "") {
              AdvertiserUploadDateTime = value;
            }
            break;
          }
          case 18: {
            double? value = _single_validTransactionFraction_codec.Read(input);
            if (validTransactionFraction_ == null || value != 0D) {
              ValidTransactionFraction = value;
            }
            break;
          }
          case 26: {
            double? value = _single_partnerMatchFraction_codec.Read(input);
            if (partnerMatchFraction_ == null || value != 0D) {
              PartnerMatchFraction = value;
            }
            break;
          }
          case 34: {
            double? value = _single_partnerUploadFraction_codec.Read(input);
            if (partnerUploadFraction_ == null || value != 0D) {
              PartnerUploadFraction = value;
            }
            break;
          }
          case 42: {
            string value = _single_bridgeMapVersionId_codec.Read(input);
            if (bridgeMapVersionId_ == null || value != "") {
              BridgeMapVersionId = value;
            }
            break;
          }
          case 50: {
            long? value = _single_partnerId_codec.Read(input);
            if (partnerId_ == null || value != 0L) {
              PartnerId = value;
            }
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
