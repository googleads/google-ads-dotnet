// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v3/resources/asset.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V3.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v3/resources/asset.proto</summary>
  public static partial class AssetReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v3/resources/asset.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AssetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1nb29nbGUvYWRzL2dvb2dsZWFkcy92My9yZXNvdXJjZXMvYXNzZXQucHJv",
            "dG8SIWdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYzLnJlc291cmNlcxowZ29vZ2xl",
            "L2Fkcy9nb29nbGVhZHMvdjMvY29tbW9uL2Fzc2V0X3R5cGVzLnByb3RvGi5n",
            "b29nbGUvYWRzL2dvb2dsZWFkcy92My9lbnVtcy9hc3NldF90eXBlLnByb3Rv",
            "Gh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnByb3RvGhlnb29nbGUvYXBp",
            "L3Jlc291cmNlLnByb3RvGh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJv",
            "dG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8i/QQKBUFzc2V0Ej0K",
            "DXJlc291cmNlX25hbWUYASABKAlCJuBBBfpBIAoeZ29vZ2xlYWRzLmdvb2ds",
            "ZWFwaXMuY29tL0Fzc2V0EiwKAmlkGAIgASgLMhsuZ29vZ2xlLnByb3RvYnVm",
            "LkludDY0VmFsdWVCA+BBAxIqCgRuYW1lGAMgASgLMhwuZ29vZ2xlLnByb3Rv",
            "YnVmLlN0cmluZ1ZhbHVlEkkKBHR5cGUYBCABKA4yNi5nb29nbGUuYWRzLmdv",
            "b2dsZWFkcy52My5lbnVtcy5Bc3NldFR5cGVFbnVtLkFzc2V0VHlwZUID4EED",
            "ElUKE3lvdXR1YmVfdmlkZW9fYXNzZXQYBSABKAsyMS5nb29nbGUuYWRzLmdv",
            "b2dsZWFkcy52My5jb21tb24uWW91dHViZVZpZGVvQXNzZXRCA+BBBUgAElMK",
            "Em1lZGlhX2J1bmRsZV9hc3NldBgGIAEoCzIwLmdvb2dsZS5hZHMuZ29vZ2xl",
            "YWRzLnYzLmNvbW1vbi5NZWRpYUJ1bmRsZUFzc2V0QgPgQQVIABJGCgtpbWFn",
            "ZV9hc3NldBgHIAEoCzIqLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYzLmNvbW1v",
            "bi5JbWFnZUFzc2V0QgPgQQNIABJECgp0ZXh0X2Fzc2V0GAggASgLMikuZ29v",
            "Z2xlLmFkcy5nb29nbGVhZHMudjMuY29tbW9uLlRleHRBc3NldEID4EEDSAA6",
            "SOpBRQoeZ29vZ2xlYWRzLmdvb2dsZWFwaXMuY29tL0Fzc2V0EiNjdXN0b21l",
            "cnMve2N1c3RvbWVyfS9hc3NldHMve2Fzc2V0fUIMCgphc3NldF9kYXRhQvcB",
            "CiVjb20uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjMucmVzb3VyY2VzQgpBc3Nl",
            "dFByb3RvUAFaSmdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFw",
            "aXMvYWRzL2dvb2dsZWFkcy92My9yZXNvdXJjZXM7cmVzb3VyY2VzogIDR0FB",
            "qgIhR29vZ2xlLkFkcy5Hb29nbGVBZHMuVjMuUmVzb3VyY2VzygIhR29vZ2xl",
            "XEFkc1xHb29nbGVBZHNcVjNcUmVzb3VyY2Vz6gIlR29vZ2xlOjpBZHM6Okdv",
            "b2dsZUFkczo6VjM6OlJlc291cmNlc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V3.Common.AssetTypesReflection.Descriptor, global::Google.Ads.GoogleAds.V3.Enums.AssetTypeReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Resources.Asset), global::Google.Ads.GoogleAds.V3.Resources.Asset.Parser, new[]{ "ResourceName", "Id", "Name", "Type", "YoutubeVideoAsset", "MediaBundleAsset", "ImageAsset", "TextAsset" }, new[]{ "AssetData" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Asset is a part of an ad which can be shared across multiple ads.
  /// It can be an image (ImageAsset), a video (YoutubeVideoAsset), etc.
  /// </summary>
  public sealed partial class Asset : pb::IMessage<Asset> {
    private static readonly pb::MessageParser<Asset> _parser = new pb::MessageParser<Asset>(() => new Asset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Asset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Resources.AssetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Asset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Asset(Asset other) : this() {
      resourceName_ = other.resourceName_;
      Id = other.Id;
      Name = other.Name;
      type_ = other.type_;
      switch (other.AssetDataCase) {
        case AssetDataOneofCase.YoutubeVideoAsset:
          YoutubeVideoAsset = other.YoutubeVideoAsset.Clone();
          break;
        case AssetDataOneofCase.MediaBundleAsset:
          MediaBundleAsset = other.MediaBundleAsset.Clone();
          break;
        case AssetDataOneofCase.ImageAsset:
          ImageAsset = other.ImageAsset.Clone();
          break;
        case AssetDataOneofCase.TextAsset:
          TextAsset = other.TextAsset.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Asset Clone() {
      return new Asset(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// Immutable. The resource name of the asset.
    /// Asset resource names have the form:
    ///
    /// `customers/{customer_id}/assets/{asset_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_id_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? id_;
    /// <summary>
    /// Output only. The ID of the asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string name_;
    /// <summary>
    /// Optional name of the asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }


    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::Google.Ads.GoogleAds.V3.Enums.AssetTypeEnum.Types.AssetType type_ = global::Google.Ads.GoogleAds.V3.Enums.AssetTypeEnum.Types.AssetType.Unspecified;
    /// <summary>
    /// Output only. Type of the asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Enums.AssetTypeEnum.Types.AssetType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "youtube_video_asset" field.</summary>
    public const int YoutubeVideoAssetFieldNumber = 5;
    /// <summary>
    /// Immutable. A YouTube video asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Common.YoutubeVideoAsset YoutubeVideoAsset {
      get { return assetDataCase_ == AssetDataOneofCase.YoutubeVideoAsset ? (global::Google.Ads.GoogleAds.V3.Common.YoutubeVideoAsset) assetData_ : null; }
      set {
        assetData_ = value;
        assetDataCase_ = value == null ? AssetDataOneofCase.None : AssetDataOneofCase.YoutubeVideoAsset;
      }
    }

    /// <summary>Field number for the "media_bundle_asset" field.</summary>
    public const int MediaBundleAssetFieldNumber = 6;
    /// <summary>
    /// Immutable. A media bundle asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Common.MediaBundleAsset MediaBundleAsset {
      get { return assetDataCase_ == AssetDataOneofCase.MediaBundleAsset ? (global::Google.Ads.GoogleAds.V3.Common.MediaBundleAsset) assetData_ : null; }
      set {
        assetData_ = value;
        assetDataCase_ = value == null ? AssetDataOneofCase.None : AssetDataOneofCase.MediaBundleAsset;
      }
    }

    /// <summary>Field number for the "image_asset" field.</summary>
    public const int ImageAssetFieldNumber = 7;
    /// <summary>
    /// Output only. An image asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Common.ImageAsset ImageAsset {
      get { return assetDataCase_ == AssetDataOneofCase.ImageAsset ? (global::Google.Ads.GoogleAds.V3.Common.ImageAsset) assetData_ : null; }
      set {
        assetData_ = value;
        assetDataCase_ = value == null ? AssetDataOneofCase.None : AssetDataOneofCase.ImageAsset;
      }
    }

    /// <summary>Field number for the "text_asset" field.</summary>
    public const int TextAssetFieldNumber = 8;
    /// <summary>
    /// Output only. A text asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Common.TextAsset TextAsset {
      get { return assetDataCase_ == AssetDataOneofCase.TextAsset ? (global::Google.Ads.GoogleAds.V3.Common.TextAsset) assetData_ : null; }
      set {
        assetData_ = value;
        assetDataCase_ = value == null ? AssetDataOneofCase.None : AssetDataOneofCase.TextAsset;
      }
    }

    private object assetData_;
    /// <summary>Enum of possible cases for the "asset_data" oneof.</summary>
    public enum AssetDataOneofCase {
      None = 0,
      YoutubeVideoAsset = 5,
      MediaBundleAsset = 6,
      ImageAsset = 7,
      TextAsset = 8,
    }
    private AssetDataOneofCase assetDataCase_ = AssetDataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetDataOneofCase AssetDataCase {
      get { return assetDataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAssetData() {
      assetDataCase_ = AssetDataOneofCase.None;
      assetData_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Asset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Asset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(YoutubeVideoAsset, other.YoutubeVideoAsset)) return false;
      if (!object.Equals(MediaBundleAsset, other.MediaBundleAsset)) return false;
      if (!object.Equals(ImageAsset, other.ImageAsset)) return false;
      if (!object.Equals(TextAsset, other.TextAsset)) return false;
      if (AssetDataCase != other.AssetDataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (Type != global::Google.Ads.GoogleAds.V3.Enums.AssetTypeEnum.Types.AssetType.Unspecified) hash ^= Type.GetHashCode();
      if (assetDataCase_ == AssetDataOneofCase.YoutubeVideoAsset) hash ^= YoutubeVideoAsset.GetHashCode();
      if (assetDataCase_ == AssetDataOneofCase.MediaBundleAsset) hash ^= MediaBundleAsset.GetHashCode();
      if (assetDataCase_ == AssetDataOneofCase.ImageAsset) hash ^= ImageAsset.GetHashCode();
      if (assetDataCase_ == AssetDataOneofCase.TextAsset) hash ^= TextAsset.GetHashCode();
      hash ^= (int) assetDataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (Type != global::Google.Ads.GoogleAds.V3.Enums.AssetTypeEnum.Types.AssetType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (assetDataCase_ == AssetDataOneofCase.YoutubeVideoAsset) {
        output.WriteRawTag(42);
        output.WriteMessage(YoutubeVideoAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.MediaBundleAsset) {
        output.WriteRawTag(50);
        output.WriteMessage(MediaBundleAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.ImageAsset) {
        output.WriteRawTag(58);
        output.WriteMessage(ImageAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.TextAsset) {
        output.WriteRawTag(66);
        output.WriteMessage(TextAsset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (Type != global::Google.Ads.GoogleAds.V3.Enums.AssetTypeEnum.Types.AssetType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (assetDataCase_ == AssetDataOneofCase.YoutubeVideoAsset) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(YoutubeVideoAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.MediaBundleAsset) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MediaBundleAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.ImageAsset) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImageAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.TextAsset) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextAsset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Asset other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0L) {
          Id = other.Id;
        }
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.Type != global::Google.Ads.GoogleAds.V3.Enums.AssetTypeEnum.Types.AssetType.Unspecified) {
        Type = other.Type;
      }
      switch (other.AssetDataCase) {
        case AssetDataOneofCase.YoutubeVideoAsset:
          if (YoutubeVideoAsset == null) {
            YoutubeVideoAsset = new global::Google.Ads.GoogleAds.V3.Common.YoutubeVideoAsset();
          }
          YoutubeVideoAsset.MergeFrom(other.YoutubeVideoAsset);
          break;
        case AssetDataOneofCase.MediaBundleAsset:
          if (MediaBundleAsset == null) {
            MediaBundleAsset = new global::Google.Ads.GoogleAds.V3.Common.MediaBundleAsset();
          }
          MediaBundleAsset.MergeFrom(other.MediaBundleAsset);
          break;
        case AssetDataOneofCase.ImageAsset:
          if (ImageAsset == null) {
            ImageAsset = new global::Google.Ads.GoogleAds.V3.Common.ImageAsset();
          }
          ImageAsset.MergeFrom(other.ImageAsset);
          break;
        case AssetDataOneofCase.TextAsset:
          if (TextAsset == null) {
            TextAsset = new global::Google.Ads.GoogleAds.V3.Common.TextAsset();
          }
          TextAsset.MergeFrom(other.TextAsset);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 18: {
            long? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0L) {
              Id = value;
            }
            break;
          }
          case 26: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 32: {
            Type = (global::Google.Ads.GoogleAds.V3.Enums.AssetTypeEnum.Types.AssetType) input.ReadEnum();
            break;
          }
          case 42: {
            global::Google.Ads.GoogleAds.V3.Common.YoutubeVideoAsset subBuilder = new global::Google.Ads.GoogleAds.V3.Common.YoutubeVideoAsset();
            if (assetDataCase_ == AssetDataOneofCase.YoutubeVideoAsset) {
              subBuilder.MergeFrom(YoutubeVideoAsset);
            }
            input.ReadMessage(subBuilder);
            YoutubeVideoAsset = subBuilder;
            break;
          }
          case 50: {
            global::Google.Ads.GoogleAds.V3.Common.MediaBundleAsset subBuilder = new global::Google.Ads.GoogleAds.V3.Common.MediaBundleAsset();
            if (assetDataCase_ == AssetDataOneofCase.MediaBundleAsset) {
              subBuilder.MergeFrom(MediaBundleAsset);
            }
            input.ReadMessage(subBuilder);
            MediaBundleAsset = subBuilder;
            break;
          }
          case 58: {
            global::Google.Ads.GoogleAds.V3.Common.ImageAsset subBuilder = new global::Google.Ads.GoogleAds.V3.Common.ImageAsset();
            if (assetDataCase_ == AssetDataOneofCase.ImageAsset) {
              subBuilder.MergeFrom(ImageAsset);
            }
            input.ReadMessage(subBuilder);
            ImageAsset = subBuilder;
            break;
          }
          case 66: {
            global::Google.Ads.GoogleAds.V3.Common.TextAsset subBuilder = new global::Google.Ads.GoogleAds.V3.Common.TextAsset();
            if (assetDataCase_ == AssetDataOneofCase.TextAsset) {
              subBuilder.MergeFrom(TextAsset);
            }
            input.ReadMessage(subBuilder);
            TextAsset = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
