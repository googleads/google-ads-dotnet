// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v3/resources/custom_interest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V3.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v3/resources/custom_interest.proto</summary>
  public static partial class CustomInterestReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v3/resources/custom_interest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CustomInterestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjdnb29nbGUvYWRzL2dvb2dsZWFkcy92My9yZXNvdXJjZXMvY3VzdG9tX2lu",
            "dGVyZXN0LnByb3RvEiFnb29nbGUuYWRzLmdvb2dsZWFkcy52My5yZXNvdXJj",
            "ZXMaP2dvb2dsZS9hZHMvZ29vZ2xlYWRzL3YzL2VudW1zL2N1c3RvbV9pbnRl",
            "cmVzdF9tZW1iZXJfdHlwZS5wcm90bxo6Z29vZ2xlL2Fkcy9nb29nbGVhZHMv",
            "djMvZW51bXMvY3VzdG9tX2ludGVyZXN0X3N0YXR1cy5wcm90bxo4Z29vZ2xl",
            "L2Fkcy9nb29nbGVhZHMvdjMvZW51bXMvY3VzdG9tX2ludGVyZXN0X3R5cGUu",
            "cHJvdG8aH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZpb3IucHJvdG8aGWdvb2ds",
            "ZS9hcGkvcmVzb3VyY2UucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVy",
            "cy5wcm90bxocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90byLLBAoOQ3Vz",
            "dG9tSW50ZXJlc3QSRgoNcmVzb3VyY2VfbmFtZRgBIAEoCUIv4EEF+kEpCidn",
            "b29nbGVhZHMuZ29vZ2xlYXBpcy5jb20vQ3VzdG9tSW50ZXJlc3QSLAoCaWQY",
            "AiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZUID4EEDElwKBnN0",
            "YXR1cxgDIAEoDjJMLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYzLmVudW1zLkN1",
            "c3RvbUludGVyZXN0U3RhdHVzRW51bS5DdXN0b21JbnRlcmVzdFN0YXR1cxIq",
            "CgRuYW1lGAQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlElYK",
            "BHR5cGUYBSABKA4ySC5nb29nbGUuYWRzLmdvb2dsZWFkcy52My5lbnVtcy5D",
            "dXN0b21JbnRlcmVzdFR5cGVFbnVtLkN1c3RvbUludGVyZXN0VHlwZRIxCgtk",
            "ZXNjcmlwdGlvbhgGIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRJICgdtZW1iZXJzGAcgAygLMjcuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjMu",
            "cmVzb3VyY2VzLkN1c3RvbUludGVyZXN0TWVtYmVyOmTqQWEKJ2dvb2dsZWFk",
            "cy5nb29nbGVhcGlzLmNvbS9DdXN0b21JbnRlcmVzdBI2Y3VzdG9tZXJzL3tj",
            "dXN0b21lcn0vY3VzdG9tSW50ZXJlc3RzL3tjdXN0b21faW50ZXJlc3R9IrIB",
            "ChRDdXN0b21JbnRlcmVzdE1lbWJlchJpCgttZW1iZXJfdHlwZRgBIAEoDjJU",
            "Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYzLmVudW1zLkN1c3RvbUludGVyZXN0",
            "TWVtYmVyVHlwZUVudW0uQ3VzdG9tSW50ZXJlc3RNZW1iZXJUeXBlEi8KCXBh",
            "cmFtZXRlchgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZUKA",
            "AgolY29tLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYzLnJlc291cmNlc0ITQ3Vz",
            "dG9tSW50ZXJlc3RQcm90b1ABWkpnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90",
            "by9nb29nbGVhcGlzL2Fkcy9nb29nbGVhZHMvdjMvcmVzb3VyY2VzO3Jlc291",
            "cmNlc6ICA0dBQaoCIUdvb2dsZS5BZHMuR29vZ2xlQWRzLlYzLlJlc291cmNl",
            "c8oCIUdvb2dsZVxBZHNcR29vZ2xlQWRzXFYzXFJlc291cmNlc+oCJUdvb2ds",
            "ZTo6QWRzOjpHb29nbGVBZHM6OlYzOjpSZXNvdXJjZXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V3.Enums.CustomInterestMemberTypeReflection.Descriptor, global::Google.Ads.GoogleAds.V3.Enums.CustomInterestStatusReflection.Descriptor, global::Google.Ads.GoogleAds.V3.Enums.CustomInterestTypeReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Resources.CustomInterest), global::Google.Ads.GoogleAds.V3.Resources.CustomInterest.Parser, new[]{ "ResourceName", "Id", "Status", "Name", "Type", "Description", "Members" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Resources.CustomInterestMember), global::Google.Ads.GoogleAds.V3.Resources.CustomInterestMember.Parser, new[]{ "MemberType", "Parameter" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A custom interest. This is a list of users by interest.
  /// </summary>
  public sealed partial class CustomInterest : pb::IMessage<CustomInterest> {
    private static readonly pb::MessageParser<CustomInterest> _parser = new pb::MessageParser<CustomInterest>(() => new CustomInterest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomInterest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Resources.CustomInterestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomInterest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomInterest(CustomInterest other) : this() {
      resourceName_ = other.resourceName_;
      Id = other.Id;
      status_ = other.status_;
      Name = other.Name;
      type_ = other.type_;
      Description = other.Description;
      members_ = other.members_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomInterest Clone() {
      return new CustomInterest(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// Immutable. The resource name of the custom interest.
    /// Custom interest resource names have the form:
    ///
    /// `customers/{customer_id}/customInterests/{custom_interest_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_id_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? id_;
    /// <summary>
    /// Output only. Id of the custom interest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Google.Ads.GoogleAds.V3.Enums.CustomInterestStatusEnum.Types.CustomInterestStatus status_ = global::Google.Ads.GoogleAds.V3.Enums.CustomInterestStatusEnum.Types.CustomInterestStatus.Unspecified;
    /// <summary>
    /// Status of this custom interest. Indicates whether the custom interest is
    /// enabled or removed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Enums.CustomInterestStatusEnum.Types.CustomInterestStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string name_;
    /// <summary>
    /// Name of the custom interest. It should be unique across the same custom
    /// affinity audience.
    /// This field is required for create operations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }


    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::Google.Ads.GoogleAds.V3.Enums.CustomInterestTypeEnum.Types.CustomInterestType type_ = global::Google.Ads.GoogleAds.V3.Enums.CustomInterestTypeEnum.Types.CustomInterestType.Unspecified;
    /// <summary>
    /// Type of the custom interest, CUSTOM_AFFINITY or CUSTOM_INTENT.
    /// By default the type is set to CUSTOM_AFFINITY.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Enums.CustomInterestTypeEnum.Types.CustomInterestType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string description_;
    /// <summary>
    /// Description of this custom interest audience.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    /// <summary>Field number for the "members" field.</summary>
    public const int MembersFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V3.Resources.CustomInterestMember> _repeated_members_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Ads.GoogleAds.V3.Resources.CustomInterestMember.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Resources.CustomInterestMember> members_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Resources.CustomInterestMember>();
    /// <summary>
    /// List of custom interest members that this custom interest is composed of.
    /// Members can be added during CustomInterest creation. If members are
    /// presented in UPDATE operation, existing members will be overridden.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Resources.CustomInterestMember> Members {
      get { return members_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomInterest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomInterest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (Id != other.Id) return false;
      if (Status != other.Status) return false;
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (Description != other.Description) return false;
      if(!members_.Equals(other.members_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (Status != global::Google.Ads.GoogleAds.V3.Enums.CustomInterestStatusEnum.Types.CustomInterestStatus.Unspecified) hash ^= Status.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (Type != global::Google.Ads.GoogleAds.V3.Enums.CustomInterestTypeEnum.Types.CustomInterestType.Unspecified) hash ^= Type.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      hash ^= members_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (Status != global::Google.Ads.GoogleAds.V3.Enums.CustomInterestStatusEnum.Types.CustomInterestStatus.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Status);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (Type != global::Google.Ads.GoogleAds.V3.Enums.CustomInterestTypeEnum.Types.CustomInterestType.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      members_.WriteTo(output, _repeated_members_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (Status != global::Google.Ads.GoogleAds.V3.Enums.CustomInterestStatusEnum.Types.CustomInterestStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (Type != global::Google.Ads.GoogleAds.V3.Enums.CustomInterestTypeEnum.Types.CustomInterestType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      size += members_.CalculateSize(_repeated_members_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomInterest other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0L) {
          Id = other.Id;
        }
      }
      if (other.Status != global::Google.Ads.GoogleAds.V3.Enums.CustomInterestStatusEnum.Types.CustomInterestStatus.Unspecified) {
        Status = other.Status;
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.Type != global::Google.Ads.GoogleAds.V3.Enums.CustomInterestTypeEnum.Types.CustomInterestType.Unspecified) {
        Type = other.Type;
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      members_.Add(other.members_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 18: {
            long? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0L) {
              Id = value;
            }
            break;
          }
          case 24: {
            Status = (global::Google.Ads.GoogleAds.V3.Enums.CustomInterestStatusEnum.Types.CustomInterestStatus) input.ReadEnum();
            break;
          }
          case 34: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 40: {
            Type = (global::Google.Ads.GoogleAds.V3.Enums.CustomInterestTypeEnum.Types.CustomInterestType) input.ReadEnum();
            break;
          }
          case 50: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 58: {
            members_.AddEntriesFrom(input, _repeated_members_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A member of custom interest audience. A member can be a keyword or url.
  /// It is immutable, that is, it can only be created or removed but not changed.
  /// </summary>
  public sealed partial class CustomInterestMember : pb::IMessage<CustomInterestMember> {
    private static readonly pb::MessageParser<CustomInterestMember> _parser = new pb::MessageParser<CustomInterestMember>(() => new CustomInterestMember());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomInterestMember> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Resources.CustomInterestReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomInterestMember() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomInterestMember(CustomInterestMember other) : this() {
      memberType_ = other.memberType_;
      Parameter = other.Parameter;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomInterestMember Clone() {
      return new CustomInterestMember(this);
    }

    /// <summary>Field number for the "member_type" field.</summary>
    public const int MemberTypeFieldNumber = 1;
    private global::Google.Ads.GoogleAds.V3.Enums.CustomInterestMemberTypeEnum.Types.CustomInterestMemberType memberType_ = global::Google.Ads.GoogleAds.V3.Enums.CustomInterestMemberTypeEnum.Types.CustomInterestMemberType.Unspecified;
    /// <summary>
    /// The type of custom interest member, KEYWORD or URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Enums.CustomInterestMemberTypeEnum.Types.CustomInterestMemberType MemberType {
      get { return memberType_; }
      set {
        memberType_ = value;
      }
    }

    /// <summary>Field number for the "parameter" field.</summary>
    public const int ParameterFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_parameter_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string parameter_;
    /// <summary>
    /// Keyword text when member_type is KEYWORD or URL string when
    /// member_type is URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parameter {
      get { return parameter_; }
      set {
        parameter_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomInterestMember);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomInterestMember other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemberType != other.MemberType) return false;
      if (Parameter != other.Parameter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemberType != global::Google.Ads.GoogleAds.V3.Enums.CustomInterestMemberTypeEnum.Types.CustomInterestMemberType.Unspecified) hash ^= MemberType.GetHashCode();
      if (parameter_ != null) hash ^= Parameter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemberType != global::Google.Ads.GoogleAds.V3.Enums.CustomInterestMemberTypeEnum.Types.CustomInterestMemberType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MemberType);
      }
      if (parameter_ != null) {
        _single_parameter_codec.WriteTagAndValue(output, Parameter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemberType != global::Google.Ads.GoogleAds.V3.Enums.CustomInterestMemberTypeEnum.Types.CustomInterestMemberType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MemberType);
      }
      if (parameter_ != null) {
        size += _single_parameter_codec.CalculateSizeWithTag(Parameter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomInterestMember other) {
      if (other == null) {
        return;
      }
      if (other.MemberType != global::Google.Ads.GoogleAds.V3.Enums.CustomInterestMemberTypeEnum.Types.CustomInterestMemberType.Unspecified) {
        MemberType = other.MemberType;
      }
      if (other.parameter_ != null) {
        if (parameter_ == null || other.Parameter != "") {
          Parameter = other.Parameter;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MemberType = (global::Google.Ads.GoogleAds.V3.Enums.CustomInterestMemberTypeEnum.Types.CustomInterestMemberType) input.ReadEnum();
            break;
          }
          case 18: {
            string value = _single_parameter_codec.Read(input);
            if (parameter_ == null || value != "") {
              Parameter = value;
            }
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
