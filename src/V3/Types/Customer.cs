// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v3/resources/customer.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V3.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v3/resources/customer.proto</summary>
  public static partial class CustomerReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v3/resources/customer.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CustomerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBnb29nbGUvYWRzL2dvb2dsZWFkcy92My9yZXNvdXJjZXMvY3VzdG9tZXIu",
            "cHJvdG8SIWdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYzLnJlc291cmNlcxpaZ29v",
            "Z2xlL2Fkcy9nb29nbGVhZHMvdjMvZW51bXMvY3VzdG9tZXJfcGF5X3Blcl9j",
            "b252ZXJzaW9uX2VsaWdpYmlsaXR5X2ZhaWx1cmVfcmVhc29uLnByb3RvGh9n",
            "b29nbGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnByb3RvGhlnb29nbGUvYXBpL3Jl",
            "c291cmNlLnByb3RvGh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8a",
            "HGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8ilAkKCEN1c3RvbWVyEkAK",
            "DXJlc291cmNlX25hbWUYASABKAlCKeBBBfpBIwohZ29vZ2xlYWRzLmdvb2ds",
            "ZWFwaXMuY29tL0N1c3RvbWVyEiwKAmlkGAMgASgLMhsuZ29vZ2xlLnByb3Rv",
            "YnVmLkludDY0VmFsdWVCA+BBAxI2ChBkZXNjcmlwdGl2ZV9uYW1lGAQgASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjgKDWN1cnJlbmN5X2Nv",
            "ZGUYBSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWVCA+BBBRI0",
            "Cgl0aW1lX3pvbmUYBiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFs",
            "dWVCA+BBBRI7ChV0cmFja2luZ191cmxfdGVtcGxhdGUYByABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSNgoQZmluYWxfdXJsX3N1ZmZpeBgL",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI4ChRhdXRvX3Rh",
            "Z2dpbmdfZW5hYmxlZBgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFs",
            "dWUSOwoSaGFzX3BhcnRuZXJzX2JhZGdlGAkgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLkJvb2xWYWx1ZUID4EEDEjAKB21hbmFnZXIYDCABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuQm9vbFZhbHVlQgPgQQMSNQoMdGVzdF9hY2NvdW50GA0gASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZUID4EEDElcKFmNhbGxfcmVw",
            "b3J0aW5nX3NldHRpbmcYCiABKAsyNy5nb29nbGUuYWRzLmdvb2dsZWFkcy52",
            "My5yZXNvdXJjZXMuQ2FsbFJlcG9ydGluZ1NldHRpbmcSZgobY29udmVyc2lv",
            "bl90cmFja2luZ19zZXR0aW5nGA4gASgLMjwuZ29vZ2xlLmFkcy5nb29nbGVh",
            "ZHMudjMucmVzb3VyY2VzLkNvbnZlcnNpb25UcmFja2luZ1NldHRpbmdCA+BB",
            "AxJXChNyZW1hcmtldGluZ19zZXR0aW5nGA8gASgLMjUuZ29vZ2xlLmFkcy5n",
            "b29nbGVhZHMudjMucmVzb3VyY2VzLlJlbWFya2V0aW5nU2V0dGluZ0ID4EED",
            "EsIBCi5wYXlfcGVyX2NvbnZlcnNpb25fZWxpZ2liaWxpdHlfZmFpbHVyZV9y",
            "ZWFzb25zGBAgAygOMoQBLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYzLmVudW1z",
            "LkN1c3RvbWVyUGF5UGVyQ29udmVyc2lvbkVsaWdpYmlsaXR5RmFpbHVyZVJl",
            "YXNvbkVudW0uQ3VzdG9tZXJQYXlQZXJDb252ZXJzaW9uRWxpZ2liaWxpdHlG",
            "YWlsdXJlUmVhc29uQgPgQQM6POpBOQohZ29vZ2xlYWRzLmdvb2dsZWFwaXMu",
            "Y29tL0N1c3RvbWVyEhRjdXN0b21lcnMve2N1c3RvbWVyfSKHAgoUQ2FsbFJl",
            "cG9ydGluZ1NldHRpbmcSOgoWY2FsbF9yZXBvcnRpbmdfZW5hYmxlZBgBIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUSRQohY2FsbF9jb252ZXJz",
            "aW9uX3JlcG9ydGluZ19lbmFibGVkGAIgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LkJvb2xWYWx1ZRJsChZjYWxsX2NvbnZlcnNpb25fYWN0aW9uGAkgASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlQi76QSsKKWdvb2dsZWFkcy5n",
            "b29nbGVhcGlzLmNvbS9Db252ZXJzaW9uQWN0aW9uIq0BChlDb252ZXJzaW9u",
            "VHJhY2tpbmdTZXR0aW5nEkAKFmNvbnZlcnNpb25fdHJhY2tpbmdfaWQYASAB",
            "KAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZUID4EEDEk4KJGNyb3Nz",
            "X2FjY291bnRfY29udmVyc2lvbl90cmFja2luZ19pZBgCIAEoCzIbLmdvb2ds",
            "ZS5wcm90b2J1Zi5JbnQ2NFZhbHVlQgPgQQMiVwoSUmVtYXJrZXRpbmdTZXR0",
            "aW5nEkEKFmdvb2dsZV9nbG9iYWxfc2l0ZV90YWcYASABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWVCA+BBA0L6AQolY29tLmdvb2dsZS5hZHMu",
            "Z29vZ2xlYWRzLnYzLnJlc291cmNlc0INQ3VzdG9tZXJQcm90b1ABWkpnb29n",
            "bGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2Fkcy9nb29nbGVh",
            "ZHMvdjMvcmVzb3VyY2VzO3Jlc291cmNlc6ICA0dBQaoCIUdvb2dsZS5BZHMu",
            "R29vZ2xlQWRzLlYzLlJlc291cmNlc8oCIUdvb2dsZVxBZHNcR29vZ2xlQWRz",
            "XFYzXFJlc291cmNlc+oCJUdvb2dsZTo6QWRzOjpHb29nbGVBZHM6OlYzOjpS",
            "ZXNvdXJjZXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V3.Enums.CustomerPayPerConversionEligibilityFailureReasonReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Resources.Customer), global::Google.Ads.GoogleAds.V3.Resources.Customer.Parser, new[]{ "ResourceName", "Id", "DescriptiveName", "CurrencyCode", "TimeZone", "TrackingUrlTemplate", "FinalUrlSuffix", "AutoTaggingEnabled", "HasPartnersBadge", "Manager", "TestAccount", "CallReportingSetting", "ConversionTrackingSetting", "RemarketingSetting", "PayPerConversionEligibilityFailureReasons" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Resources.CallReportingSetting), global::Google.Ads.GoogleAds.V3.Resources.CallReportingSetting.Parser, new[]{ "CallReportingEnabled", "CallConversionReportingEnabled", "CallConversionAction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Resources.ConversionTrackingSetting), global::Google.Ads.GoogleAds.V3.Resources.ConversionTrackingSetting.Parser, new[]{ "ConversionTrackingId", "CrossAccountConversionTrackingId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Resources.RemarketingSetting), global::Google.Ads.GoogleAds.V3.Resources.RemarketingSetting.Parser, new[]{ "GoogleGlobalSiteTag" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A customer.
  /// </summary>
  public sealed partial class Customer : pb::IMessage<Customer> {
    private static readonly pb::MessageParser<Customer> _parser = new pb::MessageParser<Customer>(() => new Customer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Customer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Resources.CustomerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Customer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Customer(Customer other) : this() {
      resourceName_ = other.resourceName_;
      Id = other.Id;
      DescriptiveName = other.DescriptiveName;
      CurrencyCode = other.CurrencyCode;
      TimeZone = other.TimeZone;
      TrackingUrlTemplate = other.TrackingUrlTemplate;
      FinalUrlSuffix = other.FinalUrlSuffix;
      AutoTaggingEnabled = other.AutoTaggingEnabled;
      HasPartnersBadge = other.HasPartnersBadge;
      Manager = other.Manager;
      TestAccount = other.TestAccount;
      callReportingSetting_ = other.callReportingSetting_ != null ? other.callReportingSetting_.Clone() : null;
      conversionTrackingSetting_ = other.conversionTrackingSetting_ != null ? other.conversionTrackingSetting_.Clone() : null;
      remarketingSetting_ = other.remarketingSetting_ != null ? other.remarketingSetting_.Clone() : null;
      payPerConversionEligibilityFailureReasons_ = other.payPerConversionEligibilityFailureReasons_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Customer Clone() {
      return new Customer(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// Immutable. The resource name of the customer.
    /// Customer resource names have the form:
    ///
    /// `customers/{customer_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private static readonly pb::FieldCodec<long?> _single_id_codec = pb::FieldCodec.ForStructWrapper<long>(26);
    private long? id_;
    /// <summary>
    /// Output only. The ID of the customer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "descriptive_name" field.</summary>
    public const int DescriptiveNameFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_descriptiveName_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string descriptiveName_;
    /// <summary>
    /// Optional, non-unique descriptive name of the customer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptiveName {
      get { return descriptiveName_; }
      set {
        descriptiveName_ = value;
      }
    }


    /// <summary>Field number for the "currency_code" field.</summary>
    public const int CurrencyCodeFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_currencyCode_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string currencyCode_;
    /// <summary>
    /// Immutable. The currency in which the account operates.
    /// A subset of the currency codes from the ISO 4217 standard is
    /// supported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = value;
      }
    }


    /// <summary>Field number for the "time_zone" field.</summary>
    public const int TimeZoneFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_timeZone_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string timeZone_;
    /// <summary>
    /// Immutable. The local timezone ID of the customer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeZone {
      get { return timeZone_; }
      set {
        timeZone_ = value;
      }
    }


    /// <summary>Field number for the "tracking_url_template" field.</summary>
    public const int TrackingUrlTemplateFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_trackingUrlTemplate_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string trackingUrlTemplate_;
    /// <summary>
    /// The URL template for constructing a tracking URL out of parameters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TrackingUrlTemplate {
      get { return trackingUrlTemplate_; }
      set {
        trackingUrlTemplate_ = value;
      }
    }


    /// <summary>Field number for the "final_url_suffix" field.</summary>
    public const int FinalUrlSuffixFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_finalUrlSuffix_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string finalUrlSuffix_;
    /// <summary>
    /// The URL template for appending params to the final URL
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FinalUrlSuffix {
      get { return finalUrlSuffix_; }
      set {
        finalUrlSuffix_ = value;
      }
    }


    /// <summary>Field number for the "auto_tagging_enabled" field.</summary>
    public const int AutoTaggingEnabledFieldNumber = 8;
    private static readonly pb::FieldCodec<bool?> _single_autoTaggingEnabled_codec = pb::FieldCodec.ForStructWrapper<bool>(66);
    private bool? autoTaggingEnabled_;
    /// <summary>
    /// Whether auto-tagging is enabled for the customer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? AutoTaggingEnabled {
      get { return autoTaggingEnabled_; }
      set {
        autoTaggingEnabled_ = value;
      }
    }


    /// <summary>Field number for the "has_partners_badge" field.</summary>
    public const int HasPartnersBadgeFieldNumber = 9;
    private static readonly pb::FieldCodec<bool?> _single_hasPartnersBadge_codec = pb::FieldCodec.ForStructWrapper<bool>(74);
    private bool? hasPartnersBadge_;
    /// <summary>
    /// Output only. Whether the Customer has a Partners program badge. If the Customer is not
    /// associated with the Partners program, this will be false. For more
    /// information, see https://support.google.com/partners/answer/3125774.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? HasPartnersBadge {
      get { return hasPartnersBadge_; }
      set {
        hasPartnersBadge_ = value;
      }
    }


    /// <summary>Field number for the "manager" field.</summary>
    public const int ManagerFieldNumber = 12;
    private static readonly pb::FieldCodec<bool?> _single_manager_codec = pb::FieldCodec.ForStructWrapper<bool>(98);
    private bool? manager_;
    /// <summary>
    /// Output only. Whether the customer is a manager.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? Manager {
      get { return manager_; }
      set {
        manager_ = value;
      }
    }


    /// <summary>Field number for the "test_account" field.</summary>
    public const int TestAccountFieldNumber = 13;
    private static readonly pb::FieldCodec<bool?> _single_testAccount_codec = pb::FieldCodec.ForStructWrapper<bool>(106);
    private bool? testAccount_;
    /// <summary>
    /// Output only. Whether the customer is a test account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? TestAccount {
      get { return testAccount_; }
      set {
        testAccount_ = value;
      }
    }


    /// <summary>Field number for the "call_reporting_setting" field.</summary>
    public const int CallReportingSettingFieldNumber = 10;
    private global::Google.Ads.GoogleAds.V3.Resources.CallReportingSetting callReportingSetting_;
    /// <summary>
    /// Call reporting setting for a customer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Resources.CallReportingSetting CallReportingSetting {
      get { return callReportingSetting_; }
      set {
        callReportingSetting_ = value;
      }
    }

    /// <summary>Field number for the "conversion_tracking_setting" field.</summary>
    public const int ConversionTrackingSettingFieldNumber = 14;
    private global::Google.Ads.GoogleAds.V3.Resources.ConversionTrackingSetting conversionTrackingSetting_;
    /// <summary>
    /// Output only. Conversion tracking setting for a customer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Resources.ConversionTrackingSetting ConversionTrackingSetting {
      get { return conversionTrackingSetting_; }
      set {
        conversionTrackingSetting_ = value;
      }
    }

    /// <summary>Field number for the "remarketing_setting" field.</summary>
    public const int RemarketingSettingFieldNumber = 15;
    private global::Google.Ads.GoogleAds.V3.Resources.RemarketingSetting remarketingSetting_;
    /// <summary>
    /// Output only. Remarketing setting for a customer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Resources.RemarketingSetting RemarketingSetting {
      get { return remarketingSetting_; }
      set {
        remarketingSetting_ = value;
      }
    }

    /// <summary>Field number for the "pay_per_conversion_eligibility_failure_reasons" field.</summary>
    public const int PayPerConversionEligibilityFailureReasonsFieldNumber = 16;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V3.Enums.CustomerPayPerConversionEligibilityFailureReasonEnum.Types.CustomerPayPerConversionEligibilityFailureReason> _repeated_payPerConversionEligibilityFailureReasons_codec
        = pb::FieldCodec.ForEnum(130, x => (int) x, x => (global::Google.Ads.GoogleAds.V3.Enums.CustomerPayPerConversionEligibilityFailureReasonEnum.Types.CustomerPayPerConversionEligibilityFailureReason) x);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Enums.CustomerPayPerConversionEligibilityFailureReasonEnum.Types.CustomerPayPerConversionEligibilityFailureReason> payPerConversionEligibilityFailureReasons_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Enums.CustomerPayPerConversionEligibilityFailureReasonEnum.Types.CustomerPayPerConversionEligibilityFailureReason>();
    /// <summary>
    /// Output only. Reasons why the customer is not eligible to use PaymentMode.CONVERSIONS. If
    /// the list is empty, the customer is eligible. This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Enums.CustomerPayPerConversionEligibilityFailureReasonEnum.Types.CustomerPayPerConversionEligibilityFailureReason> PayPerConversionEligibilityFailureReasons {
      get { return payPerConversionEligibilityFailureReasons_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Customer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Customer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (Id != other.Id) return false;
      if (DescriptiveName != other.DescriptiveName) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (TimeZone != other.TimeZone) return false;
      if (TrackingUrlTemplate != other.TrackingUrlTemplate) return false;
      if (FinalUrlSuffix != other.FinalUrlSuffix) return false;
      if (AutoTaggingEnabled != other.AutoTaggingEnabled) return false;
      if (HasPartnersBadge != other.HasPartnersBadge) return false;
      if (Manager != other.Manager) return false;
      if (TestAccount != other.TestAccount) return false;
      if (!object.Equals(CallReportingSetting, other.CallReportingSetting)) return false;
      if (!object.Equals(ConversionTrackingSetting, other.ConversionTrackingSetting)) return false;
      if (!object.Equals(RemarketingSetting, other.RemarketingSetting)) return false;
      if(!payPerConversionEligibilityFailureReasons_.Equals(other.payPerConversionEligibilityFailureReasons_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (descriptiveName_ != null) hash ^= DescriptiveName.GetHashCode();
      if (currencyCode_ != null) hash ^= CurrencyCode.GetHashCode();
      if (timeZone_ != null) hash ^= TimeZone.GetHashCode();
      if (trackingUrlTemplate_ != null) hash ^= TrackingUrlTemplate.GetHashCode();
      if (finalUrlSuffix_ != null) hash ^= FinalUrlSuffix.GetHashCode();
      if (autoTaggingEnabled_ != null) hash ^= AutoTaggingEnabled.GetHashCode();
      if (hasPartnersBadge_ != null) hash ^= HasPartnersBadge.GetHashCode();
      if (manager_ != null) hash ^= Manager.GetHashCode();
      if (testAccount_ != null) hash ^= TestAccount.GetHashCode();
      if (callReportingSetting_ != null) hash ^= CallReportingSetting.GetHashCode();
      if (conversionTrackingSetting_ != null) hash ^= ConversionTrackingSetting.GetHashCode();
      if (remarketingSetting_ != null) hash ^= RemarketingSetting.GetHashCode();
      hash ^= payPerConversionEligibilityFailureReasons_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (descriptiveName_ != null) {
        _single_descriptiveName_codec.WriteTagAndValue(output, DescriptiveName);
      }
      if (currencyCode_ != null) {
        _single_currencyCode_codec.WriteTagAndValue(output, CurrencyCode);
      }
      if (timeZone_ != null) {
        _single_timeZone_codec.WriteTagAndValue(output, TimeZone);
      }
      if (trackingUrlTemplate_ != null) {
        _single_trackingUrlTemplate_codec.WriteTagAndValue(output, TrackingUrlTemplate);
      }
      if (autoTaggingEnabled_ != null) {
        _single_autoTaggingEnabled_codec.WriteTagAndValue(output, AutoTaggingEnabled);
      }
      if (hasPartnersBadge_ != null) {
        _single_hasPartnersBadge_codec.WriteTagAndValue(output, HasPartnersBadge);
      }
      if (callReportingSetting_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CallReportingSetting);
      }
      if (finalUrlSuffix_ != null) {
        _single_finalUrlSuffix_codec.WriteTagAndValue(output, FinalUrlSuffix);
      }
      if (manager_ != null) {
        _single_manager_codec.WriteTagAndValue(output, Manager);
      }
      if (testAccount_ != null) {
        _single_testAccount_codec.WriteTagAndValue(output, TestAccount);
      }
      if (conversionTrackingSetting_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ConversionTrackingSetting);
      }
      if (remarketingSetting_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(RemarketingSetting);
      }
      payPerConversionEligibilityFailureReasons_.WriteTo(output, _repeated_payPerConversionEligibilityFailureReasons_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (descriptiveName_ != null) {
        size += _single_descriptiveName_codec.CalculateSizeWithTag(DescriptiveName);
      }
      if (currencyCode_ != null) {
        size += _single_currencyCode_codec.CalculateSizeWithTag(CurrencyCode);
      }
      if (timeZone_ != null) {
        size += _single_timeZone_codec.CalculateSizeWithTag(TimeZone);
      }
      if (trackingUrlTemplate_ != null) {
        size += _single_trackingUrlTemplate_codec.CalculateSizeWithTag(TrackingUrlTemplate);
      }
      if (finalUrlSuffix_ != null) {
        size += _single_finalUrlSuffix_codec.CalculateSizeWithTag(FinalUrlSuffix);
      }
      if (autoTaggingEnabled_ != null) {
        size += _single_autoTaggingEnabled_codec.CalculateSizeWithTag(AutoTaggingEnabled);
      }
      if (hasPartnersBadge_ != null) {
        size += _single_hasPartnersBadge_codec.CalculateSizeWithTag(HasPartnersBadge);
      }
      if (manager_ != null) {
        size += _single_manager_codec.CalculateSizeWithTag(Manager);
      }
      if (testAccount_ != null) {
        size += _single_testAccount_codec.CalculateSizeWithTag(TestAccount);
      }
      if (callReportingSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CallReportingSetting);
      }
      if (conversionTrackingSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversionTrackingSetting);
      }
      if (remarketingSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemarketingSetting);
      }
      size += payPerConversionEligibilityFailureReasons_.CalculateSize(_repeated_payPerConversionEligibilityFailureReasons_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Customer other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0L) {
          Id = other.Id;
        }
      }
      if (other.descriptiveName_ != null) {
        if (descriptiveName_ == null || other.DescriptiveName != "") {
          DescriptiveName = other.DescriptiveName;
        }
      }
      if (other.currencyCode_ != null) {
        if (currencyCode_ == null || other.CurrencyCode != "") {
          CurrencyCode = other.CurrencyCode;
        }
      }
      if (other.timeZone_ != null) {
        if (timeZone_ == null || other.TimeZone != "") {
          TimeZone = other.TimeZone;
        }
      }
      if (other.trackingUrlTemplate_ != null) {
        if (trackingUrlTemplate_ == null || other.TrackingUrlTemplate != "") {
          TrackingUrlTemplate = other.TrackingUrlTemplate;
        }
      }
      if (other.finalUrlSuffix_ != null) {
        if (finalUrlSuffix_ == null || other.FinalUrlSuffix != "") {
          FinalUrlSuffix = other.FinalUrlSuffix;
        }
      }
      if (other.autoTaggingEnabled_ != null) {
        if (autoTaggingEnabled_ == null || other.AutoTaggingEnabled != false) {
          AutoTaggingEnabled = other.AutoTaggingEnabled;
        }
      }
      if (other.hasPartnersBadge_ != null) {
        if (hasPartnersBadge_ == null || other.HasPartnersBadge != false) {
          HasPartnersBadge = other.HasPartnersBadge;
        }
      }
      if (other.manager_ != null) {
        if (manager_ == null || other.Manager != false) {
          Manager = other.Manager;
        }
      }
      if (other.testAccount_ != null) {
        if (testAccount_ == null || other.TestAccount != false) {
          TestAccount = other.TestAccount;
        }
      }
      if (other.callReportingSetting_ != null) {
        if (callReportingSetting_ == null) {
          CallReportingSetting = new global::Google.Ads.GoogleAds.V3.Resources.CallReportingSetting();
        }
        CallReportingSetting.MergeFrom(other.CallReportingSetting);
      }
      if (other.conversionTrackingSetting_ != null) {
        if (conversionTrackingSetting_ == null) {
          ConversionTrackingSetting = new global::Google.Ads.GoogleAds.V3.Resources.ConversionTrackingSetting();
        }
        ConversionTrackingSetting.MergeFrom(other.ConversionTrackingSetting);
      }
      if (other.remarketingSetting_ != null) {
        if (remarketingSetting_ == null) {
          RemarketingSetting = new global::Google.Ads.GoogleAds.V3.Resources.RemarketingSetting();
        }
        RemarketingSetting.MergeFrom(other.RemarketingSetting);
      }
      payPerConversionEligibilityFailureReasons_.Add(other.payPerConversionEligibilityFailureReasons_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 26: {
            long? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0L) {
              Id = value;
            }
            break;
          }
          case 34: {
            string value = _single_descriptiveName_codec.Read(input);
            if (descriptiveName_ == null || value != "") {
              DescriptiveName = value;
            }
            break;
          }
          case 42: {
            string value = _single_currencyCode_codec.Read(input);
            if (currencyCode_ == null || value != "") {
              CurrencyCode = value;
            }
            break;
          }
          case 50: {
            string value = _single_timeZone_codec.Read(input);
            if (timeZone_ == null || value != "") {
              TimeZone = value;
            }
            break;
          }
          case 58: {
            string value = _single_trackingUrlTemplate_codec.Read(input);
            if (trackingUrlTemplate_ == null || value != "") {
              TrackingUrlTemplate = value;
            }
            break;
          }
          case 66: {
            bool? value = _single_autoTaggingEnabled_codec.Read(input);
            if (autoTaggingEnabled_ == null || value != false) {
              AutoTaggingEnabled = value;
            }
            break;
          }
          case 74: {
            bool? value = _single_hasPartnersBadge_codec.Read(input);
            if (hasPartnersBadge_ == null || value != false) {
              HasPartnersBadge = value;
            }
            break;
          }
          case 82: {
            if (callReportingSetting_ == null) {
              CallReportingSetting = new global::Google.Ads.GoogleAds.V3.Resources.CallReportingSetting();
            }
            input.ReadMessage(CallReportingSetting);
            break;
          }
          case 90: {
            string value = _single_finalUrlSuffix_codec.Read(input);
            if (finalUrlSuffix_ == null || value != "") {
              FinalUrlSuffix = value;
            }
            break;
          }
          case 98: {
            bool? value = _single_manager_codec.Read(input);
            if (manager_ == null || value != false) {
              Manager = value;
            }
            break;
          }
          case 106: {
            bool? value = _single_testAccount_codec.Read(input);
            if (testAccount_ == null || value != false) {
              TestAccount = value;
            }
            break;
          }
          case 114: {
            if (conversionTrackingSetting_ == null) {
              ConversionTrackingSetting = new global::Google.Ads.GoogleAds.V3.Resources.ConversionTrackingSetting();
            }
            input.ReadMessage(ConversionTrackingSetting);
            break;
          }
          case 122: {
            if (remarketingSetting_ == null) {
              RemarketingSetting = new global::Google.Ads.GoogleAds.V3.Resources.RemarketingSetting();
            }
            input.ReadMessage(RemarketingSetting);
            break;
          }
          case 130:
          case 128: {
            payPerConversionEligibilityFailureReasons_.AddEntriesFrom(input, _repeated_payPerConversionEligibilityFailureReasons_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Call reporting setting for a customer.
  /// </summary>
  public sealed partial class CallReportingSetting : pb::IMessage<CallReportingSetting> {
    private static readonly pb::MessageParser<CallReportingSetting> _parser = new pb::MessageParser<CallReportingSetting>(() => new CallReportingSetting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CallReportingSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Resources.CustomerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallReportingSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallReportingSetting(CallReportingSetting other) : this() {
      CallReportingEnabled = other.CallReportingEnabled;
      CallConversionReportingEnabled = other.CallConversionReportingEnabled;
      CallConversionAction = other.CallConversionAction;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallReportingSetting Clone() {
      return new CallReportingSetting(this);
    }

    /// <summary>Field number for the "call_reporting_enabled" field.</summary>
    public const int CallReportingEnabledFieldNumber = 1;
    private static readonly pb::FieldCodec<bool?> _single_callReportingEnabled_codec = pb::FieldCodec.ForStructWrapper<bool>(10);
    private bool? callReportingEnabled_;
    /// <summary>
    /// Enable reporting of phone call events by redirecting them via Google
    /// System.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? CallReportingEnabled {
      get { return callReportingEnabled_; }
      set {
        callReportingEnabled_ = value;
      }
    }


    /// <summary>Field number for the "call_conversion_reporting_enabled" field.</summary>
    public const int CallConversionReportingEnabledFieldNumber = 2;
    private static readonly pb::FieldCodec<bool?> _single_callConversionReportingEnabled_codec = pb::FieldCodec.ForStructWrapper<bool>(18);
    private bool? callConversionReportingEnabled_;
    /// <summary>
    /// Whether to enable call conversion reporting.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? CallConversionReportingEnabled {
      get { return callConversionReportingEnabled_; }
      set {
        callConversionReportingEnabled_ = value;
      }
    }


    /// <summary>Field number for the "call_conversion_action" field.</summary>
    public const int CallConversionActionFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_callConversionAction_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string callConversionAction_;
    /// <summary>
    /// Customer-level call conversion action to attribute a call conversion to.
    /// If not set a default conversion action is used. Only in effect when
    /// call_conversion_reporting_enabled is set to true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CallConversionAction {
      get { return callConversionAction_; }
      set {
        callConversionAction_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CallReportingSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CallReportingSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CallReportingEnabled != other.CallReportingEnabled) return false;
      if (CallConversionReportingEnabled != other.CallConversionReportingEnabled) return false;
      if (CallConversionAction != other.CallConversionAction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (callReportingEnabled_ != null) hash ^= CallReportingEnabled.GetHashCode();
      if (callConversionReportingEnabled_ != null) hash ^= CallConversionReportingEnabled.GetHashCode();
      if (callConversionAction_ != null) hash ^= CallConversionAction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (callReportingEnabled_ != null) {
        _single_callReportingEnabled_codec.WriteTagAndValue(output, CallReportingEnabled);
      }
      if (callConversionReportingEnabled_ != null) {
        _single_callConversionReportingEnabled_codec.WriteTagAndValue(output, CallConversionReportingEnabled);
      }
      if (callConversionAction_ != null) {
        _single_callConversionAction_codec.WriteTagAndValue(output, CallConversionAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (callReportingEnabled_ != null) {
        size += _single_callReportingEnabled_codec.CalculateSizeWithTag(CallReportingEnabled);
      }
      if (callConversionReportingEnabled_ != null) {
        size += _single_callConversionReportingEnabled_codec.CalculateSizeWithTag(CallConversionReportingEnabled);
      }
      if (callConversionAction_ != null) {
        size += _single_callConversionAction_codec.CalculateSizeWithTag(CallConversionAction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CallReportingSetting other) {
      if (other == null) {
        return;
      }
      if (other.callReportingEnabled_ != null) {
        if (callReportingEnabled_ == null || other.CallReportingEnabled != false) {
          CallReportingEnabled = other.CallReportingEnabled;
        }
      }
      if (other.callConversionReportingEnabled_ != null) {
        if (callConversionReportingEnabled_ == null || other.CallConversionReportingEnabled != false) {
          CallConversionReportingEnabled = other.CallConversionReportingEnabled;
        }
      }
      if (other.callConversionAction_ != null) {
        if (callConversionAction_ == null || other.CallConversionAction != "") {
          CallConversionAction = other.CallConversionAction;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bool? value = _single_callReportingEnabled_codec.Read(input);
            if (callReportingEnabled_ == null || value != false) {
              CallReportingEnabled = value;
            }
            break;
          }
          case 18: {
            bool? value = _single_callConversionReportingEnabled_codec.Read(input);
            if (callConversionReportingEnabled_ == null || value != false) {
              CallConversionReportingEnabled = value;
            }
            break;
          }
          case 74: {
            string value = _single_callConversionAction_codec.Read(input);
            if (callConversionAction_ == null || value != "") {
              CallConversionAction = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A collection of customer-wide settings related to Google Ads Conversion
  /// Tracking.
  /// </summary>
  public sealed partial class ConversionTrackingSetting : pb::IMessage<ConversionTrackingSetting> {
    private static readonly pb::MessageParser<ConversionTrackingSetting> _parser = new pb::MessageParser<ConversionTrackingSetting>(() => new ConversionTrackingSetting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConversionTrackingSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Resources.CustomerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConversionTrackingSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConversionTrackingSetting(ConversionTrackingSetting other) : this() {
      ConversionTrackingId = other.ConversionTrackingId;
      CrossAccountConversionTrackingId = other.CrossAccountConversionTrackingId;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConversionTrackingSetting Clone() {
      return new ConversionTrackingSetting(this);
    }

    /// <summary>Field number for the "conversion_tracking_id" field.</summary>
    public const int ConversionTrackingIdFieldNumber = 1;
    private static readonly pb::FieldCodec<long?> _single_conversionTrackingId_codec = pb::FieldCodec.ForStructWrapper<long>(10);
    private long? conversionTrackingId_;
    /// <summary>
    /// Output only. The conversion tracking id used for this account. This id is automatically
    /// assigned after any conversion tracking feature is used. If the customer
    /// doesn't use conversion tracking, this is 0. This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? ConversionTrackingId {
      get { return conversionTrackingId_; }
      set {
        conversionTrackingId_ = value;
      }
    }


    /// <summary>Field number for the "cross_account_conversion_tracking_id" field.</summary>
    public const int CrossAccountConversionTrackingIdFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_crossAccountConversionTrackingId_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? crossAccountConversionTrackingId_;
    /// <summary>
    /// Output only. The conversion tracking id of the customer's manager. This is set when the
    /// customer is opted into cross account conversion tracking, and it overrides
    /// conversion_tracking_id. This field can only be managed through the Google
    /// Ads UI. This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? CrossAccountConversionTrackingId {
      get { return crossAccountConversionTrackingId_; }
      set {
        crossAccountConversionTrackingId_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConversionTrackingSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConversionTrackingSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConversionTrackingId != other.ConversionTrackingId) return false;
      if (CrossAccountConversionTrackingId != other.CrossAccountConversionTrackingId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (conversionTrackingId_ != null) hash ^= ConversionTrackingId.GetHashCode();
      if (crossAccountConversionTrackingId_ != null) hash ^= CrossAccountConversionTrackingId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (conversionTrackingId_ != null) {
        _single_conversionTrackingId_codec.WriteTagAndValue(output, ConversionTrackingId);
      }
      if (crossAccountConversionTrackingId_ != null) {
        _single_crossAccountConversionTrackingId_codec.WriteTagAndValue(output, CrossAccountConversionTrackingId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (conversionTrackingId_ != null) {
        size += _single_conversionTrackingId_codec.CalculateSizeWithTag(ConversionTrackingId);
      }
      if (crossAccountConversionTrackingId_ != null) {
        size += _single_crossAccountConversionTrackingId_codec.CalculateSizeWithTag(CrossAccountConversionTrackingId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConversionTrackingSetting other) {
      if (other == null) {
        return;
      }
      if (other.conversionTrackingId_ != null) {
        if (conversionTrackingId_ == null || other.ConversionTrackingId != 0L) {
          ConversionTrackingId = other.ConversionTrackingId;
        }
      }
      if (other.crossAccountConversionTrackingId_ != null) {
        if (crossAccountConversionTrackingId_ == null || other.CrossAccountConversionTrackingId != 0L) {
          CrossAccountConversionTrackingId = other.CrossAccountConversionTrackingId;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            long? value = _single_conversionTrackingId_codec.Read(input);
            if (conversionTrackingId_ == null || value != 0L) {
              ConversionTrackingId = value;
            }
            break;
          }
          case 18: {
            long? value = _single_crossAccountConversionTrackingId_codec.Read(input);
            if (crossAccountConversionTrackingId_ == null || value != 0L) {
              CrossAccountConversionTrackingId = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Remarketing setting for a customer.
  /// </summary>
  public sealed partial class RemarketingSetting : pb::IMessage<RemarketingSetting> {
    private static readonly pb::MessageParser<RemarketingSetting> _parser = new pb::MessageParser<RemarketingSetting>(() => new RemarketingSetting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemarketingSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Resources.CustomerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarketingSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarketingSetting(RemarketingSetting other) : this() {
      GoogleGlobalSiteTag = other.GoogleGlobalSiteTag;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarketingSetting Clone() {
      return new RemarketingSetting(this);
    }

    /// <summary>Field number for the "google_global_site_tag" field.</summary>
    public const int GoogleGlobalSiteTagFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_googleGlobalSiteTag_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string googleGlobalSiteTag_;
    /// <summary>
    /// Output only. The Google global site tag.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GoogleGlobalSiteTag {
      get { return googleGlobalSiteTag_; }
      set {
        googleGlobalSiteTag_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemarketingSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemarketingSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GoogleGlobalSiteTag != other.GoogleGlobalSiteTag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (googleGlobalSiteTag_ != null) hash ^= GoogleGlobalSiteTag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (googleGlobalSiteTag_ != null) {
        _single_googleGlobalSiteTag_codec.WriteTagAndValue(output, GoogleGlobalSiteTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (googleGlobalSiteTag_ != null) {
        size += _single_googleGlobalSiteTag_codec.CalculateSizeWithTag(GoogleGlobalSiteTag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemarketingSetting other) {
      if (other == null) {
        return;
      }
      if (other.googleGlobalSiteTag_ != null) {
        if (googleGlobalSiteTag_ == null || other.GoogleGlobalSiteTag != "") {
          GoogleGlobalSiteTag = other.GoogleGlobalSiteTag;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_googleGlobalSiteTag_codec.Read(input);
            if (googleGlobalSiteTag_ == null || value != "") {
              GoogleGlobalSiteTag = value;
            }
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
