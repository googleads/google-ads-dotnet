// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v3/resources/feed_item.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V3.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v3/resources/feed_item.proto</summary>
  public static partial class FeedItemReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v3/resources/feed_item.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FeedItemReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFnb29nbGUvYWRzL2dvb2dsZWFkcy92My9yZXNvdXJjZXMvZmVlZF9pdGVt",
            "LnByb3RvEiFnb29nbGUuYWRzLmdvb2dsZWFkcy52My5yZXNvdXJjZXMaNWdv",
            "b2dsZS9hZHMvZ29vZ2xlYWRzL3YzL2NvbW1vbi9jdXN0b21fcGFyYW1ldGVy",
            "LnByb3RvGjBnb29nbGUvYWRzL2dvb2dsZWFkcy92My9jb21tb24vZmVlZF9j",
            "b21tb24ucHJvdG8aK2dvb2dsZS9hZHMvZ29vZ2xlYWRzL3YzL2NvbW1vbi9w",
            "b2xpY3kucHJvdG8aRWdvb2dsZS9hZHMvZ29vZ2xlYWRzL3YzL2VudW1zL2Zl",
            "ZWRfaXRlbV9xdWFsaXR5X2FwcHJvdmFsX3N0YXR1cy5wcm90bxpIZ29vZ2xl",
            "L2Fkcy9nb29nbGVhZHMvdjMvZW51bXMvZmVlZF9pdGVtX3F1YWxpdHlfZGlz",
            "YXBwcm92YWxfcmVhc29uLnByb3RvGjRnb29nbGUvYWRzL2dvb2dsZWFkcy92",
            "My9lbnVtcy9mZWVkX2l0ZW1fc3RhdHVzLnByb3RvGj9nb29nbGUvYWRzL2dv",
            "b2dsZWFkcy92My9lbnVtcy9mZWVkX2l0ZW1fdmFsaWRhdGlvbl9zdGF0dXMu",
            "cHJvdG8aPWdvb2dsZS9hZHMvZ29vZ2xlYWRzL3YzL2VudW1zL2dlb190YXJn",
            "ZXRpbmdfcmVzdHJpY3Rpb24ucHJvdG8aNGdvb2dsZS9hZHMvZ29vZ2xlYWRz",
            "L3YzL2VudW1zL3BsYWNlaG9sZGVyX3R5cGUucHJvdG8aOmdvb2dsZS9hZHMv",
            "Z29vZ2xlYWRzL3YzL2VudW1zL3BvbGljeV9hcHByb3ZhbF9zdGF0dXMucHJv",
            "dG8aOGdvb2dsZS9hZHMvZ29vZ2xlYWRzL3YzL2VudW1zL3BvbGljeV9yZXZp",
            "ZXdfc3RhdHVzLnByb3RvGj9nb29nbGUvYWRzL2dvb2dsZWFkcy92My9lcnJv",
            "cnMvZmVlZF9pdGVtX3ZhbGlkYXRpb25fZXJyb3IucHJvdG8aH2dvb2dsZS9h",
            "cGkvZmllbGRfYmVoYXZpb3IucHJvdG8aGWdvb2dsZS9hcGkvcmVzb3VyY2Uu",
            "cHJvdG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90bxocZ29vZ2xl",
            "L2FwaS9hbm5vdGF0aW9ucy5wcm90byLdBgoIRmVlZEl0ZW0SQAoNcmVzb3Vy",
            "Y2VfbmFtZRgBIAEoCUIp4EEF+kEjCiFnb29nbGVhZHMuZ29vZ2xlYXBpcy5j",
            "b20vRmVlZEl0ZW0SUQoEZmVlZBgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZUIl4EEF+kEfCh1nb29nbGVhZHMuZ29vZ2xlYXBpcy5jb20v",
            "RmVlZBIsCgJpZBgDIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVl",
            "QgPgQQMSNQoPc3RhcnRfZGF0ZV90aW1lGAQgASgLMhwuZ29vZ2xlLnByb3Rv",
            "YnVmLlN0cmluZ1ZhbHVlEjMKDWVuZF9kYXRlX3RpbWUYBSABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSUwoQYXR0cmlidXRlX3ZhbHVlcxgG",
            "IAMoCzI5Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYzLnJlc291cmNlcy5GZWVk",
            "SXRlbUF0dHJpYnV0ZVZhbHVlEnUKGWdlb190YXJnZXRpbmdfcmVzdHJpY3Rp",
            "b24YByABKA4yUi5nb29nbGUuYWRzLmdvb2dsZWFkcy52My5lbnVtcy5HZW9U",
            "YXJnZXRpbmdSZXN0cmljdGlvbkVudW0uR2VvVGFyZ2V0aW5nUmVzdHJpY3Rp",
            "b24STgoVdXJsX2N1c3RvbV9wYXJhbWV0ZXJzGAggAygLMi8uZ29vZ2xlLmFk",
            "cy5nb29nbGVhZHMudjMuY29tbW9uLkN1c3RvbVBhcmFtZXRlchJVCgZzdGF0",
            "dXMYCSABKA4yQC5nb29nbGUuYWRzLmdvb2dsZWFkcy52My5lbnVtcy5GZWVk",
            "SXRlbVN0YXR1c0VudW0uRmVlZEl0ZW1TdGF0dXNCA+BBAxJbCgxwb2xpY3lf",
            "aW5mb3MYCiADKAsyQC5nb29nbGUuYWRzLmdvb2dsZWFkcy52My5yZXNvdXJj",
            "ZXMuRmVlZEl0ZW1QbGFjZWhvbGRlclBvbGljeUluZm9CA+BBAzpS6kFPCiFn",
            "b29nbGVhZHMuZ29vZ2xlYXBpcy5jb20vRmVlZEl0ZW0SKmN1c3RvbWVycy97",
            "Y3VzdG9tZXJ9L2ZlZWRJdGVtcy97ZmVlZF9pdGVtfSKuBAoWRmVlZEl0ZW1B",
            "dHRyaWJ1dGVWYWx1ZRI2ChFmZWVkX2F0dHJpYnV0ZV9pZBgBIAEoCzIbLmdv",
            "b2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEjIKDWludGVnZXJfdmFsdWUYAiAB",
            "KAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZRIxCg1ib29sZWFuX3Zh",
            "bHVlGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRIyCgxzdHJp",
            "bmdfdmFsdWUYBCABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUS",
            "MgoMZG91YmxlX3ZhbHVlGAUgASgLMhwuZ29vZ2xlLnByb3RvYnVmLkRvdWJs",
            "ZVZhbHVlEjoKC3ByaWNlX3ZhbHVlGAYgASgLMiUuZ29vZ2xlLmFkcy5nb29n",
            "bGVhZHMudjMuY29tbW9uLk1vbmV5EjMKDmludGVnZXJfdmFsdWVzGAcgAygL",
            "MhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSMgoOYm9vbGVhbl92YWx1",
            "ZXMYCCADKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlEjMKDXN0cmlu",
            "Z192YWx1ZXMYCSADKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUS",
            "MwoNZG91YmxlX3ZhbHVlcxgKIAMoCzIcLmdvb2dsZS5wcm90b2J1Zi5Eb3Vi",
            "bGVWYWx1ZSLfBwodRmVlZEl0ZW1QbGFjZWhvbGRlclBvbGljeUluZm8SZgoV",
            "cGxhY2Vob2xkZXJfdHlwZV9lbnVtGAogASgOMkIuZ29vZ2xlLmFkcy5nb29n",
            "bGVhZHMudjMuZW51bXMuUGxhY2Vob2xkZXJUeXBlRW51bS5QbGFjZWhvbGRl",
            "clR5cGVCA+BBAxJFChpmZWVkX21hcHBpbmdfcmVzb3VyY2VfbmFtZRgCIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZUID4EEDEmQKDXJldmll",
            "d19zdGF0dXMYAyABKA4ySC5nb29nbGUuYWRzLmdvb2dsZWFkcy52My5lbnVt",
            "cy5Qb2xpY3lSZXZpZXdTdGF0dXNFbnVtLlBvbGljeVJldmlld1N0YXR1c0ID",
            "4EEDEmoKD2FwcHJvdmFsX3N0YXR1cxgEIAEoDjJMLmdvb2dsZS5hZHMuZ29v",
            "Z2xlYWRzLnYzLmVudW1zLlBvbGljeUFwcHJvdmFsU3RhdHVzRW51bS5Qb2xp",
            "Y3lBcHByb3ZhbFN0YXR1c0ID4EEDElMKFHBvbGljeV90b3BpY19lbnRyaWVz",
            "GAUgAygLMjAuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjMuY29tbW9uLlBvbGlj",
            "eVRvcGljRW50cnlCA+BBAxJ0ChF2YWxpZGF0aW9uX3N0YXR1cxgGIAEoDjJU",
            "Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYzLmVudW1zLkZlZWRJdGVtVmFsaWRh",
            "dGlvblN0YXR1c0VudW0uRmVlZEl0ZW1WYWxpZGF0aW9uU3RhdHVzQgPgQQMS",
            "WgoRdmFsaWRhdGlvbl9lcnJvcnMYByADKAsyOi5nb29nbGUuYWRzLmdvb2ds",
            "ZWFkcy52My5yZXNvdXJjZXMuRmVlZEl0ZW1WYWxpZGF0aW9uRXJyb3JCA+BB",
            "AxKEAQoXcXVhbGl0eV9hcHByb3ZhbF9zdGF0dXMYCCABKA4yXi5nb29nbGUu",
            "YWRzLmdvb2dsZWFkcy52My5lbnVtcy5GZWVkSXRlbVF1YWxpdHlBcHByb3Zh",
            "bFN0YXR1c0VudW0uRmVlZEl0ZW1RdWFsaXR5QXBwcm92YWxTdGF0dXNCA+BB",
            "AxKOAQobcXVhbGl0eV9kaXNhcHByb3ZhbF9yZWFzb25zGAkgAygOMmQuZ29v",
            "Z2xlLmFkcy5nb29nbGVhZHMudjMuZW51bXMuRmVlZEl0ZW1RdWFsaXR5RGlz",
            "YXBwcm92YWxSZWFzb25FbnVtLkZlZWRJdGVtUXVhbGl0eURpc2FwcHJvdmFs",
            "UmVhc29uQgPgQQMiugIKF0ZlZWRJdGVtVmFsaWRhdGlvbkVycm9yEnIKEHZh",
            "bGlkYXRpb25fZXJyb3IYASABKA4yUy5nb29nbGUuYWRzLmdvb2dsZWFkcy52",
            "My5lcnJvcnMuRmVlZEl0ZW1WYWxpZGF0aW9uRXJyb3JFbnVtLkZlZWRJdGVt",
            "VmFsaWRhdGlvbkVycm9yQgPgQQMSNgoLZGVzY3JpcHRpb24YAiABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWVCA+BBAxI8ChJmZWVkX2F0dHJp",
            "YnV0ZV9pZHMYAyADKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZUID",
            "4EEDEjUKCmV4dHJhX2luZm8YBSABKAsyHC5nb29nbGUucHJvdG9idWYuU3Ry",
            "aW5nVmFsdWVCA+BBA0L6AQolY29tLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnYz",
            "LnJlc291cmNlc0INRmVlZEl0ZW1Qcm90b1ABWkpnb29nbGUuZ29sYW5nLm9y",
            "Zy9nZW5wcm90by9nb29nbGVhcGlzL2Fkcy9nb29nbGVhZHMvdjMvcmVzb3Vy",
            "Y2VzO3Jlc291cmNlc6ICA0dBQaoCIUdvb2dsZS5BZHMuR29vZ2xlQWRzLlYz",
            "LlJlc291cmNlc8oCIUdvb2dsZVxBZHNcR29vZ2xlQWRzXFYzXFJlc291cmNl",
            "c+oCJUdvb2dsZTo6QWRzOjpHb29nbGVBZHM6OlYzOjpSZXNvdXJjZXNiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V3.Common.CustomParameterReflection.Descriptor, global::Google.Ads.GoogleAds.V3.Common.FeedCommonReflection.Descriptor, global::Google.Ads.GoogleAds.V3.Common.PolicyReflection.Descriptor, global::Google.Ads.GoogleAds.V3.Enums.FeedItemQualityApprovalStatusReflection.Descriptor, global::Google.Ads.GoogleAds.V3.Enums.FeedItemQualityDisapprovalReasonReflection.Descriptor, global::Google.Ads.GoogleAds.V3.Enums.FeedItemStatusReflection.Descriptor, global::Google.Ads.GoogleAds.V3.Enums.FeedItemValidationStatusReflection.Descriptor, global::Google.Ads.GoogleAds.V3.Enums.GeoTargetingRestrictionReflection.Descriptor, global::Google.Ads.GoogleAds.V3.Enums.PlaceholderTypeReflection.Descriptor, global::Google.Ads.GoogleAds.V3.Enums.PolicyApprovalStatusReflection.Descriptor, global::Google.Ads.GoogleAds.V3.Enums.PolicyReviewStatusReflection.Descriptor, global::Google.Ads.GoogleAds.V3.Errors.FeedItemValidationErrorReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Resources.FeedItem), global::Google.Ads.GoogleAds.V3.Resources.FeedItem.Parser, new[]{ "ResourceName", "Feed", "Id", "StartDateTime", "EndDateTime", "AttributeValues", "GeoTargetingRestriction", "UrlCustomParameters", "Status", "PolicyInfos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Resources.FeedItemAttributeValue), global::Google.Ads.GoogleAds.V3.Resources.FeedItemAttributeValue.Parser, new[]{ "FeedAttributeId", "IntegerValue", "BooleanValue", "StringValue", "DoubleValue", "PriceValue", "IntegerValues", "BooleanValues", "StringValues", "DoubleValues" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Resources.FeedItemPlaceholderPolicyInfo), global::Google.Ads.GoogleAds.V3.Resources.FeedItemPlaceholderPolicyInfo.Parser, new[]{ "PlaceholderTypeEnum", "FeedMappingResourceName", "ReviewStatus", "ApprovalStatus", "PolicyTopicEntries", "ValidationStatus", "ValidationErrors", "QualityApprovalStatus", "QualityDisapprovalReasons" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V3.Resources.FeedItemValidationError), global::Google.Ads.GoogleAds.V3.Resources.FeedItemValidationError.Parser, new[]{ "ValidationError", "Description", "FeedAttributeIds", "ExtraInfo" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A feed item.
  /// </summary>
  public sealed partial class FeedItem : pb::IMessage<FeedItem> {
    private static readonly pb::MessageParser<FeedItem> _parser = new pb::MessageParser<FeedItem>(() => new FeedItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Resources.FeedItemReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItem(FeedItem other) : this() {
      resourceName_ = other.resourceName_;
      Feed = other.Feed;
      Id = other.Id;
      StartDateTime = other.StartDateTime;
      EndDateTime = other.EndDateTime;
      attributeValues_ = other.attributeValues_.Clone();
      geoTargetingRestriction_ = other.geoTargetingRestriction_;
      urlCustomParameters_ = other.urlCustomParameters_.Clone();
      status_ = other.status_;
      policyInfos_ = other.policyInfos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItem Clone() {
      return new FeedItem(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// Immutable. The resource name of the feed item.
    /// Feed item resource names have the form:
    ///
    /// `customers/{customer_id}/feedItems/{feed_id}~{feed_item_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "feed" field.</summary>
    public const int FeedFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_feed_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string feed_;
    /// <summary>
    /// Immutable. The feed to which this feed item belongs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Feed {
      get { return feed_; }
      set {
        feed_ = value;
      }
    }


    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private static readonly pb::FieldCodec<long?> _single_id_codec = pb::FieldCodec.ForStructWrapper<long>(26);
    private long? id_;
    /// <summary>
    /// Output only. The ID of this feed item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "start_date_time" field.</summary>
    public const int StartDateTimeFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_startDateTime_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string startDateTime_;
    /// <summary>
    /// Start time in which this feed item is effective and can begin serving. The
    /// time is in the customer's time zone.
    /// The format is "YYYY-MM-DD HH:MM:SS".
    /// Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartDateTime {
      get { return startDateTime_; }
      set {
        startDateTime_ = value;
      }
    }


    /// <summary>Field number for the "end_date_time" field.</summary>
    public const int EndDateTimeFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_endDateTime_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string endDateTime_;
    /// <summary>
    /// End time in which this feed item is no longer effective and will stop
    /// serving. The time is in the customer's time zone.
    /// The format is "YYYY-MM-DD HH:MM:SS".
    /// Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndDateTime {
      get { return endDateTime_; }
      set {
        endDateTime_ = value;
      }
    }


    /// <summary>Field number for the "attribute_values" field.</summary>
    public const int AttributeValuesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V3.Resources.FeedItemAttributeValue> _repeated_attributeValues_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Ads.GoogleAds.V3.Resources.FeedItemAttributeValue.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Resources.FeedItemAttributeValue> attributeValues_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Resources.FeedItemAttributeValue>();
    /// <summary>
    /// The feed item's attribute values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Resources.FeedItemAttributeValue> AttributeValues {
      get { return attributeValues_; }
    }

    /// <summary>Field number for the "geo_targeting_restriction" field.</summary>
    public const int GeoTargetingRestrictionFieldNumber = 7;
    private global::Google.Ads.GoogleAds.V3.Enums.GeoTargetingRestrictionEnum.Types.GeoTargetingRestriction geoTargetingRestriction_ = global::Google.Ads.GoogleAds.V3.Enums.GeoTargetingRestrictionEnum.Types.GeoTargetingRestriction.Unspecified;
    /// <summary>
    /// Geo targeting restriction specifies the type of location that can be used
    /// for targeting.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Enums.GeoTargetingRestrictionEnum.Types.GeoTargetingRestriction GeoTargetingRestriction {
      get { return geoTargetingRestriction_; }
      set {
        geoTargetingRestriction_ = value;
      }
    }

    /// <summary>Field number for the "url_custom_parameters" field.</summary>
    public const int UrlCustomParametersFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V3.Common.CustomParameter> _repeated_urlCustomParameters_codec
        = pb::FieldCodec.ForMessage(66, global::Google.Ads.GoogleAds.V3.Common.CustomParameter.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Common.CustomParameter> urlCustomParameters_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Common.CustomParameter>();
    /// <summary>
    /// The list of mappings used to substitute custom parameter tags in a
    /// `tracking_url_template`, `final_urls`, or `mobile_final_urls`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Common.CustomParameter> UrlCustomParameters {
      get { return urlCustomParameters_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 9;
    private global::Google.Ads.GoogleAds.V3.Enums.FeedItemStatusEnum.Types.FeedItemStatus status_ = global::Google.Ads.GoogleAds.V3.Enums.FeedItemStatusEnum.Types.FeedItemStatus.Unspecified;
    /// <summary>
    /// Output only. Status of the feed item.
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Enums.FeedItemStatusEnum.Types.FeedItemStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "policy_infos" field.</summary>
    public const int PolicyInfosFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V3.Resources.FeedItemPlaceholderPolicyInfo> _repeated_policyInfos_codec
        = pb::FieldCodec.ForMessage(82, global::Google.Ads.GoogleAds.V3.Resources.FeedItemPlaceholderPolicyInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Resources.FeedItemPlaceholderPolicyInfo> policyInfos_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Resources.FeedItemPlaceholderPolicyInfo>();
    /// <summary>
    /// Output only. List of info about a feed item's validation and approval state for active
    /// feed mappings. There will be an entry in the list for each type of feed
    /// mapping associated with the feed, e.g. a feed with a sitelink and a call
    /// feed mapping would cause every feed item associated with that feed to have
    /// an entry in this list for both sitelink and call.
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Resources.FeedItemPlaceholderPolicyInfo> PolicyInfos {
      get { return policyInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (Feed != other.Feed) return false;
      if (Id != other.Id) return false;
      if (StartDateTime != other.StartDateTime) return false;
      if (EndDateTime != other.EndDateTime) return false;
      if(!attributeValues_.Equals(other.attributeValues_)) return false;
      if (GeoTargetingRestriction != other.GeoTargetingRestriction) return false;
      if(!urlCustomParameters_.Equals(other.urlCustomParameters_)) return false;
      if (Status != other.Status) return false;
      if(!policyInfos_.Equals(other.policyInfos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (feed_ != null) hash ^= Feed.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (startDateTime_ != null) hash ^= StartDateTime.GetHashCode();
      if (endDateTime_ != null) hash ^= EndDateTime.GetHashCode();
      hash ^= attributeValues_.GetHashCode();
      if (GeoTargetingRestriction != global::Google.Ads.GoogleAds.V3.Enums.GeoTargetingRestrictionEnum.Types.GeoTargetingRestriction.Unspecified) hash ^= GeoTargetingRestriction.GetHashCode();
      hash ^= urlCustomParameters_.GetHashCode();
      if (Status != global::Google.Ads.GoogleAds.V3.Enums.FeedItemStatusEnum.Types.FeedItemStatus.Unspecified) hash ^= Status.GetHashCode();
      hash ^= policyInfos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (feed_ != null) {
        _single_feed_codec.WriteTagAndValue(output, Feed);
      }
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (startDateTime_ != null) {
        _single_startDateTime_codec.WriteTagAndValue(output, StartDateTime);
      }
      if (endDateTime_ != null) {
        _single_endDateTime_codec.WriteTagAndValue(output, EndDateTime);
      }
      attributeValues_.WriteTo(output, _repeated_attributeValues_codec);
      if (GeoTargetingRestriction != global::Google.Ads.GoogleAds.V3.Enums.GeoTargetingRestrictionEnum.Types.GeoTargetingRestriction.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) GeoTargetingRestriction);
      }
      urlCustomParameters_.WriteTo(output, _repeated_urlCustomParameters_codec);
      if (Status != global::Google.Ads.GoogleAds.V3.Enums.FeedItemStatusEnum.Types.FeedItemStatus.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Status);
      }
      policyInfos_.WriteTo(output, _repeated_policyInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (feed_ != null) {
        size += _single_feed_codec.CalculateSizeWithTag(Feed);
      }
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (startDateTime_ != null) {
        size += _single_startDateTime_codec.CalculateSizeWithTag(StartDateTime);
      }
      if (endDateTime_ != null) {
        size += _single_endDateTime_codec.CalculateSizeWithTag(EndDateTime);
      }
      size += attributeValues_.CalculateSize(_repeated_attributeValues_codec);
      if (GeoTargetingRestriction != global::Google.Ads.GoogleAds.V3.Enums.GeoTargetingRestrictionEnum.Types.GeoTargetingRestriction.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GeoTargetingRestriction);
      }
      size += urlCustomParameters_.CalculateSize(_repeated_urlCustomParameters_codec);
      if (Status != global::Google.Ads.GoogleAds.V3.Enums.FeedItemStatusEnum.Types.FeedItemStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += policyInfos_.CalculateSize(_repeated_policyInfos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedItem other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.feed_ != null) {
        if (feed_ == null || other.Feed != "") {
          Feed = other.Feed;
        }
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0L) {
          Id = other.Id;
        }
      }
      if (other.startDateTime_ != null) {
        if (startDateTime_ == null || other.StartDateTime != "") {
          StartDateTime = other.StartDateTime;
        }
      }
      if (other.endDateTime_ != null) {
        if (endDateTime_ == null || other.EndDateTime != "") {
          EndDateTime = other.EndDateTime;
        }
      }
      attributeValues_.Add(other.attributeValues_);
      if (other.GeoTargetingRestriction != global::Google.Ads.GoogleAds.V3.Enums.GeoTargetingRestrictionEnum.Types.GeoTargetingRestriction.Unspecified) {
        GeoTargetingRestriction = other.GeoTargetingRestriction;
      }
      urlCustomParameters_.Add(other.urlCustomParameters_);
      if (other.Status != global::Google.Ads.GoogleAds.V3.Enums.FeedItemStatusEnum.Types.FeedItemStatus.Unspecified) {
        Status = other.Status;
      }
      policyInfos_.Add(other.policyInfos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 18: {
            string value = _single_feed_codec.Read(input);
            if (feed_ == null || value != "") {
              Feed = value;
            }
            break;
          }
          case 26: {
            long? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0L) {
              Id = value;
            }
            break;
          }
          case 34: {
            string value = _single_startDateTime_codec.Read(input);
            if (startDateTime_ == null || value != "") {
              StartDateTime = value;
            }
            break;
          }
          case 42: {
            string value = _single_endDateTime_codec.Read(input);
            if (endDateTime_ == null || value != "") {
              EndDateTime = value;
            }
            break;
          }
          case 50: {
            attributeValues_.AddEntriesFrom(input, _repeated_attributeValues_codec);
            break;
          }
          case 56: {
            GeoTargetingRestriction = (global::Google.Ads.GoogleAds.V3.Enums.GeoTargetingRestrictionEnum.Types.GeoTargetingRestriction) input.ReadEnum();
            break;
          }
          case 66: {
            urlCustomParameters_.AddEntriesFrom(input, _repeated_urlCustomParameters_codec);
            break;
          }
          case 72: {
            Status = (global::Google.Ads.GoogleAds.V3.Enums.FeedItemStatusEnum.Types.FeedItemStatus) input.ReadEnum();
            break;
          }
          case 82: {
            policyInfos_.AddEntriesFrom(input, _repeated_policyInfos_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A feed item attribute value.
  /// </summary>
  public sealed partial class FeedItemAttributeValue : pb::IMessage<FeedItemAttributeValue> {
    private static readonly pb::MessageParser<FeedItemAttributeValue> _parser = new pb::MessageParser<FeedItemAttributeValue>(() => new FeedItemAttributeValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedItemAttributeValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Resources.FeedItemReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItemAttributeValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItemAttributeValue(FeedItemAttributeValue other) : this() {
      FeedAttributeId = other.FeedAttributeId;
      IntegerValue = other.IntegerValue;
      BooleanValue = other.BooleanValue;
      StringValue = other.StringValue;
      DoubleValue = other.DoubleValue;
      priceValue_ = other.priceValue_ != null ? other.priceValue_.Clone() : null;
      integerValues_ = other.integerValues_.Clone();
      booleanValues_ = other.booleanValues_.Clone();
      stringValues_ = other.stringValues_.Clone();
      doubleValues_ = other.doubleValues_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItemAttributeValue Clone() {
      return new FeedItemAttributeValue(this);
    }

    /// <summary>Field number for the "feed_attribute_id" field.</summary>
    public const int FeedAttributeIdFieldNumber = 1;
    private static readonly pb::FieldCodec<long?> _single_feedAttributeId_codec = pb::FieldCodec.ForStructWrapper<long>(10);
    private long? feedAttributeId_;
    /// <summary>
    /// Id of the feed attribute for which the value is associated with.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? FeedAttributeId {
      get { return feedAttributeId_; }
      set {
        feedAttributeId_ = value;
      }
    }


    /// <summary>Field number for the "integer_value" field.</summary>
    public const int IntegerValueFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_integerValue_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? integerValue_;
    /// <summary>
    /// Int64 value. Should be set if feed_attribute_id refers to a feed attribute
    /// of type INT64.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? IntegerValue {
      get { return integerValue_; }
      set {
        integerValue_ = value;
      }
    }


    /// <summary>Field number for the "boolean_value" field.</summary>
    public const int BooleanValueFieldNumber = 3;
    private static readonly pb::FieldCodec<bool?> _single_booleanValue_codec = pb::FieldCodec.ForStructWrapper<bool>(26);
    private bool? booleanValue_;
    /// <summary>
    /// Bool value. Should be set if feed_attribute_id refers to a feed attribute
    /// of type BOOLEAN.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? BooleanValue {
      get { return booleanValue_; }
      set {
        booleanValue_ = value;
      }
    }


    /// <summary>Field number for the "string_value" field.</summary>
    public const int StringValueFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_stringValue_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string stringValue_;
    /// <summary>
    /// String value. Should be set if feed_attribute_id refers to a feed attribute
    /// of type STRING, URL or DATE_TIME.
    /// For STRING the maximum length is 1500 characters. For URL the maximum
    /// length is 2076 characters. For DATE_TIME the string must be in the format
    /// "YYYYMMDD HHMMSS".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StringValue {
      get { return stringValue_; }
      set {
        stringValue_ = value;
      }
    }


    /// <summary>Field number for the "double_value" field.</summary>
    public const int DoubleValueFieldNumber = 5;
    private static readonly pb::FieldCodec<double?> _single_doubleValue_codec = pb::FieldCodec.ForStructWrapper<double>(42);
    private double? doubleValue_;
    /// <summary>
    /// Double value. Should be set if feed_attribute_id refers to a feed attribute
    /// of type DOUBLE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? DoubleValue {
      get { return doubleValue_; }
      set {
        doubleValue_ = value;
      }
    }


    /// <summary>Field number for the "price_value" field.</summary>
    public const int PriceValueFieldNumber = 6;
    private global::Google.Ads.GoogleAds.V3.Common.Money priceValue_;
    /// <summary>
    /// Price value. Should be set if feed_attribute_id refers to a feed attribute
    /// of type PRICE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Common.Money PriceValue {
      get { return priceValue_; }
      set {
        priceValue_ = value;
      }
    }

    /// <summary>Field number for the "integer_values" field.</summary>
    public const int IntegerValuesFieldNumber = 7;
    private static readonly pb::FieldCodec<long?> _repeated_integerValues_codec
        = pb::FieldCodec.ForStructWrapper<long>(58);
    private readonly pbc::RepeatedField<long?> integerValues_ = new pbc::RepeatedField<long?>();
    /// <summary>
    /// Repeated int64 value. Should be set if feed_attribute_id refers to a feed
    /// attribute of type INT64_LIST.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long?> IntegerValues {
      get { return integerValues_; }
    }

    /// <summary>Field number for the "boolean_values" field.</summary>
    public const int BooleanValuesFieldNumber = 8;
    private static readonly pb::FieldCodec<bool?> _repeated_booleanValues_codec
        = pb::FieldCodec.ForStructWrapper<bool>(66);
    private readonly pbc::RepeatedField<bool?> booleanValues_ = new pbc::RepeatedField<bool?>();
    /// <summary>
    /// Repeated bool value. Should be set if feed_attribute_id refers to a feed
    /// attribute of type BOOLEAN_LIST.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool?> BooleanValues {
      get { return booleanValues_; }
    }

    /// <summary>Field number for the "string_values" field.</summary>
    public const int StringValuesFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_stringValues_codec
        = pb::FieldCodec.ForClassWrapper<string>(74);
    private readonly pbc::RepeatedField<string> stringValues_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Repeated string value. Should be set if feed_attribute_id refers to a feed
    /// attribute of type STRING_LIST, URL_LIST or DATE_TIME_LIST.
    /// For STRING_LIST and URL_LIST the total size of the list in bytes may not
    /// exceed 3000. For DATE_TIME_LIST the number of elements may not exceed 200.
    ///
    /// For STRING_LIST the maximum length of each string element is 1500
    /// characters. For URL_LIST the maximum length is 2076 characters. For
    /// DATE_TIME the format of the string must be the same as start and end time
    /// for the feed item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> StringValues {
      get { return stringValues_; }
    }

    /// <summary>Field number for the "double_values" field.</summary>
    public const int DoubleValuesFieldNumber = 10;
    private static readonly pb::FieldCodec<double?> _repeated_doubleValues_codec
        = pb::FieldCodec.ForStructWrapper<double>(82);
    private readonly pbc::RepeatedField<double?> doubleValues_ = new pbc::RepeatedField<double?>();
    /// <summary>
    /// Repeated double value. Should be set if feed_attribute_id refers to a feed
    /// attribute of type DOUBLE_LIST.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double?> DoubleValues {
      get { return doubleValues_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedItemAttributeValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedItemAttributeValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FeedAttributeId != other.FeedAttributeId) return false;
      if (IntegerValue != other.IntegerValue) return false;
      if (BooleanValue != other.BooleanValue) return false;
      if (StringValue != other.StringValue) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(DoubleValue, other.DoubleValue)) return false;
      if (!object.Equals(PriceValue, other.PriceValue)) return false;
      if(!integerValues_.Equals(other.integerValues_)) return false;
      if(!booleanValues_.Equals(other.booleanValues_)) return false;
      if(!stringValues_.Equals(other.stringValues_)) return false;
      if(!doubleValues_.Equals(other.doubleValues_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (feedAttributeId_ != null) hash ^= FeedAttributeId.GetHashCode();
      if (integerValue_ != null) hash ^= IntegerValue.GetHashCode();
      if (booleanValue_ != null) hash ^= BooleanValue.GetHashCode();
      if (stringValue_ != null) hash ^= StringValue.GetHashCode();
      if (doubleValue_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(DoubleValue);
      if (priceValue_ != null) hash ^= PriceValue.GetHashCode();
      hash ^= integerValues_.GetHashCode();
      hash ^= booleanValues_.GetHashCode();
      hash ^= stringValues_.GetHashCode();
      hash ^= doubleValues_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (feedAttributeId_ != null) {
        _single_feedAttributeId_codec.WriteTagAndValue(output, FeedAttributeId);
      }
      if (integerValue_ != null) {
        _single_integerValue_codec.WriteTagAndValue(output, IntegerValue);
      }
      if (booleanValue_ != null) {
        _single_booleanValue_codec.WriteTagAndValue(output, BooleanValue);
      }
      if (stringValue_ != null) {
        _single_stringValue_codec.WriteTagAndValue(output, StringValue);
      }
      if (doubleValue_ != null) {
        _single_doubleValue_codec.WriteTagAndValue(output, DoubleValue);
      }
      if (priceValue_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PriceValue);
      }
      integerValues_.WriteTo(output, _repeated_integerValues_codec);
      booleanValues_.WriteTo(output, _repeated_booleanValues_codec);
      stringValues_.WriteTo(output, _repeated_stringValues_codec);
      doubleValues_.WriteTo(output, _repeated_doubleValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (feedAttributeId_ != null) {
        size += _single_feedAttributeId_codec.CalculateSizeWithTag(FeedAttributeId);
      }
      if (integerValue_ != null) {
        size += _single_integerValue_codec.CalculateSizeWithTag(IntegerValue);
      }
      if (booleanValue_ != null) {
        size += _single_booleanValue_codec.CalculateSizeWithTag(BooleanValue);
      }
      if (stringValue_ != null) {
        size += _single_stringValue_codec.CalculateSizeWithTag(StringValue);
      }
      if (doubleValue_ != null) {
        size += _single_doubleValue_codec.CalculateSizeWithTag(DoubleValue);
      }
      if (priceValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PriceValue);
      }
      size += integerValues_.CalculateSize(_repeated_integerValues_codec);
      size += booleanValues_.CalculateSize(_repeated_booleanValues_codec);
      size += stringValues_.CalculateSize(_repeated_stringValues_codec);
      size += doubleValues_.CalculateSize(_repeated_doubleValues_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedItemAttributeValue other) {
      if (other == null) {
        return;
      }
      if (other.feedAttributeId_ != null) {
        if (feedAttributeId_ == null || other.FeedAttributeId != 0L) {
          FeedAttributeId = other.FeedAttributeId;
        }
      }
      if (other.integerValue_ != null) {
        if (integerValue_ == null || other.IntegerValue != 0L) {
          IntegerValue = other.IntegerValue;
        }
      }
      if (other.booleanValue_ != null) {
        if (booleanValue_ == null || other.BooleanValue != false) {
          BooleanValue = other.BooleanValue;
        }
      }
      if (other.stringValue_ != null) {
        if (stringValue_ == null || other.StringValue != "") {
          StringValue = other.StringValue;
        }
      }
      if (other.doubleValue_ != null) {
        if (doubleValue_ == null || other.DoubleValue != 0D) {
          DoubleValue = other.DoubleValue;
        }
      }
      if (other.priceValue_ != null) {
        if (priceValue_ == null) {
          PriceValue = new global::Google.Ads.GoogleAds.V3.Common.Money();
        }
        PriceValue.MergeFrom(other.PriceValue);
      }
      integerValues_.Add(other.integerValues_);
      booleanValues_.Add(other.booleanValues_);
      stringValues_.Add(other.stringValues_);
      doubleValues_.Add(other.doubleValues_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            long? value = _single_feedAttributeId_codec.Read(input);
            if (feedAttributeId_ == null || value != 0L) {
              FeedAttributeId = value;
            }
            break;
          }
          case 18: {
            long? value = _single_integerValue_codec.Read(input);
            if (integerValue_ == null || value != 0L) {
              IntegerValue = value;
            }
            break;
          }
          case 26: {
            bool? value = _single_booleanValue_codec.Read(input);
            if (booleanValue_ == null || value != false) {
              BooleanValue = value;
            }
            break;
          }
          case 34: {
            string value = _single_stringValue_codec.Read(input);
            if (stringValue_ == null || value != "") {
              StringValue = value;
            }
            break;
          }
          case 42: {
            double? value = _single_doubleValue_codec.Read(input);
            if (doubleValue_ == null || value != 0D) {
              DoubleValue = value;
            }
            break;
          }
          case 50: {
            if (priceValue_ == null) {
              PriceValue = new global::Google.Ads.GoogleAds.V3.Common.Money();
            }
            input.ReadMessage(PriceValue);
            break;
          }
          case 58: {
            integerValues_.AddEntriesFrom(input, _repeated_integerValues_codec);
            break;
          }
          case 66: {
            booleanValues_.AddEntriesFrom(input, _repeated_booleanValues_codec);
            break;
          }
          case 74: {
            stringValues_.AddEntriesFrom(input, _repeated_stringValues_codec);
            break;
          }
          case 82: {
            doubleValues_.AddEntriesFrom(input, _repeated_doubleValues_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Policy, validation, and quality approval info for a feed item for the
  /// specified placeholder type.
  /// </summary>
  public sealed partial class FeedItemPlaceholderPolicyInfo : pb::IMessage<FeedItemPlaceholderPolicyInfo> {
    private static readonly pb::MessageParser<FeedItemPlaceholderPolicyInfo> _parser = new pb::MessageParser<FeedItemPlaceholderPolicyInfo>(() => new FeedItemPlaceholderPolicyInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedItemPlaceholderPolicyInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Resources.FeedItemReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItemPlaceholderPolicyInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItemPlaceholderPolicyInfo(FeedItemPlaceholderPolicyInfo other) : this() {
      placeholderTypeEnum_ = other.placeholderTypeEnum_;
      FeedMappingResourceName = other.FeedMappingResourceName;
      reviewStatus_ = other.reviewStatus_;
      approvalStatus_ = other.approvalStatus_;
      policyTopicEntries_ = other.policyTopicEntries_.Clone();
      validationStatus_ = other.validationStatus_;
      validationErrors_ = other.validationErrors_.Clone();
      qualityApprovalStatus_ = other.qualityApprovalStatus_;
      qualityDisapprovalReasons_ = other.qualityDisapprovalReasons_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItemPlaceholderPolicyInfo Clone() {
      return new FeedItemPlaceholderPolicyInfo(this);
    }

    /// <summary>Field number for the "placeholder_type_enum" field.</summary>
    public const int PlaceholderTypeEnumFieldNumber = 10;
    private global::Google.Ads.GoogleAds.V3.Enums.PlaceholderTypeEnum.Types.PlaceholderType placeholderTypeEnum_ = global::Google.Ads.GoogleAds.V3.Enums.PlaceholderTypeEnum.Types.PlaceholderType.Unspecified;
    /// <summary>
    /// Output only. The placeholder type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Enums.PlaceholderTypeEnum.Types.PlaceholderType PlaceholderTypeEnum {
      get { return placeholderTypeEnum_; }
      set {
        placeholderTypeEnum_ = value;
      }
    }

    /// <summary>Field number for the "feed_mapping_resource_name" field.</summary>
    public const int FeedMappingResourceNameFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_feedMappingResourceName_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string feedMappingResourceName_;
    /// <summary>
    /// Output only. The FeedMapping that contains the placeholder type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FeedMappingResourceName {
      get { return feedMappingResourceName_; }
      set {
        feedMappingResourceName_ = value;
      }
    }


    /// <summary>Field number for the "review_status" field.</summary>
    public const int ReviewStatusFieldNumber = 3;
    private global::Google.Ads.GoogleAds.V3.Enums.PolicyReviewStatusEnum.Types.PolicyReviewStatus reviewStatus_ = global::Google.Ads.GoogleAds.V3.Enums.PolicyReviewStatusEnum.Types.PolicyReviewStatus.Unspecified;
    /// <summary>
    /// Output only. Where the placeholder type is in the review process.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Enums.PolicyReviewStatusEnum.Types.PolicyReviewStatus ReviewStatus {
      get { return reviewStatus_; }
      set {
        reviewStatus_ = value;
      }
    }

    /// <summary>Field number for the "approval_status" field.</summary>
    public const int ApprovalStatusFieldNumber = 4;
    private global::Google.Ads.GoogleAds.V3.Enums.PolicyApprovalStatusEnum.Types.PolicyApprovalStatus approvalStatus_ = global::Google.Ads.GoogleAds.V3.Enums.PolicyApprovalStatusEnum.Types.PolicyApprovalStatus.Unspecified;
    /// <summary>
    /// Output only. The overall approval status of the placeholder type, calculated based on
    /// the status of its individual policy topic entries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Enums.PolicyApprovalStatusEnum.Types.PolicyApprovalStatus ApprovalStatus {
      get { return approvalStatus_; }
      set {
        approvalStatus_ = value;
      }
    }

    /// <summary>Field number for the "policy_topic_entries" field.</summary>
    public const int PolicyTopicEntriesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V3.Common.PolicyTopicEntry> _repeated_policyTopicEntries_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Ads.GoogleAds.V3.Common.PolicyTopicEntry.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Common.PolicyTopicEntry> policyTopicEntries_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Common.PolicyTopicEntry>();
    /// <summary>
    /// Output only. The list of policy findings for the placeholder type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Common.PolicyTopicEntry> PolicyTopicEntries {
      get { return policyTopicEntries_; }
    }

    /// <summary>Field number for the "validation_status" field.</summary>
    public const int ValidationStatusFieldNumber = 6;
    private global::Google.Ads.GoogleAds.V3.Enums.FeedItemValidationStatusEnum.Types.FeedItemValidationStatus validationStatus_ = global::Google.Ads.GoogleAds.V3.Enums.FeedItemValidationStatusEnum.Types.FeedItemValidationStatus.Unspecified;
    /// <summary>
    /// Output only. The validation status of the palceholder type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Enums.FeedItemValidationStatusEnum.Types.FeedItemValidationStatus ValidationStatus {
      get { return validationStatus_; }
      set {
        validationStatus_ = value;
      }
    }

    /// <summary>Field number for the "validation_errors" field.</summary>
    public const int ValidationErrorsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V3.Resources.FeedItemValidationError> _repeated_validationErrors_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Ads.GoogleAds.V3.Resources.FeedItemValidationError.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Resources.FeedItemValidationError> validationErrors_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Resources.FeedItemValidationError>();
    /// <summary>
    /// Output only. List of placeholder type validation errors.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Resources.FeedItemValidationError> ValidationErrors {
      get { return validationErrors_; }
    }

    /// <summary>Field number for the "quality_approval_status" field.</summary>
    public const int QualityApprovalStatusFieldNumber = 8;
    private global::Google.Ads.GoogleAds.V3.Enums.FeedItemQualityApprovalStatusEnum.Types.FeedItemQualityApprovalStatus qualityApprovalStatus_ = global::Google.Ads.GoogleAds.V3.Enums.FeedItemQualityApprovalStatusEnum.Types.FeedItemQualityApprovalStatus.Unspecified;
    /// <summary>
    /// Output only. Placeholder type quality evaluation approval status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Enums.FeedItemQualityApprovalStatusEnum.Types.FeedItemQualityApprovalStatus QualityApprovalStatus {
      get { return qualityApprovalStatus_; }
      set {
        qualityApprovalStatus_ = value;
      }
    }

    /// <summary>Field number for the "quality_disapproval_reasons" field.</summary>
    public const int QualityDisapprovalReasonsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V3.Enums.FeedItemQualityDisapprovalReasonEnum.Types.FeedItemQualityDisapprovalReason> _repeated_qualityDisapprovalReasons_codec
        = pb::FieldCodec.ForEnum(74, x => (int) x, x => (global::Google.Ads.GoogleAds.V3.Enums.FeedItemQualityDisapprovalReasonEnum.Types.FeedItemQualityDisapprovalReason) x);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Enums.FeedItemQualityDisapprovalReasonEnum.Types.FeedItemQualityDisapprovalReason> qualityDisapprovalReasons_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Enums.FeedItemQualityDisapprovalReasonEnum.Types.FeedItemQualityDisapprovalReason>();
    /// <summary>
    /// Output only. List of placeholder type quality evaluation disapproval reasons.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V3.Enums.FeedItemQualityDisapprovalReasonEnum.Types.FeedItemQualityDisapprovalReason> QualityDisapprovalReasons {
      get { return qualityDisapprovalReasons_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedItemPlaceholderPolicyInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedItemPlaceholderPolicyInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlaceholderTypeEnum != other.PlaceholderTypeEnum) return false;
      if (FeedMappingResourceName != other.FeedMappingResourceName) return false;
      if (ReviewStatus != other.ReviewStatus) return false;
      if (ApprovalStatus != other.ApprovalStatus) return false;
      if(!policyTopicEntries_.Equals(other.policyTopicEntries_)) return false;
      if (ValidationStatus != other.ValidationStatus) return false;
      if(!validationErrors_.Equals(other.validationErrors_)) return false;
      if (QualityApprovalStatus != other.QualityApprovalStatus) return false;
      if(!qualityDisapprovalReasons_.Equals(other.qualityDisapprovalReasons_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlaceholderTypeEnum != global::Google.Ads.GoogleAds.V3.Enums.PlaceholderTypeEnum.Types.PlaceholderType.Unspecified) hash ^= PlaceholderTypeEnum.GetHashCode();
      if (feedMappingResourceName_ != null) hash ^= FeedMappingResourceName.GetHashCode();
      if (ReviewStatus != global::Google.Ads.GoogleAds.V3.Enums.PolicyReviewStatusEnum.Types.PolicyReviewStatus.Unspecified) hash ^= ReviewStatus.GetHashCode();
      if (ApprovalStatus != global::Google.Ads.GoogleAds.V3.Enums.PolicyApprovalStatusEnum.Types.PolicyApprovalStatus.Unspecified) hash ^= ApprovalStatus.GetHashCode();
      hash ^= policyTopicEntries_.GetHashCode();
      if (ValidationStatus != global::Google.Ads.GoogleAds.V3.Enums.FeedItemValidationStatusEnum.Types.FeedItemValidationStatus.Unspecified) hash ^= ValidationStatus.GetHashCode();
      hash ^= validationErrors_.GetHashCode();
      if (QualityApprovalStatus != global::Google.Ads.GoogleAds.V3.Enums.FeedItemQualityApprovalStatusEnum.Types.FeedItemQualityApprovalStatus.Unspecified) hash ^= QualityApprovalStatus.GetHashCode();
      hash ^= qualityDisapprovalReasons_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (feedMappingResourceName_ != null) {
        _single_feedMappingResourceName_codec.WriteTagAndValue(output, FeedMappingResourceName);
      }
      if (ReviewStatus != global::Google.Ads.GoogleAds.V3.Enums.PolicyReviewStatusEnum.Types.PolicyReviewStatus.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ReviewStatus);
      }
      if (ApprovalStatus != global::Google.Ads.GoogleAds.V3.Enums.PolicyApprovalStatusEnum.Types.PolicyApprovalStatus.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ApprovalStatus);
      }
      policyTopicEntries_.WriteTo(output, _repeated_policyTopicEntries_codec);
      if (ValidationStatus != global::Google.Ads.GoogleAds.V3.Enums.FeedItemValidationStatusEnum.Types.FeedItemValidationStatus.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ValidationStatus);
      }
      validationErrors_.WriteTo(output, _repeated_validationErrors_codec);
      if (QualityApprovalStatus != global::Google.Ads.GoogleAds.V3.Enums.FeedItemQualityApprovalStatusEnum.Types.FeedItemQualityApprovalStatus.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) QualityApprovalStatus);
      }
      qualityDisapprovalReasons_.WriteTo(output, _repeated_qualityDisapprovalReasons_codec);
      if (PlaceholderTypeEnum != global::Google.Ads.GoogleAds.V3.Enums.PlaceholderTypeEnum.Types.PlaceholderType.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) PlaceholderTypeEnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlaceholderTypeEnum != global::Google.Ads.GoogleAds.V3.Enums.PlaceholderTypeEnum.Types.PlaceholderType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PlaceholderTypeEnum);
      }
      if (feedMappingResourceName_ != null) {
        size += _single_feedMappingResourceName_codec.CalculateSizeWithTag(FeedMappingResourceName);
      }
      if (ReviewStatus != global::Google.Ads.GoogleAds.V3.Enums.PolicyReviewStatusEnum.Types.PolicyReviewStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReviewStatus);
      }
      if (ApprovalStatus != global::Google.Ads.GoogleAds.V3.Enums.PolicyApprovalStatusEnum.Types.PolicyApprovalStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ApprovalStatus);
      }
      size += policyTopicEntries_.CalculateSize(_repeated_policyTopicEntries_codec);
      if (ValidationStatus != global::Google.Ads.GoogleAds.V3.Enums.FeedItemValidationStatusEnum.Types.FeedItemValidationStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ValidationStatus);
      }
      size += validationErrors_.CalculateSize(_repeated_validationErrors_codec);
      if (QualityApprovalStatus != global::Google.Ads.GoogleAds.V3.Enums.FeedItemQualityApprovalStatusEnum.Types.FeedItemQualityApprovalStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QualityApprovalStatus);
      }
      size += qualityDisapprovalReasons_.CalculateSize(_repeated_qualityDisapprovalReasons_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedItemPlaceholderPolicyInfo other) {
      if (other == null) {
        return;
      }
      if (other.PlaceholderTypeEnum != global::Google.Ads.GoogleAds.V3.Enums.PlaceholderTypeEnum.Types.PlaceholderType.Unspecified) {
        PlaceholderTypeEnum = other.PlaceholderTypeEnum;
      }
      if (other.feedMappingResourceName_ != null) {
        if (feedMappingResourceName_ == null || other.FeedMappingResourceName != "") {
          FeedMappingResourceName = other.FeedMappingResourceName;
        }
      }
      if (other.ReviewStatus != global::Google.Ads.GoogleAds.V3.Enums.PolicyReviewStatusEnum.Types.PolicyReviewStatus.Unspecified) {
        ReviewStatus = other.ReviewStatus;
      }
      if (other.ApprovalStatus != global::Google.Ads.GoogleAds.V3.Enums.PolicyApprovalStatusEnum.Types.PolicyApprovalStatus.Unspecified) {
        ApprovalStatus = other.ApprovalStatus;
      }
      policyTopicEntries_.Add(other.policyTopicEntries_);
      if (other.ValidationStatus != global::Google.Ads.GoogleAds.V3.Enums.FeedItemValidationStatusEnum.Types.FeedItemValidationStatus.Unspecified) {
        ValidationStatus = other.ValidationStatus;
      }
      validationErrors_.Add(other.validationErrors_);
      if (other.QualityApprovalStatus != global::Google.Ads.GoogleAds.V3.Enums.FeedItemQualityApprovalStatusEnum.Types.FeedItemQualityApprovalStatus.Unspecified) {
        QualityApprovalStatus = other.QualityApprovalStatus;
      }
      qualityDisapprovalReasons_.Add(other.qualityDisapprovalReasons_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            string value = _single_feedMappingResourceName_codec.Read(input);
            if (feedMappingResourceName_ == null || value != "") {
              FeedMappingResourceName = value;
            }
            break;
          }
          case 24: {
            ReviewStatus = (global::Google.Ads.GoogleAds.V3.Enums.PolicyReviewStatusEnum.Types.PolicyReviewStatus) input.ReadEnum();
            break;
          }
          case 32: {
            ApprovalStatus = (global::Google.Ads.GoogleAds.V3.Enums.PolicyApprovalStatusEnum.Types.PolicyApprovalStatus) input.ReadEnum();
            break;
          }
          case 42: {
            policyTopicEntries_.AddEntriesFrom(input, _repeated_policyTopicEntries_codec);
            break;
          }
          case 48: {
            ValidationStatus = (global::Google.Ads.GoogleAds.V3.Enums.FeedItemValidationStatusEnum.Types.FeedItemValidationStatus) input.ReadEnum();
            break;
          }
          case 58: {
            validationErrors_.AddEntriesFrom(input, _repeated_validationErrors_codec);
            break;
          }
          case 64: {
            QualityApprovalStatus = (global::Google.Ads.GoogleAds.V3.Enums.FeedItemQualityApprovalStatusEnum.Types.FeedItemQualityApprovalStatus) input.ReadEnum();
            break;
          }
          case 74:
          case 72: {
            qualityDisapprovalReasons_.AddEntriesFrom(input, _repeated_qualityDisapprovalReasons_codec);
            break;
          }
          case 80: {
            PlaceholderTypeEnum = (global::Google.Ads.GoogleAds.V3.Enums.PlaceholderTypeEnum.Types.PlaceholderType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Stores a validation error and the set of offending feed attributes which
  /// together are responsible for causing a feed item validation error.
  /// </summary>
  public sealed partial class FeedItemValidationError : pb::IMessage<FeedItemValidationError> {
    private static readonly pb::MessageParser<FeedItemValidationError> _parser = new pb::MessageParser<FeedItemValidationError>(() => new FeedItemValidationError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedItemValidationError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V3.Resources.FeedItemReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItemValidationError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItemValidationError(FeedItemValidationError other) : this() {
      validationError_ = other.validationError_;
      Description = other.Description;
      feedAttributeIds_ = other.feedAttributeIds_.Clone();
      ExtraInfo = other.ExtraInfo;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItemValidationError Clone() {
      return new FeedItemValidationError(this);
    }

    /// <summary>Field number for the "validation_error" field.</summary>
    public const int ValidationErrorFieldNumber = 1;
    private global::Google.Ads.GoogleAds.V3.Errors.FeedItemValidationErrorEnum.Types.FeedItemValidationError validationError_ = global::Google.Ads.GoogleAds.V3.Errors.FeedItemValidationErrorEnum.Types.FeedItemValidationError.Unspecified;
    /// <summary>
    /// Output only. Error code indicating what validation error was triggered. The description
    /// of the error can be found in the 'description' field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V3.Errors.FeedItemValidationErrorEnum.Types.FeedItemValidationError ValidationError {
      get { return validationError_; }
      set {
        validationError_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string description_;
    /// <summary>
    /// Output only. The description of the validation error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    /// <summary>Field number for the "feed_attribute_ids" field.</summary>
    public const int FeedAttributeIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<long?> _repeated_feedAttributeIds_codec
        = pb::FieldCodec.ForStructWrapper<long>(26);
    private readonly pbc::RepeatedField<long?> feedAttributeIds_ = new pbc::RepeatedField<long?>();
    /// <summary>
    /// Output only. Set of feed attributes in the feed item flagged during validation. If
    /// empty, no specific feed attributes can be associated with the error
    /// (e.g. error across the entire feed item).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long?> FeedAttributeIds {
      get { return feedAttributeIds_; }
    }

    /// <summary>Field number for the "extra_info" field.</summary>
    public const int ExtraInfoFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_extraInfo_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string extraInfo_;
    /// <summary>
    /// Output only. Any extra information related to this error which is not captured by
    /// validation_error and feed_attribute_id (e.g. placeholder field IDs when
    /// feed_attribute_id is not mapped). Note that extra_info is not localized.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExtraInfo {
      get { return extraInfo_; }
      set {
        extraInfo_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedItemValidationError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedItemValidationError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ValidationError != other.ValidationError) return false;
      if (Description != other.Description) return false;
      if(!feedAttributeIds_.Equals(other.feedAttributeIds_)) return false;
      if (ExtraInfo != other.ExtraInfo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ValidationError != global::Google.Ads.GoogleAds.V3.Errors.FeedItemValidationErrorEnum.Types.FeedItemValidationError.Unspecified) hash ^= ValidationError.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      hash ^= feedAttributeIds_.GetHashCode();
      if (extraInfo_ != null) hash ^= ExtraInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ValidationError != global::Google.Ads.GoogleAds.V3.Errors.FeedItemValidationErrorEnum.Types.FeedItemValidationError.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ValidationError);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      feedAttributeIds_.WriteTo(output, _repeated_feedAttributeIds_codec);
      if (extraInfo_ != null) {
        _single_extraInfo_codec.WriteTagAndValue(output, ExtraInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ValidationError != global::Google.Ads.GoogleAds.V3.Errors.FeedItemValidationErrorEnum.Types.FeedItemValidationError.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ValidationError);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      size += feedAttributeIds_.CalculateSize(_repeated_feedAttributeIds_codec);
      if (extraInfo_ != null) {
        size += _single_extraInfo_codec.CalculateSizeWithTag(ExtraInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedItemValidationError other) {
      if (other == null) {
        return;
      }
      if (other.ValidationError != global::Google.Ads.GoogleAds.V3.Errors.FeedItemValidationErrorEnum.Types.FeedItemValidationError.Unspecified) {
        ValidationError = other.ValidationError;
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      feedAttributeIds_.Add(other.feedAttributeIds_);
      if (other.extraInfo_ != null) {
        if (extraInfo_ == null || other.ExtraInfo != "") {
          ExtraInfo = other.ExtraInfo;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ValidationError = (global::Google.Ads.GoogleAds.V3.Errors.FeedItemValidationErrorEnum.Types.FeedItemValidationError) input.ReadEnum();
            break;
          }
          case 18: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 26: {
            feedAttributeIds_.AddEntriesFrom(input, _repeated_feedAttributeIds_codec);
            break;
          }
          case 42: {
            string value = _single_extraInfo_codec.Read(input);
            if (extraInfo_ == null || value != "") {
              ExtraInfo = value;
            }
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
