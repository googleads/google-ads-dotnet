// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v4/services/geo_target_constant_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V4.Services {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v4/services/geo_target_constant_service.proto</summary>
  public static partial class GeoTargetConstantServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v4/services/geo_target_constant_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GeoTargetConstantServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkJnb29nbGUvYWRzL2dvb2dsZWFkcy92NC9zZXJ2aWNlcy9nZW9fdGFyZ2V0",
            "X2NvbnN0YW50X3NlcnZpY2UucHJvdG8SIGdvb2dsZS5hZHMuZ29vZ2xlYWRz",
            "LnY0LnNlcnZpY2VzGjtnb29nbGUvYWRzL2dvb2dsZWFkcy92NC9yZXNvdXJj",
            "ZXMvZ2VvX3RhcmdldF9jb25zdGFudC5wcm90bxocZ29vZ2xlL2FwaS9hbm5v",
            "dGF0aW9ucy5wcm90bxoXZ29vZ2xlL2FwaS9jbGllbnQucHJvdG8aH2dvb2ds",
            "ZS9hcGkvZmllbGRfYmVoYXZpb3IucHJvdG8aGWdvb2dsZS9hcGkvcmVzb3Vy",
            "Y2UucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90byJoChtH",
            "ZXRHZW9UYXJnZXRDb25zdGFudFJlcXVlc3QSSQoNcmVzb3VyY2VfbmFtZRgB",
            "IAEoCUIy4EEC+kEsCipnb29nbGVhZHMuZ29vZ2xlYXBpcy5jb20vR2VvVGFy",
            "Z2V0Q29uc3RhbnQi5wMKIFN1Z2dlc3RHZW9UYXJnZXRDb25zdGFudHNSZXF1",
            "ZXN0EiwKBmxvY2FsZRgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZRIyCgxjb3VudHJ5X2NvZGUYBSABKAsyHC5nb29nbGUucHJvdG9idWYu",
            "U3RyaW5nVmFsdWUSagoObG9jYXRpb25fbmFtZXMYASABKAsyUC5nb29nbGUu",
            "YWRzLmdvb2dsZWFkcy52NC5zZXJ2aWNlcy5TdWdnZXN0R2VvVGFyZ2V0Q29u",
            "c3RhbnRzUmVxdWVzdC5Mb2NhdGlvbk5hbWVzSAASZAoLZ2VvX3RhcmdldHMY",
            "AiABKAsyTS5nb29nbGUuYWRzLmdvb2dsZWFkcy52NC5zZXJ2aWNlcy5TdWdn",
            "ZXN0R2VvVGFyZ2V0Q29uc3RhbnRzUmVxdWVzdC5HZW9UYXJnZXRzSAAaPAoN",
            "TG9jYXRpb25OYW1lcxIrCgVuYW1lcxgBIAMoCzIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZRpICgpHZW9UYXJnZXRzEjoKFGdlb190YXJnZXRfY29u",
            "c3RhbnRzGAEgAygLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlQgcK",
            "BXF1ZXJ5IosBCiFTdWdnZXN0R2VvVGFyZ2V0Q29uc3RhbnRzUmVzcG9uc2US",
            "ZgofZ2VvX3RhcmdldF9jb25zdGFudF9zdWdnZXN0aW9ucxgBIAMoCzI9Lmdv",
            "b2dsZS5hZHMuZ29vZ2xlYWRzLnY0LnNlcnZpY2VzLkdlb1RhcmdldENvbnN0",
            "YW50U3VnZ2VzdGlvbiLYAgobR2VvVGFyZ2V0Q29uc3RhbnRTdWdnZXN0aW9u",
            "EiwKBmxvY2FsZRgBIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRIqCgVyZWFjaBgCIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVl",
            "EjEKC3NlYXJjaF90ZXJtGAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlElEKE2dlb190YXJnZXRfY29uc3RhbnQYBCABKAsyNC5nb29nbGUu",
            "YWRzLmdvb2dsZWFkcy52NC5yZXNvdXJjZXMuR2VvVGFyZ2V0Q29uc3RhbnQS",
            "WQobZ2VvX3RhcmdldF9jb25zdGFudF9wYXJlbnRzGAUgAygLMjQuZ29vZ2xl",
            "LmFkcy5nb29nbGVhZHMudjQucmVzb3VyY2VzLkdlb1RhcmdldENvbnN0YW50",
            "MoMEChhHZW9UYXJnZXRDb25zdGFudFNlcnZpY2USzQEKFEdldEdlb1Rhcmdl",
            "dENvbnN0YW50Ej0uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjQuc2VydmljZXMu",
            "R2V0R2VvVGFyZ2V0Q29uc3RhbnRSZXF1ZXN0GjQuZ29vZ2xlLmFkcy5nb29n",
            "bGVhZHMudjQucmVzb3VyY2VzLkdlb1RhcmdldENvbnN0YW50IkCC0+STAioS",
            "KC92NC97cmVzb3VyY2VfbmFtZT1nZW9UYXJnZXRDb25zdGFudHMvKn3aQQ1y",
            "ZXNvdXJjZV9uYW1lEs8BChlTdWdnZXN0R2VvVGFyZ2V0Q29uc3RhbnRzEkIu",
            "Z29vZ2xlLmFkcy5nb29nbGVhZHMudjQuc2VydmljZXMuU3VnZ2VzdEdlb1Rh",
            "cmdldENvbnN0YW50c1JlcXVlc3QaQy5nb29nbGUuYWRzLmdvb2dsZWFkcy52",
            "NC5zZXJ2aWNlcy5TdWdnZXN0R2VvVGFyZ2V0Q29uc3RhbnRzUmVzcG9uc2Ui",
            "KYLT5JMCIyIeL3Y0L2dlb1RhcmdldENvbnN0YW50czpzdWdnZXN0OgEqGkXK",
            "QRhnb29nbGVhZHMuZ29vZ2xlYXBpcy5jb23SQSdodHRwczovL3d3dy5nb29n",
            "bGVhcGlzLmNvbS9hdXRoL2Fkd29yZHNChAIKJGNvbS5nb29nbGUuYWRzLmdv",
            "b2dsZWFkcy52NC5zZXJ2aWNlc0IdR2VvVGFyZ2V0Q29uc3RhbnRTZXJ2aWNl",
            "UHJvdG9QAVpIZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBp",
            "cy9hZHMvZ29vZ2xlYWRzL3Y0L3NlcnZpY2VzO3NlcnZpY2VzogIDR0FBqgIg",
            "R29vZ2xlLkFkcy5Hb29nbGVBZHMuVjQuU2VydmljZXPKAiBHb29nbGVcQWRz",
            "XEdvb2dsZUFkc1xWNFxTZXJ2aWNlc+oCJEdvb2dsZTo6QWRzOjpHb29nbGVB",
            "ZHM6OlY0OjpTZXJ2aWNlc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V4.Resources.GeoTargetConstantReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V4.Services.GetGeoTargetConstantRequest), global::Google.Ads.GoogleAds.V4.Services.GetGeoTargetConstantRequest.Parser, new[]{ "ResourceName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest), global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Parser, new[]{ "Locale", "CountryCode", "LocationNames", "GeoTargets" }, new[]{ "Query" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Types.LocationNames), global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Types.LocationNames.Parser, new[]{ "Names" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Types.GeoTargets), global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Types.GeoTargets.Parser, new[]{ "GeoTargetConstants" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsResponse), global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsResponse.Parser, new[]{ "GeoTargetConstantSuggestions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V4.Services.GeoTargetConstantSuggestion), global::Google.Ads.GoogleAds.V4.Services.GeoTargetConstantSuggestion.Parser, new[]{ "Locale", "Reach", "SearchTerm", "GeoTargetConstant", "GeoTargetConstantParents" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Request message for [GeoTargetConstantService.GetGeoTargetConstant][google.ads.googleads.v4.services.GeoTargetConstantService.GetGeoTargetConstant].
  /// </summary>
  public sealed partial class GetGeoTargetConstantRequest : pb::IMessage<GetGeoTargetConstantRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetGeoTargetConstantRequest> _parser = new pb::MessageParser<GetGeoTargetConstantRequest>(() => new GetGeoTargetConstantRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGeoTargetConstantRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V4.Services.GeoTargetConstantServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGeoTargetConstantRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGeoTargetConstantRequest(GetGeoTargetConstantRequest other) : this() {
      resourceName_ = other.resourceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGeoTargetConstantRequest Clone() {
      return new GetGeoTargetConstantRequest(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// Required. The resource name of the geo target constant to fetch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGeoTargetConstantRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGeoTargetConstantRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGeoTargetConstantRequest other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for
  /// [GeoTargetConstantService.SuggestGeoTargetConstants][google.ads.googleads.v4.services.GeoTargetConstantService.SuggestGeoTargetConstants].
  /// </summary>
  public sealed partial class SuggestGeoTargetConstantsRequest : pb::IMessage<SuggestGeoTargetConstantsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SuggestGeoTargetConstantsRequest> _parser = new pb::MessageParser<SuggestGeoTargetConstantsRequest>(() => new SuggestGeoTargetConstantsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SuggestGeoTargetConstantsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V4.Services.GeoTargetConstantServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestGeoTargetConstantsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestGeoTargetConstantsRequest(SuggestGeoTargetConstantsRequest other) : this() {
      Locale = other.Locale;
      CountryCode = other.CountryCode;
      switch (other.QueryCase) {
        case QueryOneofCase.LocationNames:
          LocationNames = other.LocationNames.Clone();
          break;
        case QueryOneofCase.GeoTargets:
          GeoTargets = other.GeoTargets.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestGeoTargetConstantsRequest Clone() {
      return new SuggestGeoTargetConstantsRequest(this);
    }

    /// <summary>Field number for the "locale" field.</summary>
    public const int LocaleFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_locale_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string locale_;
    /// <summary>
    /// If possible, returned geo targets are translated using this locale. If not,
    /// en is used by default. This is also used as a hint for returned geo
    /// targets.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Locale {
      get { return locale_; }
      set {
        locale_ = value;
      }
    }


    /// <summary>Field number for the "country_code" field.</summary>
    public const int CountryCodeFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_countryCode_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string countryCode_;
    /// <summary>
    /// Returned geo targets are restricted to this country code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryCode {
      get { return countryCode_; }
      set {
        countryCode_ = value;
      }
    }


    /// <summary>Field number for the "location_names" field.</summary>
    public const int LocationNamesFieldNumber = 1;
    /// <summary>
    /// The location names to search by. At most 25 names can be set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Types.LocationNames LocationNames {
      get { return queryCase_ == QueryOneofCase.LocationNames ? (global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Types.LocationNames) query_ : null; }
      set {
        query_ = value;
        queryCase_ = value == null ? QueryOneofCase.None : QueryOneofCase.LocationNames;
      }
    }

    /// <summary>Field number for the "geo_targets" field.</summary>
    public const int GeoTargetsFieldNumber = 2;
    /// <summary>
    /// The geo target constant resource names to filter by.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Types.GeoTargets GeoTargets {
      get { return queryCase_ == QueryOneofCase.GeoTargets ? (global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Types.GeoTargets) query_ : null; }
      set {
        query_ = value;
        queryCase_ = value == null ? QueryOneofCase.None : QueryOneofCase.GeoTargets;
      }
    }

    private object query_;
    /// <summary>Enum of possible cases for the "query" oneof.</summary>
    public enum QueryOneofCase {
      None = 0,
      LocationNames = 1,
      GeoTargets = 2,
    }
    private QueryOneofCase queryCase_ = QueryOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOneofCase QueryCase {
      get { return queryCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuery() {
      queryCase_ = QueryOneofCase.None;
      query_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SuggestGeoTargetConstantsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SuggestGeoTargetConstantsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Locale != other.Locale) return false;
      if (CountryCode != other.CountryCode) return false;
      if (!object.Equals(LocationNames, other.LocationNames)) return false;
      if (!object.Equals(GeoTargets, other.GeoTargets)) return false;
      if (QueryCase != other.QueryCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (locale_ != null) hash ^= Locale.GetHashCode();
      if (countryCode_ != null) hash ^= CountryCode.GetHashCode();
      if (queryCase_ == QueryOneofCase.LocationNames) hash ^= LocationNames.GetHashCode();
      if (queryCase_ == QueryOneofCase.GeoTargets) hash ^= GeoTargets.GetHashCode();
      hash ^= (int) queryCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (queryCase_ == QueryOneofCase.LocationNames) {
        output.WriteRawTag(10);
        output.WriteMessage(LocationNames);
      }
      if (queryCase_ == QueryOneofCase.GeoTargets) {
        output.WriteRawTag(18);
        output.WriteMessage(GeoTargets);
      }
      if (locale_ != null) {
        _single_locale_codec.WriteTagAndValue(output, Locale);
      }
      if (countryCode_ != null) {
        _single_countryCode_codec.WriteTagAndValue(output, CountryCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (queryCase_ == QueryOneofCase.LocationNames) {
        output.WriteRawTag(10);
        output.WriteMessage(LocationNames);
      }
      if (queryCase_ == QueryOneofCase.GeoTargets) {
        output.WriteRawTag(18);
        output.WriteMessage(GeoTargets);
      }
      if (locale_ != null) {
        _single_locale_codec.WriteTagAndValue(ref output, Locale);
      }
      if (countryCode_ != null) {
        _single_countryCode_codec.WriteTagAndValue(ref output, CountryCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (locale_ != null) {
        size += _single_locale_codec.CalculateSizeWithTag(Locale);
      }
      if (countryCode_ != null) {
        size += _single_countryCode_codec.CalculateSizeWithTag(CountryCode);
      }
      if (queryCase_ == QueryOneofCase.LocationNames) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocationNames);
      }
      if (queryCase_ == QueryOneofCase.GeoTargets) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GeoTargets);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SuggestGeoTargetConstantsRequest other) {
      if (other == null) {
        return;
      }
      if (other.locale_ != null) {
        if (locale_ == null || other.Locale != "") {
          Locale = other.Locale;
        }
      }
      if (other.countryCode_ != null) {
        if (countryCode_ == null || other.CountryCode != "") {
          CountryCode = other.CountryCode;
        }
      }
      switch (other.QueryCase) {
        case QueryOneofCase.LocationNames:
          if (LocationNames == null) {
            LocationNames = new global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Types.LocationNames();
          }
          LocationNames.MergeFrom(other.LocationNames);
          break;
        case QueryOneofCase.GeoTargets:
          if (GeoTargets == null) {
            GeoTargets = new global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Types.GeoTargets();
          }
          GeoTargets.MergeFrom(other.GeoTargets);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Types.LocationNames subBuilder = new global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Types.LocationNames();
            if (queryCase_ == QueryOneofCase.LocationNames) {
              subBuilder.MergeFrom(LocationNames);
            }
            input.ReadMessage(subBuilder);
            LocationNames = subBuilder;
            break;
          }
          case 18: {
            global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Types.GeoTargets subBuilder = new global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Types.GeoTargets();
            if (queryCase_ == QueryOneofCase.GeoTargets) {
              subBuilder.MergeFrom(GeoTargets);
            }
            input.ReadMessage(subBuilder);
            GeoTargets = subBuilder;
            break;
          }
          case 26: {
            string value = _single_locale_codec.Read(input);
            if (locale_ == null || value != "") {
              Locale = value;
            }
            break;
          }
          case 42: {
            string value = _single_countryCode_codec.Read(input);
            if (countryCode_ == null || value != "") {
              CountryCode = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Types.LocationNames subBuilder = new global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Types.LocationNames();
            if (queryCase_ == QueryOneofCase.LocationNames) {
              subBuilder.MergeFrom(LocationNames);
            }
            input.ReadMessage(subBuilder);
            LocationNames = subBuilder;
            break;
          }
          case 18: {
            global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Types.GeoTargets subBuilder = new global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Types.GeoTargets();
            if (queryCase_ == QueryOneofCase.GeoTargets) {
              subBuilder.MergeFrom(GeoTargets);
            }
            input.ReadMessage(subBuilder);
            GeoTargets = subBuilder;
            break;
          }
          case 26: {
            string value = _single_locale_codec.Read(ref input);
            if (locale_ == null || value != "") {
              Locale = value;
            }
            break;
          }
          case 42: {
            string value = _single_countryCode_codec.Read(ref input);
            if (countryCode_ == null || value != "") {
              CountryCode = value;
            }
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SuggestGeoTargetConstantsRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A list of location names.
      /// </summary>
      public sealed partial class LocationNames : pb::IMessage<LocationNames>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<LocationNames> _parser = new pb::MessageParser<LocationNames>(() => new LocationNames());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<LocationNames> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LocationNames() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LocationNames(LocationNames other) : this() {
          names_ = other.names_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LocationNames Clone() {
          return new LocationNames(this);
        }

        /// <summary>Field number for the "names" field.</summary>
        public const int NamesFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_names_codec
            = pb::FieldCodec.ForClassWrapper<string>(10);
        private readonly pbc::RepeatedField<string> names_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// A list of location names.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Names {
          get { return names_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as LocationNames);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(LocationNames other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!names_.Equals(other.names_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= names_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          names_.WriteTo(output, _repeated_names_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          names_.WriteTo(ref output, _repeated_names_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += names_.CalculateSize(_repeated_names_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(LocationNames other) {
          if (other == null) {
            return;
          }
          names_.Add(other.names_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                names_.AddEntriesFrom(input, _repeated_names_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                names_.AddEntriesFrom(ref input, _repeated_names_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A list of geo target constant resource names.
      /// </summary>
      public sealed partial class GeoTargets : pb::IMessage<GeoTargets>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<GeoTargets> _parser = new pb::MessageParser<GeoTargets>(() => new GeoTargets());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GeoTargets> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.GoogleAds.V4.Services.SuggestGeoTargetConstantsRequest.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GeoTargets() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GeoTargets(GeoTargets other) : this() {
          geoTargetConstants_ = other.geoTargetConstants_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GeoTargets Clone() {
          return new GeoTargets(this);
        }

        /// <summary>Field number for the "geo_target_constants" field.</summary>
        public const int GeoTargetConstantsFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_geoTargetConstants_codec
            = pb::FieldCodec.ForClassWrapper<string>(10);
        private readonly pbc::RepeatedField<string> geoTargetConstants_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// A list of geo target constant resource names.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> GeoTargetConstants {
          get { return geoTargetConstants_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GeoTargets);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GeoTargets other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!geoTargetConstants_.Equals(other.geoTargetConstants_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= geoTargetConstants_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          geoTargetConstants_.WriteTo(output, _repeated_geoTargetConstants_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          geoTargetConstants_.WriteTo(ref output, _repeated_geoTargetConstants_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += geoTargetConstants_.CalculateSize(_repeated_geoTargetConstants_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GeoTargets other) {
          if (other == null) {
            return;
          }
          geoTargetConstants_.Add(other.geoTargetConstants_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                geoTargetConstants_.AddEntriesFrom(input, _repeated_geoTargetConstants_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                geoTargetConstants_.AddEntriesFrom(ref input, _repeated_geoTargetConstants_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Response message for [GeoTargetConstantService.SuggestGeoTargetConstants][google.ads.googleads.v4.services.GeoTargetConstantService.SuggestGeoTargetConstants].
  /// </summary>
  public sealed partial class SuggestGeoTargetConstantsResponse : pb::IMessage<SuggestGeoTargetConstantsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SuggestGeoTargetConstantsResponse> _parser = new pb::MessageParser<SuggestGeoTargetConstantsResponse>(() => new SuggestGeoTargetConstantsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SuggestGeoTargetConstantsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V4.Services.GeoTargetConstantServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestGeoTargetConstantsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestGeoTargetConstantsResponse(SuggestGeoTargetConstantsResponse other) : this() {
      geoTargetConstantSuggestions_ = other.geoTargetConstantSuggestions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestGeoTargetConstantsResponse Clone() {
      return new SuggestGeoTargetConstantsResponse(this);
    }

    /// <summary>Field number for the "geo_target_constant_suggestions" field.</summary>
    public const int GeoTargetConstantSuggestionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V4.Services.GeoTargetConstantSuggestion> _repeated_geoTargetConstantSuggestions_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V4.Services.GeoTargetConstantSuggestion.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V4.Services.GeoTargetConstantSuggestion> geoTargetConstantSuggestions_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V4.Services.GeoTargetConstantSuggestion>();
    /// <summary>
    /// Geo target constant suggestions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V4.Services.GeoTargetConstantSuggestion> GeoTargetConstantSuggestions {
      get { return geoTargetConstantSuggestions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SuggestGeoTargetConstantsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SuggestGeoTargetConstantsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!geoTargetConstantSuggestions_.Equals(other.geoTargetConstantSuggestions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= geoTargetConstantSuggestions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      geoTargetConstantSuggestions_.WriteTo(output, _repeated_geoTargetConstantSuggestions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      geoTargetConstantSuggestions_.WriteTo(ref output, _repeated_geoTargetConstantSuggestions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += geoTargetConstantSuggestions_.CalculateSize(_repeated_geoTargetConstantSuggestions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SuggestGeoTargetConstantsResponse other) {
      if (other == null) {
        return;
      }
      geoTargetConstantSuggestions_.Add(other.geoTargetConstantSuggestions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            geoTargetConstantSuggestions_.AddEntriesFrom(input, _repeated_geoTargetConstantSuggestions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            geoTargetConstantSuggestions_.AddEntriesFrom(ref input, _repeated_geoTargetConstantSuggestions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A geo target constant suggestion.
  /// </summary>
  public sealed partial class GeoTargetConstantSuggestion : pb::IMessage<GeoTargetConstantSuggestion>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GeoTargetConstantSuggestion> _parser = new pb::MessageParser<GeoTargetConstantSuggestion>(() => new GeoTargetConstantSuggestion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GeoTargetConstantSuggestion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V4.Services.GeoTargetConstantServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoTargetConstantSuggestion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoTargetConstantSuggestion(GeoTargetConstantSuggestion other) : this() {
      Locale = other.Locale;
      Reach = other.Reach;
      SearchTerm = other.SearchTerm;
      geoTargetConstant_ = other.geoTargetConstant_ != null ? other.geoTargetConstant_.Clone() : null;
      geoTargetConstantParents_ = other.geoTargetConstantParents_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoTargetConstantSuggestion Clone() {
      return new GeoTargetConstantSuggestion(this);
    }

    /// <summary>Field number for the "locale" field.</summary>
    public const int LocaleFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_locale_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string locale_;
    /// <summary>
    /// The language this GeoTargetConstantSuggestion is currently translated to.
    /// It affects the name of geo target fields. For example, if locale=en, then
    /// name=Spain. If locale=es, then name=España. The default locale will be
    /// returned if no translation exists for the locale in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Locale {
      get { return locale_; }
      set {
        locale_ = value;
      }
    }


    /// <summary>Field number for the "reach" field.</summary>
    public const int ReachFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_reach_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? reach_;
    /// <summary>
    /// Approximate user population that will be targeted, rounded to the
    /// nearest 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Reach {
      get { return reach_; }
      set {
        reach_ = value;
      }
    }


    /// <summary>Field number for the "search_term" field.</summary>
    public const int SearchTermFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_searchTerm_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string searchTerm_;
    /// <summary>
    /// If the request searched by location name, this is the location name that
    /// matched the geo target.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SearchTerm {
      get { return searchTerm_; }
      set {
        searchTerm_ = value;
      }
    }


    /// <summary>Field number for the "geo_target_constant" field.</summary>
    public const int GeoTargetConstantFieldNumber = 4;
    private global::Google.Ads.GoogleAds.V4.Resources.GeoTargetConstant geoTargetConstant_;
    /// <summary>
    /// The GeoTargetConstant result.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V4.Resources.GeoTargetConstant GeoTargetConstant {
      get { return geoTargetConstant_; }
      set {
        geoTargetConstant_ = value;
      }
    }

    /// <summary>Field number for the "geo_target_constant_parents" field.</summary>
    public const int GeoTargetConstantParentsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V4.Resources.GeoTargetConstant> _repeated_geoTargetConstantParents_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Ads.GoogleAds.V4.Resources.GeoTargetConstant.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V4.Resources.GeoTargetConstant> geoTargetConstantParents_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V4.Resources.GeoTargetConstant>();
    /// <summary>
    /// The list of parents of the geo target constant.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V4.Resources.GeoTargetConstant> GeoTargetConstantParents {
      get { return geoTargetConstantParents_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GeoTargetConstantSuggestion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GeoTargetConstantSuggestion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Locale != other.Locale) return false;
      if (Reach != other.Reach) return false;
      if (SearchTerm != other.SearchTerm) return false;
      if (!object.Equals(GeoTargetConstant, other.GeoTargetConstant)) return false;
      if(!geoTargetConstantParents_.Equals(other.geoTargetConstantParents_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (locale_ != null) hash ^= Locale.GetHashCode();
      if (reach_ != null) hash ^= Reach.GetHashCode();
      if (searchTerm_ != null) hash ^= SearchTerm.GetHashCode();
      if (geoTargetConstant_ != null) hash ^= GeoTargetConstant.GetHashCode();
      hash ^= geoTargetConstantParents_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (locale_ != null) {
        _single_locale_codec.WriteTagAndValue(output, Locale);
      }
      if (reach_ != null) {
        _single_reach_codec.WriteTagAndValue(output, Reach);
      }
      if (searchTerm_ != null) {
        _single_searchTerm_codec.WriteTagAndValue(output, SearchTerm);
      }
      if (geoTargetConstant_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GeoTargetConstant);
      }
      geoTargetConstantParents_.WriteTo(output, _repeated_geoTargetConstantParents_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (locale_ != null) {
        _single_locale_codec.WriteTagAndValue(ref output, Locale);
      }
      if (reach_ != null) {
        _single_reach_codec.WriteTagAndValue(ref output, Reach);
      }
      if (searchTerm_ != null) {
        _single_searchTerm_codec.WriteTagAndValue(ref output, SearchTerm);
      }
      if (geoTargetConstant_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GeoTargetConstant);
      }
      geoTargetConstantParents_.WriteTo(ref output, _repeated_geoTargetConstantParents_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (locale_ != null) {
        size += _single_locale_codec.CalculateSizeWithTag(Locale);
      }
      if (reach_ != null) {
        size += _single_reach_codec.CalculateSizeWithTag(Reach);
      }
      if (searchTerm_ != null) {
        size += _single_searchTerm_codec.CalculateSizeWithTag(SearchTerm);
      }
      if (geoTargetConstant_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GeoTargetConstant);
      }
      size += geoTargetConstantParents_.CalculateSize(_repeated_geoTargetConstantParents_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GeoTargetConstantSuggestion other) {
      if (other == null) {
        return;
      }
      if (other.locale_ != null) {
        if (locale_ == null || other.Locale != "") {
          Locale = other.Locale;
        }
      }
      if (other.reach_ != null) {
        if (reach_ == null || other.Reach != 0L) {
          Reach = other.Reach;
        }
      }
      if (other.searchTerm_ != null) {
        if (searchTerm_ == null || other.SearchTerm != "") {
          SearchTerm = other.SearchTerm;
        }
      }
      if (other.geoTargetConstant_ != null) {
        if (geoTargetConstant_ == null) {
          GeoTargetConstant = new global::Google.Ads.GoogleAds.V4.Resources.GeoTargetConstant();
        }
        GeoTargetConstant.MergeFrom(other.GeoTargetConstant);
      }
      geoTargetConstantParents_.Add(other.geoTargetConstantParents_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_locale_codec.Read(input);
            if (locale_ == null || value != "") {
              Locale = value;
            }
            break;
          }
          case 18: {
            long? value = _single_reach_codec.Read(input);
            if (reach_ == null || value != 0L) {
              Reach = value;
            }
            break;
          }
          case 26: {
            string value = _single_searchTerm_codec.Read(input);
            if (searchTerm_ == null || value != "") {
              SearchTerm = value;
            }
            break;
          }
          case 34: {
            if (geoTargetConstant_ == null) {
              GeoTargetConstant = new global::Google.Ads.GoogleAds.V4.Resources.GeoTargetConstant();
            }
            input.ReadMessage(GeoTargetConstant);
            break;
          }
          case 42: {
            geoTargetConstantParents_.AddEntriesFrom(input, _repeated_geoTargetConstantParents_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_locale_codec.Read(ref input);
            if (locale_ == null || value != "") {
              Locale = value;
            }
            break;
          }
          case 18: {
            long? value = _single_reach_codec.Read(ref input);
            if (reach_ == null || value != 0L) {
              Reach = value;
            }
            break;
          }
          case 26: {
            string value = _single_searchTerm_codec.Read(ref input);
            if (searchTerm_ == null || value != "") {
              SearchTerm = value;
            }
            break;
          }
          case 34: {
            if (geoTargetConstant_ == null) {
              GeoTargetConstant = new global::Google.Ads.GoogleAds.V4.Resources.GeoTargetConstant();
            }
            input.ReadMessage(GeoTargetConstant);
            break;
          }
          case 42: {
            geoTargetConstantParents_.AddEntriesFrom(ref input, _repeated_geoTargetConstantParents_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
