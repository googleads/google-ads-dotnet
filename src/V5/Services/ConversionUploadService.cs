// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v5/services/conversion_upload_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V5.Services {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v5/services/conversion_upload_service.proto</summary>
  public static partial class ConversionUploadServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v5/services/conversion_upload_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConversionUploadServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkBnb29nbGUvYWRzL2dvb2dsZWFkcy92NS9zZXJ2aWNlcy9jb252ZXJzaW9u",
            "X3VwbG9hZF9zZXJ2aWNlLnByb3RvEiBnb29nbGUuYWRzLmdvb2dsZWFkcy52",
            "NS5zZXJ2aWNlcxocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90bxoXZ29v",
            "Z2xlL2FwaS9jbGllbnQucHJvdG8aH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZp",
            "b3IucHJvdG8aF2dvb2dsZS9ycGMvc3RhdHVzLnByb3RvIrsBCh1VcGxvYWRD",
            "bGlja0NvbnZlcnNpb25zUmVxdWVzdBIYCgtjdXN0b21lcl9pZBgBIAEoCUID",
            "4EECEksKC2NvbnZlcnNpb25zGAIgAygLMjEuZ29vZ2xlLmFkcy5nb29nbGVh",
            "ZHMudjUuc2VydmljZXMuQ2xpY2tDb252ZXJzaW9uQgPgQQISHAoPcGFydGlh",
            "bF9mYWlsdXJlGAMgASgIQgPgQQISFQoNdmFsaWRhdGVfb25seRgEIAEoCCKd",
            "AQoeVXBsb2FkQ2xpY2tDb252ZXJzaW9uc1Jlc3BvbnNlEjEKFXBhcnRpYWxf",
            "ZmFpbHVyZV9lcnJvchgBIAEoCzISLmdvb2dsZS5ycGMuU3RhdHVzEkgKB3Jl",
            "c3VsdHMYAiADKAsyNy5nb29nbGUuYWRzLmdvb2dsZWFkcy52NS5zZXJ2aWNl",
            "cy5DbGlja0NvbnZlcnNpb25SZXN1bHQiuQEKHFVwbG9hZENhbGxDb252ZXJz",
            "aW9uc1JlcXVlc3QSGAoLY3VzdG9tZXJfaWQYASABKAlCA+BBAhJKCgtjb252",
            "ZXJzaW9ucxgCIAMoCzIwLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY1LnNlcnZp",
            "Y2VzLkNhbGxDb252ZXJzaW9uQgPgQQISHAoPcGFydGlhbF9mYWlsdXJlGAMg",
            "ASgIQgPgQQISFQoNdmFsaWRhdGVfb25seRgEIAEoCCKbAQodVXBsb2FkQ2Fs",
            "bENvbnZlcnNpb25zUmVzcG9uc2USMQoVcGFydGlhbF9mYWlsdXJlX2Vycm9y",
            "GAEgASgLMhIuZ29vZ2xlLnJwYy5TdGF0dXMSRwoHcmVzdWx0cxgCIAMoCzI2",
            "Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY1LnNlcnZpY2VzLkNhbGxDb252ZXJz",
            "aW9uUmVzdWx0IoUDCg9DbGlja0NvbnZlcnNpb24SEgoFZ2NsaWQYCSABKAlI",
            "AIgBARIeChFjb252ZXJzaW9uX2FjdGlvbhgKIAEoCUgBiAEBEiEKFGNvbnZl",
            "cnNpb25fZGF0ZV90aW1lGAsgASgJSAKIAQESHQoQY29udmVyc2lvbl92YWx1",
            "ZRgMIAEoAUgDiAEBEhoKDWN1cnJlbmN5X2NvZGUYDSABKAlIBIgBARIVCghv",
            "cmRlcl9pZBgOIAEoCUgFiAEBElwKGWV4dGVybmFsX2F0dHJpYnV0aW9uX2Rh",
            "dGEYByABKAsyOS5nb29nbGUuYWRzLmdvb2dsZWFkcy52NS5zZXJ2aWNlcy5F",
            "eHRlcm5hbEF0dHJpYnV0aW9uRGF0YUIICgZfZ2NsaWRCFAoSX2NvbnZlcnNp",
            "b25fYWN0aW9uQhcKFV9jb252ZXJzaW9uX2RhdGVfdGltZUITChFfY29udmVy",
            "c2lvbl92YWx1ZUIQCg5fY3VycmVuY3lfY29kZUILCglfb3JkZXJfaWQixgIK",
            "DkNhbGxDb252ZXJzaW9uEhYKCWNhbGxlcl9pZBgHIAEoCUgAiAEBEiEKFGNh",
            "bGxfc3RhcnRfZGF0ZV90aW1lGAggASgJSAGIAQESHgoRY29udmVyc2lvbl9h",
            "Y3Rpb24YCSABKAlIAogBARIhChRjb252ZXJzaW9uX2RhdGVfdGltZRgKIAEo",
            "CUgDiAEBEh0KEGNvbnZlcnNpb25fdmFsdWUYCyABKAFIBIgBARIaCg1jdXJy",
            "ZW5jeV9jb2RlGAwgASgJSAWIAQFCDAoKX2NhbGxlcl9pZEIXChVfY2FsbF9z",
            "dGFydF9kYXRlX3RpbWVCFAoSX2NvbnZlcnNpb25fYWN0aW9uQhcKFV9jb252",
            "ZXJzaW9uX2RhdGVfdGltZUITChFfY29udmVyc2lvbl92YWx1ZUIQCg5fY3Vy",
            "cmVuY3lfY29kZSKrAQoXRXh0ZXJuYWxBdHRyaWJ1dGlvbkRhdGESKAobZXh0",
            "ZXJuYWxfYXR0cmlidXRpb25fY3JlZGl0GAMgASgBSACIAQESJwoaZXh0ZXJu",
            "YWxfYXR0cmlidXRpb25fbW9kZWwYBCABKAlIAYgBAUIeChxfZXh0ZXJuYWxf",
            "YXR0cmlidXRpb25fY3JlZGl0Qh0KG19leHRlcm5hbF9hdHRyaWJ1dGlvbl9t",
            "b2RlbCKnAQoVQ2xpY2tDb252ZXJzaW9uUmVzdWx0EhIKBWdjbGlkGAQgASgJ",
            "SACIAQESHgoRY29udmVyc2lvbl9hY3Rpb24YBSABKAlIAYgBARIhChRjb252",
            "ZXJzaW9uX2RhdGVfdGltZRgGIAEoCUgCiAEBQggKBl9nY2xpZEIUChJfY29u",
            "dmVyc2lvbl9hY3Rpb25CFwoVX2NvbnZlcnNpb25fZGF0ZV90aW1lIuoBChRD",
            "YWxsQ29udmVyc2lvblJlc3VsdBIWCgljYWxsZXJfaWQYBSABKAlIAIgBARIh",
            "ChRjYWxsX3N0YXJ0X2RhdGVfdGltZRgGIAEoCUgBiAEBEh4KEWNvbnZlcnNp",
            "b25fYWN0aW9uGAcgASgJSAKIAQESIQoUY29udmVyc2lvbl9kYXRlX3RpbWUY",
            "CCABKAlIA4gBAUIMCgpfY2FsbGVyX2lkQhcKFV9jYWxsX3N0YXJ0X2RhdGVf",
            "dGltZUIUChJfY29udmVyc2lvbl9hY3Rpb25CFwoVX2NvbnZlcnNpb25fZGF0",
            "ZV90aW1lMu4EChdDb252ZXJzaW9uVXBsb2FkU2VydmljZRKGAgoWVXBsb2Fk",
            "Q2xpY2tDb252ZXJzaW9ucxI/Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY1LnNl",
            "cnZpY2VzLlVwbG9hZENsaWNrQ29udmVyc2lvbnNSZXF1ZXN0GkAuZ29vZ2xl",
            "LmFkcy5nb29nbGVhZHMudjUuc2VydmljZXMuVXBsb2FkQ2xpY2tDb252ZXJz",
            "aW9uc1Jlc3BvbnNlImmC0+STAjkiNC92NS9jdXN0b21lcnMve2N1c3RvbWVy",
            "X2lkPSp9OnVwbG9hZENsaWNrQ29udmVyc2lvbnM6ASraQSdjdXN0b21lcl9p",
            "ZCxjb252ZXJzaW9ucyxwYXJ0aWFsX2ZhaWx1cmUSggIKFVVwbG9hZENhbGxD",
            "b252ZXJzaW9ucxI+Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY1LnNlcnZpY2Vz",
            "LlVwbG9hZENhbGxDb252ZXJzaW9uc1JlcXVlc3QaPy5nb29nbGUuYWRzLmdv",
            "b2dsZWFkcy52NS5zZXJ2aWNlcy5VcGxvYWRDYWxsQ29udmVyc2lvbnNSZXNw",
            "b25zZSJogtPkkwI4IjMvdjUvY3VzdG9tZXJzL3tjdXN0b21lcl9pZD0qfTp1",
            "cGxvYWRDYWxsQ29udmVyc2lvbnM6ASraQSdjdXN0b21lcl9pZCxjb252ZXJz",
            "aW9ucyxwYXJ0aWFsX2ZhaWx1cmUaRcpBGGdvb2dsZWFkcy5nb29nbGVhcGlz",
            "LmNvbdJBJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvYWR3b3Jk",
            "c0KDAgokY29tLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY1LnNlcnZpY2VzQhxD",
            "b252ZXJzaW9uVXBsb2FkU2VydmljZVByb3RvUAFaSGdvb2dsZS5nb2xhbmcu",
            "b3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvYWRzL2dvb2dsZWFkcy92NS9zZXJ2",
            "aWNlcztzZXJ2aWNlc6ICA0dBQaoCIEdvb2dsZS5BZHMuR29vZ2xlQWRzLlY1",
            "LlNlcnZpY2VzygIgR29vZ2xlXEFkc1xHb29nbGVBZHNcVjVcU2VydmljZXPq",
            "AiRHb29nbGU6OkFkczo6R29vZ2xlQWRzOjpWNTo6U2VydmljZXNiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.UploadClickConversionsRequest), global::Google.Ads.GoogleAds.V5.Services.UploadClickConversionsRequest.Parser, new[]{ "CustomerId", "Conversions", "PartialFailure", "ValidateOnly" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.UploadClickConversionsResponse), global::Google.Ads.GoogleAds.V5.Services.UploadClickConversionsResponse.Parser, new[]{ "PartialFailureError", "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.UploadCallConversionsRequest), global::Google.Ads.GoogleAds.V5.Services.UploadCallConversionsRequest.Parser, new[]{ "CustomerId", "Conversions", "PartialFailure", "ValidateOnly" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.UploadCallConversionsResponse), global::Google.Ads.GoogleAds.V5.Services.UploadCallConversionsResponse.Parser, new[]{ "PartialFailureError", "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.ClickConversion), global::Google.Ads.GoogleAds.V5.Services.ClickConversion.Parser, new[]{ "Gclid", "ConversionAction", "ConversionDateTime", "ConversionValue", "CurrencyCode", "OrderId", "ExternalAttributionData" }, new[]{ "Gclid", "ConversionAction", "ConversionDateTime", "ConversionValue", "CurrencyCode", "OrderId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.CallConversion), global::Google.Ads.GoogleAds.V5.Services.CallConversion.Parser, new[]{ "CallerId", "CallStartDateTime", "ConversionAction", "ConversionDateTime", "ConversionValue", "CurrencyCode" }, new[]{ "CallerId", "CallStartDateTime", "ConversionAction", "ConversionDateTime", "ConversionValue", "CurrencyCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.ExternalAttributionData), global::Google.Ads.GoogleAds.V5.Services.ExternalAttributionData.Parser, new[]{ "ExternalAttributionCredit", "ExternalAttributionModel" }, new[]{ "ExternalAttributionCredit", "ExternalAttributionModel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.ClickConversionResult), global::Google.Ads.GoogleAds.V5.Services.ClickConversionResult.Parser, new[]{ "Gclid", "ConversionAction", "ConversionDateTime" }, new[]{ "Gclid", "ConversionAction", "ConversionDateTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.CallConversionResult), global::Google.Ads.GoogleAds.V5.Services.CallConversionResult.Parser, new[]{ "CallerId", "CallStartDateTime", "ConversionAction", "ConversionDateTime" }, new[]{ "CallerId", "CallStartDateTime", "ConversionAction", "ConversionDateTime" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Request message for [ConversionUploadService.UploadClickConversions][google.ads.googleads.v5.services.ConversionUploadService.UploadClickConversions].
  /// </summary>
  public sealed partial class UploadClickConversionsRequest : pb::IMessage<UploadClickConversionsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UploadClickConversionsRequest> _parser = new pb::MessageParser<UploadClickConversionsRequest>(() => new UploadClickConversionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadClickConversionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ConversionUploadServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadClickConversionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadClickConversionsRequest(UploadClickConversionsRequest other) : this() {
      customerId_ = other.customerId_;
      conversions_ = other.conversions_.Clone();
      partialFailure_ = other.partialFailure_;
      validateOnly_ = other.validateOnly_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadClickConversionsRequest Clone() {
      return new UploadClickConversionsRequest(this);
    }

    /// <summary>Field number for the "customer_id" field.</summary>
    public const int CustomerIdFieldNumber = 1;
    private string customerId_ = "";
    /// <summary>
    /// Required. The ID of the customer performing the upload.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerId {
      get { return customerId_; }
      set {
        customerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "conversions" field.</summary>
    public const int ConversionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V5.Services.ClickConversion> _repeated_conversions_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Ads.GoogleAds.V5.Services.ClickConversion.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.ClickConversion> conversions_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.ClickConversion>();
    /// <summary>
    /// Required. The conversions that are being uploaded.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.ClickConversion> Conversions {
      get { return conversions_; }
    }

    /// <summary>Field number for the "partial_failure" field.</summary>
    public const int PartialFailureFieldNumber = 3;
    private bool partialFailure_;
    /// <summary>
    /// Required. If true, successful operations will be carried out and invalid
    /// operations will return errors. If false, all operations will be carried
    /// out in one transaction if and only if they are all valid.
    /// This should always be set to true.
    /// See
    /// https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
    /// for more information about partial failure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PartialFailure {
      get { return partialFailure_; }
      set {
        partialFailure_ = value;
      }
    }

    /// <summary>Field number for the "validate_only" field.</summary>
    public const int ValidateOnlyFieldNumber = 4;
    private bool validateOnly_;
    /// <summary>
    /// If true, the request is validated but not executed. Only errors are
    /// returned, not results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ValidateOnly {
      get { return validateOnly_; }
      set {
        validateOnly_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadClickConversionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadClickConversionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CustomerId != other.CustomerId) return false;
      if(!conversions_.Equals(other.conversions_)) return false;
      if (PartialFailure != other.PartialFailure) return false;
      if (ValidateOnly != other.ValidateOnly) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CustomerId.Length != 0) hash ^= CustomerId.GetHashCode();
      hash ^= conversions_.GetHashCode();
      if (PartialFailure != false) hash ^= PartialFailure.GetHashCode();
      if (ValidateOnly != false) hash ^= ValidateOnly.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CustomerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CustomerId);
      }
      conversions_.WriteTo(output, _repeated_conversions_codec);
      if (PartialFailure != false) {
        output.WriteRawTag(24);
        output.WriteBool(PartialFailure);
      }
      if (ValidateOnly != false) {
        output.WriteRawTag(32);
        output.WriteBool(ValidateOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CustomerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CustomerId);
      }
      conversions_.WriteTo(ref output, _repeated_conversions_codec);
      if (PartialFailure != false) {
        output.WriteRawTag(24);
        output.WriteBool(PartialFailure);
      }
      if (ValidateOnly != false) {
        output.WriteRawTag(32);
        output.WriteBool(ValidateOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CustomerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerId);
      }
      size += conversions_.CalculateSize(_repeated_conversions_codec);
      if (PartialFailure != false) {
        size += 1 + 1;
      }
      if (ValidateOnly != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadClickConversionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.CustomerId.Length != 0) {
        CustomerId = other.CustomerId;
      }
      conversions_.Add(other.conversions_);
      if (other.PartialFailure != false) {
        PartialFailure = other.PartialFailure;
      }
      if (other.ValidateOnly != false) {
        ValidateOnly = other.ValidateOnly;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CustomerId = input.ReadString();
            break;
          }
          case 18: {
            conversions_.AddEntriesFrom(input, _repeated_conversions_codec);
            break;
          }
          case 24: {
            PartialFailure = input.ReadBool();
            break;
          }
          case 32: {
            ValidateOnly = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CustomerId = input.ReadString();
            break;
          }
          case 18: {
            conversions_.AddEntriesFrom(ref input, _repeated_conversions_codec);
            break;
          }
          case 24: {
            PartialFailure = input.ReadBool();
            break;
          }
          case 32: {
            ValidateOnly = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for [ConversionUploadService.UploadClickConversions][google.ads.googleads.v5.services.ConversionUploadService.UploadClickConversions].
  /// </summary>
  public sealed partial class UploadClickConversionsResponse : pb::IMessage<UploadClickConversionsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UploadClickConversionsResponse> _parser = new pb::MessageParser<UploadClickConversionsResponse>(() => new UploadClickConversionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadClickConversionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ConversionUploadServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadClickConversionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadClickConversionsResponse(UploadClickConversionsResponse other) : this() {
      partialFailureError_ = other.partialFailureError_ != null ? other.partialFailureError_.Clone() : null;
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadClickConversionsResponse Clone() {
      return new UploadClickConversionsResponse(this);
    }

    /// <summary>Field number for the "partial_failure_error" field.</summary>
    public const int PartialFailureErrorFieldNumber = 1;
    private global::Google.Rpc.Status partialFailureError_;
    /// <summary>
    /// Errors that pertain to conversion failures in the partial failure mode.
    /// Returned when all errors occur inside the conversions. If any errors occur
    /// outside the conversions (e.g. auth errors), we return an RPC level error.
    /// See
    /// https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
    /// for more information about partial failure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status PartialFailureError {
      get { return partialFailureError_; }
      set {
        partialFailureError_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V5.Services.ClickConversionResult> _repeated_results_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Ads.GoogleAds.V5.Services.ClickConversionResult.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.ClickConversionResult> results_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.ClickConversionResult>();
    /// <summary>
    /// Returned for successfully processed conversions. Proto will be empty for
    /// rows that received an error. Results are not returned when validate_only is
    /// true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.ClickConversionResult> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadClickConversionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadClickConversionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PartialFailureError, other.PartialFailureError)) return false;
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (partialFailureError_ != null) hash ^= PartialFailureError.GetHashCode();
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (partialFailureError_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PartialFailureError);
      }
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (partialFailureError_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PartialFailureError);
      }
      results_.WriteTo(ref output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (partialFailureError_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartialFailureError);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadClickConversionsResponse other) {
      if (other == null) {
        return;
      }
      if (other.partialFailureError_ != null) {
        if (partialFailureError_ == null) {
          PartialFailureError = new global::Google.Rpc.Status();
        }
        PartialFailureError.MergeFrom(other.PartialFailureError);
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (partialFailureError_ == null) {
              PartialFailureError = new global::Google.Rpc.Status();
            }
            input.ReadMessage(PartialFailureError);
            break;
          }
          case 18: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (partialFailureError_ == null) {
              PartialFailureError = new global::Google.Rpc.Status();
            }
            input.ReadMessage(PartialFailureError);
            break;
          }
          case 18: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for [ConversionUploadService.UploadCallConversions][google.ads.googleads.v5.services.ConversionUploadService.UploadCallConversions].
  /// </summary>
  public sealed partial class UploadCallConversionsRequest : pb::IMessage<UploadCallConversionsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UploadCallConversionsRequest> _parser = new pb::MessageParser<UploadCallConversionsRequest>(() => new UploadCallConversionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadCallConversionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ConversionUploadServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadCallConversionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadCallConversionsRequest(UploadCallConversionsRequest other) : this() {
      customerId_ = other.customerId_;
      conversions_ = other.conversions_.Clone();
      partialFailure_ = other.partialFailure_;
      validateOnly_ = other.validateOnly_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadCallConversionsRequest Clone() {
      return new UploadCallConversionsRequest(this);
    }

    /// <summary>Field number for the "customer_id" field.</summary>
    public const int CustomerIdFieldNumber = 1;
    private string customerId_ = "";
    /// <summary>
    /// Required. The ID of the customer performing the upload.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerId {
      get { return customerId_; }
      set {
        customerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "conversions" field.</summary>
    public const int ConversionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V5.Services.CallConversion> _repeated_conversions_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Ads.GoogleAds.V5.Services.CallConversion.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.CallConversion> conversions_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.CallConversion>();
    /// <summary>
    /// Required. The conversions that are being uploaded.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.CallConversion> Conversions {
      get { return conversions_; }
    }

    /// <summary>Field number for the "partial_failure" field.</summary>
    public const int PartialFailureFieldNumber = 3;
    private bool partialFailure_;
    /// <summary>
    /// Required. If true, successful operations will be carried out and invalid
    /// operations will return errors. If false, all operations will be carried
    /// out in one transaction if and only if they are all valid.
    /// This should always be set to true.
    /// See
    /// https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
    /// for more information about partial failure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PartialFailure {
      get { return partialFailure_; }
      set {
        partialFailure_ = value;
      }
    }

    /// <summary>Field number for the "validate_only" field.</summary>
    public const int ValidateOnlyFieldNumber = 4;
    private bool validateOnly_;
    /// <summary>
    /// If true, the request is validated but not executed. Only errors are
    /// returned, not results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ValidateOnly {
      get { return validateOnly_; }
      set {
        validateOnly_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadCallConversionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadCallConversionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CustomerId != other.CustomerId) return false;
      if(!conversions_.Equals(other.conversions_)) return false;
      if (PartialFailure != other.PartialFailure) return false;
      if (ValidateOnly != other.ValidateOnly) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CustomerId.Length != 0) hash ^= CustomerId.GetHashCode();
      hash ^= conversions_.GetHashCode();
      if (PartialFailure != false) hash ^= PartialFailure.GetHashCode();
      if (ValidateOnly != false) hash ^= ValidateOnly.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CustomerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CustomerId);
      }
      conversions_.WriteTo(output, _repeated_conversions_codec);
      if (PartialFailure != false) {
        output.WriteRawTag(24);
        output.WriteBool(PartialFailure);
      }
      if (ValidateOnly != false) {
        output.WriteRawTag(32);
        output.WriteBool(ValidateOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CustomerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CustomerId);
      }
      conversions_.WriteTo(ref output, _repeated_conversions_codec);
      if (PartialFailure != false) {
        output.WriteRawTag(24);
        output.WriteBool(PartialFailure);
      }
      if (ValidateOnly != false) {
        output.WriteRawTag(32);
        output.WriteBool(ValidateOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CustomerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerId);
      }
      size += conversions_.CalculateSize(_repeated_conversions_codec);
      if (PartialFailure != false) {
        size += 1 + 1;
      }
      if (ValidateOnly != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadCallConversionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.CustomerId.Length != 0) {
        CustomerId = other.CustomerId;
      }
      conversions_.Add(other.conversions_);
      if (other.PartialFailure != false) {
        PartialFailure = other.PartialFailure;
      }
      if (other.ValidateOnly != false) {
        ValidateOnly = other.ValidateOnly;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CustomerId = input.ReadString();
            break;
          }
          case 18: {
            conversions_.AddEntriesFrom(input, _repeated_conversions_codec);
            break;
          }
          case 24: {
            PartialFailure = input.ReadBool();
            break;
          }
          case 32: {
            ValidateOnly = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CustomerId = input.ReadString();
            break;
          }
          case 18: {
            conversions_.AddEntriesFrom(ref input, _repeated_conversions_codec);
            break;
          }
          case 24: {
            PartialFailure = input.ReadBool();
            break;
          }
          case 32: {
            ValidateOnly = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for [ConversionUploadService.UploadCallConversions][google.ads.googleads.v5.services.ConversionUploadService.UploadCallConversions].
  /// </summary>
  public sealed partial class UploadCallConversionsResponse : pb::IMessage<UploadCallConversionsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UploadCallConversionsResponse> _parser = new pb::MessageParser<UploadCallConversionsResponse>(() => new UploadCallConversionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadCallConversionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ConversionUploadServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadCallConversionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadCallConversionsResponse(UploadCallConversionsResponse other) : this() {
      partialFailureError_ = other.partialFailureError_ != null ? other.partialFailureError_.Clone() : null;
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadCallConversionsResponse Clone() {
      return new UploadCallConversionsResponse(this);
    }

    /// <summary>Field number for the "partial_failure_error" field.</summary>
    public const int PartialFailureErrorFieldNumber = 1;
    private global::Google.Rpc.Status partialFailureError_;
    /// <summary>
    /// Errors that pertain to conversion failures in the partial failure mode.
    /// Returned when all errors occur inside the conversions. If any errors occur
    /// outside the conversions (e.g. auth errors), we return an RPC level error.
    /// See
    /// https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
    /// for more information about partial failure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status PartialFailureError {
      get { return partialFailureError_; }
      set {
        partialFailureError_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V5.Services.CallConversionResult> _repeated_results_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Ads.GoogleAds.V5.Services.CallConversionResult.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.CallConversionResult> results_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.CallConversionResult>();
    /// <summary>
    /// Returned for successfully processed conversions. Proto will be empty for
    /// rows that received an error. Results are not returned when validate_only is
    /// true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.CallConversionResult> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadCallConversionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadCallConversionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PartialFailureError, other.PartialFailureError)) return false;
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (partialFailureError_ != null) hash ^= PartialFailureError.GetHashCode();
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (partialFailureError_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PartialFailureError);
      }
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (partialFailureError_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PartialFailureError);
      }
      results_.WriteTo(ref output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (partialFailureError_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartialFailureError);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadCallConversionsResponse other) {
      if (other == null) {
        return;
      }
      if (other.partialFailureError_ != null) {
        if (partialFailureError_ == null) {
          PartialFailureError = new global::Google.Rpc.Status();
        }
        PartialFailureError.MergeFrom(other.PartialFailureError);
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (partialFailureError_ == null) {
              PartialFailureError = new global::Google.Rpc.Status();
            }
            input.ReadMessage(PartialFailureError);
            break;
          }
          case 18: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (partialFailureError_ == null) {
              PartialFailureError = new global::Google.Rpc.Status();
            }
            input.ReadMessage(PartialFailureError);
            break;
          }
          case 18: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A click conversion.
  /// </summary>
  public sealed partial class ClickConversion : pb::IMessage<ClickConversion>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClickConversion> _parser = new pb::MessageParser<ClickConversion>(() => new ClickConversion());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClickConversion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ConversionUploadServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClickConversion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClickConversion(ClickConversion other) : this() {
      _hasBits0 = other._hasBits0;
      gclid_ = other.gclid_;
      conversionAction_ = other.conversionAction_;
      conversionDateTime_ = other.conversionDateTime_;
      conversionValue_ = other.conversionValue_;
      currencyCode_ = other.currencyCode_;
      orderId_ = other.orderId_;
      externalAttributionData_ = other.externalAttributionData_ != null ? other.externalAttributionData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClickConversion Clone() {
      return new ClickConversion(this);
    }

    /// <summary>Field number for the "gclid" field.</summary>
    public const int GclidFieldNumber = 9;
    private string gclid_;
    /// <summary>
    /// The Google click ID (gclid) associated with this conversion.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gclid {
      get { return gclid_ ?? ""; }
      set {
        gclid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gclid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGclid {
      get { return gclid_ != null; }
    }
    /// <summary>Clears the value of the "gclid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGclid() {
      gclid_ = null;
    }

    /// <summary>Field number for the "conversion_action" field.</summary>
    public const int ConversionActionFieldNumber = 10;
    private string conversionAction_;
    /// <summary>
    /// Resource name of the conversion action associated with this conversion.
    /// Note: Although this resource name consists of a customer id and a
    /// conversion action id, validation will ignore the customer id and use the
    /// conversion action id as the sole identifier of the conversion action.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConversionAction {
      get { return conversionAction_ ?? ""; }
      set {
        conversionAction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "conversion_action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConversionAction {
      get { return conversionAction_ != null; }
    }
    /// <summary>Clears the value of the "conversion_action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConversionAction() {
      conversionAction_ = null;
    }

    /// <summary>Field number for the "conversion_date_time" field.</summary>
    public const int ConversionDateTimeFieldNumber = 11;
    private string conversionDateTime_;
    /// <summary>
    /// The date time at which the conversion occurred. Must be after
    /// the click time. The timezone must be specified. The format is
    /// "yyyy-mm-dd hh:mm:ss+|-hh:mm", e.g. “2019-01-01 12:32:45-08:00”.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConversionDateTime {
      get { return conversionDateTime_ ?? ""; }
      set {
        conversionDateTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "conversion_date_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConversionDateTime {
      get { return conversionDateTime_ != null; }
    }
    /// <summary>Clears the value of the "conversion_date_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConversionDateTime() {
      conversionDateTime_ = null;
    }

    /// <summary>Field number for the "conversion_value" field.</summary>
    public const int ConversionValueFieldNumber = 12;
    private double conversionValue_;
    /// <summary>
    /// The value of the conversion for the advertiser.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ConversionValue {
      get { if ((_hasBits0 & 1) != 0) { return conversionValue_; } else { return 0D; } }
      set {
        _hasBits0 |= 1;
        conversionValue_ = value;
      }
    }
    /// <summary>Gets whether the "conversion_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConversionValue {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "conversion_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConversionValue() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "currency_code" field.</summary>
    public const int CurrencyCodeFieldNumber = 13;
    private string currencyCode_;
    /// <summary>
    /// Currency associated with the conversion value. This is the ISO 4217
    /// 3-character currency code. For example: USD, EUR.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_ ?? ""; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "currency_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrencyCode {
      get { return currencyCode_ != null; }
    }
    /// <summary>Clears the value of the "currency_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrencyCode() {
      currencyCode_ = null;
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 14;
    private string orderId_;
    /// <summary>
    /// The order ID associated with the conversion. An order id can only be used
    /// for one conversion per conversion action.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderId {
      get { return orderId_ ?? ""; }
      set {
        orderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "order_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOrderId {
      get { return orderId_ != null; }
    }
    /// <summary>Clears the value of the "order_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOrderId() {
      orderId_ = null;
    }

    /// <summary>Field number for the "external_attribution_data" field.</summary>
    public const int ExternalAttributionDataFieldNumber = 7;
    private global::Google.Ads.GoogleAds.V5.Services.ExternalAttributionData externalAttributionData_;
    /// <summary>
    /// Additional data about externally attributed conversions. This field
    /// is required for conversions with an externally attributed conversion
    /// action, but should not be set otherwise.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V5.Services.ExternalAttributionData ExternalAttributionData {
      get { return externalAttributionData_; }
      set {
        externalAttributionData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClickConversion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClickConversion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gclid != other.Gclid) return false;
      if (ConversionAction != other.ConversionAction) return false;
      if (ConversionDateTime != other.ConversionDateTime) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ConversionValue, other.ConversionValue)) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (OrderId != other.OrderId) return false;
      if (!object.Equals(ExternalAttributionData, other.ExternalAttributionData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGclid) hash ^= Gclid.GetHashCode();
      if (HasConversionAction) hash ^= ConversionAction.GetHashCode();
      if (HasConversionDateTime) hash ^= ConversionDateTime.GetHashCode();
      if (HasConversionValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ConversionValue);
      if (HasCurrencyCode) hash ^= CurrencyCode.GetHashCode();
      if (HasOrderId) hash ^= OrderId.GetHashCode();
      if (externalAttributionData_ != null) hash ^= ExternalAttributionData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (externalAttributionData_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ExternalAttributionData);
      }
      if (HasGclid) {
        output.WriteRawTag(74);
        output.WriteString(Gclid);
      }
      if (HasConversionAction) {
        output.WriteRawTag(82);
        output.WriteString(ConversionAction);
      }
      if (HasConversionDateTime) {
        output.WriteRawTag(90);
        output.WriteString(ConversionDateTime);
      }
      if (HasConversionValue) {
        output.WriteRawTag(97);
        output.WriteDouble(ConversionValue);
      }
      if (HasCurrencyCode) {
        output.WriteRawTag(106);
        output.WriteString(CurrencyCode);
      }
      if (HasOrderId) {
        output.WriteRawTag(114);
        output.WriteString(OrderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (externalAttributionData_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ExternalAttributionData);
      }
      if (HasGclid) {
        output.WriteRawTag(74);
        output.WriteString(Gclid);
      }
      if (HasConversionAction) {
        output.WriteRawTag(82);
        output.WriteString(ConversionAction);
      }
      if (HasConversionDateTime) {
        output.WriteRawTag(90);
        output.WriteString(ConversionDateTime);
      }
      if (HasConversionValue) {
        output.WriteRawTag(97);
        output.WriteDouble(ConversionValue);
      }
      if (HasCurrencyCode) {
        output.WriteRawTag(106);
        output.WriteString(CurrencyCode);
      }
      if (HasOrderId) {
        output.WriteRawTag(114);
        output.WriteString(OrderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasGclid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gclid);
      }
      if (HasConversionAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConversionAction);
      }
      if (HasConversionDateTime) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConversionDateTime);
      }
      if (HasConversionValue) {
        size += 1 + 8;
      }
      if (HasCurrencyCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (HasOrderId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderId);
      }
      if (externalAttributionData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalAttributionData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClickConversion other) {
      if (other == null) {
        return;
      }
      if (other.HasGclid) {
        Gclid = other.Gclid;
      }
      if (other.HasConversionAction) {
        ConversionAction = other.ConversionAction;
      }
      if (other.HasConversionDateTime) {
        ConversionDateTime = other.ConversionDateTime;
      }
      if (other.HasConversionValue) {
        ConversionValue = other.ConversionValue;
      }
      if (other.HasCurrencyCode) {
        CurrencyCode = other.CurrencyCode;
      }
      if (other.HasOrderId) {
        OrderId = other.OrderId;
      }
      if (other.externalAttributionData_ != null) {
        if (externalAttributionData_ == null) {
          ExternalAttributionData = new global::Google.Ads.GoogleAds.V5.Services.ExternalAttributionData();
        }
        ExternalAttributionData.MergeFrom(other.ExternalAttributionData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 58: {
            if (externalAttributionData_ == null) {
              ExternalAttributionData = new global::Google.Ads.GoogleAds.V5.Services.ExternalAttributionData();
            }
            input.ReadMessage(ExternalAttributionData);
            break;
          }
          case 74: {
            Gclid = input.ReadString();
            break;
          }
          case 82: {
            ConversionAction = input.ReadString();
            break;
          }
          case 90: {
            ConversionDateTime = input.ReadString();
            break;
          }
          case 97: {
            ConversionValue = input.ReadDouble();
            break;
          }
          case 106: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 114: {
            OrderId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 58: {
            if (externalAttributionData_ == null) {
              ExternalAttributionData = new global::Google.Ads.GoogleAds.V5.Services.ExternalAttributionData();
            }
            input.ReadMessage(ExternalAttributionData);
            break;
          }
          case 74: {
            Gclid = input.ReadString();
            break;
          }
          case 82: {
            ConversionAction = input.ReadString();
            break;
          }
          case 90: {
            ConversionDateTime = input.ReadString();
            break;
          }
          case 97: {
            ConversionValue = input.ReadDouble();
            break;
          }
          case 106: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 114: {
            OrderId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A call conversion.
  /// </summary>
  public sealed partial class CallConversion : pb::IMessage<CallConversion>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CallConversion> _parser = new pb::MessageParser<CallConversion>(() => new CallConversion());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CallConversion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ConversionUploadServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallConversion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallConversion(CallConversion other) : this() {
      _hasBits0 = other._hasBits0;
      callerId_ = other.callerId_;
      callStartDateTime_ = other.callStartDateTime_;
      conversionAction_ = other.conversionAction_;
      conversionDateTime_ = other.conversionDateTime_;
      conversionValue_ = other.conversionValue_;
      currencyCode_ = other.currencyCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallConversion Clone() {
      return new CallConversion(this);
    }

    /// <summary>Field number for the "caller_id" field.</summary>
    public const int CallerIdFieldNumber = 7;
    private string callerId_;
    /// <summary>
    /// The caller id from which this call was placed. Caller id is expected to be
    /// in E.164 format with preceding '+' sign. e.g. "+16502531234".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CallerId {
      get { return callerId_ ?? ""; }
      set {
        callerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "caller_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCallerId {
      get { return callerId_ != null; }
    }
    /// <summary>Clears the value of the "caller_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCallerId() {
      callerId_ = null;
    }

    /// <summary>Field number for the "call_start_date_time" field.</summary>
    public const int CallStartDateTimeFieldNumber = 8;
    private string callStartDateTime_;
    /// <summary>
    /// The date time at which the call occurred. The timezone must be specified.
    /// The format is "yyyy-mm-dd hh:mm:ss+|-hh:mm",
    /// e.g. "2019-01-01 12:32:45-08:00".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CallStartDateTime {
      get { return callStartDateTime_ ?? ""; }
      set {
        callStartDateTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "call_start_date_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCallStartDateTime {
      get { return callStartDateTime_ != null; }
    }
    /// <summary>Clears the value of the "call_start_date_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCallStartDateTime() {
      callStartDateTime_ = null;
    }

    /// <summary>Field number for the "conversion_action" field.</summary>
    public const int ConversionActionFieldNumber = 9;
    private string conversionAction_;
    /// <summary>
    /// Resource name of the conversion action associated with this conversion.
    /// Note: Although this resource name consists of a customer id and a
    /// conversion action id, validation will ignore the customer id and use the
    /// conversion action id as the sole identifier of the conversion action.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConversionAction {
      get { return conversionAction_ ?? ""; }
      set {
        conversionAction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "conversion_action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConversionAction {
      get { return conversionAction_ != null; }
    }
    /// <summary>Clears the value of the "conversion_action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConversionAction() {
      conversionAction_ = null;
    }

    /// <summary>Field number for the "conversion_date_time" field.</summary>
    public const int ConversionDateTimeFieldNumber = 10;
    private string conversionDateTime_;
    /// <summary>
    /// The date time at which the conversion occurred. Must be after the call
    /// time. The timezone must be specified. The format is
    /// "yyyy-mm-dd hh:mm:ss+|-hh:mm", e.g. "2019-01-01 12:32:45-08:00".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConversionDateTime {
      get { return conversionDateTime_ ?? ""; }
      set {
        conversionDateTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "conversion_date_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConversionDateTime {
      get { return conversionDateTime_ != null; }
    }
    /// <summary>Clears the value of the "conversion_date_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConversionDateTime() {
      conversionDateTime_ = null;
    }

    /// <summary>Field number for the "conversion_value" field.</summary>
    public const int ConversionValueFieldNumber = 11;
    private double conversionValue_;
    /// <summary>
    /// The value of the conversion for the advertiser.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ConversionValue {
      get { if ((_hasBits0 & 1) != 0) { return conversionValue_; } else { return 0D; } }
      set {
        _hasBits0 |= 1;
        conversionValue_ = value;
      }
    }
    /// <summary>Gets whether the "conversion_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConversionValue {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "conversion_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConversionValue() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "currency_code" field.</summary>
    public const int CurrencyCodeFieldNumber = 12;
    private string currencyCode_;
    /// <summary>
    /// Currency associated with the conversion value. This is the ISO 4217
    /// 3-character currency code. For example: USD, EUR.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_ ?? ""; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "currency_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrencyCode {
      get { return currencyCode_ != null; }
    }
    /// <summary>Clears the value of the "currency_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrencyCode() {
      currencyCode_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CallConversion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CallConversion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CallerId != other.CallerId) return false;
      if (CallStartDateTime != other.CallStartDateTime) return false;
      if (ConversionAction != other.ConversionAction) return false;
      if (ConversionDateTime != other.ConversionDateTime) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ConversionValue, other.ConversionValue)) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCallerId) hash ^= CallerId.GetHashCode();
      if (HasCallStartDateTime) hash ^= CallStartDateTime.GetHashCode();
      if (HasConversionAction) hash ^= ConversionAction.GetHashCode();
      if (HasConversionDateTime) hash ^= ConversionDateTime.GetHashCode();
      if (HasConversionValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ConversionValue);
      if (HasCurrencyCode) hash ^= CurrencyCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCallerId) {
        output.WriteRawTag(58);
        output.WriteString(CallerId);
      }
      if (HasCallStartDateTime) {
        output.WriteRawTag(66);
        output.WriteString(CallStartDateTime);
      }
      if (HasConversionAction) {
        output.WriteRawTag(74);
        output.WriteString(ConversionAction);
      }
      if (HasConversionDateTime) {
        output.WriteRawTag(82);
        output.WriteString(ConversionDateTime);
      }
      if (HasConversionValue) {
        output.WriteRawTag(89);
        output.WriteDouble(ConversionValue);
      }
      if (HasCurrencyCode) {
        output.WriteRawTag(98);
        output.WriteString(CurrencyCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCallerId) {
        output.WriteRawTag(58);
        output.WriteString(CallerId);
      }
      if (HasCallStartDateTime) {
        output.WriteRawTag(66);
        output.WriteString(CallStartDateTime);
      }
      if (HasConversionAction) {
        output.WriteRawTag(74);
        output.WriteString(ConversionAction);
      }
      if (HasConversionDateTime) {
        output.WriteRawTag(82);
        output.WriteString(ConversionDateTime);
      }
      if (HasConversionValue) {
        output.WriteRawTag(89);
        output.WriteDouble(ConversionValue);
      }
      if (HasCurrencyCode) {
        output.WriteRawTag(98);
        output.WriteString(CurrencyCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCallerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CallerId);
      }
      if (HasCallStartDateTime) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CallStartDateTime);
      }
      if (HasConversionAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConversionAction);
      }
      if (HasConversionDateTime) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConversionDateTime);
      }
      if (HasConversionValue) {
        size += 1 + 8;
      }
      if (HasCurrencyCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CallConversion other) {
      if (other == null) {
        return;
      }
      if (other.HasCallerId) {
        CallerId = other.CallerId;
      }
      if (other.HasCallStartDateTime) {
        CallStartDateTime = other.CallStartDateTime;
      }
      if (other.HasConversionAction) {
        ConversionAction = other.ConversionAction;
      }
      if (other.HasConversionDateTime) {
        ConversionDateTime = other.ConversionDateTime;
      }
      if (other.HasConversionValue) {
        ConversionValue = other.ConversionValue;
      }
      if (other.HasCurrencyCode) {
        CurrencyCode = other.CurrencyCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 58: {
            CallerId = input.ReadString();
            break;
          }
          case 66: {
            CallStartDateTime = input.ReadString();
            break;
          }
          case 74: {
            ConversionAction = input.ReadString();
            break;
          }
          case 82: {
            ConversionDateTime = input.ReadString();
            break;
          }
          case 89: {
            ConversionValue = input.ReadDouble();
            break;
          }
          case 98: {
            CurrencyCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 58: {
            CallerId = input.ReadString();
            break;
          }
          case 66: {
            CallStartDateTime = input.ReadString();
            break;
          }
          case 74: {
            ConversionAction = input.ReadString();
            break;
          }
          case 82: {
            ConversionDateTime = input.ReadString();
            break;
          }
          case 89: {
            ConversionValue = input.ReadDouble();
            break;
          }
          case 98: {
            CurrencyCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Contains additional information about externally attributed conversions.
  /// </summary>
  public sealed partial class ExternalAttributionData : pb::IMessage<ExternalAttributionData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExternalAttributionData> _parser = new pb::MessageParser<ExternalAttributionData>(() => new ExternalAttributionData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExternalAttributionData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ConversionUploadServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExternalAttributionData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExternalAttributionData(ExternalAttributionData other) : this() {
      _hasBits0 = other._hasBits0;
      externalAttributionCredit_ = other.externalAttributionCredit_;
      externalAttributionModel_ = other.externalAttributionModel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExternalAttributionData Clone() {
      return new ExternalAttributionData(this);
    }

    /// <summary>Field number for the "external_attribution_credit" field.</summary>
    public const int ExternalAttributionCreditFieldNumber = 3;
    private double externalAttributionCredit_;
    /// <summary>
    /// Represents the fraction of the conversion that is attributed to the
    /// Google Ads click.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ExternalAttributionCredit {
      get { if ((_hasBits0 & 1) != 0) { return externalAttributionCredit_; } else { return 0D; } }
      set {
        _hasBits0 |= 1;
        externalAttributionCredit_ = value;
      }
    }
    /// <summary>Gets whether the "external_attribution_credit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExternalAttributionCredit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "external_attribution_credit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExternalAttributionCredit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "external_attribution_model" field.</summary>
    public const int ExternalAttributionModelFieldNumber = 4;
    private string externalAttributionModel_;
    /// <summary>
    /// Specifies the attribution model name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalAttributionModel {
      get { return externalAttributionModel_ ?? ""; }
      set {
        externalAttributionModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "external_attribution_model" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExternalAttributionModel {
      get { return externalAttributionModel_ != null; }
    }
    /// <summary>Clears the value of the "external_attribution_model" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExternalAttributionModel() {
      externalAttributionModel_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExternalAttributionData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExternalAttributionData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ExternalAttributionCredit, other.ExternalAttributionCredit)) return false;
      if (ExternalAttributionModel != other.ExternalAttributionModel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasExternalAttributionCredit) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ExternalAttributionCredit);
      if (HasExternalAttributionModel) hash ^= ExternalAttributionModel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasExternalAttributionCredit) {
        output.WriteRawTag(25);
        output.WriteDouble(ExternalAttributionCredit);
      }
      if (HasExternalAttributionModel) {
        output.WriteRawTag(34);
        output.WriteString(ExternalAttributionModel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasExternalAttributionCredit) {
        output.WriteRawTag(25);
        output.WriteDouble(ExternalAttributionCredit);
      }
      if (HasExternalAttributionModel) {
        output.WriteRawTag(34);
        output.WriteString(ExternalAttributionModel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasExternalAttributionCredit) {
        size += 1 + 8;
      }
      if (HasExternalAttributionModel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalAttributionModel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExternalAttributionData other) {
      if (other == null) {
        return;
      }
      if (other.HasExternalAttributionCredit) {
        ExternalAttributionCredit = other.ExternalAttributionCredit;
      }
      if (other.HasExternalAttributionModel) {
        ExternalAttributionModel = other.ExternalAttributionModel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 25: {
            ExternalAttributionCredit = input.ReadDouble();
            break;
          }
          case 34: {
            ExternalAttributionModel = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 25: {
            ExternalAttributionCredit = input.ReadDouble();
            break;
          }
          case 34: {
            ExternalAttributionModel = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Identifying information for a successfully processed ClickConversion.
  /// </summary>
  public sealed partial class ClickConversionResult : pb::IMessage<ClickConversionResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClickConversionResult> _parser = new pb::MessageParser<ClickConversionResult>(() => new ClickConversionResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClickConversionResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ConversionUploadServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClickConversionResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClickConversionResult(ClickConversionResult other) : this() {
      gclid_ = other.gclid_;
      conversionAction_ = other.conversionAction_;
      conversionDateTime_ = other.conversionDateTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClickConversionResult Clone() {
      return new ClickConversionResult(this);
    }

    /// <summary>Field number for the "gclid" field.</summary>
    public const int GclidFieldNumber = 4;
    private string gclid_;
    /// <summary>
    /// The Google Click ID (gclid) associated with this conversion.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gclid {
      get { return gclid_ ?? ""; }
      set {
        gclid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gclid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGclid {
      get { return gclid_ != null; }
    }
    /// <summary>Clears the value of the "gclid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGclid() {
      gclid_ = null;
    }

    /// <summary>Field number for the "conversion_action" field.</summary>
    public const int ConversionActionFieldNumber = 5;
    private string conversionAction_;
    /// <summary>
    /// Resource name of the conversion action associated with this conversion.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConversionAction {
      get { return conversionAction_ ?? ""; }
      set {
        conversionAction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "conversion_action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConversionAction {
      get { return conversionAction_ != null; }
    }
    /// <summary>Clears the value of the "conversion_action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConversionAction() {
      conversionAction_ = null;
    }

    /// <summary>Field number for the "conversion_date_time" field.</summary>
    public const int ConversionDateTimeFieldNumber = 6;
    private string conversionDateTime_;
    /// <summary>
    /// The date time at which the conversion occurred. The format is
    /// "yyyy-mm-dd hh:mm:ss+|-hh:mm", e.g. “2019-01-01 12:32:45-08:00”.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConversionDateTime {
      get { return conversionDateTime_ ?? ""; }
      set {
        conversionDateTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "conversion_date_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConversionDateTime {
      get { return conversionDateTime_ != null; }
    }
    /// <summary>Clears the value of the "conversion_date_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConversionDateTime() {
      conversionDateTime_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClickConversionResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClickConversionResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gclid != other.Gclid) return false;
      if (ConversionAction != other.ConversionAction) return false;
      if (ConversionDateTime != other.ConversionDateTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGclid) hash ^= Gclid.GetHashCode();
      if (HasConversionAction) hash ^= ConversionAction.GetHashCode();
      if (HasConversionDateTime) hash ^= ConversionDateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGclid) {
        output.WriteRawTag(34);
        output.WriteString(Gclid);
      }
      if (HasConversionAction) {
        output.WriteRawTag(42);
        output.WriteString(ConversionAction);
      }
      if (HasConversionDateTime) {
        output.WriteRawTag(50);
        output.WriteString(ConversionDateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGclid) {
        output.WriteRawTag(34);
        output.WriteString(Gclid);
      }
      if (HasConversionAction) {
        output.WriteRawTag(42);
        output.WriteString(ConversionAction);
      }
      if (HasConversionDateTime) {
        output.WriteRawTag(50);
        output.WriteString(ConversionDateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasGclid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gclid);
      }
      if (HasConversionAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConversionAction);
      }
      if (HasConversionDateTime) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConversionDateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClickConversionResult other) {
      if (other == null) {
        return;
      }
      if (other.HasGclid) {
        Gclid = other.Gclid;
      }
      if (other.HasConversionAction) {
        ConversionAction = other.ConversionAction;
      }
      if (other.HasConversionDateTime) {
        ConversionDateTime = other.ConversionDateTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 34: {
            Gclid = input.ReadString();
            break;
          }
          case 42: {
            ConversionAction = input.ReadString();
            break;
          }
          case 50: {
            ConversionDateTime = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 34: {
            Gclid = input.ReadString();
            break;
          }
          case 42: {
            ConversionAction = input.ReadString();
            break;
          }
          case 50: {
            ConversionDateTime = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Identifying information for a successfully processed CallConversionUpload.
  /// </summary>
  public sealed partial class CallConversionResult : pb::IMessage<CallConversionResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CallConversionResult> _parser = new pb::MessageParser<CallConversionResult>(() => new CallConversionResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CallConversionResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ConversionUploadServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallConversionResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallConversionResult(CallConversionResult other) : this() {
      callerId_ = other.callerId_;
      callStartDateTime_ = other.callStartDateTime_;
      conversionAction_ = other.conversionAction_;
      conversionDateTime_ = other.conversionDateTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallConversionResult Clone() {
      return new CallConversionResult(this);
    }

    /// <summary>Field number for the "caller_id" field.</summary>
    public const int CallerIdFieldNumber = 5;
    private string callerId_;
    /// <summary>
    /// The caller id from which this call was placed. Caller id is expected to be
    /// in E.164 format with preceding '+' sign.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CallerId {
      get { return callerId_ ?? ""; }
      set {
        callerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "caller_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCallerId {
      get { return callerId_ != null; }
    }
    /// <summary>Clears the value of the "caller_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCallerId() {
      callerId_ = null;
    }

    /// <summary>Field number for the "call_start_date_time" field.</summary>
    public const int CallStartDateTimeFieldNumber = 6;
    private string callStartDateTime_;
    /// <summary>
    /// The date time at which the call occurred. The format is
    /// "yyyy-mm-dd hh:mm:ss+|-hh:mm", e.g. "2019-01-01 12:32:45-08:00".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CallStartDateTime {
      get { return callStartDateTime_ ?? ""; }
      set {
        callStartDateTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "call_start_date_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCallStartDateTime {
      get { return callStartDateTime_ != null; }
    }
    /// <summary>Clears the value of the "call_start_date_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCallStartDateTime() {
      callStartDateTime_ = null;
    }

    /// <summary>Field number for the "conversion_action" field.</summary>
    public const int ConversionActionFieldNumber = 7;
    private string conversionAction_;
    /// <summary>
    /// Resource name of the conversion action associated with this conversion.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConversionAction {
      get { return conversionAction_ ?? ""; }
      set {
        conversionAction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "conversion_action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConversionAction {
      get { return conversionAction_ != null; }
    }
    /// <summary>Clears the value of the "conversion_action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConversionAction() {
      conversionAction_ = null;
    }

    /// <summary>Field number for the "conversion_date_time" field.</summary>
    public const int ConversionDateTimeFieldNumber = 8;
    private string conversionDateTime_;
    /// <summary>
    /// The date time at which the conversion occurred. The format is
    /// "yyyy-mm-dd hh:mm:ss+|-hh:mm", e.g. "2019-01-01 12:32:45-08:00".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConversionDateTime {
      get { return conversionDateTime_ ?? ""; }
      set {
        conversionDateTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "conversion_date_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConversionDateTime {
      get { return conversionDateTime_ != null; }
    }
    /// <summary>Clears the value of the "conversion_date_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConversionDateTime() {
      conversionDateTime_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CallConversionResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CallConversionResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CallerId != other.CallerId) return false;
      if (CallStartDateTime != other.CallStartDateTime) return false;
      if (ConversionAction != other.ConversionAction) return false;
      if (ConversionDateTime != other.ConversionDateTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCallerId) hash ^= CallerId.GetHashCode();
      if (HasCallStartDateTime) hash ^= CallStartDateTime.GetHashCode();
      if (HasConversionAction) hash ^= ConversionAction.GetHashCode();
      if (HasConversionDateTime) hash ^= ConversionDateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCallerId) {
        output.WriteRawTag(42);
        output.WriteString(CallerId);
      }
      if (HasCallStartDateTime) {
        output.WriteRawTag(50);
        output.WriteString(CallStartDateTime);
      }
      if (HasConversionAction) {
        output.WriteRawTag(58);
        output.WriteString(ConversionAction);
      }
      if (HasConversionDateTime) {
        output.WriteRawTag(66);
        output.WriteString(ConversionDateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCallerId) {
        output.WriteRawTag(42);
        output.WriteString(CallerId);
      }
      if (HasCallStartDateTime) {
        output.WriteRawTag(50);
        output.WriteString(CallStartDateTime);
      }
      if (HasConversionAction) {
        output.WriteRawTag(58);
        output.WriteString(ConversionAction);
      }
      if (HasConversionDateTime) {
        output.WriteRawTag(66);
        output.WriteString(ConversionDateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCallerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CallerId);
      }
      if (HasCallStartDateTime) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CallStartDateTime);
      }
      if (HasConversionAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConversionAction);
      }
      if (HasConversionDateTime) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConversionDateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CallConversionResult other) {
      if (other == null) {
        return;
      }
      if (other.HasCallerId) {
        CallerId = other.CallerId;
      }
      if (other.HasCallStartDateTime) {
        CallStartDateTime = other.CallStartDateTime;
      }
      if (other.HasConversionAction) {
        ConversionAction = other.ConversionAction;
      }
      if (other.HasConversionDateTime) {
        ConversionDateTime = other.ConversionDateTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 42: {
            CallerId = input.ReadString();
            break;
          }
          case 50: {
            CallStartDateTime = input.ReadString();
            break;
          }
          case 58: {
            ConversionAction = input.ReadString();
            break;
          }
          case 66: {
            ConversionDateTime = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 42: {
            CallerId = input.ReadString();
            break;
          }
          case 50: {
            CallStartDateTime = input.ReadString();
            break;
          }
          case 58: {
            ConversionAction = input.ReadString();
            break;
          }
          case 66: {
            ConversionDateTime = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
