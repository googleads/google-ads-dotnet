// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v5/services/reach_plan_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V5.Services {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v5/services/reach_plan_service.proto</summary>
  public static partial class ReachPlanServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v5/services/reach_plan_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReachPlanServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjlnb29nbGUvYWRzL2dvb2dsZWFkcy92NS9zZXJ2aWNlcy9yZWFjaF9wbGFu",
            "X3NlcnZpY2UucHJvdG8SIGdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY1LnNlcnZp",
            "Y2VzGi1nb29nbGUvYWRzL2dvb2dsZWFkcy92NS9jb21tb24vY3JpdGVyaWEu",
            "cHJvdG8aO2dvb2dsZS9hZHMvZ29vZ2xlYWRzL3Y1L2VudW1zL2ZyZXF1ZW5j",
            "eV9jYXBfdGltZV91bml0LnByb3RvGjhnb29nbGUvYWRzL2dvb2dsZWFkcy92",
            "NS9lbnVtcy9yZWFjaF9wbGFuX2FkX2xlbmd0aC5wcm90bxo4Z29vZ2xlL2Fk",
            "cy9nb29nbGVhZHMvdjUvZW51bXMvcmVhY2hfcGxhbl9hZ2VfcmFuZ2UucHJv",
            "dG8aNmdvb2dsZS9hZHMvZ29vZ2xlYWRzL3Y1L2VudW1zL3JlYWNoX3BsYW5f",
            "bmV0d29yay5wcm90bxocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90bxoX",
            "Z29vZ2xlL2FwaS9jbGllbnQucHJvdG8aH2dvb2dsZS9hcGkvZmllbGRfYmVo",
            "YXZpb3IucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90byIf",
            "Ch1MaXN0UGxhbm5hYmxlTG9jYXRpb25zUmVxdWVzdCJyCh5MaXN0UGxhbm5h",
            "YmxlTG9jYXRpb25zUmVzcG9uc2USUAoTcGxhbm5hYmxlX2xvY2F0aW9ucxgB",
            "IAMoCzIzLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY1LnNlcnZpY2VzLlBsYW5u",
            "YWJsZUxvY2F0aW9uIqEBChFQbGFubmFibGVMb2NhdGlvbhIoCgJpZBgBIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIqCgRuYW1lGAIgASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjYKEXBhcmVudF9jb3Vu",
            "dHJ5X2lkGAMgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUiYAoc",
            "TGlzdFBsYW5uYWJsZVByb2R1Y3RzUmVxdWVzdBJAChVwbGFubmFibGVfbG9j",
            "YXRpb25faWQYASABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWVC",
            "A+BBAiJsCh1MaXN0UGxhbm5hYmxlUHJvZHVjdHNSZXNwb25zZRJLChBwcm9k",
            "dWN0X21ldGFkYXRhGAEgAygLMjEuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjUu",
            "c2VydmljZXMuUHJvZHVjdE1ldGFkYXRhIqIBCg9Qcm9kdWN0TWV0YWRhdGES",
            "PAoWcGxhbm5hYmxlX3Byb2R1Y3RfY29kZRgBIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZRJRChNwbGFubmFibGVfdGFyZ2V0aW5nGAIgASgL",
            "MjQuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjUuc2VydmljZXMuUGxhbm5hYmxl",
            "VGFyZ2V0aW5nIsICChJQbGFubmFibGVUYXJnZXRpbmcSWgoKYWdlX3Jhbmdl",
            "cxgBIAMoDjJGLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY1LmVudW1zLlJlYWNo",
            "UGxhbkFnZVJhbmdlRW51bS5SZWFjaFBsYW5BZ2VSYW5nZRI7CgdnZW5kZXJz",
            "GAIgAygLMiouZ29vZ2xlLmFkcy5nb29nbGVhZHMudjUuY29tbW9uLkdlbmRl",
            "ckluZm8SOwoHZGV2aWNlcxgDIAMoCzIqLmdvb2dsZS5hZHMuZ29vZ2xlYWRz",
            "LnY1LmNvbW1vbi5EZXZpY2VJbmZvElYKCG5ldHdvcmtzGAQgAygOMkQuZ29v",
            "Z2xlLmFkcy5nb29nbGVhZHMudjUuZW51bXMuUmVhY2hQbGFuTmV0d29ya0Vu",
            "dW0uUmVhY2hQbGFuTmV0d29yayKzAgoeR2VuZXJhdGVQcm9kdWN0TWl4SWRl",
            "YXNSZXF1ZXN0EhgKC2N1c3RvbWVyX2lkGAEgASgJQgPgQQISQAoVcGxhbm5h",
            "YmxlX2xvY2F0aW9uX2lkGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlQgPgQQISOAoNY3VycmVuY3lfY29kZRgDIAEoCzIcLmdvb2dsZS5w",
            "cm90b2J1Zi5TdHJpbmdWYWx1ZUID4EECEjcKDWJ1ZGdldF9taWNyb3MYBCAB",
            "KAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZUID4EECEkIKC3ByZWZl",
            "cmVuY2VzGAUgASgLMi0uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjUuc2Vydmlj",
            "ZXMuUHJlZmVyZW5jZXMiwQIKC1ByZWZlcmVuY2VzEjAKDGlzX3NraXBwYWJs",
            "ZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUSNQoRc3RhcnRz",
            "X3dpdGhfc291bmQYAiABKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVl",
            "ElkKCWFkX2xlbmd0aBgDIAEoDjJGLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY1",
            "LmVudW1zLlJlYWNoUGxhbkFkTGVuZ3RoRW51bS5SZWFjaFBsYW5BZExlbmd0",
            "aBI0ChB0b3BfY29udGVudF9vbmx5GAQgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LkJvb2xWYWx1ZRI4ChRoYXNfZ3VhcmFudGVlZF9wcmljZRgFIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUicgofR2VuZXJhdGVQcm9kdWN0TWl4",
            "SWRlYXNSZXNwb25zZRJPChJwcm9kdWN0X2FsbG9jYXRpb24YASADKAsyMy5n",
            "b29nbGUuYWRzLmdvb2dsZWFkcy52NS5zZXJ2aWNlcy5Qcm9kdWN0QWxsb2Nh",
            "dGlvbiKFAQoRUHJvZHVjdEFsbG9jYXRpb24SPAoWcGxhbm5hYmxlX3Byb2R1",
            "Y3RfY29kZRgBIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIy",
            "Cg1idWRnZXRfbWljcm9zGAIgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0",
            "VmFsdWUioQQKHEdlbmVyYXRlUmVhY2hGb3JlY2FzdFJlcXVlc3QSGAoLY3Vz",
            "dG9tZXJfaWQYASABKAlCA+BBAhIzCg1jdXJyZW5jeV9jb2RlGAIgASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlElIKEWNhbXBhaWduX2R1cmF0",
            "aW9uGAMgASgLMjIuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjUuc2VydmljZXMu",
            "Q2FtcGFpZ25EdXJhdGlvbkID4EECEjkKFGNvb2tpZV9mcmVxdWVuY3lfY2Fw",
            "GAQgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSVAocY29va2ll",
            "X2ZyZXF1ZW5jeV9jYXBfc2V0dGluZxgIIAEoCzIuLmdvb2dsZS5hZHMuZ29v",
            "Z2xlYWRzLnY1LnNlcnZpY2VzLkZyZXF1ZW5jeUNhcBI8ChdtaW5fZWZmZWN0",
            "aXZlX2ZyZXF1ZW5jeRgFIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZh",
            "bHVlEj4KCXRhcmdldGluZxgGIAEoCzIrLmdvb2dsZS5hZHMuZ29vZ2xlYWRz",
            "LnY1LnNlcnZpY2VzLlRhcmdldGluZxJPChBwbGFubmVkX3Byb2R1Y3RzGAcg",
            "AygLMjAuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjUuc2VydmljZXMuUGxhbm5l",
            "ZFByb2R1Y3RCA+BBAiKrAQoMRnJlcXVlbmN5Q2FwEjUKC2ltcHJlc3Npb25z",
            "GAEgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWVCA+BBAhJkCgl0",
            "aW1lX3VuaXQYAiABKA4yTC5nb29nbGUuYWRzLmdvb2dsZWFkcy52NS5lbnVt",
            "cy5GcmVxdWVuY3lDYXBUaW1lVW5pdEVudW0uRnJlcXVlbmN5Q2FwVGltZVVu",
            "aXRCA+BBAiL0AgoJVGFyZ2V0aW5nEjsKFXBsYW5uYWJsZV9sb2NhdGlvbl9p",
            "ZBgBIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRJZCglhZ2Vf",
            "cmFuZ2UYAiABKA4yRi5nb29nbGUuYWRzLmdvb2dsZWFkcy52NS5lbnVtcy5S",
            "ZWFjaFBsYW5BZ2VSYW5nZUVudW0uUmVhY2hQbGFuQWdlUmFuZ2USOwoHZ2Vu",
            "ZGVycxgDIAMoCzIqLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY1LmNvbW1vbi5H",
            "ZW5kZXJJbmZvEjsKB2RldmljZXMYBCADKAsyKi5nb29nbGUuYWRzLmdvb2ds",
            "ZWFkcy52NS5jb21tb24uRGV2aWNlSW5mbxJVCgduZXR3b3JrGAUgASgOMkQu",
            "Z29vZ2xlLmFkcy5nb29nbGVhZHMudjUuZW51bXMuUmVhY2hQbGFuTmV0d29y",
            "a0VudW0uUmVhY2hQbGFuTmV0d29yayJJChBDYW1wYWlnbkR1cmF0aW9uEjUK",
            "EGR1cmF0aW9uX2luX2RheXMYASABKAsyGy5nb29nbGUucHJvdG9idWYuSW50",
            "MzJWYWx1ZSKCAQoOUGxhbm5lZFByb2R1Y3QSPAoWcGxhbm5hYmxlX3Byb2R1",
            "Y3RfY29kZRgBIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIy",
            "Cg1idWRnZXRfbWljcm9zGAIgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0",
            "VmFsdWUiwQEKHUdlbmVyYXRlUmVhY2hGb3JlY2FzdFJlc3BvbnNlEl0KGm9u",
            "X3RhcmdldF9hdWRpZW5jZV9tZXRyaWNzGAEgASgLMjkuZ29vZ2xlLmFkcy5n",
            "b29nbGVhZHMudjUuc2VydmljZXMuT25UYXJnZXRBdWRpZW5jZU1ldHJpY3MS",
            "QQoLcmVhY2hfY3VydmUYAiABKAsyLC5nb29nbGUuYWRzLmdvb2dsZWFkcy52",
            "NS5zZXJ2aWNlcy5SZWFjaEN1cnZlIlYKClJlYWNoQ3VydmUSSAoPcmVhY2hf",
            "Zm9yZWNhc3RzGAEgAygLMi8uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjUuc2Vy",
            "dmljZXMuUmVhY2hGb3JlY2FzdCLcAQoNUmVhY2hGb3JlY2FzdBIwCgtjb3N0",
            "X21pY3JvcxgBIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEjwK",
            "CGZvcmVjYXN0GAIgASgLMiouZ29vZ2xlLmFkcy5nb29nbGVhZHMudjUuc2Vy",
            "dmljZXMuRm9yZWNhc3QSWwoeZm9yZWNhc3RlZF9wcm9kdWN0X2FsbG9jYXRp",
            "b25zGAMgAygLMjMuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjUuc2VydmljZXMu",
            "UHJvZHVjdEFsbG9jYXRpb24i5gEKCEZvcmVjYXN0EjQKD29uX3RhcmdldF9y",
            "ZWFjaBgBIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEjAKC3Rv",
            "dGFsX3JlYWNoGAIgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUS",
            "OgoVb25fdGFyZ2V0X2ltcHJlc3Npb25zGAMgASgLMhsuZ29vZ2xlLnByb3Rv",
            "YnVmLkludDY0VmFsdWUSNgoRdG90YWxfaW1wcmVzc2lvbnMYBCABKAsyGy5n",
            "b29nbGUucHJvdG9idWYuSW50NjRWYWx1ZSKQAQoXT25UYXJnZXRBdWRpZW5j",
            "ZU1ldHJpY3MSOgoVeW91dHViZV9hdWRpZW5jZV9zaXplGAEgASgLMhsuZ29v",
            "Z2xlLnByb3RvYnVmLkludDY0VmFsdWUSOQoUY2Vuc3VzX2F1ZGllbmNlX3Np",
            "emUYAiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZTKnCAoQUmVh",
            "Y2hQbGFuU2VydmljZRLCAQoWTGlzdFBsYW5uYWJsZUxvY2F0aW9ucxI/Lmdv",
            "b2dsZS5hZHMuZ29vZ2xlYWRzLnY1LnNlcnZpY2VzLkxpc3RQbGFubmFibGVM",
            "b2NhdGlvbnNSZXF1ZXN0GkAuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjUuc2Vy",
            "dmljZXMuTGlzdFBsYW5uYWJsZUxvY2F0aW9uc1Jlc3BvbnNlIiWC0+STAh8i",
            "Gi92NTpsaXN0UGxhbm5hYmxlTG9jYXRpb25zOgEqEtYBChVMaXN0UGxhbm5h",
            "YmxlUHJvZHVjdHMSPi5nb29nbGUuYWRzLmdvb2dsZWFkcy52NS5zZXJ2aWNl",
            "cy5MaXN0UGxhbm5hYmxlUHJvZHVjdHNSZXF1ZXN0Gj8uZ29vZ2xlLmFkcy5n",
            "b29nbGVhZHMudjUuc2VydmljZXMuTGlzdFBsYW5uYWJsZVByb2R1Y3RzUmVz",
            "cG9uc2UiPILT5JMCHiIZL3Y1Omxpc3RQbGFubmFibGVQcm9kdWN0czoBKtpB",
            "FXBsYW5uYWJsZV9sb2NhdGlvbl9pZBKhAgoXR2VuZXJhdGVQcm9kdWN0TWl4",
            "SWRlYXMSQC5nb29nbGUuYWRzLmdvb2dsZWFkcy52NS5zZXJ2aWNlcy5HZW5l",
            "cmF0ZVByb2R1Y3RNaXhJZGVhc1JlcXVlc3QaQS5nb29nbGUuYWRzLmdvb2ds",
            "ZWFkcy52NS5zZXJ2aWNlcy5HZW5lcmF0ZVByb2R1Y3RNaXhJZGVhc1Jlc3Bv",
            "bnNlIoABgtPkkwI6IjUvdjUvY3VzdG9tZXJzL3tjdXN0b21lcl9pZD0qfTpn",
            "ZW5lcmF0ZVByb2R1Y3RNaXhJZGVhczoBKtpBPWN1c3RvbWVyX2lkLHBsYW5u",
            "YWJsZV9sb2NhdGlvbl9pZCxjdXJyZW5jeV9jb2RlLGJ1ZGdldF9taWNyb3MS",
            "iQIKFUdlbmVyYXRlUmVhY2hGb3JlY2FzdBI+Lmdvb2dsZS5hZHMuZ29vZ2xl",
            "YWRzLnY1LnNlcnZpY2VzLkdlbmVyYXRlUmVhY2hGb3JlY2FzdFJlcXVlc3Qa",
            "Py5nb29nbGUuYWRzLmdvb2dsZWFkcy52NS5zZXJ2aWNlcy5HZW5lcmF0ZVJl",
            "YWNoRm9yZWNhc3RSZXNwb25zZSJvgtPkkwI4IjMvdjUvY3VzdG9tZXJzL3tj",
            "dXN0b21lcl9pZD0qfTpnZW5lcmF0ZVJlYWNoRm9yZWNhc3Q6ASraQS5jdXN0",
            "b21lcl9pZCxjYW1wYWlnbl9kdXJhdGlvbixwbGFubmVkX3Byb2R1Y3RzGkXK",
            "QRhnb29nbGVhZHMuZ29vZ2xlYXBpcy5jb23SQSdodHRwczovL3d3dy5nb29n",
            "bGVhcGlzLmNvbS9hdXRoL2Fkd29yZHNC/AEKJGNvbS5nb29nbGUuYWRzLmdv",
            "b2dsZWFkcy52NS5zZXJ2aWNlc0IVUmVhY2hQbGFuU2VydmljZVByb3RvUAFa",
            "SGdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvYWRzL2dv",
            "b2dsZWFkcy92NS9zZXJ2aWNlcztzZXJ2aWNlc6ICA0dBQaoCIEdvb2dsZS5B",
            "ZHMuR29vZ2xlQWRzLlY1LlNlcnZpY2VzygIgR29vZ2xlXEFkc1xHb29nbGVB",
            "ZHNcVjVcU2VydmljZXPqAiRHb29nbGU6OkFkczo6R29vZ2xlQWRzOjpWNTo6",
            "U2VydmljZXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V5.Common.CriteriaReflection.Descriptor, global::Google.Ads.GoogleAds.V5.Enums.FrequencyCapTimeUnitReflection.Descriptor, global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAdLengthReflection.Descriptor, global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAgeRangeReflection.Descriptor, global::Google.Ads.GoogleAds.V5.Enums.ReachPlanNetworkReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.ListPlannableLocationsRequest), global::Google.Ads.GoogleAds.V5.Services.ListPlannableLocationsRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.ListPlannableLocationsResponse), global::Google.Ads.GoogleAds.V5.Services.ListPlannableLocationsResponse.Parser, new[]{ "PlannableLocations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.PlannableLocation), global::Google.Ads.GoogleAds.V5.Services.PlannableLocation.Parser, new[]{ "Id", "Name", "ParentCountryId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.ListPlannableProductsRequest), global::Google.Ads.GoogleAds.V5.Services.ListPlannableProductsRequest.Parser, new[]{ "PlannableLocationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.ListPlannableProductsResponse), global::Google.Ads.GoogleAds.V5.Services.ListPlannableProductsResponse.Parser, new[]{ "ProductMetadata" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.ProductMetadata), global::Google.Ads.GoogleAds.V5.Services.ProductMetadata.Parser, new[]{ "PlannableProductCode", "PlannableTargeting" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.PlannableTargeting), global::Google.Ads.GoogleAds.V5.Services.PlannableTargeting.Parser, new[]{ "AgeRanges", "Genders", "Devices", "Networks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.GenerateProductMixIdeasRequest), global::Google.Ads.GoogleAds.V5.Services.GenerateProductMixIdeasRequest.Parser, new[]{ "CustomerId", "PlannableLocationId", "CurrencyCode", "BudgetMicros", "Preferences" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.Preferences), global::Google.Ads.GoogleAds.V5.Services.Preferences.Parser, new[]{ "IsSkippable", "StartsWithSound", "AdLength", "TopContentOnly", "HasGuaranteedPrice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.GenerateProductMixIdeasResponse), global::Google.Ads.GoogleAds.V5.Services.GenerateProductMixIdeasResponse.Parser, new[]{ "ProductAllocation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.ProductAllocation), global::Google.Ads.GoogleAds.V5.Services.ProductAllocation.Parser, new[]{ "PlannableProductCode", "BudgetMicros" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.GenerateReachForecastRequest), global::Google.Ads.GoogleAds.V5.Services.GenerateReachForecastRequest.Parser, new[]{ "CustomerId", "CurrencyCode", "CampaignDuration", "CookieFrequencyCap", "CookieFrequencyCapSetting", "MinEffectiveFrequency", "Targeting", "PlannedProducts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.FrequencyCap), global::Google.Ads.GoogleAds.V5.Services.FrequencyCap.Parser, new[]{ "Impressions", "TimeUnit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.Targeting), global::Google.Ads.GoogleAds.V5.Services.Targeting.Parser, new[]{ "PlannableLocationId", "AgeRange", "Genders", "Devices", "Network" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.CampaignDuration), global::Google.Ads.GoogleAds.V5.Services.CampaignDuration.Parser, new[]{ "DurationInDays" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.PlannedProduct), global::Google.Ads.GoogleAds.V5.Services.PlannedProduct.Parser, new[]{ "PlannableProductCode", "BudgetMicros" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.GenerateReachForecastResponse), global::Google.Ads.GoogleAds.V5.Services.GenerateReachForecastResponse.Parser, new[]{ "OnTargetAudienceMetrics", "ReachCurve" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.ReachCurve), global::Google.Ads.GoogleAds.V5.Services.ReachCurve.Parser, new[]{ "ReachForecasts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.ReachForecast), global::Google.Ads.GoogleAds.V5.Services.ReachForecast.Parser, new[]{ "CostMicros", "Forecast", "ForecastedProductAllocations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.Forecast), global::Google.Ads.GoogleAds.V5.Services.Forecast.Parser, new[]{ "OnTargetReach", "TotalReach", "OnTargetImpressions", "TotalImpressions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V5.Services.OnTargetAudienceMetrics), global::Google.Ads.GoogleAds.V5.Services.OnTargetAudienceMetrics.Parser, new[]{ "YoutubeAudienceSize", "CensusAudienceSize" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Request message for [ReachPlanService.ListPlannableLocations][google.ads.googleads.v5.services.ReachPlanService.ListPlannableLocations].
  /// </summary>
  public sealed partial class ListPlannableLocationsRequest : pb::IMessage<ListPlannableLocationsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListPlannableLocationsRequest> _parser = new pb::MessageParser<ListPlannableLocationsRequest>(() => new ListPlannableLocationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListPlannableLocationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableLocationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableLocationsRequest(ListPlannableLocationsRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableLocationsRequest Clone() {
      return new ListPlannableLocationsRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListPlannableLocationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListPlannableLocationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListPlannableLocationsRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The list of plannable locations.
  /// </summary>
  public sealed partial class ListPlannableLocationsResponse : pb::IMessage<ListPlannableLocationsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListPlannableLocationsResponse> _parser = new pb::MessageParser<ListPlannableLocationsResponse>(() => new ListPlannableLocationsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListPlannableLocationsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableLocationsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableLocationsResponse(ListPlannableLocationsResponse other) : this() {
      plannableLocations_ = other.plannableLocations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableLocationsResponse Clone() {
      return new ListPlannableLocationsResponse(this);
    }

    /// <summary>Field number for the "plannable_locations" field.</summary>
    public const int PlannableLocationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V5.Services.PlannableLocation> _repeated_plannableLocations_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V5.Services.PlannableLocation.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.PlannableLocation> plannableLocations_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.PlannableLocation>();
    /// <summary>
    /// The list of locations available for planning (Countries, DMAs,
    /// sub-countries).
    /// For locations like Countries, DMAs see
    /// https://developers.google.com/adwords/api/docs/appendix/geotargeting for
    /// more information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.PlannableLocation> PlannableLocations {
      get { return plannableLocations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListPlannableLocationsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListPlannableLocationsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!plannableLocations_.Equals(other.plannableLocations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= plannableLocations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      plannableLocations_.WriteTo(output, _repeated_plannableLocations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      plannableLocations_.WriteTo(ref output, _repeated_plannableLocations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += plannableLocations_.CalculateSize(_repeated_plannableLocations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListPlannableLocationsResponse other) {
      if (other == null) {
        return;
      }
      plannableLocations_.Add(other.plannableLocations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            plannableLocations_.AddEntriesFrom(input, _repeated_plannableLocations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            plannableLocations_.AddEntriesFrom(ref input, _repeated_plannableLocations_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A plannable location: a country, a DMA, a metro region, a tv region,
  /// a province.
  /// </summary>
  public sealed partial class PlannableLocation : pb::IMessage<PlannableLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlannableLocation> _parser = new pb::MessageParser<PlannableLocation>(() => new PlannableLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlannableLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannableLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannableLocation(PlannableLocation other) : this() {
      Id = other.Id;
      Name = other.Name;
      ParentCountryId = other.ParentCountryId;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannableLocation Clone() {
      return new PlannableLocation(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_id_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string id_;
    /// <summary>
    /// The location identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string name_;
    /// <summary>
    /// The unique location name in english.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }


    /// <summary>Field number for the "parent_country_id" field.</summary>
    public const int ParentCountryIdFieldNumber = 3;
    private static readonly pb::FieldCodec<long?> _single_parentCountryId_codec = pb::FieldCodec.ForStructWrapper<long>(26);
    private long? parentCountryId_;
    /// <summary>
    /// The parent country code, not present if location is a country.
    /// If present will always be a criterion id: additional information, such as
    /// country name are returned both via ListPlannableLocations or directly by
    /// accessing GeoTargetConstantService with the criterion id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? ParentCountryId {
      get { return parentCountryId_; }
      set {
        parentCountryId_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlannableLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlannableLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (ParentCountryId != other.ParentCountryId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (parentCountryId_ != null) hash ^= ParentCountryId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (parentCountryId_ != null) {
        _single_parentCountryId_codec.WriteTagAndValue(output, ParentCountryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(ref output, Id);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(ref output, Name);
      }
      if (parentCountryId_ != null) {
        _single_parentCountryId_codec.WriteTagAndValue(ref output, ParentCountryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (parentCountryId_ != null) {
        size += _single_parentCountryId_codec.CalculateSizeWithTag(ParentCountryId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlannableLocation other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != "") {
          Id = other.Id;
        }
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.parentCountryId_ != null) {
        if (parentCountryId_ == null || other.ParentCountryId != 0L) {
          ParentCountryId = other.ParentCountryId;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_id_codec.Read(input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 26: {
            long? value = _single_parentCountryId_codec.Read(input);
            if (parentCountryId_ == null || value != 0L) {
              ParentCountryId = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_id_codec.Read(ref input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_name_codec.Read(ref input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 26: {
            long? value = _single_parentCountryId_codec.Read(ref input);
            if (parentCountryId_ == null || value != 0L) {
              ParentCountryId = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to list available products in a given location.
  /// </summary>
  public sealed partial class ListPlannableProductsRequest : pb::IMessage<ListPlannableProductsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListPlannableProductsRequest> _parser = new pb::MessageParser<ListPlannableProductsRequest>(() => new ListPlannableProductsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListPlannableProductsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableProductsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableProductsRequest(ListPlannableProductsRequest other) : this() {
      PlannableLocationId = other.PlannableLocationId;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableProductsRequest Clone() {
      return new ListPlannableProductsRequest(this);
    }

    /// <summary>Field number for the "plannable_location_id" field.</summary>
    public const int PlannableLocationIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_plannableLocationId_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string plannableLocationId_;
    /// <summary>
    /// Required. The ID of the selected location for planning. To list the available
    /// plannable location ids use ListPlannableLocations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlannableLocationId {
      get { return plannableLocationId_; }
      set {
        plannableLocationId_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListPlannableProductsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListPlannableProductsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlannableLocationId != other.PlannableLocationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (plannableLocationId_ != null) hash ^= PlannableLocationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (plannableLocationId_ != null) {
        _single_plannableLocationId_codec.WriteTagAndValue(output, PlannableLocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (plannableLocationId_ != null) {
        _single_plannableLocationId_codec.WriteTagAndValue(ref output, PlannableLocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (plannableLocationId_ != null) {
        size += _single_plannableLocationId_codec.CalculateSizeWithTag(PlannableLocationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListPlannableProductsRequest other) {
      if (other == null) {
        return;
      }
      if (other.plannableLocationId_ != null) {
        if (plannableLocationId_ == null || other.PlannableLocationId != "") {
          PlannableLocationId = other.PlannableLocationId;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_plannableLocationId_codec.Read(input);
            if (plannableLocationId_ == null || value != "") {
              PlannableLocationId = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_plannableLocationId_codec.Read(ref input);
            if (plannableLocationId_ == null || value != "") {
              PlannableLocationId = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A response with all available products.
  /// </summary>
  public sealed partial class ListPlannableProductsResponse : pb::IMessage<ListPlannableProductsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListPlannableProductsResponse> _parser = new pb::MessageParser<ListPlannableProductsResponse>(() => new ListPlannableProductsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListPlannableProductsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableProductsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableProductsResponse(ListPlannableProductsResponse other) : this() {
      productMetadata_ = other.productMetadata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableProductsResponse Clone() {
      return new ListPlannableProductsResponse(this);
    }

    /// <summary>Field number for the "product_metadata" field.</summary>
    public const int ProductMetadataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V5.Services.ProductMetadata> _repeated_productMetadata_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V5.Services.ProductMetadata.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.ProductMetadata> productMetadata_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.ProductMetadata>();
    /// <summary>
    /// The list of products available for planning and related targeting metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.ProductMetadata> ProductMetadata {
      get { return productMetadata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListPlannableProductsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListPlannableProductsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!productMetadata_.Equals(other.productMetadata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= productMetadata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      productMetadata_.WriteTo(output, _repeated_productMetadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      productMetadata_.WriteTo(ref output, _repeated_productMetadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += productMetadata_.CalculateSize(_repeated_productMetadata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListPlannableProductsResponse other) {
      if (other == null) {
        return;
      }
      productMetadata_.Add(other.productMetadata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            productMetadata_.AddEntriesFrom(input, _repeated_productMetadata_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            productMetadata_.AddEntriesFrom(ref input, _repeated_productMetadata_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The metadata associated with an available plannable product.
  /// </summary>
  public sealed partial class ProductMetadata : pb::IMessage<ProductMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProductMetadata> _parser = new pb::MessageParser<ProductMetadata>(() => new ProductMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProductMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductMetadata(ProductMetadata other) : this() {
      PlannableProductCode = other.PlannableProductCode;
      plannableTargeting_ = other.plannableTargeting_ != null ? other.plannableTargeting_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductMetadata Clone() {
      return new ProductMetadata(this);
    }

    /// <summary>Field number for the "plannable_product_code" field.</summary>
    public const int PlannableProductCodeFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_plannableProductCode_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string plannableProductCode_;
    /// <summary>
    /// The code associated with the ad product. E.g. BUMPER, TRUEVIEW_IN_STREAM
    /// To list the available plannable product codes use ListPlannableProducts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlannableProductCode {
      get { return plannableProductCode_; }
      set {
        plannableProductCode_ = value;
      }
    }


    /// <summary>Field number for the "plannable_targeting" field.</summary>
    public const int PlannableTargetingFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V5.Services.PlannableTargeting plannableTargeting_;
    /// <summary>
    /// The allowed plannable targeting for this product.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V5.Services.PlannableTargeting PlannableTargeting {
      get { return plannableTargeting_; }
      set {
        plannableTargeting_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProductMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProductMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlannableProductCode != other.PlannableProductCode) return false;
      if (!object.Equals(PlannableTargeting, other.PlannableTargeting)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (plannableProductCode_ != null) hash ^= PlannableProductCode.GetHashCode();
      if (plannableTargeting_ != null) hash ^= PlannableTargeting.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (plannableProductCode_ != null) {
        _single_plannableProductCode_codec.WriteTagAndValue(output, PlannableProductCode);
      }
      if (plannableTargeting_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlannableTargeting);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (plannableProductCode_ != null) {
        _single_plannableProductCode_codec.WriteTagAndValue(ref output, PlannableProductCode);
      }
      if (plannableTargeting_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlannableTargeting);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (plannableProductCode_ != null) {
        size += _single_plannableProductCode_codec.CalculateSizeWithTag(PlannableProductCode);
      }
      if (plannableTargeting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlannableTargeting);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProductMetadata other) {
      if (other == null) {
        return;
      }
      if (other.plannableProductCode_ != null) {
        if (plannableProductCode_ == null || other.PlannableProductCode != "") {
          PlannableProductCode = other.PlannableProductCode;
        }
      }
      if (other.plannableTargeting_ != null) {
        if (plannableTargeting_ == null) {
          PlannableTargeting = new global::Google.Ads.GoogleAds.V5.Services.PlannableTargeting();
        }
        PlannableTargeting.MergeFrom(other.PlannableTargeting);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_plannableProductCode_codec.Read(input);
            if (plannableProductCode_ == null || value != "") {
              PlannableProductCode = value;
            }
            break;
          }
          case 18: {
            if (plannableTargeting_ == null) {
              PlannableTargeting = new global::Google.Ads.GoogleAds.V5.Services.PlannableTargeting();
            }
            input.ReadMessage(PlannableTargeting);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_plannableProductCode_codec.Read(ref input);
            if (plannableProductCode_ == null || value != "") {
              PlannableProductCode = value;
            }
            break;
          }
          case 18: {
            if (plannableTargeting_ == null) {
              PlannableTargeting = new global::Google.Ads.GoogleAds.V5.Services.PlannableTargeting();
            }
            input.ReadMessage(PlannableTargeting);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The targeting for which traffic metrics will be reported.
  /// </summary>
  public sealed partial class PlannableTargeting : pb::IMessage<PlannableTargeting>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlannableTargeting> _parser = new pb::MessageParser<PlannableTargeting>(() => new PlannableTargeting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlannableTargeting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannableTargeting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannableTargeting(PlannableTargeting other) : this() {
      ageRanges_ = other.ageRanges_.Clone();
      genders_ = other.genders_.Clone();
      devices_ = other.devices_.Clone();
      networks_ = other.networks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannableTargeting Clone() {
      return new PlannableTargeting(this);
    }

    /// <summary>Field number for the "age_ranges" field.</summary>
    public const int AgeRangesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange> _repeated_ageRanges_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange) x);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange> ageRanges_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange>();
    /// <summary>
    /// Allowed plannable age ranges for the product for which metrics will be
    /// reported. Actual targeting is computed by mapping this age range onto
    /// standard Google common.AgeRangeInfo values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange> AgeRanges {
      get { return ageRanges_; }
    }

    /// <summary>Field number for the "genders" field.</summary>
    public const int GendersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V5.Common.GenderInfo> _repeated_genders_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Ads.GoogleAds.V5.Common.GenderInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Common.GenderInfo> genders_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Common.GenderInfo>();
    /// <summary>
    /// Targetable genders for the ad product.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Common.GenderInfo> Genders {
      get { return genders_; }
    }

    /// <summary>Field number for the "devices" field.</summary>
    public const int DevicesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V5.Common.DeviceInfo> _repeated_devices_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Ads.GoogleAds.V5.Common.DeviceInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Common.DeviceInfo> devices_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Common.DeviceInfo>();
    /// <summary>
    /// Targetable devices for the ad product.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Common.DeviceInfo> Devices {
      get { return devices_; }
    }

    /// <summary>Field number for the "networks" field.</summary>
    public const int NetworksFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V5.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork> _repeated_networks_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::Google.Ads.GoogleAds.V5.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork) x);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork> networks_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork>();
    /// <summary>
    /// Targetable networks for the ad product.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork> Networks {
      get { return networks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlannableTargeting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlannableTargeting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ageRanges_.Equals(other.ageRanges_)) return false;
      if(!genders_.Equals(other.genders_)) return false;
      if(!devices_.Equals(other.devices_)) return false;
      if(!networks_.Equals(other.networks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ageRanges_.GetHashCode();
      hash ^= genders_.GetHashCode();
      hash ^= devices_.GetHashCode();
      hash ^= networks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      ageRanges_.WriteTo(output, _repeated_ageRanges_codec);
      genders_.WriteTo(output, _repeated_genders_codec);
      devices_.WriteTo(output, _repeated_devices_codec);
      networks_.WriteTo(output, _repeated_networks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      ageRanges_.WriteTo(ref output, _repeated_ageRanges_codec);
      genders_.WriteTo(ref output, _repeated_genders_codec);
      devices_.WriteTo(ref output, _repeated_devices_codec);
      networks_.WriteTo(ref output, _repeated_networks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ageRanges_.CalculateSize(_repeated_ageRanges_codec);
      size += genders_.CalculateSize(_repeated_genders_codec);
      size += devices_.CalculateSize(_repeated_devices_codec);
      size += networks_.CalculateSize(_repeated_networks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlannableTargeting other) {
      if (other == null) {
        return;
      }
      ageRanges_.Add(other.ageRanges_);
      genders_.Add(other.genders_);
      devices_.Add(other.devices_);
      networks_.Add(other.networks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            ageRanges_.AddEntriesFrom(input, _repeated_ageRanges_codec);
            break;
          }
          case 18: {
            genders_.AddEntriesFrom(input, _repeated_genders_codec);
            break;
          }
          case 26: {
            devices_.AddEntriesFrom(input, _repeated_devices_codec);
            break;
          }
          case 34:
          case 32: {
            networks_.AddEntriesFrom(input, _repeated_networks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            ageRanges_.AddEntriesFrom(ref input, _repeated_ageRanges_codec);
            break;
          }
          case 18: {
            genders_.AddEntriesFrom(ref input, _repeated_genders_codec);
            break;
          }
          case 26: {
            devices_.AddEntriesFrom(ref input, _repeated_devices_codec);
            break;
          }
          case 34:
          case 32: {
            networks_.AddEntriesFrom(ref input, _repeated_networks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for [ReachPlanService.GenerateProductMixIdeas][google.ads.googleads.v5.services.ReachPlanService.GenerateProductMixIdeas].
  /// </summary>
  public sealed partial class GenerateProductMixIdeasRequest : pb::IMessage<GenerateProductMixIdeasRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GenerateProductMixIdeasRequest> _parser = new pb::MessageParser<GenerateProductMixIdeasRequest>(() => new GenerateProductMixIdeasRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateProductMixIdeasRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateProductMixIdeasRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateProductMixIdeasRequest(GenerateProductMixIdeasRequest other) : this() {
      customerId_ = other.customerId_;
      PlannableLocationId = other.PlannableLocationId;
      CurrencyCode = other.CurrencyCode;
      BudgetMicros = other.BudgetMicros;
      preferences_ = other.preferences_ != null ? other.preferences_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateProductMixIdeasRequest Clone() {
      return new GenerateProductMixIdeasRequest(this);
    }

    /// <summary>Field number for the "customer_id" field.</summary>
    public const int CustomerIdFieldNumber = 1;
    private string customerId_ = "";
    /// <summary>
    /// Required. The ID of the customer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerId {
      get { return customerId_; }
      set {
        customerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plannable_location_id" field.</summary>
    public const int PlannableLocationIdFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_plannableLocationId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string plannableLocationId_;
    /// <summary>
    /// Required. The ID of the location, this is one of the ids returned by
    /// ListPlannableLocations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlannableLocationId {
      get { return plannableLocationId_; }
      set {
        plannableLocationId_ = value;
      }
    }


    /// <summary>Field number for the "currency_code" field.</summary>
    public const int CurrencyCodeFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_currencyCode_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string currencyCode_;
    /// <summary>
    /// Required. Currency code.
    /// Three-character ISO 4217 currency code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = value;
      }
    }


    /// <summary>Field number for the "budget_micros" field.</summary>
    public const int BudgetMicrosFieldNumber = 4;
    private static readonly pb::FieldCodec<long?> _single_budgetMicros_codec = pb::FieldCodec.ForStructWrapper<long>(34);
    private long? budgetMicros_;
    /// <summary>
    /// Required. Total budget.
    /// Amount in micros. One million is equivalent to one unit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? BudgetMicros {
      get { return budgetMicros_; }
      set {
        budgetMicros_ = value;
      }
    }


    /// <summary>Field number for the "preferences" field.</summary>
    public const int PreferencesFieldNumber = 5;
    private global::Google.Ads.GoogleAds.V5.Services.Preferences preferences_;
    /// <summary>
    /// The preferences of the suggested product mix.
    /// An unset preference is interpreted as all possible values are allowed,
    /// unless explicitly specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V5.Services.Preferences Preferences {
      get { return preferences_; }
      set {
        preferences_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateProductMixIdeasRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateProductMixIdeasRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CustomerId != other.CustomerId) return false;
      if (PlannableLocationId != other.PlannableLocationId) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (BudgetMicros != other.BudgetMicros) return false;
      if (!object.Equals(Preferences, other.Preferences)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CustomerId.Length != 0) hash ^= CustomerId.GetHashCode();
      if (plannableLocationId_ != null) hash ^= PlannableLocationId.GetHashCode();
      if (currencyCode_ != null) hash ^= CurrencyCode.GetHashCode();
      if (budgetMicros_ != null) hash ^= BudgetMicros.GetHashCode();
      if (preferences_ != null) hash ^= Preferences.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CustomerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CustomerId);
      }
      if (plannableLocationId_ != null) {
        _single_plannableLocationId_codec.WriteTagAndValue(output, PlannableLocationId);
      }
      if (currencyCode_ != null) {
        _single_currencyCode_codec.WriteTagAndValue(output, CurrencyCode);
      }
      if (budgetMicros_ != null) {
        _single_budgetMicros_codec.WriteTagAndValue(output, BudgetMicros);
      }
      if (preferences_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Preferences);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CustomerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CustomerId);
      }
      if (plannableLocationId_ != null) {
        _single_plannableLocationId_codec.WriteTagAndValue(ref output, PlannableLocationId);
      }
      if (currencyCode_ != null) {
        _single_currencyCode_codec.WriteTagAndValue(ref output, CurrencyCode);
      }
      if (budgetMicros_ != null) {
        _single_budgetMicros_codec.WriteTagAndValue(ref output, BudgetMicros);
      }
      if (preferences_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Preferences);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CustomerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerId);
      }
      if (plannableLocationId_ != null) {
        size += _single_plannableLocationId_codec.CalculateSizeWithTag(PlannableLocationId);
      }
      if (currencyCode_ != null) {
        size += _single_currencyCode_codec.CalculateSizeWithTag(CurrencyCode);
      }
      if (budgetMicros_ != null) {
        size += _single_budgetMicros_codec.CalculateSizeWithTag(BudgetMicros);
      }
      if (preferences_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Preferences);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateProductMixIdeasRequest other) {
      if (other == null) {
        return;
      }
      if (other.CustomerId.Length != 0) {
        CustomerId = other.CustomerId;
      }
      if (other.plannableLocationId_ != null) {
        if (plannableLocationId_ == null || other.PlannableLocationId != "") {
          PlannableLocationId = other.PlannableLocationId;
        }
      }
      if (other.currencyCode_ != null) {
        if (currencyCode_ == null || other.CurrencyCode != "") {
          CurrencyCode = other.CurrencyCode;
        }
      }
      if (other.budgetMicros_ != null) {
        if (budgetMicros_ == null || other.BudgetMicros != 0L) {
          BudgetMicros = other.BudgetMicros;
        }
      }
      if (other.preferences_ != null) {
        if (preferences_ == null) {
          Preferences = new global::Google.Ads.GoogleAds.V5.Services.Preferences();
        }
        Preferences.MergeFrom(other.Preferences);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CustomerId = input.ReadString();
            break;
          }
          case 18: {
            string value = _single_plannableLocationId_codec.Read(input);
            if (plannableLocationId_ == null || value != "") {
              PlannableLocationId = value;
            }
            break;
          }
          case 26: {
            string value = _single_currencyCode_codec.Read(input);
            if (currencyCode_ == null || value != "") {
              CurrencyCode = value;
            }
            break;
          }
          case 34: {
            long? value = _single_budgetMicros_codec.Read(input);
            if (budgetMicros_ == null || value != 0L) {
              BudgetMicros = value;
            }
            break;
          }
          case 42: {
            if (preferences_ == null) {
              Preferences = new global::Google.Ads.GoogleAds.V5.Services.Preferences();
            }
            input.ReadMessage(Preferences);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CustomerId = input.ReadString();
            break;
          }
          case 18: {
            string value = _single_plannableLocationId_codec.Read(ref input);
            if (plannableLocationId_ == null || value != "") {
              PlannableLocationId = value;
            }
            break;
          }
          case 26: {
            string value = _single_currencyCode_codec.Read(ref input);
            if (currencyCode_ == null || value != "") {
              CurrencyCode = value;
            }
            break;
          }
          case 34: {
            long? value = _single_budgetMicros_codec.Read(ref input);
            if (budgetMicros_ == null || value != 0L) {
              BudgetMicros = value;
            }
            break;
          }
          case 42: {
            if (preferences_ == null) {
              Preferences = new global::Google.Ads.GoogleAds.V5.Services.Preferences();
            }
            input.ReadMessage(Preferences);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Set of preferences about the planned mix.
  /// </summary>
  public sealed partial class Preferences : pb::IMessage<Preferences>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Preferences> _parser = new pb::MessageParser<Preferences>(() => new Preferences());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Preferences> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Preferences() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Preferences(Preferences other) : this() {
      IsSkippable = other.IsSkippable;
      StartsWithSound = other.StartsWithSound;
      adLength_ = other.adLength_;
      TopContentOnly = other.TopContentOnly;
      HasGuaranteedPrice = other.HasGuaranteedPrice;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Preferences Clone() {
      return new Preferences(this);
    }

    /// <summary>Field number for the "is_skippable" field.</summary>
    public const int IsSkippableFieldNumber = 1;
    private static readonly pb::FieldCodec<bool?> _single_isSkippable_codec = pb::FieldCodec.ForStructWrapper<bool>(10);
    private bool? isSkippable_;
    /// <summary>
    /// True if ad skippable.
    /// If not set, default is any value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? IsSkippable {
      get { return isSkippable_; }
      set {
        isSkippable_ = value;
      }
    }


    /// <summary>Field number for the "starts_with_sound" field.</summary>
    public const int StartsWithSoundFieldNumber = 2;
    private static readonly pb::FieldCodec<bool?> _single_startsWithSound_codec = pb::FieldCodec.ForStructWrapper<bool>(18);
    private bool? startsWithSound_;
    /// <summary>
    /// True if ad start with sound.
    /// If not set, default is any value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? StartsWithSound {
      get { return startsWithSound_; }
      set {
        startsWithSound_ = value;
      }
    }


    /// <summary>Field number for the "ad_length" field.</summary>
    public const int AdLengthFieldNumber = 3;
    private global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength adLength_ = global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength.Unspecified;
    /// <summary>
    /// The length of the ad.
    /// If not set, default is any value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength AdLength {
      get { return adLength_; }
      set {
        adLength_ = value;
      }
    }

    /// <summary>Field number for the "top_content_only" field.</summary>
    public const int TopContentOnlyFieldNumber = 4;
    private static readonly pb::FieldCodec<bool?> _single_topContentOnly_codec = pb::FieldCodec.ForStructWrapper<bool>(34);
    private bool? topContentOnly_;
    /// <summary>
    /// True if ad will only show on the top content.
    /// If not set, default is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? TopContentOnly {
      get { return topContentOnly_; }
      set {
        topContentOnly_ = value;
      }
    }


    /// <summary>Field number for the "has_guaranteed_price" field.</summary>
    public const int HasGuaranteedPriceFieldNumber = 5;
    private static readonly pb::FieldCodec<bool?> _single_hasGuaranteedPrice_codec = pb::FieldCodec.ForStructWrapper<bool>(42);
    private bool? hasGuaranteedPrice_;
    /// <summary>
    /// True if the price guaranteed. The cost of serving the ad is agreed upfront
    /// and not subject to an auction.
    /// If not set, default is any value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? HasGuaranteedPrice {
      get { return hasGuaranteedPrice_; }
      set {
        hasGuaranteedPrice_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Preferences);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Preferences other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSkippable != other.IsSkippable) return false;
      if (StartsWithSound != other.StartsWithSound) return false;
      if (AdLength != other.AdLength) return false;
      if (TopContentOnly != other.TopContentOnly) return false;
      if (HasGuaranteedPrice != other.HasGuaranteedPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (isSkippable_ != null) hash ^= IsSkippable.GetHashCode();
      if (startsWithSound_ != null) hash ^= StartsWithSound.GetHashCode();
      if (AdLength != global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength.Unspecified) hash ^= AdLength.GetHashCode();
      if (topContentOnly_ != null) hash ^= TopContentOnly.GetHashCode();
      if (hasGuaranteedPrice_ != null) hash ^= HasGuaranteedPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (isSkippable_ != null) {
        _single_isSkippable_codec.WriteTagAndValue(output, IsSkippable);
      }
      if (startsWithSound_ != null) {
        _single_startsWithSound_codec.WriteTagAndValue(output, StartsWithSound);
      }
      if (AdLength != global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AdLength);
      }
      if (topContentOnly_ != null) {
        _single_topContentOnly_codec.WriteTagAndValue(output, TopContentOnly);
      }
      if (hasGuaranteedPrice_ != null) {
        _single_hasGuaranteedPrice_codec.WriteTagAndValue(output, HasGuaranteedPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (isSkippable_ != null) {
        _single_isSkippable_codec.WriteTagAndValue(ref output, IsSkippable);
      }
      if (startsWithSound_ != null) {
        _single_startsWithSound_codec.WriteTagAndValue(ref output, StartsWithSound);
      }
      if (AdLength != global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AdLength);
      }
      if (topContentOnly_ != null) {
        _single_topContentOnly_codec.WriteTagAndValue(ref output, TopContentOnly);
      }
      if (hasGuaranteedPrice_ != null) {
        _single_hasGuaranteedPrice_codec.WriteTagAndValue(ref output, HasGuaranteedPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (isSkippable_ != null) {
        size += _single_isSkippable_codec.CalculateSizeWithTag(IsSkippable);
      }
      if (startsWithSound_ != null) {
        size += _single_startsWithSound_codec.CalculateSizeWithTag(StartsWithSound);
      }
      if (AdLength != global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AdLength);
      }
      if (topContentOnly_ != null) {
        size += _single_topContentOnly_codec.CalculateSizeWithTag(TopContentOnly);
      }
      if (hasGuaranteedPrice_ != null) {
        size += _single_hasGuaranteedPrice_codec.CalculateSizeWithTag(HasGuaranteedPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Preferences other) {
      if (other == null) {
        return;
      }
      if (other.isSkippable_ != null) {
        if (isSkippable_ == null || other.IsSkippable != false) {
          IsSkippable = other.IsSkippable;
        }
      }
      if (other.startsWithSound_ != null) {
        if (startsWithSound_ == null || other.StartsWithSound != false) {
          StartsWithSound = other.StartsWithSound;
        }
      }
      if (other.AdLength != global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength.Unspecified) {
        AdLength = other.AdLength;
      }
      if (other.topContentOnly_ != null) {
        if (topContentOnly_ == null || other.TopContentOnly != false) {
          TopContentOnly = other.TopContentOnly;
        }
      }
      if (other.hasGuaranteedPrice_ != null) {
        if (hasGuaranteedPrice_ == null || other.HasGuaranteedPrice != false) {
          HasGuaranteedPrice = other.HasGuaranteedPrice;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bool? value = _single_isSkippable_codec.Read(input);
            if (isSkippable_ == null || value != false) {
              IsSkippable = value;
            }
            break;
          }
          case 18: {
            bool? value = _single_startsWithSound_codec.Read(input);
            if (startsWithSound_ == null || value != false) {
              StartsWithSound = value;
            }
            break;
          }
          case 24: {
            AdLength = (global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength) input.ReadEnum();
            break;
          }
          case 34: {
            bool? value = _single_topContentOnly_codec.Read(input);
            if (topContentOnly_ == null || value != false) {
              TopContentOnly = value;
            }
            break;
          }
          case 42: {
            bool? value = _single_hasGuaranteedPrice_codec.Read(input);
            if (hasGuaranteedPrice_ == null || value != false) {
              HasGuaranteedPrice = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            bool? value = _single_isSkippable_codec.Read(ref input);
            if (isSkippable_ == null || value != false) {
              IsSkippable = value;
            }
            break;
          }
          case 18: {
            bool? value = _single_startsWithSound_codec.Read(ref input);
            if (startsWithSound_ == null || value != false) {
              StartsWithSound = value;
            }
            break;
          }
          case 24: {
            AdLength = (global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength) input.ReadEnum();
            break;
          }
          case 34: {
            bool? value = _single_topContentOnly_codec.Read(ref input);
            if (topContentOnly_ == null || value != false) {
              TopContentOnly = value;
            }
            break;
          }
          case 42: {
            bool? value = _single_hasGuaranteedPrice_codec.Read(ref input);
            if (hasGuaranteedPrice_ == null || value != false) {
              HasGuaranteedPrice = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The suggested product mix.
  /// </summary>
  public sealed partial class GenerateProductMixIdeasResponse : pb::IMessage<GenerateProductMixIdeasResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GenerateProductMixIdeasResponse> _parser = new pb::MessageParser<GenerateProductMixIdeasResponse>(() => new GenerateProductMixIdeasResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateProductMixIdeasResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateProductMixIdeasResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateProductMixIdeasResponse(GenerateProductMixIdeasResponse other) : this() {
      productAllocation_ = other.productAllocation_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateProductMixIdeasResponse Clone() {
      return new GenerateProductMixIdeasResponse(this);
    }

    /// <summary>Field number for the "product_allocation" field.</summary>
    public const int ProductAllocationFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V5.Services.ProductAllocation> _repeated_productAllocation_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V5.Services.ProductAllocation.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.ProductAllocation> productAllocation_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.ProductAllocation>();
    /// <summary>
    /// A list of products (ad formats) and the associated budget allocation idea.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.ProductAllocation> ProductAllocation {
      get { return productAllocation_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateProductMixIdeasResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateProductMixIdeasResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!productAllocation_.Equals(other.productAllocation_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= productAllocation_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      productAllocation_.WriteTo(output, _repeated_productAllocation_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      productAllocation_.WriteTo(ref output, _repeated_productAllocation_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += productAllocation_.CalculateSize(_repeated_productAllocation_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateProductMixIdeasResponse other) {
      if (other == null) {
        return;
      }
      productAllocation_.Add(other.productAllocation_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            productAllocation_.AddEntriesFrom(input, _repeated_productAllocation_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            productAllocation_.AddEntriesFrom(ref input, _repeated_productAllocation_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An allocation of a part of the budget on a given product.
  /// </summary>
  public sealed partial class ProductAllocation : pb::IMessage<ProductAllocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProductAllocation> _parser = new pb::MessageParser<ProductAllocation>(() => new ProductAllocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProductAllocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductAllocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductAllocation(ProductAllocation other) : this() {
      PlannableProductCode = other.PlannableProductCode;
      BudgetMicros = other.BudgetMicros;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductAllocation Clone() {
      return new ProductAllocation(this);
    }

    /// <summary>Field number for the "plannable_product_code" field.</summary>
    public const int PlannableProductCodeFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_plannableProductCode_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string plannableProductCode_;
    /// <summary>
    /// Selected product for planning. The product codes returned are within the
    /// set of the ones returned by ListPlannableProducts when using the same
    /// location id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlannableProductCode {
      get { return plannableProductCode_; }
      set {
        plannableProductCode_ = value;
      }
    }


    /// <summary>Field number for the "budget_micros" field.</summary>
    public const int BudgetMicrosFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_budgetMicros_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? budgetMicros_;
    /// <summary>
    /// The value to be allocated for the suggested product in requested currency.
    /// Amount in micros. One million is equivalent to one unit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? BudgetMicros {
      get { return budgetMicros_; }
      set {
        budgetMicros_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProductAllocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProductAllocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlannableProductCode != other.PlannableProductCode) return false;
      if (BudgetMicros != other.BudgetMicros) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (plannableProductCode_ != null) hash ^= PlannableProductCode.GetHashCode();
      if (budgetMicros_ != null) hash ^= BudgetMicros.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (plannableProductCode_ != null) {
        _single_plannableProductCode_codec.WriteTagAndValue(output, PlannableProductCode);
      }
      if (budgetMicros_ != null) {
        _single_budgetMicros_codec.WriteTagAndValue(output, BudgetMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (plannableProductCode_ != null) {
        _single_plannableProductCode_codec.WriteTagAndValue(ref output, PlannableProductCode);
      }
      if (budgetMicros_ != null) {
        _single_budgetMicros_codec.WriteTagAndValue(ref output, BudgetMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (plannableProductCode_ != null) {
        size += _single_plannableProductCode_codec.CalculateSizeWithTag(PlannableProductCode);
      }
      if (budgetMicros_ != null) {
        size += _single_budgetMicros_codec.CalculateSizeWithTag(BudgetMicros);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProductAllocation other) {
      if (other == null) {
        return;
      }
      if (other.plannableProductCode_ != null) {
        if (plannableProductCode_ == null || other.PlannableProductCode != "") {
          PlannableProductCode = other.PlannableProductCode;
        }
      }
      if (other.budgetMicros_ != null) {
        if (budgetMicros_ == null || other.BudgetMicros != 0L) {
          BudgetMicros = other.BudgetMicros;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_plannableProductCode_codec.Read(input);
            if (plannableProductCode_ == null || value != "") {
              PlannableProductCode = value;
            }
            break;
          }
          case 18: {
            long? value = _single_budgetMicros_codec.Read(input);
            if (budgetMicros_ == null || value != 0L) {
              BudgetMicros = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_plannableProductCode_codec.Read(ref input);
            if (plannableProductCode_ == null || value != "") {
              PlannableProductCode = value;
            }
            break;
          }
          case 18: {
            long? value = _single_budgetMicros_codec.Read(ref input);
            if (budgetMicros_ == null || value != 0L) {
              BudgetMicros = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for [ReachPlanService.GenerateReachForecast][google.ads.googleads.v5.services.ReachPlanService.GenerateReachForecast].
  /// </summary>
  public sealed partial class GenerateReachForecastRequest : pb::IMessage<GenerateReachForecastRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GenerateReachForecastRequest> _parser = new pb::MessageParser<GenerateReachForecastRequest>(() => new GenerateReachForecastRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateReachForecastRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateReachForecastRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateReachForecastRequest(GenerateReachForecastRequest other) : this() {
      customerId_ = other.customerId_;
      CurrencyCode = other.CurrencyCode;
      campaignDuration_ = other.campaignDuration_ != null ? other.campaignDuration_.Clone() : null;
      CookieFrequencyCap = other.CookieFrequencyCap;
      cookieFrequencyCapSetting_ = other.cookieFrequencyCapSetting_ != null ? other.cookieFrequencyCapSetting_.Clone() : null;
      MinEffectiveFrequency = other.MinEffectiveFrequency;
      targeting_ = other.targeting_ != null ? other.targeting_.Clone() : null;
      plannedProducts_ = other.plannedProducts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateReachForecastRequest Clone() {
      return new GenerateReachForecastRequest(this);
    }

    /// <summary>Field number for the "customer_id" field.</summary>
    public const int CustomerIdFieldNumber = 1;
    private string customerId_ = "";
    /// <summary>
    /// Required. The ID of the customer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerId {
      get { return customerId_; }
      set {
        customerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "currency_code" field.</summary>
    public const int CurrencyCodeFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_currencyCode_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string currencyCode_;
    /// <summary>
    /// The currency code.
    /// Three-character ISO 4217 currency code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = value;
      }
    }


    /// <summary>Field number for the "campaign_duration" field.</summary>
    public const int CampaignDurationFieldNumber = 3;
    private global::Google.Ads.GoogleAds.V5.Services.CampaignDuration campaignDuration_;
    /// <summary>
    /// Required. Campaign duration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V5.Services.CampaignDuration CampaignDuration {
      get { return campaignDuration_; }
      set {
        campaignDuration_ = value;
      }
    }

    /// <summary>Field number for the "cookie_frequency_cap" field.</summary>
    public const int CookieFrequencyCapFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_cookieFrequencyCap_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? cookieFrequencyCap_;
    /// <summary>
    /// Desired cookie frequency cap that will be applied to each planned product.
    /// This is equivalent to the frequency cap exposed in Google Ads when creating
    /// a campaign, it represents the maximum number of times an ad can be shown to
    /// the same user.
    /// If not specified no cap is applied.
    ///
    /// This field is deprecated in v4 and will eventually be removed.
    /// Please use cookie_frequency_cap_setting instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? CookieFrequencyCap {
      get { return cookieFrequencyCap_; }
      set {
        cookieFrequencyCap_ = value;
      }
    }


    /// <summary>Field number for the "cookie_frequency_cap_setting" field.</summary>
    public const int CookieFrequencyCapSettingFieldNumber = 8;
    private global::Google.Ads.GoogleAds.V5.Services.FrequencyCap cookieFrequencyCapSetting_;
    /// <summary>
    /// Desired cookie frequency cap that will be applied to each planned product.
    /// This is equivalent to the frequency cap exposed in Google Ads when creating
    /// a campaign, it represents the maximum number of times an ad can be shown to
    /// the same user during a specified time interval.
    /// If not specified, no cap is applied.
    ///
    /// This field replaces the deprecated cookie_frequency_cap field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V5.Services.FrequencyCap CookieFrequencyCapSetting {
      get { return cookieFrequencyCapSetting_; }
      set {
        cookieFrequencyCapSetting_ = value;
      }
    }

    /// <summary>Field number for the "min_effective_frequency" field.</summary>
    public const int MinEffectiveFrequencyFieldNumber = 5;
    private static readonly pb::FieldCodec<int?> _single_minEffectiveFrequency_codec = pb::FieldCodec.ForStructWrapper<int>(42);
    private int? minEffectiveFrequency_;
    /// <summary>
    /// Desired minimum effective frequency (the number of times a person was
    /// exposed to the ad) for the reported reach metrics [1-10].
    /// This won't affect the targeting, but just the reporting.
    /// If not specified, a default of 1 is applied.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? MinEffectiveFrequency {
      get { return minEffectiveFrequency_; }
      set {
        minEffectiveFrequency_ = value;
      }
    }


    /// <summary>Field number for the "targeting" field.</summary>
    public const int TargetingFieldNumber = 6;
    private global::Google.Ads.GoogleAds.V5.Services.Targeting targeting_;
    /// <summary>
    /// The targeting to be applied to all products selected in the product mix.
    ///
    /// This is planned targeting: execution details might vary based on the
    /// advertising product, please consult an implementation specialist.
    ///
    /// See specific metrics for details on how targeting affects them.
    ///
    /// In some cases, targeting may be overridden using the
    /// PlannedProduct.advanced_product_targeting field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V5.Services.Targeting Targeting {
      get { return targeting_; }
      set {
        targeting_ = value;
      }
    }

    /// <summary>Field number for the "planned_products" field.</summary>
    public const int PlannedProductsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V5.Services.PlannedProduct> _repeated_plannedProducts_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Ads.GoogleAds.V5.Services.PlannedProduct.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.PlannedProduct> plannedProducts_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.PlannedProduct>();
    /// <summary>
    /// Required. The products to be forecast.
    /// The max number of allowed planned products is 15.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.PlannedProduct> PlannedProducts {
      get { return plannedProducts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateReachForecastRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateReachForecastRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CustomerId != other.CustomerId) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (!object.Equals(CampaignDuration, other.CampaignDuration)) return false;
      if (CookieFrequencyCap != other.CookieFrequencyCap) return false;
      if (!object.Equals(CookieFrequencyCapSetting, other.CookieFrequencyCapSetting)) return false;
      if (MinEffectiveFrequency != other.MinEffectiveFrequency) return false;
      if (!object.Equals(Targeting, other.Targeting)) return false;
      if(!plannedProducts_.Equals(other.plannedProducts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CustomerId.Length != 0) hash ^= CustomerId.GetHashCode();
      if (currencyCode_ != null) hash ^= CurrencyCode.GetHashCode();
      if (campaignDuration_ != null) hash ^= CampaignDuration.GetHashCode();
      if (cookieFrequencyCap_ != null) hash ^= CookieFrequencyCap.GetHashCode();
      if (cookieFrequencyCapSetting_ != null) hash ^= CookieFrequencyCapSetting.GetHashCode();
      if (minEffectiveFrequency_ != null) hash ^= MinEffectiveFrequency.GetHashCode();
      if (targeting_ != null) hash ^= Targeting.GetHashCode();
      hash ^= plannedProducts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CustomerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CustomerId);
      }
      if (currencyCode_ != null) {
        _single_currencyCode_codec.WriteTagAndValue(output, CurrencyCode);
      }
      if (campaignDuration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CampaignDuration);
      }
      if (cookieFrequencyCap_ != null) {
        _single_cookieFrequencyCap_codec.WriteTagAndValue(output, CookieFrequencyCap);
      }
      if (minEffectiveFrequency_ != null) {
        _single_minEffectiveFrequency_codec.WriteTagAndValue(output, MinEffectiveFrequency);
      }
      if (targeting_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Targeting);
      }
      plannedProducts_.WriteTo(output, _repeated_plannedProducts_codec);
      if (cookieFrequencyCapSetting_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(CookieFrequencyCapSetting);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CustomerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CustomerId);
      }
      if (currencyCode_ != null) {
        _single_currencyCode_codec.WriteTagAndValue(ref output, CurrencyCode);
      }
      if (campaignDuration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CampaignDuration);
      }
      if (cookieFrequencyCap_ != null) {
        _single_cookieFrequencyCap_codec.WriteTagAndValue(ref output, CookieFrequencyCap);
      }
      if (minEffectiveFrequency_ != null) {
        _single_minEffectiveFrequency_codec.WriteTagAndValue(ref output, MinEffectiveFrequency);
      }
      if (targeting_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Targeting);
      }
      plannedProducts_.WriteTo(ref output, _repeated_plannedProducts_codec);
      if (cookieFrequencyCapSetting_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(CookieFrequencyCapSetting);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CustomerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerId);
      }
      if (currencyCode_ != null) {
        size += _single_currencyCode_codec.CalculateSizeWithTag(CurrencyCode);
      }
      if (campaignDuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CampaignDuration);
      }
      if (cookieFrequencyCap_ != null) {
        size += _single_cookieFrequencyCap_codec.CalculateSizeWithTag(CookieFrequencyCap);
      }
      if (cookieFrequencyCapSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CookieFrequencyCapSetting);
      }
      if (minEffectiveFrequency_ != null) {
        size += _single_minEffectiveFrequency_codec.CalculateSizeWithTag(MinEffectiveFrequency);
      }
      if (targeting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Targeting);
      }
      size += plannedProducts_.CalculateSize(_repeated_plannedProducts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateReachForecastRequest other) {
      if (other == null) {
        return;
      }
      if (other.CustomerId.Length != 0) {
        CustomerId = other.CustomerId;
      }
      if (other.currencyCode_ != null) {
        if (currencyCode_ == null || other.CurrencyCode != "") {
          CurrencyCode = other.CurrencyCode;
        }
      }
      if (other.campaignDuration_ != null) {
        if (campaignDuration_ == null) {
          CampaignDuration = new global::Google.Ads.GoogleAds.V5.Services.CampaignDuration();
        }
        CampaignDuration.MergeFrom(other.CampaignDuration);
      }
      if (other.cookieFrequencyCap_ != null) {
        if (cookieFrequencyCap_ == null || other.CookieFrequencyCap != 0) {
          CookieFrequencyCap = other.CookieFrequencyCap;
        }
      }
      if (other.cookieFrequencyCapSetting_ != null) {
        if (cookieFrequencyCapSetting_ == null) {
          CookieFrequencyCapSetting = new global::Google.Ads.GoogleAds.V5.Services.FrequencyCap();
        }
        CookieFrequencyCapSetting.MergeFrom(other.CookieFrequencyCapSetting);
      }
      if (other.minEffectiveFrequency_ != null) {
        if (minEffectiveFrequency_ == null || other.MinEffectiveFrequency != 0) {
          MinEffectiveFrequency = other.MinEffectiveFrequency;
        }
      }
      if (other.targeting_ != null) {
        if (targeting_ == null) {
          Targeting = new global::Google.Ads.GoogleAds.V5.Services.Targeting();
        }
        Targeting.MergeFrom(other.Targeting);
      }
      plannedProducts_.Add(other.plannedProducts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CustomerId = input.ReadString();
            break;
          }
          case 18: {
            string value = _single_currencyCode_codec.Read(input);
            if (currencyCode_ == null || value != "") {
              CurrencyCode = value;
            }
            break;
          }
          case 26: {
            if (campaignDuration_ == null) {
              CampaignDuration = new global::Google.Ads.GoogleAds.V5.Services.CampaignDuration();
            }
            input.ReadMessage(CampaignDuration);
            break;
          }
          case 34: {
            int? value = _single_cookieFrequencyCap_codec.Read(input);
            if (cookieFrequencyCap_ == null || value != 0) {
              CookieFrequencyCap = value;
            }
            break;
          }
          case 42: {
            int? value = _single_minEffectiveFrequency_codec.Read(input);
            if (minEffectiveFrequency_ == null || value != 0) {
              MinEffectiveFrequency = value;
            }
            break;
          }
          case 50: {
            if (targeting_ == null) {
              Targeting = new global::Google.Ads.GoogleAds.V5.Services.Targeting();
            }
            input.ReadMessage(Targeting);
            break;
          }
          case 58: {
            plannedProducts_.AddEntriesFrom(input, _repeated_plannedProducts_codec);
            break;
          }
          case 66: {
            if (cookieFrequencyCapSetting_ == null) {
              CookieFrequencyCapSetting = new global::Google.Ads.GoogleAds.V5.Services.FrequencyCap();
            }
            input.ReadMessage(CookieFrequencyCapSetting);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CustomerId = input.ReadString();
            break;
          }
          case 18: {
            string value = _single_currencyCode_codec.Read(ref input);
            if (currencyCode_ == null || value != "") {
              CurrencyCode = value;
            }
            break;
          }
          case 26: {
            if (campaignDuration_ == null) {
              CampaignDuration = new global::Google.Ads.GoogleAds.V5.Services.CampaignDuration();
            }
            input.ReadMessage(CampaignDuration);
            break;
          }
          case 34: {
            int? value = _single_cookieFrequencyCap_codec.Read(ref input);
            if (cookieFrequencyCap_ == null || value != 0) {
              CookieFrequencyCap = value;
            }
            break;
          }
          case 42: {
            int? value = _single_minEffectiveFrequency_codec.Read(ref input);
            if (minEffectiveFrequency_ == null || value != 0) {
              MinEffectiveFrequency = value;
            }
            break;
          }
          case 50: {
            if (targeting_ == null) {
              Targeting = new global::Google.Ads.GoogleAds.V5.Services.Targeting();
            }
            input.ReadMessage(Targeting);
            break;
          }
          case 58: {
            plannedProducts_.AddEntriesFrom(ref input, _repeated_plannedProducts_codec);
            break;
          }
          case 66: {
            if (cookieFrequencyCapSetting_ == null) {
              CookieFrequencyCapSetting = new global::Google.Ads.GoogleAds.V5.Services.FrequencyCap();
            }
            input.ReadMessage(CookieFrequencyCapSetting);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A rule specifying the maximum number of times an ad can be shown to a user
  /// over a particular time period.
  /// </summary>
  public sealed partial class FrequencyCap : pb::IMessage<FrequencyCap>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FrequencyCap> _parser = new pb::MessageParser<FrequencyCap>(() => new FrequencyCap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FrequencyCap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrequencyCap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrequencyCap(FrequencyCap other) : this() {
      Impressions = other.Impressions;
      timeUnit_ = other.timeUnit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrequencyCap Clone() {
      return new FrequencyCap(this);
    }

    /// <summary>Field number for the "impressions" field.</summary>
    public const int ImpressionsFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_impressions_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? impressions_;
    /// <summary>
    /// Required. The number of impressions, inclusive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Impressions {
      get { return impressions_; }
      set {
        impressions_ = value;
      }
    }


    /// <summary>Field number for the "time_unit" field.</summary>
    public const int TimeUnitFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V5.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit timeUnit_ = global::Google.Ads.GoogleAds.V5.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit.Unspecified;
    /// <summary>
    /// Required. The type of time unit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V5.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit TimeUnit {
      get { return timeUnit_; }
      set {
        timeUnit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FrequencyCap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FrequencyCap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Impressions != other.Impressions) return false;
      if (TimeUnit != other.TimeUnit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (impressions_ != null) hash ^= Impressions.GetHashCode();
      if (TimeUnit != global::Google.Ads.GoogleAds.V5.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit.Unspecified) hash ^= TimeUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (impressions_ != null) {
        _single_impressions_codec.WriteTagAndValue(output, Impressions);
      }
      if (TimeUnit != global::Google.Ads.GoogleAds.V5.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TimeUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (impressions_ != null) {
        _single_impressions_codec.WriteTagAndValue(ref output, Impressions);
      }
      if (TimeUnit != global::Google.Ads.GoogleAds.V5.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TimeUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (impressions_ != null) {
        size += _single_impressions_codec.CalculateSizeWithTag(Impressions);
      }
      if (TimeUnit != global::Google.Ads.GoogleAds.V5.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TimeUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FrequencyCap other) {
      if (other == null) {
        return;
      }
      if (other.impressions_ != null) {
        if (impressions_ == null || other.Impressions != 0) {
          Impressions = other.Impressions;
        }
      }
      if (other.TimeUnit != global::Google.Ads.GoogleAds.V5.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit.Unspecified) {
        TimeUnit = other.TimeUnit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_impressions_codec.Read(input);
            if (impressions_ == null || value != 0) {
              Impressions = value;
            }
            break;
          }
          case 16: {
            TimeUnit = (global::Google.Ads.GoogleAds.V5.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            int? value = _single_impressions_codec.Read(ref input);
            if (impressions_ == null || value != 0) {
              Impressions = value;
            }
            break;
          }
          case 16: {
            TimeUnit = (global::Google.Ads.GoogleAds.V5.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The targeting for which traffic metrics will be reported.
  /// </summary>
  public sealed partial class Targeting : pb::IMessage<Targeting>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Targeting> _parser = new pb::MessageParser<Targeting>(() => new Targeting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Targeting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Targeting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Targeting(Targeting other) : this() {
      PlannableLocationId = other.PlannableLocationId;
      ageRange_ = other.ageRange_;
      genders_ = other.genders_.Clone();
      devices_ = other.devices_.Clone();
      network_ = other.network_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Targeting Clone() {
      return new Targeting(this);
    }

    /// <summary>Field number for the "plannable_location_id" field.</summary>
    public const int PlannableLocationIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_plannableLocationId_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string plannableLocationId_;
    /// <summary>
    /// Required. The ID of the selected location.
    /// Plannable locations ID can be obtained from ListPlannableLocations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlannableLocationId {
      get { return plannableLocationId_; }
      set {
        plannableLocationId_ = value;
      }
    }


    /// <summary>Field number for the "age_range" field.</summary>
    public const int AgeRangeFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange ageRange_ = global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange.Unspecified;
    /// <summary>
    /// Targeted age range.
    /// If not specified, targets all age ranges.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange AgeRange {
      get { return ageRange_; }
      set {
        ageRange_ = value;
      }
    }

    /// <summary>Field number for the "genders" field.</summary>
    public const int GendersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V5.Common.GenderInfo> _repeated_genders_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Ads.GoogleAds.V5.Common.GenderInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Common.GenderInfo> genders_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Common.GenderInfo>();
    /// <summary>
    /// Targeted genders.
    /// If not specified, targets all genders.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Common.GenderInfo> Genders {
      get { return genders_; }
    }

    /// <summary>Field number for the "devices" field.</summary>
    public const int DevicesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V5.Common.DeviceInfo> _repeated_devices_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Ads.GoogleAds.V5.Common.DeviceInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Common.DeviceInfo> devices_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Common.DeviceInfo>();
    /// <summary>
    /// Targeted devices.
    /// If not specified, targets all applicable devices. Applicable devices vary
    /// by product and region and can be obtained from ListPlannableProducts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Common.DeviceInfo> Devices {
      get { return devices_; }
    }

    /// <summary>Field number for the "network" field.</summary>
    public const int NetworkFieldNumber = 5;
    private global::Google.Ads.GoogleAds.V5.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork network_ = global::Google.Ads.GoogleAds.V5.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork.Unspecified;
    /// <summary>
    /// Targetable network for the ad product.
    /// If not specified, targets all applicable networks. Applicable networks vary
    /// by product and region and can be obtained from ListPlannableProducts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V5.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork Network {
      get { return network_; }
      set {
        network_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Targeting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Targeting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlannableLocationId != other.PlannableLocationId) return false;
      if (AgeRange != other.AgeRange) return false;
      if(!genders_.Equals(other.genders_)) return false;
      if(!devices_.Equals(other.devices_)) return false;
      if (Network != other.Network) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (plannableLocationId_ != null) hash ^= PlannableLocationId.GetHashCode();
      if (AgeRange != global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange.Unspecified) hash ^= AgeRange.GetHashCode();
      hash ^= genders_.GetHashCode();
      hash ^= devices_.GetHashCode();
      if (Network != global::Google.Ads.GoogleAds.V5.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork.Unspecified) hash ^= Network.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (plannableLocationId_ != null) {
        _single_plannableLocationId_codec.WriteTagAndValue(output, PlannableLocationId);
      }
      if (AgeRange != global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AgeRange);
      }
      genders_.WriteTo(output, _repeated_genders_codec);
      devices_.WriteTo(output, _repeated_devices_codec);
      if (Network != global::Google.Ads.GoogleAds.V5.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Network);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (plannableLocationId_ != null) {
        _single_plannableLocationId_codec.WriteTagAndValue(ref output, PlannableLocationId);
      }
      if (AgeRange != global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AgeRange);
      }
      genders_.WriteTo(ref output, _repeated_genders_codec);
      devices_.WriteTo(ref output, _repeated_devices_codec);
      if (Network != global::Google.Ads.GoogleAds.V5.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Network);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (plannableLocationId_ != null) {
        size += _single_plannableLocationId_codec.CalculateSizeWithTag(PlannableLocationId);
      }
      if (AgeRange != global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AgeRange);
      }
      size += genders_.CalculateSize(_repeated_genders_codec);
      size += devices_.CalculateSize(_repeated_devices_codec);
      if (Network != global::Google.Ads.GoogleAds.V5.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Network);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Targeting other) {
      if (other == null) {
        return;
      }
      if (other.plannableLocationId_ != null) {
        if (plannableLocationId_ == null || other.PlannableLocationId != "") {
          PlannableLocationId = other.PlannableLocationId;
        }
      }
      if (other.AgeRange != global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange.Unspecified) {
        AgeRange = other.AgeRange;
      }
      genders_.Add(other.genders_);
      devices_.Add(other.devices_);
      if (other.Network != global::Google.Ads.GoogleAds.V5.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork.Unspecified) {
        Network = other.Network;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_plannableLocationId_codec.Read(input);
            if (plannableLocationId_ == null || value != "") {
              PlannableLocationId = value;
            }
            break;
          }
          case 16: {
            AgeRange = (global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange) input.ReadEnum();
            break;
          }
          case 26: {
            genders_.AddEntriesFrom(input, _repeated_genders_codec);
            break;
          }
          case 34: {
            devices_.AddEntriesFrom(input, _repeated_devices_codec);
            break;
          }
          case 40: {
            Network = (global::Google.Ads.GoogleAds.V5.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_plannableLocationId_codec.Read(ref input);
            if (plannableLocationId_ == null || value != "") {
              PlannableLocationId = value;
            }
            break;
          }
          case 16: {
            AgeRange = (global::Google.Ads.GoogleAds.V5.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange) input.ReadEnum();
            break;
          }
          case 26: {
            genders_.AddEntriesFrom(ref input, _repeated_genders_codec);
            break;
          }
          case 34: {
            devices_.AddEntriesFrom(ref input, _repeated_devices_codec);
            break;
          }
          case 40: {
            Network = (global::Google.Ads.GoogleAds.V5.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The duration of a planned campaign.
  /// </summary>
  public sealed partial class CampaignDuration : pb::IMessage<CampaignDuration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CampaignDuration> _parser = new pb::MessageParser<CampaignDuration>(() => new CampaignDuration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CampaignDuration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignDuration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignDuration(CampaignDuration other) : this() {
      DurationInDays = other.DurationInDays;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignDuration Clone() {
      return new CampaignDuration(this);
    }

    /// <summary>Field number for the "duration_in_days" field.</summary>
    public const int DurationInDaysFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_durationInDays_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? durationInDays_;
    /// <summary>
    /// The duration value in days.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? DurationInDays {
      get { return durationInDays_; }
      set {
        durationInDays_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CampaignDuration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CampaignDuration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DurationInDays != other.DurationInDays) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (durationInDays_ != null) hash ^= DurationInDays.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (durationInDays_ != null) {
        _single_durationInDays_codec.WriteTagAndValue(output, DurationInDays);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (durationInDays_ != null) {
        _single_durationInDays_codec.WriteTagAndValue(ref output, DurationInDays);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (durationInDays_ != null) {
        size += _single_durationInDays_codec.CalculateSizeWithTag(DurationInDays);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CampaignDuration other) {
      if (other == null) {
        return;
      }
      if (other.durationInDays_ != null) {
        if (durationInDays_ == null || other.DurationInDays != 0) {
          DurationInDays = other.DurationInDays;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_durationInDays_codec.Read(input);
            if (durationInDays_ == null || value != 0) {
              DurationInDays = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            int? value = _single_durationInDays_codec.Read(ref input);
            if (durationInDays_ == null || value != 0) {
              DurationInDays = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A product being planned for reach.
  /// </summary>
  public sealed partial class PlannedProduct : pb::IMessage<PlannedProduct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlannedProduct> _parser = new pb::MessageParser<PlannedProduct>(() => new PlannedProduct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlannedProduct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannedProduct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannedProduct(PlannedProduct other) : this() {
      PlannableProductCode = other.PlannableProductCode;
      BudgetMicros = other.BudgetMicros;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannedProduct Clone() {
      return new PlannedProduct(this);
    }

    /// <summary>Field number for the "plannable_product_code" field.</summary>
    public const int PlannableProductCodeFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_plannableProductCode_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string plannableProductCode_;
    /// <summary>
    /// Required. Selected product for planning.
    /// The code associated with the ad product. E.g. Trueview, Bumper
    /// To list the available plannable product codes use ListPlannableProducts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlannableProductCode {
      get { return plannableProductCode_; }
      set {
        plannableProductCode_ = value;
      }
    }


    /// <summary>Field number for the "budget_micros" field.</summary>
    public const int BudgetMicrosFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_budgetMicros_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? budgetMicros_;
    /// <summary>
    /// Required. Maximum budget allocation in micros for the selected product.
    /// The value is specified in the selected planning currency_code.
    /// E.g. 1 000 000$ = 1 000 000 000 000 micros.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? BudgetMicros {
      get { return budgetMicros_; }
      set {
        budgetMicros_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlannedProduct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlannedProduct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlannableProductCode != other.PlannableProductCode) return false;
      if (BudgetMicros != other.BudgetMicros) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (plannableProductCode_ != null) hash ^= PlannableProductCode.GetHashCode();
      if (budgetMicros_ != null) hash ^= BudgetMicros.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (plannableProductCode_ != null) {
        _single_plannableProductCode_codec.WriteTagAndValue(output, PlannableProductCode);
      }
      if (budgetMicros_ != null) {
        _single_budgetMicros_codec.WriteTagAndValue(output, BudgetMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (plannableProductCode_ != null) {
        _single_plannableProductCode_codec.WriteTagAndValue(ref output, PlannableProductCode);
      }
      if (budgetMicros_ != null) {
        _single_budgetMicros_codec.WriteTagAndValue(ref output, BudgetMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (plannableProductCode_ != null) {
        size += _single_plannableProductCode_codec.CalculateSizeWithTag(PlannableProductCode);
      }
      if (budgetMicros_ != null) {
        size += _single_budgetMicros_codec.CalculateSizeWithTag(BudgetMicros);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlannedProduct other) {
      if (other == null) {
        return;
      }
      if (other.plannableProductCode_ != null) {
        if (plannableProductCode_ == null || other.PlannableProductCode != "") {
          PlannableProductCode = other.PlannableProductCode;
        }
      }
      if (other.budgetMicros_ != null) {
        if (budgetMicros_ == null || other.BudgetMicros != 0L) {
          BudgetMicros = other.BudgetMicros;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_plannableProductCode_codec.Read(input);
            if (plannableProductCode_ == null || value != "") {
              PlannableProductCode = value;
            }
            break;
          }
          case 18: {
            long? value = _single_budgetMicros_codec.Read(input);
            if (budgetMicros_ == null || value != 0L) {
              BudgetMicros = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            string value = _single_plannableProductCode_codec.Read(ref input);
            if (plannableProductCode_ == null || value != "") {
              PlannableProductCode = value;
            }
            break;
          }
          case 18: {
            long? value = _single_budgetMicros_codec.Read(ref input);
            if (budgetMicros_ == null || value != 0L) {
              BudgetMicros = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message containing the generated reach curve.
  /// </summary>
  public sealed partial class GenerateReachForecastResponse : pb::IMessage<GenerateReachForecastResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GenerateReachForecastResponse> _parser = new pb::MessageParser<GenerateReachForecastResponse>(() => new GenerateReachForecastResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateReachForecastResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateReachForecastResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateReachForecastResponse(GenerateReachForecastResponse other) : this() {
      onTargetAudienceMetrics_ = other.onTargetAudienceMetrics_ != null ? other.onTargetAudienceMetrics_.Clone() : null;
      reachCurve_ = other.reachCurve_ != null ? other.reachCurve_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateReachForecastResponse Clone() {
      return new GenerateReachForecastResponse(this);
    }

    /// <summary>Field number for the "on_target_audience_metrics" field.</summary>
    public const int OnTargetAudienceMetricsFieldNumber = 1;
    private global::Google.Ads.GoogleAds.V5.Services.OnTargetAudienceMetrics onTargetAudienceMetrics_;
    /// <summary>
    /// Reference on target audiences for this curve.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V5.Services.OnTargetAudienceMetrics OnTargetAudienceMetrics {
      get { return onTargetAudienceMetrics_; }
      set {
        onTargetAudienceMetrics_ = value;
      }
    }

    /// <summary>Field number for the "reach_curve" field.</summary>
    public const int ReachCurveFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V5.Services.ReachCurve reachCurve_;
    /// <summary>
    /// The generated reach curve for the planned product mix.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V5.Services.ReachCurve ReachCurve {
      get { return reachCurve_; }
      set {
        reachCurve_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateReachForecastResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateReachForecastResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OnTargetAudienceMetrics, other.OnTargetAudienceMetrics)) return false;
      if (!object.Equals(ReachCurve, other.ReachCurve)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (onTargetAudienceMetrics_ != null) hash ^= OnTargetAudienceMetrics.GetHashCode();
      if (reachCurve_ != null) hash ^= ReachCurve.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (onTargetAudienceMetrics_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OnTargetAudienceMetrics);
      }
      if (reachCurve_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReachCurve);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (onTargetAudienceMetrics_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OnTargetAudienceMetrics);
      }
      if (reachCurve_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReachCurve);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (onTargetAudienceMetrics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OnTargetAudienceMetrics);
      }
      if (reachCurve_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReachCurve);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateReachForecastResponse other) {
      if (other == null) {
        return;
      }
      if (other.onTargetAudienceMetrics_ != null) {
        if (onTargetAudienceMetrics_ == null) {
          OnTargetAudienceMetrics = new global::Google.Ads.GoogleAds.V5.Services.OnTargetAudienceMetrics();
        }
        OnTargetAudienceMetrics.MergeFrom(other.OnTargetAudienceMetrics);
      }
      if (other.reachCurve_ != null) {
        if (reachCurve_ == null) {
          ReachCurve = new global::Google.Ads.GoogleAds.V5.Services.ReachCurve();
        }
        ReachCurve.MergeFrom(other.ReachCurve);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (onTargetAudienceMetrics_ == null) {
              OnTargetAudienceMetrics = new global::Google.Ads.GoogleAds.V5.Services.OnTargetAudienceMetrics();
            }
            input.ReadMessage(OnTargetAudienceMetrics);
            break;
          }
          case 18: {
            if (reachCurve_ == null) {
              ReachCurve = new global::Google.Ads.GoogleAds.V5.Services.ReachCurve();
            }
            input.ReadMessage(ReachCurve);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (onTargetAudienceMetrics_ == null) {
              OnTargetAudienceMetrics = new global::Google.Ads.GoogleAds.V5.Services.OnTargetAudienceMetrics();
            }
            input.ReadMessage(OnTargetAudienceMetrics);
            break;
          }
          case 18: {
            if (reachCurve_ == null) {
              ReachCurve = new global::Google.Ads.GoogleAds.V5.Services.ReachCurve();
            }
            input.ReadMessage(ReachCurve);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The reach curve for the planned products.
  /// </summary>
  public sealed partial class ReachCurve : pb::IMessage<ReachCurve>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReachCurve> _parser = new pb::MessageParser<ReachCurve>(() => new ReachCurve());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReachCurve> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachCurve() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachCurve(ReachCurve other) : this() {
      reachForecasts_ = other.reachForecasts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachCurve Clone() {
      return new ReachCurve(this);
    }

    /// <summary>Field number for the "reach_forecasts" field.</summary>
    public const int ReachForecastsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V5.Services.ReachForecast> _repeated_reachForecasts_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V5.Services.ReachForecast.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.ReachForecast> reachForecasts_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.ReachForecast>();
    /// <summary>
    /// All points on the reach curve.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.ReachForecast> ReachForecasts {
      get { return reachForecasts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReachCurve);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReachCurve other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reachForecasts_.Equals(other.reachForecasts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reachForecasts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      reachForecasts_.WriteTo(output, _repeated_reachForecasts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      reachForecasts_.WriteTo(ref output, _repeated_reachForecasts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += reachForecasts_.CalculateSize(_repeated_reachForecasts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReachCurve other) {
      if (other == null) {
        return;
      }
      reachForecasts_.Add(other.reachForecasts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            reachForecasts_.AddEntriesFrom(input, _repeated_reachForecasts_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            reachForecasts_.AddEntriesFrom(ref input, _repeated_reachForecasts_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A point on reach curve.
  /// </summary>
  public sealed partial class ReachForecast : pb::IMessage<ReachForecast>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReachForecast> _parser = new pb::MessageParser<ReachForecast>(() => new ReachForecast());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReachForecast> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachForecast() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachForecast(ReachForecast other) : this() {
      CostMicros = other.CostMicros;
      forecast_ = other.forecast_ != null ? other.forecast_.Clone() : null;
      forecastedProductAllocations_ = other.forecastedProductAllocations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachForecast Clone() {
      return new ReachForecast(this);
    }

    /// <summary>Field number for the "cost_micros" field.</summary>
    public const int CostMicrosFieldNumber = 1;
    private static readonly pb::FieldCodec<long?> _single_costMicros_codec = pb::FieldCodec.ForStructWrapper<long>(10);
    private long? costMicros_;
    /// <summary>
    /// The cost in micros.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? CostMicros {
      get { return costMicros_; }
      set {
        costMicros_ = value;
      }
    }


    /// <summary>Field number for the "forecast" field.</summary>
    public const int ForecastFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V5.Services.Forecast forecast_;
    /// <summary>
    /// Forecasted traffic metrics for this point.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V5.Services.Forecast Forecast {
      get { return forecast_; }
      set {
        forecast_ = value;
      }
    }

    /// <summary>Field number for the "forecasted_product_allocations" field.</summary>
    public const int ForecastedProductAllocationsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V5.Services.ProductAllocation> _repeated_forecastedProductAllocations_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Ads.GoogleAds.V5.Services.ProductAllocation.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.ProductAllocation> forecastedProductAllocations_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.ProductAllocation>();
    /// <summary>
    /// The forecasted allocation. This differs from the input allocation if one
    /// or more product cannot fulfill the budget because of limited inventory.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V5.Services.ProductAllocation> ForecastedProductAllocations {
      get { return forecastedProductAllocations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReachForecast);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReachForecast other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CostMicros != other.CostMicros) return false;
      if (!object.Equals(Forecast, other.Forecast)) return false;
      if(!forecastedProductAllocations_.Equals(other.forecastedProductAllocations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (costMicros_ != null) hash ^= CostMicros.GetHashCode();
      if (forecast_ != null) hash ^= Forecast.GetHashCode();
      hash ^= forecastedProductAllocations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (costMicros_ != null) {
        _single_costMicros_codec.WriteTagAndValue(output, CostMicros);
      }
      if (forecast_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Forecast);
      }
      forecastedProductAllocations_.WriteTo(output, _repeated_forecastedProductAllocations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (costMicros_ != null) {
        _single_costMicros_codec.WriteTagAndValue(ref output, CostMicros);
      }
      if (forecast_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Forecast);
      }
      forecastedProductAllocations_.WriteTo(ref output, _repeated_forecastedProductAllocations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (costMicros_ != null) {
        size += _single_costMicros_codec.CalculateSizeWithTag(CostMicros);
      }
      if (forecast_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Forecast);
      }
      size += forecastedProductAllocations_.CalculateSize(_repeated_forecastedProductAllocations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReachForecast other) {
      if (other == null) {
        return;
      }
      if (other.costMicros_ != null) {
        if (costMicros_ == null || other.CostMicros != 0L) {
          CostMicros = other.CostMicros;
        }
      }
      if (other.forecast_ != null) {
        if (forecast_ == null) {
          Forecast = new global::Google.Ads.GoogleAds.V5.Services.Forecast();
        }
        Forecast.MergeFrom(other.Forecast);
      }
      forecastedProductAllocations_.Add(other.forecastedProductAllocations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            long? value = _single_costMicros_codec.Read(input);
            if (costMicros_ == null || value != 0L) {
              CostMicros = value;
            }
            break;
          }
          case 18: {
            if (forecast_ == null) {
              Forecast = new global::Google.Ads.GoogleAds.V5.Services.Forecast();
            }
            input.ReadMessage(Forecast);
            break;
          }
          case 26: {
            forecastedProductAllocations_.AddEntriesFrom(input, _repeated_forecastedProductAllocations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            long? value = _single_costMicros_codec.Read(ref input);
            if (costMicros_ == null || value != 0L) {
              CostMicros = value;
            }
            break;
          }
          case 18: {
            if (forecast_ == null) {
              Forecast = new global::Google.Ads.GoogleAds.V5.Services.Forecast();
            }
            input.ReadMessage(Forecast);
            break;
          }
          case 26: {
            forecastedProductAllocations_.AddEntriesFrom(ref input, _repeated_forecastedProductAllocations_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Forecasted traffic metrics for the planned products and targeting.
  /// </summary>
  public sealed partial class Forecast : pb::IMessage<Forecast>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Forecast> _parser = new pb::MessageParser<Forecast>(() => new Forecast());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Forecast> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Forecast() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Forecast(Forecast other) : this() {
      OnTargetReach = other.OnTargetReach;
      TotalReach = other.TotalReach;
      OnTargetImpressions = other.OnTargetImpressions;
      TotalImpressions = other.TotalImpressions;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Forecast Clone() {
      return new Forecast(this);
    }

    /// <summary>Field number for the "on_target_reach" field.</summary>
    public const int OnTargetReachFieldNumber = 1;
    private static readonly pb::FieldCodec<long?> _single_onTargetReach_codec = pb::FieldCodec.ForStructWrapper<long>(10);
    private long? onTargetReach_;
    /// <summary>
    /// Number of unique people reached at least
    /// GenerateReachForecastRequest.min_effective_frequency times that exactly
    /// matches the Targeting.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? OnTargetReach {
      get { return onTargetReach_; }
      set {
        onTargetReach_ = value;
      }
    }


    /// <summary>Field number for the "total_reach" field.</summary>
    public const int TotalReachFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_totalReach_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? totalReach_;
    /// <summary>
    /// Total number of unique people reached at least
    /// GenerateReachForecastRequest.min_effective_frequency times. This includes
    /// people that may fall outside the specified Targeting.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? TotalReach {
      get { return totalReach_; }
      set {
        totalReach_ = value;
      }
    }


    /// <summary>Field number for the "on_target_impressions" field.</summary>
    public const int OnTargetImpressionsFieldNumber = 3;
    private static readonly pb::FieldCodec<long?> _single_onTargetImpressions_codec = pb::FieldCodec.ForStructWrapper<long>(26);
    private long? onTargetImpressions_;
    /// <summary>
    /// Number of ad impressions that exactly matches the Targeting.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? OnTargetImpressions {
      get { return onTargetImpressions_; }
      set {
        onTargetImpressions_ = value;
      }
    }


    /// <summary>Field number for the "total_impressions" field.</summary>
    public const int TotalImpressionsFieldNumber = 4;
    private static readonly pb::FieldCodec<long?> _single_totalImpressions_codec = pb::FieldCodec.ForStructWrapper<long>(34);
    private long? totalImpressions_;
    /// <summary>
    /// Total number of ad impressions. This includes impressions that may fall
    /// outside the specified Targeting, due to insufficient information on
    /// signed-in users.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? TotalImpressions {
      get { return totalImpressions_; }
      set {
        totalImpressions_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Forecast);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Forecast other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OnTargetReach != other.OnTargetReach) return false;
      if (TotalReach != other.TotalReach) return false;
      if (OnTargetImpressions != other.OnTargetImpressions) return false;
      if (TotalImpressions != other.TotalImpressions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (onTargetReach_ != null) hash ^= OnTargetReach.GetHashCode();
      if (totalReach_ != null) hash ^= TotalReach.GetHashCode();
      if (onTargetImpressions_ != null) hash ^= OnTargetImpressions.GetHashCode();
      if (totalImpressions_ != null) hash ^= TotalImpressions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (onTargetReach_ != null) {
        _single_onTargetReach_codec.WriteTagAndValue(output, OnTargetReach);
      }
      if (totalReach_ != null) {
        _single_totalReach_codec.WriteTagAndValue(output, TotalReach);
      }
      if (onTargetImpressions_ != null) {
        _single_onTargetImpressions_codec.WriteTagAndValue(output, OnTargetImpressions);
      }
      if (totalImpressions_ != null) {
        _single_totalImpressions_codec.WriteTagAndValue(output, TotalImpressions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (onTargetReach_ != null) {
        _single_onTargetReach_codec.WriteTagAndValue(ref output, OnTargetReach);
      }
      if (totalReach_ != null) {
        _single_totalReach_codec.WriteTagAndValue(ref output, TotalReach);
      }
      if (onTargetImpressions_ != null) {
        _single_onTargetImpressions_codec.WriteTagAndValue(ref output, OnTargetImpressions);
      }
      if (totalImpressions_ != null) {
        _single_totalImpressions_codec.WriteTagAndValue(ref output, TotalImpressions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (onTargetReach_ != null) {
        size += _single_onTargetReach_codec.CalculateSizeWithTag(OnTargetReach);
      }
      if (totalReach_ != null) {
        size += _single_totalReach_codec.CalculateSizeWithTag(TotalReach);
      }
      if (onTargetImpressions_ != null) {
        size += _single_onTargetImpressions_codec.CalculateSizeWithTag(OnTargetImpressions);
      }
      if (totalImpressions_ != null) {
        size += _single_totalImpressions_codec.CalculateSizeWithTag(TotalImpressions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Forecast other) {
      if (other == null) {
        return;
      }
      if (other.onTargetReach_ != null) {
        if (onTargetReach_ == null || other.OnTargetReach != 0L) {
          OnTargetReach = other.OnTargetReach;
        }
      }
      if (other.totalReach_ != null) {
        if (totalReach_ == null || other.TotalReach != 0L) {
          TotalReach = other.TotalReach;
        }
      }
      if (other.onTargetImpressions_ != null) {
        if (onTargetImpressions_ == null || other.OnTargetImpressions != 0L) {
          OnTargetImpressions = other.OnTargetImpressions;
        }
      }
      if (other.totalImpressions_ != null) {
        if (totalImpressions_ == null || other.TotalImpressions != 0L) {
          TotalImpressions = other.TotalImpressions;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            long? value = _single_onTargetReach_codec.Read(input);
            if (onTargetReach_ == null || value != 0L) {
              OnTargetReach = value;
            }
            break;
          }
          case 18: {
            long? value = _single_totalReach_codec.Read(input);
            if (totalReach_ == null || value != 0L) {
              TotalReach = value;
            }
            break;
          }
          case 26: {
            long? value = _single_onTargetImpressions_codec.Read(input);
            if (onTargetImpressions_ == null || value != 0L) {
              OnTargetImpressions = value;
            }
            break;
          }
          case 34: {
            long? value = _single_totalImpressions_codec.Read(input);
            if (totalImpressions_ == null || value != 0L) {
              TotalImpressions = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            long? value = _single_onTargetReach_codec.Read(ref input);
            if (onTargetReach_ == null || value != 0L) {
              OnTargetReach = value;
            }
            break;
          }
          case 18: {
            long? value = _single_totalReach_codec.Read(ref input);
            if (totalReach_ == null || value != 0L) {
              TotalReach = value;
            }
            break;
          }
          case 26: {
            long? value = _single_onTargetImpressions_codec.Read(ref input);
            if (onTargetImpressions_ == null || value != 0L) {
              OnTargetImpressions = value;
            }
            break;
          }
          case 34: {
            long? value = _single_totalImpressions_codec.Read(ref input);
            if (totalImpressions_ == null || value != 0L) {
              TotalImpressions = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Audience metrics for the planned products.
  /// These metrics consider the following targeting dimensions:
  ///
  /// - Location
  /// - PlannableAgeRange
  /// - Gender
  /// </summary>
  public sealed partial class OnTargetAudienceMetrics : pb::IMessage<OnTargetAudienceMetrics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OnTargetAudienceMetrics> _parser = new pb::MessageParser<OnTargetAudienceMetrics>(() => new OnTargetAudienceMetrics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnTargetAudienceMetrics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V5.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnTargetAudienceMetrics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnTargetAudienceMetrics(OnTargetAudienceMetrics other) : this() {
      YoutubeAudienceSize = other.YoutubeAudienceSize;
      CensusAudienceSize = other.CensusAudienceSize;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnTargetAudienceMetrics Clone() {
      return new OnTargetAudienceMetrics(this);
    }

    /// <summary>Field number for the "youtube_audience_size" field.</summary>
    public const int YoutubeAudienceSizeFieldNumber = 1;
    private static readonly pb::FieldCodec<long?> _single_youtubeAudienceSize_codec = pb::FieldCodec.ForStructWrapper<long>(10);
    private long? youtubeAudienceSize_;
    /// <summary>
    /// Reference audience size matching the considered targeting for YouTube.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? YoutubeAudienceSize {
      get { return youtubeAudienceSize_; }
      set {
        youtubeAudienceSize_ = value;
      }
    }


    /// <summary>Field number for the "census_audience_size" field.</summary>
    public const int CensusAudienceSizeFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_censusAudienceSize_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? censusAudienceSize_;
    /// <summary>
    /// Reference audience size matching the considered targeting for Census.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? CensusAudienceSize {
      get { return censusAudienceSize_; }
      set {
        censusAudienceSize_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnTargetAudienceMetrics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnTargetAudienceMetrics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (YoutubeAudienceSize != other.YoutubeAudienceSize) return false;
      if (CensusAudienceSize != other.CensusAudienceSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (youtubeAudienceSize_ != null) hash ^= YoutubeAudienceSize.GetHashCode();
      if (censusAudienceSize_ != null) hash ^= CensusAudienceSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (youtubeAudienceSize_ != null) {
        _single_youtubeAudienceSize_codec.WriteTagAndValue(output, YoutubeAudienceSize);
      }
      if (censusAudienceSize_ != null) {
        _single_censusAudienceSize_codec.WriteTagAndValue(output, CensusAudienceSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (youtubeAudienceSize_ != null) {
        _single_youtubeAudienceSize_codec.WriteTagAndValue(ref output, YoutubeAudienceSize);
      }
      if (censusAudienceSize_ != null) {
        _single_censusAudienceSize_codec.WriteTagAndValue(ref output, CensusAudienceSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (youtubeAudienceSize_ != null) {
        size += _single_youtubeAudienceSize_codec.CalculateSizeWithTag(YoutubeAudienceSize);
      }
      if (censusAudienceSize_ != null) {
        size += _single_censusAudienceSize_codec.CalculateSizeWithTag(CensusAudienceSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnTargetAudienceMetrics other) {
      if (other == null) {
        return;
      }
      if (other.youtubeAudienceSize_ != null) {
        if (youtubeAudienceSize_ == null || other.YoutubeAudienceSize != 0L) {
          YoutubeAudienceSize = other.YoutubeAudienceSize;
        }
      }
      if (other.censusAudienceSize_ != null) {
        if (censusAudienceSize_ == null || other.CensusAudienceSize != 0L) {
          CensusAudienceSize = other.CensusAudienceSize;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            long? value = _single_youtubeAudienceSize_codec.Read(input);
            if (youtubeAudienceSize_ == null || value != 0L) {
              YoutubeAudienceSize = value;
            }
            break;
          }
          case 18: {
            long? value = _single_censusAudienceSize_codec.Read(input);
            if (censusAudienceSize_ == null || value != 0L) {
              CensusAudienceSize = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            long? value = _single_youtubeAudienceSize_codec.Read(ref input);
            if (youtubeAudienceSize_ == null || value != 0L) {
              YoutubeAudienceSize = value;
            }
            break;
          }
          case 18: {
            long? value = _single_censusAudienceSize_codec.Read(ref input);
            if (censusAudienceSize_ == null || value != 0L) {
              CensusAudienceSize = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
