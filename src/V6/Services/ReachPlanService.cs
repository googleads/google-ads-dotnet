// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v6/services/reach_plan_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V6.Services {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v6/services/reach_plan_service.proto</summary>
  public static partial class ReachPlanServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v6/services/reach_plan_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReachPlanServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjlnb29nbGUvYWRzL2dvb2dsZWFkcy92Ni9zZXJ2aWNlcy9yZWFjaF9wbGFu",
            "X3NlcnZpY2UucHJvdG8SIGdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY2LnNlcnZp",
            "Y2VzGi1nb29nbGUvYWRzL2dvb2dsZWFkcy92Ni9jb21tb24vY3JpdGVyaWEu",
            "cHJvdG8aO2dvb2dsZS9hZHMvZ29vZ2xlYWRzL3Y2L2VudW1zL2ZyZXF1ZW5j",
            "eV9jYXBfdGltZV91bml0LnByb3RvGjhnb29nbGUvYWRzL2dvb2dsZWFkcy92",
            "Ni9lbnVtcy9yZWFjaF9wbGFuX2FkX2xlbmd0aC5wcm90bxo4Z29vZ2xlL2Fk",
            "cy9nb29nbGVhZHMvdjYvZW51bXMvcmVhY2hfcGxhbl9hZ2VfcmFuZ2UucHJv",
            "dG8aNmdvb2dsZS9hZHMvZ29vZ2xlYWRzL3Y2L2VudW1zL3JlYWNoX3BsYW5f",
            "bmV0d29yay5wcm90bxocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90bxoX",
            "Z29vZ2xlL2FwaS9jbGllbnQucHJvdG8aH2dvb2dsZS9hcGkvZmllbGRfYmVo",
            "YXZpb3IucHJvdG8iHwodTGlzdFBsYW5uYWJsZUxvY2F0aW9uc1JlcXVlc3Qi",
            "cgoeTGlzdFBsYW5uYWJsZUxvY2F0aW9uc1Jlc3BvbnNlElAKE3BsYW5uYWJs",
            "ZV9sb2NhdGlvbnMYASADKAsyMy5nb29nbGUuYWRzLmdvb2dsZWFkcy52Ni5z",
            "ZXJ2aWNlcy5QbGFubmFibGVMb2NhdGlvbiJ9ChFQbGFubmFibGVMb2NhdGlv",
            "bhIPCgJpZBgEIAEoCUgAiAEBEhEKBG5hbWUYBSABKAlIAYgBARIeChFwYXJl",
            "bnRfY291bnRyeV9pZBgGIAEoA0gCiAEBQgUKA19pZEIHCgVfbmFtZUIUChJf",
            "cGFyZW50X2NvdW50cnlfaWQiQgocTGlzdFBsYW5uYWJsZVByb2R1Y3RzUmVx",
            "dWVzdBIiChVwbGFubmFibGVfbG9jYXRpb25faWQYAiABKAlCA+BBAiJsCh1M",
            "aXN0UGxhbm5hYmxlUHJvZHVjdHNSZXNwb25zZRJLChBwcm9kdWN0X21ldGFk",
            "YXRhGAEgAygLMjEuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjYuc2VydmljZXMu",
            "UHJvZHVjdE1ldGFkYXRhIsQBCg9Qcm9kdWN0TWV0YWRhdGESIwoWcGxhbm5h",
            "YmxlX3Byb2R1Y3RfY29kZRgEIAEoCUgAiAEBEh4KFnBsYW5uYWJsZV9wcm9k",
            "dWN0X25hbWUYAyABKAkSUQoTcGxhbm5hYmxlX3RhcmdldGluZxgCIAEoCzI0",
            "Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY2LnNlcnZpY2VzLlBsYW5uYWJsZVRh",
            "cmdldGluZ0IZChdfcGxhbm5hYmxlX3Byb2R1Y3RfY29kZSLCAgoSUGxhbm5h",
            "YmxlVGFyZ2V0aW5nEloKCmFnZV9yYW5nZXMYASADKA4yRi5nb29nbGUuYWRz",
            "Lmdvb2dsZWFkcy52Ni5lbnVtcy5SZWFjaFBsYW5BZ2VSYW5nZUVudW0uUmVh",
            "Y2hQbGFuQWdlUmFuZ2USOwoHZ2VuZGVycxgCIAMoCzIqLmdvb2dsZS5hZHMu",
            "Z29vZ2xlYWRzLnY2LmNvbW1vbi5HZW5kZXJJbmZvEjsKB2RldmljZXMYAyAD",
            "KAsyKi5nb29nbGUuYWRzLmdvb2dsZWFkcy52Ni5jb21tb24uRGV2aWNlSW5m",
            "bxJWCghuZXR3b3JrcxgEIAMoDjJELmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY2",
            "LmVudW1zLlJlYWNoUGxhbk5ldHdvcmtFbnVtLlJlYWNoUGxhbk5ldHdvcmsi",
            "2gEKHkdlbmVyYXRlUHJvZHVjdE1peElkZWFzUmVxdWVzdBIYCgtjdXN0b21l",
            "cl9pZBgBIAEoCUID4EECEiIKFXBsYW5uYWJsZV9sb2NhdGlvbl9pZBgGIAEo",
            "CUID4EECEhoKDWN1cnJlbmN5X2NvZGUYByABKAlCA+BBAhIaCg1idWRnZXRf",
            "bWljcm9zGAggASgDQgPgQQISQgoLcHJlZmVyZW5jZXMYBSABKAsyLS5nb29n",
            "bGUuYWRzLmdvb2dsZWFkcy52Ni5zZXJ2aWNlcy5QcmVmZXJlbmNlcyK6AgoL",
            "UHJlZmVyZW5jZXMSGQoMaXNfc2tpcHBhYmxlGAYgASgISACIAQESHgoRc3Rh",
            "cnRzX3dpdGhfc291bmQYByABKAhIAYgBARJZCglhZF9sZW5ndGgYAyABKA4y",
            "Ri5nb29nbGUuYWRzLmdvb2dsZWFkcy52Ni5lbnVtcy5SZWFjaFBsYW5BZExl",
            "bmd0aEVudW0uUmVhY2hQbGFuQWRMZW5ndGgSHQoQdG9wX2NvbnRlbnRfb25s",
            "eRgIIAEoCEgCiAEBEiEKFGhhc19ndWFyYW50ZWVkX3ByaWNlGAkgASgISAOI",
            "AQFCDwoNX2lzX3NraXBwYWJsZUIUChJfc3RhcnRzX3dpdGhfc291bmRCEwoR",
            "X3RvcF9jb250ZW50X29ubHlCFwoVX2hhc19ndWFyYW50ZWVkX3ByaWNlInIK",
            "H0dlbmVyYXRlUHJvZHVjdE1peElkZWFzUmVzcG9uc2USTwoScHJvZHVjdF9h",
            "bGxvY2F0aW9uGAEgAygLMjMuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjYuc2Vy",
            "dmljZXMuUHJvZHVjdEFsbG9jYXRpb24igQEKEVByb2R1Y3RBbGxvY2F0aW9u",
            "EiMKFnBsYW5uYWJsZV9wcm9kdWN0X2NvZGUYAyABKAlIAIgBARIaCg1idWRn",
            "ZXRfbWljcm9zGAQgASgDSAGIAQFCGQoXX3BsYW5uYWJsZV9wcm9kdWN0X2Nv",
            "ZGVCEAoOX2J1ZGdldF9taWNyb3MinwQKHEdlbmVyYXRlUmVhY2hGb3JlY2Fz",
            "dFJlcXVlc3QSGAoLY3VzdG9tZXJfaWQYASABKAlCA+BBAhIaCg1jdXJyZW5j",
            "eV9jb2RlGAkgASgJSACIAQESUgoRY2FtcGFpZ25fZHVyYXRpb24YAyABKAsy",
            "Mi5nb29nbGUuYWRzLmdvb2dsZWFkcy52Ni5zZXJ2aWNlcy5DYW1wYWlnbkR1",
            "cmF0aW9uQgPgQQISIQoUY29va2llX2ZyZXF1ZW5jeV9jYXAYCiABKAVIAYgB",
            "ARJUChxjb29raWVfZnJlcXVlbmN5X2NhcF9zZXR0aW5nGAggASgLMi4uZ29v",
            "Z2xlLmFkcy5nb29nbGVhZHMudjYuc2VydmljZXMuRnJlcXVlbmN5Q2FwEiQK",
            "F21pbl9lZmZlY3RpdmVfZnJlcXVlbmN5GAsgASgFSAKIAQESPgoJdGFyZ2V0",
            "aW5nGAYgASgLMisuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjYuc2VydmljZXMu",
            "VGFyZ2V0aW5nEk8KEHBsYW5uZWRfcHJvZHVjdHMYByADKAsyMC5nb29nbGUu",
            "YWRzLmdvb2dsZWFkcy52Ni5zZXJ2aWNlcy5QbGFubmVkUHJvZHVjdEID4EEC",
            "QhAKDl9jdXJyZW5jeV9jb2RlQhcKFV9jb29raWVfZnJlcXVlbmN5X2NhcEIa",
            "ChhfbWluX2VmZmVjdGl2ZV9mcmVxdWVuY3kijgEKDEZyZXF1ZW5jeUNhcBIY",
            "CgtpbXByZXNzaW9ucxgDIAEoBUID4EECEmQKCXRpbWVfdW5pdBgCIAEoDjJM",
            "Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY2LmVudW1zLkZyZXF1ZW5jeUNhcFRp",
            "bWVVbml0RW51bS5GcmVxdWVuY3lDYXBUaW1lVW5pdEID4EECIvUCCglUYXJn",
            "ZXRpbmcSIgoVcGxhbm5hYmxlX2xvY2F0aW9uX2lkGAYgASgJSACIAQESWQoJ",
            "YWdlX3JhbmdlGAIgASgOMkYuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjYuZW51",
            "bXMuUmVhY2hQbGFuQWdlUmFuZ2VFbnVtLlJlYWNoUGxhbkFnZVJhbmdlEjsK",
            "B2dlbmRlcnMYAyADKAsyKi5nb29nbGUuYWRzLmdvb2dsZWFkcy52Ni5jb21t",
            "b24uR2VuZGVySW5mbxI7CgdkZXZpY2VzGAQgAygLMiouZ29vZ2xlLmFkcy5n",
            "b29nbGVhZHMudjYuY29tbW9uLkRldmljZUluZm8SVQoHbmV0d29yaxgFIAEo",
            "DjJELmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY2LmVudW1zLlJlYWNoUGxhbk5l",
            "dHdvcmtFbnVtLlJlYWNoUGxhbk5ldHdvcmtCGAoWX3BsYW5uYWJsZV9sb2Nh",
            "dGlvbl9pZCJGChBDYW1wYWlnbkR1cmF0aW9uEh0KEGR1cmF0aW9uX2luX2Rh",
            "eXMYAiABKAVIAIgBAUITChFfZHVyYXRpb25faW5fZGF5cyJ+Cg5QbGFubmVk",
            "UHJvZHVjdBIjChZwbGFubmFibGVfcHJvZHVjdF9jb2RlGAMgASgJSACIAQES",
            "GgoNYnVkZ2V0X21pY3JvcxgEIAEoA0gBiAEBQhkKF19wbGFubmFibGVfcHJv",
            "ZHVjdF9jb2RlQhAKDl9idWRnZXRfbWljcm9zIsEBCh1HZW5lcmF0ZVJlYWNo",
            "Rm9yZWNhc3RSZXNwb25zZRJdChpvbl90YXJnZXRfYXVkaWVuY2VfbWV0cmlj",
            "cxgBIAEoCzI5Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY2LnNlcnZpY2VzLk9u",
            "VGFyZ2V0QXVkaWVuY2VNZXRyaWNzEkEKC3JlYWNoX2N1cnZlGAIgASgLMiwu",
            "Z29vZ2xlLmFkcy5nb29nbGVhZHMudjYuc2VydmljZXMuUmVhY2hDdXJ2ZSJW",
            "CgpSZWFjaEN1cnZlEkgKD3JlYWNoX2ZvcmVjYXN0cxgBIAMoCzIvLmdvb2ds",
            "ZS5hZHMuZ29vZ2xlYWRzLnY2LnNlcnZpY2VzLlJlYWNoRm9yZWNhc3QiygEK",
            "DVJlYWNoRm9yZWNhc3QSEwoLY29zdF9taWNyb3MYBSABKAMSPAoIZm9yZWNh",
            "c3QYAiABKAsyKi5nb29nbGUuYWRzLmdvb2dsZWFkcy52Ni5zZXJ2aWNlcy5G",
            "b3JlY2FzdBJmCh9wbGFubmVkX3Byb2R1Y3RfcmVhY2hfZm9yZWNhc3RzGAQg",
            "AygLMj0uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjYuc2VydmljZXMuUGxhbm5l",
            "ZFByb2R1Y3RSZWFjaEZvcmVjYXN0ItoBCghGb3JlY2FzdBIcCg9vbl90YXJn",
            "ZXRfcmVhY2gYBSABKANIAIgBARIYCgt0b3RhbF9yZWFjaBgGIAEoA0gBiAEB",
            "EiIKFW9uX3RhcmdldF9pbXByZXNzaW9ucxgHIAEoA0gCiAEBEh4KEXRvdGFs",
            "X2ltcHJlc3Npb25zGAggASgDSAOIAQFCEgoQX29uX3RhcmdldF9yZWFjaEIO",
            "CgxfdG90YWxfcmVhY2hCGAoWX29uX3RhcmdldF9pbXByZXNzaW9uc0IUChJf",
            "dG90YWxfaW1wcmVzc2lvbnMirgEKG1BsYW5uZWRQcm9kdWN0UmVhY2hGb3Jl",
            "Y2FzdBIeChZwbGFubmFibGVfcHJvZHVjdF9jb2RlGAEgASgJEhMKC2Nvc3Rf",
            "bWljcm9zGAIgASgDEloKGHBsYW5uZWRfcHJvZHVjdF9mb3JlY2FzdBgDIAEo",
            "CzI4Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY2LnNlcnZpY2VzLlBsYW5uZWRQ",
            "cm9kdWN0Rm9yZWNhc3QigAEKFlBsYW5uZWRQcm9kdWN0Rm9yZWNhc3QSFwoP",
            "b25fdGFyZ2V0X3JlYWNoGAEgASgDEhMKC3RvdGFsX3JlYWNoGAIgASgDEh0K",
            "FW9uX3RhcmdldF9pbXByZXNzaW9ucxgDIAEoAxIZChF0b3RhbF9pbXByZXNz",
            "aW9ucxgEIAEoAyKTAQoXT25UYXJnZXRBdWRpZW5jZU1ldHJpY3MSIgoVeW91",
            "dHViZV9hdWRpZW5jZV9zaXplGAMgASgDSACIAQESIQoUY2Vuc3VzX2F1ZGll",
            "bmNlX3NpemUYBCABKANIAYgBAUIYChZfeW91dHViZV9hdWRpZW5jZV9zaXpl",
            "QhcKFV9jZW5zdXNfYXVkaWVuY2Vfc2l6ZTKnCAoQUmVhY2hQbGFuU2Vydmlj",
            "ZRLCAQoWTGlzdFBsYW5uYWJsZUxvY2F0aW9ucxI/Lmdvb2dsZS5hZHMuZ29v",
            "Z2xlYWRzLnY2LnNlcnZpY2VzLkxpc3RQbGFubmFibGVMb2NhdGlvbnNSZXF1",
            "ZXN0GkAuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjYuc2VydmljZXMuTGlzdFBs",
            "YW5uYWJsZUxvY2F0aW9uc1Jlc3BvbnNlIiWC0+STAh8iGi92NjpsaXN0UGxh",
            "bm5hYmxlTG9jYXRpb25zOgEqEtYBChVMaXN0UGxhbm5hYmxlUHJvZHVjdHMS",
            "Pi5nb29nbGUuYWRzLmdvb2dsZWFkcy52Ni5zZXJ2aWNlcy5MaXN0UGxhbm5h",
            "YmxlUHJvZHVjdHNSZXF1ZXN0Gj8uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjYu",
            "c2VydmljZXMuTGlzdFBsYW5uYWJsZVByb2R1Y3RzUmVzcG9uc2UiPILT5JMC",
            "HiIZL3Y2Omxpc3RQbGFubmFibGVQcm9kdWN0czoBKtpBFXBsYW5uYWJsZV9s",
            "b2NhdGlvbl9pZBKhAgoXR2VuZXJhdGVQcm9kdWN0TWl4SWRlYXMSQC5nb29n",
            "bGUuYWRzLmdvb2dsZWFkcy52Ni5zZXJ2aWNlcy5HZW5lcmF0ZVByb2R1Y3RN",
            "aXhJZGVhc1JlcXVlc3QaQS5nb29nbGUuYWRzLmdvb2dsZWFkcy52Ni5zZXJ2",
            "aWNlcy5HZW5lcmF0ZVByb2R1Y3RNaXhJZGVhc1Jlc3BvbnNlIoABgtPkkwI6",
            "IjUvdjYvY3VzdG9tZXJzL3tjdXN0b21lcl9pZD0qfTpnZW5lcmF0ZVByb2R1",
            "Y3RNaXhJZGVhczoBKtpBPWN1c3RvbWVyX2lkLHBsYW5uYWJsZV9sb2NhdGlv",
            "bl9pZCxjdXJyZW5jeV9jb2RlLGJ1ZGdldF9taWNyb3MSiQIKFUdlbmVyYXRl",
            "UmVhY2hGb3JlY2FzdBI+Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY2LnNlcnZp",
            "Y2VzLkdlbmVyYXRlUmVhY2hGb3JlY2FzdFJlcXVlc3QaPy5nb29nbGUuYWRz",
            "Lmdvb2dsZWFkcy52Ni5zZXJ2aWNlcy5HZW5lcmF0ZVJlYWNoRm9yZWNhc3RS",
            "ZXNwb25zZSJvgtPkkwI4IjMvdjYvY3VzdG9tZXJzL3tjdXN0b21lcl9pZD0q",
            "fTpnZW5lcmF0ZVJlYWNoRm9yZWNhc3Q6ASraQS5jdXN0b21lcl9pZCxjYW1w",
            "YWlnbl9kdXJhdGlvbixwbGFubmVkX3Byb2R1Y3RzGkXKQRhnb29nbGVhZHMu",
            "Z29vZ2xlYXBpcy5jb23SQSdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9h",
            "dXRoL2Fkd29yZHNC/AEKJGNvbS5nb29nbGUuYWRzLmdvb2dsZWFkcy52Ni5z",
            "ZXJ2aWNlc0IVUmVhY2hQbGFuU2VydmljZVByb3RvUAFaSGdvb2dsZS5nb2xh",
            "bmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvYWRzL2dvb2dsZWFkcy92Ni9z",
            "ZXJ2aWNlcztzZXJ2aWNlc6ICA0dBQaoCIEdvb2dsZS5BZHMuR29vZ2xlQWRz",
            "LlY2LlNlcnZpY2VzygIgR29vZ2xlXEFkc1xHb29nbGVBZHNcVjZcU2Vydmlj",
            "ZXPqAiRHb29nbGU6OkFkczo6R29vZ2xlQWRzOjpWNjo6U2VydmljZXNiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V6.Common.CriteriaReflection.Descriptor, global::Google.Ads.GoogleAds.V6.Enums.FrequencyCapTimeUnitReflection.Descriptor, global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAdLengthReflection.Descriptor, global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAgeRangeReflection.Descriptor, global::Google.Ads.GoogleAds.V6.Enums.ReachPlanNetworkReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.ListPlannableLocationsRequest), global::Google.Ads.GoogleAds.V6.Services.ListPlannableLocationsRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.ListPlannableLocationsResponse), global::Google.Ads.GoogleAds.V6.Services.ListPlannableLocationsResponse.Parser, new[]{ "PlannableLocations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.PlannableLocation), global::Google.Ads.GoogleAds.V6.Services.PlannableLocation.Parser, new[]{ "Id", "Name", "ParentCountryId" }, new[]{ "Id", "Name", "ParentCountryId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.ListPlannableProductsRequest), global::Google.Ads.GoogleAds.V6.Services.ListPlannableProductsRequest.Parser, new[]{ "PlannableLocationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.ListPlannableProductsResponse), global::Google.Ads.GoogleAds.V6.Services.ListPlannableProductsResponse.Parser, new[]{ "ProductMetadata" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.ProductMetadata), global::Google.Ads.GoogleAds.V6.Services.ProductMetadata.Parser, new[]{ "PlannableProductCode", "PlannableProductName", "PlannableTargeting" }, new[]{ "PlannableProductCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.PlannableTargeting), global::Google.Ads.GoogleAds.V6.Services.PlannableTargeting.Parser, new[]{ "AgeRanges", "Genders", "Devices", "Networks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.GenerateProductMixIdeasRequest), global::Google.Ads.GoogleAds.V6.Services.GenerateProductMixIdeasRequest.Parser, new[]{ "CustomerId", "PlannableLocationId", "CurrencyCode", "BudgetMicros", "Preferences" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.Preferences), global::Google.Ads.GoogleAds.V6.Services.Preferences.Parser, new[]{ "IsSkippable", "StartsWithSound", "AdLength", "TopContentOnly", "HasGuaranteedPrice" }, new[]{ "IsSkippable", "StartsWithSound", "TopContentOnly", "HasGuaranteedPrice" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.GenerateProductMixIdeasResponse), global::Google.Ads.GoogleAds.V6.Services.GenerateProductMixIdeasResponse.Parser, new[]{ "ProductAllocation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.ProductAllocation), global::Google.Ads.GoogleAds.V6.Services.ProductAllocation.Parser, new[]{ "PlannableProductCode", "BudgetMicros" }, new[]{ "PlannableProductCode", "BudgetMicros" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.GenerateReachForecastRequest), global::Google.Ads.GoogleAds.V6.Services.GenerateReachForecastRequest.Parser, new[]{ "CustomerId", "CurrencyCode", "CampaignDuration", "CookieFrequencyCap", "CookieFrequencyCapSetting", "MinEffectiveFrequency", "Targeting", "PlannedProducts" }, new[]{ "CurrencyCode", "CookieFrequencyCap", "MinEffectiveFrequency" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.FrequencyCap), global::Google.Ads.GoogleAds.V6.Services.FrequencyCap.Parser, new[]{ "Impressions", "TimeUnit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.Targeting), global::Google.Ads.GoogleAds.V6.Services.Targeting.Parser, new[]{ "PlannableLocationId", "AgeRange", "Genders", "Devices", "Network" }, new[]{ "PlannableLocationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.CampaignDuration), global::Google.Ads.GoogleAds.V6.Services.CampaignDuration.Parser, new[]{ "DurationInDays" }, new[]{ "DurationInDays" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.PlannedProduct), global::Google.Ads.GoogleAds.V6.Services.PlannedProduct.Parser, new[]{ "PlannableProductCode", "BudgetMicros" }, new[]{ "PlannableProductCode", "BudgetMicros" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.GenerateReachForecastResponse), global::Google.Ads.GoogleAds.V6.Services.GenerateReachForecastResponse.Parser, new[]{ "OnTargetAudienceMetrics", "ReachCurve" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.ReachCurve), global::Google.Ads.GoogleAds.V6.Services.ReachCurve.Parser, new[]{ "ReachForecasts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.ReachForecast), global::Google.Ads.GoogleAds.V6.Services.ReachForecast.Parser, new[]{ "CostMicros", "Forecast", "PlannedProductReachForecasts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.Forecast), global::Google.Ads.GoogleAds.V6.Services.Forecast.Parser, new[]{ "OnTargetReach", "TotalReach", "OnTargetImpressions", "TotalImpressions" }, new[]{ "OnTargetReach", "TotalReach", "OnTargetImpressions", "TotalImpressions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.PlannedProductReachForecast), global::Google.Ads.GoogleAds.V6.Services.PlannedProductReachForecast.Parser, new[]{ "PlannableProductCode", "CostMicros", "PlannedProductForecast" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.PlannedProductForecast), global::Google.Ads.GoogleAds.V6.Services.PlannedProductForecast.Parser, new[]{ "OnTargetReach", "TotalReach", "OnTargetImpressions", "TotalImpressions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Services.OnTargetAudienceMetrics), global::Google.Ads.GoogleAds.V6.Services.OnTargetAudienceMetrics.Parser, new[]{ "YoutubeAudienceSize", "CensusAudienceSize" }, new[]{ "YoutubeAudienceSize", "CensusAudienceSize" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Request message for [ReachPlanService.ListPlannableLocations][google.ads.googleads.v6.services.ReachPlanService.ListPlannableLocations].
  /// </summary>
  public sealed partial class ListPlannableLocationsRequest : pb::IMessage<ListPlannableLocationsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListPlannableLocationsRequest> _parser = new pb::MessageParser<ListPlannableLocationsRequest>(() => new ListPlannableLocationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListPlannableLocationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableLocationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableLocationsRequest(ListPlannableLocationsRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableLocationsRequest Clone() {
      return new ListPlannableLocationsRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListPlannableLocationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListPlannableLocationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListPlannableLocationsRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The list of plannable locations.
  /// </summary>
  public sealed partial class ListPlannableLocationsResponse : pb::IMessage<ListPlannableLocationsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListPlannableLocationsResponse> _parser = new pb::MessageParser<ListPlannableLocationsResponse>(() => new ListPlannableLocationsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListPlannableLocationsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableLocationsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableLocationsResponse(ListPlannableLocationsResponse other) : this() {
      plannableLocations_ = other.plannableLocations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableLocationsResponse Clone() {
      return new ListPlannableLocationsResponse(this);
    }

    /// <summary>Field number for the "plannable_locations" field.</summary>
    public const int PlannableLocationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V6.Services.PlannableLocation> _repeated_plannableLocations_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V6.Services.PlannableLocation.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Services.PlannableLocation> plannableLocations_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Services.PlannableLocation>();
    /// <summary>
    /// The list of locations available for planning (Countries, DMAs,
    /// sub-countries).
    /// For locations like Countries, DMAs see
    /// https://developers.google.com/adwords/api/docs/appendix/geotargeting for
    /// more information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Services.PlannableLocation> PlannableLocations {
      get { return plannableLocations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListPlannableLocationsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListPlannableLocationsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!plannableLocations_.Equals(other.plannableLocations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= plannableLocations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      plannableLocations_.WriteTo(output, _repeated_plannableLocations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      plannableLocations_.WriteTo(ref output, _repeated_plannableLocations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += plannableLocations_.CalculateSize(_repeated_plannableLocations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListPlannableLocationsResponse other) {
      if (other == null) {
        return;
      }
      plannableLocations_.Add(other.plannableLocations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            plannableLocations_.AddEntriesFrom(input, _repeated_plannableLocations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            plannableLocations_.AddEntriesFrom(ref input, _repeated_plannableLocations_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A plannable location: a country, a DMA, a metro region, a tv region,
  /// a province.
  /// </summary>
  public sealed partial class PlannableLocation : pb::IMessage<PlannableLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlannableLocation> _parser = new pb::MessageParser<PlannableLocation>(() => new PlannableLocation());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlannableLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannableLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannableLocation(PlannableLocation other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      name_ = other.name_;
      parentCountryId_ = other.parentCountryId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannableLocation Clone() {
      return new PlannableLocation(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 4;
    private string id_;
    /// <summary>
    /// The location identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? ""; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_;
    /// <summary>
    /// The unique location name in english.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "parent_country_id" field.</summary>
    public const int ParentCountryIdFieldNumber = 6;
    private long parentCountryId_;
    /// <summary>
    /// The parent country code, not present if location is a country.
    /// If present will always be a criterion id: additional information, such as
    /// country name are returned both via ListPlannableLocations or directly by
    /// accessing GeoTargetConstantService with the criterion id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ParentCountryId {
      get { if ((_hasBits0 & 1) != 0) { return parentCountryId_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        parentCountryId_ = value;
      }
    }
    /// <summary>Gets whether the "parent_country_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasParentCountryId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "parent_country_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearParentCountryId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlannableLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlannableLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (ParentCountryId != other.ParentCountryId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasParentCountryId) hash ^= ParentCountryId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(34);
        output.WriteString(Id);
      }
      if (HasName) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (HasParentCountryId) {
        output.WriteRawTag(48);
        output.WriteInt64(ParentCountryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(34);
        output.WriteString(Id);
      }
      if (HasName) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (HasParentCountryId) {
        output.WriteRawTag(48);
        output.WriteInt64(ParentCountryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasParentCountryId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ParentCountryId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlannableLocation other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasParentCountryId) {
        ParentCountryId = other.ParentCountryId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 34: {
            Id = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 48: {
            ParentCountryId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 34: {
            Id = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 48: {
            ParentCountryId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to list available products in a given location.
  /// </summary>
  public sealed partial class ListPlannableProductsRequest : pb::IMessage<ListPlannableProductsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListPlannableProductsRequest> _parser = new pb::MessageParser<ListPlannableProductsRequest>(() => new ListPlannableProductsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListPlannableProductsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableProductsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableProductsRequest(ListPlannableProductsRequest other) : this() {
      plannableLocationId_ = other.plannableLocationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableProductsRequest Clone() {
      return new ListPlannableProductsRequest(this);
    }

    /// <summary>Field number for the "plannable_location_id" field.</summary>
    public const int PlannableLocationIdFieldNumber = 2;
    private string plannableLocationId_ = "";
    /// <summary>
    /// Required. The ID of the selected location for planning. To list the available
    /// plannable location ids use ListPlannableLocations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlannableLocationId {
      get { return plannableLocationId_; }
      set {
        plannableLocationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListPlannableProductsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListPlannableProductsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlannableLocationId != other.PlannableLocationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlannableLocationId.Length != 0) hash ^= PlannableLocationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlannableLocationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlannableLocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlannableLocationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlannableLocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlannableLocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlannableLocationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListPlannableProductsRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlannableLocationId.Length != 0) {
        PlannableLocationId = other.PlannableLocationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            PlannableLocationId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            PlannableLocationId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A response with all available products.
  /// </summary>
  public sealed partial class ListPlannableProductsResponse : pb::IMessage<ListPlannableProductsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListPlannableProductsResponse> _parser = new pb::MessageParser<ListPlannableProductsResponse>(() => new ListPlannableProductsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListPlannableProductsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableProductsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableProductsResponse(ListPlannableProductsResponse other) : this() {
      productMetadata_ = other.productMetadata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPlannableProductsResponse Clone() {
      return new ListPlannableProductsResponse(this);
    }

    /// <summary>Field number for the "product_metadata" field.</summary>
    public const int ProductMetadataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V6.Services.ProductMetadata> _repeated_productMetadata_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V6.Services.ProductMetadata.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Services.ProductMetadata> productMetadata_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Services.ProductMetadata>();
    /// <summary>
    /// The list of products available for planning and related targeting metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Services.ProductMetadata> ProductMetadata {
      get { return productMetadata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListPlannableProductsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListPlannableProductsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!productMetadata_.Equals(other.productMetadata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= productMetadata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      productMetadata_.WriteTo(output, _repeated_productMetadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      productMetadata_.WriteTo(ref output, _repeated_productMetadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += productMetadata_.CalculateSize(_repeated_productMetadata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListPlannableProductsResponse other) {
      if (other == null) {
        return;
      }
      productMetadata_.Add(other.productMetadata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            productMetadata_.AddEntriesFrom(input, _repeated_productMetadata_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            productMetadata_.AddEntriesFrom(ref input, _repeated_productMetadata_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The metadata associated with an available plannable product.
  /// </summary>
  public sealed partial class ProductMetadata : pb::IMessage<ProductMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProductMetadata> _parser = new pb::MessageParser<ProductMetadata>(() => new ProductMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProductMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductMetadata(ProductMetadata other) : this() {
      plannableProductCode_ = other.plannableProductCode_;
      plannableProductName_ = other.plannableProductName_;
      plannableTargeting_ = other.plannableTargeting_ != null ? other.plannableTargeting_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductMetadata Clone() {
      return new ProductMetadata(this);
    }

    /// <summary>Field number for the "plannable_product_code" field.</summary>
    public const int PlannableProductCodeFieldNumber = 4;
    private string plannableProductCode_;
    /// <summary>
    /// The code associated with the ad product. E.g. BUMPER, TRUEVIEW_IN_STREAM
    /// To list the available plannable product codes use ListPlannableProducts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlannableProductCode {
      get { return plannableProductCode_ ?? ""; }
      set {
        plannableProductCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "plannable_product_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPlannableProductCode {
      get { return plannableProductCode_ != null; }
    }
    /// <summary>Clears the value of the "plannable_product_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPlannableProductCode() {
      plannableProductCode_ = null;
    }

    /// <summary>Field number for the "plannable_product_name" field.</summary>
    public const int PlannableProductNameFieldNumber = 3;
    private string plannableProductName_ = "";
    /// <summary>
    /// The name associated with the ad product.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlannableProductName {
      get { return plannableProductName_; }
      set {
        plannableProductName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plannable_targeting" field.</summary>
    public const int PlannableTargetingFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V6.Services.PlannableTargeting plannableTargeting_;
    /// <summary>
    /// The allowed plannable targeting for this product.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Services.PlannableTargeting PlannableTargeting {
      get { return plannableTargeting_; }
      set {
        plannableTargeting_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProductMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProductMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlannableProductCode != other.PlannableProductCode) return false;
      if (PlannableProductName != other.PlannableProductName) return false;
      if (!object.Equals(PlannableTargeting, other.PlannableTargeting)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlannableProductCode) hash ^= PlannableProductCode.GetHashCode();
      if (PlannableProductName.Length != 0) hash ^= PlannableProductName.GetHashCode();
      if (plannableTargeting_ != null) hash ^= PlannableTargeting.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (plannableTargeting_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlannableTargeting);
      }
      if (PlannableProductName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlannableProductName);
      }
      if (HasPlannableProductCode) {
        output.WriteRawTag(34);
        output.WriteString(PlannableProductCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (plannableTargeting_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlannableTargeting);
      }
      if (PlannableProductName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlannableProductName);
      }
      if (HasPlannableProductCode) {
        output.WriteRawTag(34);
        output.WriteString(PlannableProductCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPlannableProductCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlannableProductCode);
      }
      if (PlannableProductName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlannableProductName);
      }
      if (plannableTargeting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlannableTargeting);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProductMetadata other) {
      if (other == null) {
        return;
      }
      if (other.HasPlannableProductCode) {
        PlannableProductCode = other.PlannableProductCode;
      }
      if (other.PlannableProductName.Length != 0) {
        PlannableProductName = other.PlannableProductName;
      }
      if (other.plannableTargeting_ != null) {
        if (plannableTargeting_ == null) {
          PlannableTargeting = new global::Google.Ads.GoogleAds.V6.Services.PlannableTargeting();
        }
        PlannableTargeting.MergeFrom(other.PlannableTargeting);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (plannableTargeting_ == null) {
              PlannableTargeting = new global::Google.Ads.GoogleAds.V6.Services.PlannableTargeting();
            }
            input.ReadMessage(PlannableTargeting);
            break;
          }
          case 26: {
            PlannableProductName = input.ReadString();
            break;
          }
          case 34: {
            PlannableProductCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (plannableTargeting_ == null) {
              PlannableTargeting = new global::Google.Ads.GoogleAds.V6.Services.PlannableTargeting();
            }
            input.ReadMessage(PlannableTargeting);
            break;
          }
          case 26: {
            PlannableProductName = input.ReadString();
            break;
          }
          case 34: {
            PlannableProductCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The targeting for which traffic metrics will be reported.
  /// </summary>
  public sealed partial class PlannableTargeting : pb::IMessage<PlannableTargeting>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlannableTargeting> _parser = new pb::MessageParser<PlannableTargeting>(() => new PlannableTargeting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlannableTargeting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannableTargeting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannableTargeting(PlannableTargeting other) : this() {
      ageRanges_ = other.ageRanges_.Clone();
      genders_ = other.genders_.Clone();
      devices_ = other.devices_.Clone();
      networks_ = other.networks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannableTargeting Clone() {
      return new PlannableTargeting(this);
    }

    /// <summary>Field number for the "age_ranges" field.</summary>
    public const int AgeRangesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange> _repeated_ageRanges_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange) x);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange> ageRanges_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange>();
    /// <summary>
    /// Allowed plannable age ranges for the product for which metrics will be
    /// reported. Actual targeting is computed by mapping this age range onto
    /// standard Google common.AgeRangeInfo values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange> AgeRanges {
      get { return ageRanges_; }
    }

    /// <summary>Field number for the "genders" field.</summary>
    public const int GendersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V6.Common.GenderInfo> _repeated_genders_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Ads.GoogleAds.V6.Common.GenderInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Common.GenderInfo> genders_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Common.GenderInfo>();
    /// <summary>
    /// Targetable genders for the ad product.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Common.GenderInfo> Genders {
      get { return genders_; }
    }

    /// <summary>Field number for the "devices" field.</summary>
    public const int DevicesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V6.Common.DeviceInfo> _repeated_devices_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Ads.GoogleAds.V6.Common.DeviceInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Common.DeviceInfo> devices_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Common.DeviceInfo>();
    /// <summary>
    /// Targetable devices for the ad product.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Common.DeviceInfo> Devices {
      get { return devices_; }
    }

    /// <summary>Field number for the "networks" field.</summary>
    public const int NetworksFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V6.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork> _repeated_networks_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::Google.Ads.GoogleAds.V6.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork) x);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork> networks_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork>();
    /// <summary>
    /// Targetable networks for the ad product.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork> Networks {
      get { return networks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlannableTargeting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlannableTargeting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ageRanges_.Equals(other.ageRanges_)) return false;
      if(!genders_.Equals(other.genders_)) return false;
      if(!devices_.Equals(other.devices_)) return false;
      if(!networks_.Equals(other.networks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ageRanges_.GetHashCode();
      hash ^= genders_.GetHashCode();
      hash ^= devices_.GetHashCode();
      hash ^= networks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      ageRanges_.WriteTo(output, _repeated_ageRanges_codec);
      genders_.WriteTo(output, _repeated_genders_codec);
      devices_.WriteTo(output, _repeated_devices_codec);
      networks_.WriteTo(output, _repeated_networks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      ageRanges_.WriteTo(ref output, _repeated_ageRanges_codec);
      genders_.WriteTo(ref output, _repeated_genders_codec);
      devices_.WriteTo(ref output, _repeated_devices_codec);
      networks_.WriteTo(ref output, _repeated_networks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ageRanges_.CalculateSize(_repeated_ageRanges_codec);
      size += genders_.CalculateSize(_repeated_genders_codec);
      size += devices_.CalculateSize(_repeated_devices_codec);
      size += networks_.CalculateSize(_repeated_networks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlannableTargeting other) {
      if (other == null) {
        return;
      }
      ageRanges_.Add(other.ageRanges_);
      genders_.Add(other.genders_);
      devices_.Add(other.devices_);
      networks_.Add(other.networks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            ageRanges_.AddEntriesFrom(input, _repeated_ageRanges_codec);
            break;
          }
          case 18: {
            genders_.AddEntriesFrom(input, _repeated_genders_codec);
            break;
          }
          case 26: {
            devices_.AddEntriesFrom(input, _repeated_devices_codec);
            break;
          }
          case 34:
          case 32: {
            networks_.AddEntriesFrom(input, _repeated_networks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            ageRanges_.AddEntriesFrom(ref input, _repeated_ageRanges_codec);
            break;
          }
          case 18: {
            genders_.AddEntriesFrom(ref input, _repeated_genders_codec);
            break;
          }
          case 26: {
            devices_.AddEntriesFrom(ref input, _repeated_devices_codec);
            break;
          }
          case 34:
          case 32: {
            networks_.AddEntriesFrom(ref input, _repeated_networks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for [ReachPlanService.GenerateProductMixIdeas][google.ads.googleads.v6.services.ReachPlanService.GenerateProductMixIdeas].
  /// </summary>
  public sealed partial class GenerateProductMixIdeasRequest : pb::IMessage<GenerateProductMixIdeasRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GenerateProductMixIdeasRequest> _parser = new pb::MessageParser<GenerateProductMixIdeasRequest>(() => new GenerateProductMixIdeasRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateProductMixIdeasRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateProductMixIdeasRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateProductMixIdeasRequest(GenerateProductMixIdeasRequest other) : this() {
      customerId_ = other.customerId_;
      plannableLocationId_ = other.plannableLocationId_;
      currencyCode_ = other.currencyCode_;
      budgetMicros_ = other.budgetMicros_;
      preferences_ = other.preferences_ != null ? other.preferences_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateProductMixIdeasRequest Clone() {
      return new GenerateProductMixIdeasRequest(this);
    }

    /// <summary>Field number for the "customer_id" field.</summary>
    public const int CustomerIdFieldNumber = 1;
    private string customerId_ = "";
    /// <summary>
    /// Required. The ID of the customer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerId {
      get { return customerId_; }
      set {
        customerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plannable_location_id" field.</summary>
    public const int PlannableLocationIdFieldNumber = 6;
    private string plannableLocationId_ = "";
    /// <summary>
    /// Required. The ID of the location, this is one of the ids returned by
    /// ListPlannableLocations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlannableLocationId {
      get { return plannableLocationId_; }
      set {
        plannableLocationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "currency_code" field.</summary>
    public const int CurrencyCodeFieldNumber = 7;
    private string currencyCode_ = "";
    /// <summary>
    /// Required. Currency code.
    /// Three-character ISO 4217 currency code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "budget_micros" field.</summary>
    public const int BudgetMicrosFieldNumber = 8;
    private long budgetMicros_;
    /// <summary>
    /// Required. Total budget.
    /// Amount in micros. One million is equivalent to one unit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BudgetMicros {
      get { return budgetMicros_; }
      set {
        budgetMicros_ = value;
      }
    }

    /// <summary>Field number for the "preferences" field.</summary>
    public const int PreferencesFieldNumber = 5;
    private global::Google.Ads.GoogleAds.V6.Services.Preferences preferences_;
    /// <summary>
    /// The preferences of the suggested product mix.
    /// An unset preference is interpreted as all possible values are allowed,
    /// unless explicitly specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Services.Preferences Preferences {
      get { return preferences_; }
      set {
        preferences_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateProductMixIdeasRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateProductMixIdeasRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CustomerId != other.CustomerId) return false;
      if (PlannableLocationId != other.PlannableLocationId) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (BudgetMicros != other.BudgetMicros) return false;
      if (!object.Equals(Preferences, other.Preferences)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CustomerId.Length != 0) hash ^= CustomerId.GetHashCode();
      if (PlannableLocationId.Length != 0) hash ^= PlannableLocationId.GetHashCode();
      if (CurrencyCode.Length != 0) hash ^= CurrencyCode.GetHashCode();
      if (BudgetMicros != 0L) hash ^= BudgetMicros.GetHashCode();
      if (preferences_ != null) hash ^= Preferences.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CustomerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CustomerId);
      }
      if (preferences_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Preferences);
      }
      if (PlannableLocationId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PlannableLocationId);
      }
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CurrencyCode);
      }
      if (BudgetMicros != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(BudgetMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CustomerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CustomerId);
      }
      if (preferences_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Preferences);
      }
      if (PlannableLocationId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PlannableLocationId);
      }
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CurrencyCode);
      }
      if (BudgetMicros != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(BudgetMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CustomerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerId);
      }
      if (PlannableLocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlannableLocationId);
      }
      if (CurrencyCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (BudgetMicros != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BudgetMicros);
      }
      if (preferences_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Preferences);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateProductMixIdeasRequest other) {
      if (other == null) {
        return;
      }
      if (other.CustomerId.Length != 0) {
        CustomerId = other.CustomerId;
      }
      if (other.PlannableLocationId.Length != 0) {
        PlannableLocationId = other.PlannableLocationId;
      }
      if (other.CurrencyCode.Length != 0) {
        CurrencyCode = other.CurrencyCode;
      }
      if (other.BudgetMicros != 0L) {
        BudgetMicros = other.BudgetMicros;
      }
      if (other.preferences_ != null) {
        if (preferences_ == null) {
          Preferences = new global::Google.Ads.GoogleAds.V6.Services.Preferences();
        }
        Preferences.MergeFrom(other.Preferences);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CustomerId = input.ReadString();
            break;
          }
          case 42: {
            if (preferences_ == null) {
              Preferences = new global::Google.Ads.GoogleAds.V6.Services.Preferences();
            }
            input.ReadMessage(Preferences);
            break;
          }
          case 50: {
            PlannableLocationId = input.ReadString();
            break;
          }
          case 58: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 64: {
            BudgetMicros = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CustomerId = input.ReadString();
            break;
          }
          case 42: {
            if (preferences_ == null) {
              Preferences = new global::Google.Ads.GoogleAds.V6.Services.Preferences();
            }
            input.ReadMessage(Preferences);
            break;
          }
          case 50: {
            PlannableLocationId = input.ReadString();
            break;
          }
          case 58: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 64: {
            BudgetMicros = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Set of preferences about the planned mix.
  /// </summary>
  public sealed partial class Preferences : pb::IMessage<Preferences>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Preferences> _parser = new pb::MessageParser<Preferences>(() => new Preferences());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Preferences> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Preferences() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Preferences(Preferences other) : this() {
      _hasBits0 = other._hasBits0;
      isSkippable_ = other.isSkippable_;
      startsWithSound_ = other.startsWithSound_;
      adLength_ = other.adLength_;
      topContentOnly_ = other.topContentOnly_;
      hasGuaranteedPrice_ = other.hasGuaranteedPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Preferences Clone() {
      return new Preferences(this);
    }

    /// <summary>Field number for the "is_skippable" field.</summary>
    public const int IsSkippableFieldNumber = 6;
    private bool isSkippable_;
    /// <summary>
    /// True if ad skippable.
    /// If not set, default is any value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSkippable {
      get { if ((_hasBits0 & 1) != 0) { return isSkippable_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        isSkippable_ = value;
      }
    }
    /// <summary>Gets whether the "is_skippable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsSkippable {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_skippable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsSkippable() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "starts_with_sound" field.</summary>
    public const int StartsWithSoundFieldNumber = 7;
    private bool startsWithSound_;
    /// <summary>
    /// True if ad start with sound.
    /// If not set, default is any value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool StartsWithSound {
      get { if ((_hasBits0 & 2) != 0) { return startsWithSound_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        startsWithSound_ = value;
      }
    }
    /// <summary>Gets whether the "starts_with_sound" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStartsWithSound {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "starts_with_sound" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStartsWithSound() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ad_length" field.</summary>
    public const int AdLengthFieldNumber = 3;
    private global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength adLength_ = global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength.Unspecified;
    /// <summary>
    /// The length of the ad.
    /// If not set, default is any value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength AdLength {
      get { return adLength_; }
      set {
        adLength_ = value;
      }
    }

    /// <summary>Field number for the "top_content_only" field.</summary>
    public const int TopContentOnlyFieldNumber = 8;
    private bool topContentOnly_;
    /// <summary>
    /// True if ad will only show on the top content.
    /// If not set, default is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TopContentOnly {
      get { if ((_hasBits0 & 4) != 0) { return topContentOnly_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        topContentOnly_ = value;
      }
    }
    /// <summary>Gets whether the "top_content_only" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTopContentOnly {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "top_content_only" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTopContentOnly() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "has_guaranteed_price" field.</summary>
    public const int HasGuaranteedPriceFieldNumber = 9;
    private bool hasGuaranteedPrice_;
    /// <summary>
    /// True if the price guaranteed. The cost of serving the ad is agreed upfront
    /// and not subject to an auction.
    /// If not set, default is any value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGuaranteedPrice {
      get { if ((_hasBits0 & 8) != 0) { return hasGuaranteedPrice_; } else { return false; } }
      set {
        _hasBits0 |= 8;
        hasGuaranteedPrice_ = value;
      }
    }
    /// <summary>Gets whether the "has_guaranteed_price" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHasGuaranteedPrice {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "has_guaranteed_price" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHasGuaranteedPrice() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Preferences);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Preferences other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSkippable != other.IsSkippable) return false;
      if (StartsWithSound != other.StartsWithSound) return false;
      if (AdLength != other.AdLength) return false;
      if (TopContentOnly != other.TopContentOnly) return false;
      if (HasGuaranteedPrice != other.HasGuaranteedPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIsSkippable) hash ^= IsSkippable.GetHashCode();
      if (HasStartsWithSound) hash ^= StartsWithSound.GetHashCode();
      if (AdLength != global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength.Unspecified) hash ^= AdLength.GetHashCode();
      if (HasTopContentOnly) hash ^= TopContentOnly.GetHashCode();
      if (HasHasGuaranteedPrice) hash ^= HasGuaranteedPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AdLength != global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AdLength);
      }
      if (HasIsSkippable) {
        output.WriteRawTag(48);
        output.WriteBool(IsSkippable);
      }
      if (HasStartsWithSound) {
        output.WriteRawTag(56);
        output.WriteBool(StartsWithSound);
      }
      if (HasTopContentOnly) {
        output.WriteRawTag(64);
        output.WriteBool(TopContentOnly);
      }
      if (HasHasGuaranteedPrice) {
        output.WriteRawTag(72);
        output.WriteBool(HasGuaranteedPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AdLength != global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AdLength);
      }
      if (HasIsSkippable) {
        output.WriteRawTag(48);
        output.WriteBool(IsSkippable);
      }
      if (HasStartsWithSound) {
        output.WriteRawTag(56);
        output.WriteBool(StartsWithSound);
      }
      if (HasTopContentOnly) {
        output.WriteRawTag(64);
        output.WriteBool(TopContentOnly);
      }
      if (HasHasGuaranteedPrice) {
        output.WriteRawTag(72);
        output.WriteBool(HasGuaranteedPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasIsSkippable) {
        size += 1 + 1;
      }
      if (HasStartsWithSound) {
        size += 1 + 1;
      }
      if (AdLength != global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AdLength);
      }
      if (HasTopContentOnly) {
        size += 1 + 1;
      }
      if (HasHasGuaranteedPrice) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Preferences other) {
      if (other == null) {
        return;
      }
      if (other.HasIsSkippable) {
        IsSkippable = other.IsSkippable;
      }
      if (other.HasStartsWithSound) {
        StartsWithSound = other.StartsWithSound;
      }
      if (other.AdLength != global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength.Unspecified) {
        AdLength = other.AdLength;
      }
      if (other.HasTopContentOnly) {
        TopContentOnly = other.TopContentOnly;
      }
      if (other.HasHasGuaranteedPrice) {
        HasGuaranteedPrice = other.HasGuaranteedPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            AdLength = (global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength) input.ReadEnum();
            break;
          }
          case 48: {
            IsSkippable = input.ReadBool();
            break;
          }
          case 56: {
            StartsWithSound = input.ReadBool();
            break;
          }
          case 64: {
            TopContentOnly = input.ReadBool();
            break;
          }
          case 72: {
            HasGuaranteedPrice = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 24: {
            AdLength = (global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAdLengthEnum.Types.ReachPlanAdLength) input.ReadEnum();
            break;
          }
          case 48: {
            IsSkippable = input.ReadBool();
            break;
          }
          case 56: {
            StartsWithSound = input.ReadBool();
            break;
          }
          case 64: {
            TopContentOnly = input.ReadBool();
            break;
          }
          case 72: {
            HasGuaranteedPrice = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The suggested product mix.
  /// </summary>
  public sealed partial class GenerateProductMixIdeasResponse : pb::IMessage<GenerateProductMixIdeasResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GenerateProductMixIdeasResponse> _parser = new pb::MessageParser<GenerateProductMixIdeasResponse>(() => new GenerateProductMixIdeasResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateProductMixIdeasResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateProductMixIdeasResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateProductMixIdeasResponse(GenerateProductMixIdeasResponse other) : this() {
      productAllocation_ = other.productAllocation_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateProductMixIdeasResponse Clone() {
      return new GenerateProductMixIdeasResponse(this);
    }

    /// <summary>Field number for the "product_allocation" field.</summary>
    public const int ProductAllocationFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V6.Services.ProductAllocation> _repeated_productAllocation_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V6.Services.ProductAllocation.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Services.ProductAllocation> productAllocation_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Services.ProductAllocation>();
    /// <summary>
    /// A list of products (ad formats) and the associated budget allocation idea.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Services.ProductAllocation> ProductAllocation {
      get { return productAllocation_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateProductMixIdeasResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateProductMixIdeasResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!productAllocation_.Equals(other.productAllocation_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= productAllocation_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      productAllocation_.WriteTo(output, _repeated_productAllocation_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      productAllocation_.WriteTo(ref output, _repeated_productAllocation_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += productAllocation_.CalculateSize(_repeated_productAllocation_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateProductMixIdeasResponse other) {
      if (other == null) {
        return;
      }
      productAllocation_.Add(other.productAllocation_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            productAllocation_.AddEntriesFrom(input, _repeated_productAllocation_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            productAllocation_.AddEntriesFrom(ref input, _repeated_productAllocation_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An allocation of a part of the budget on a given product.
  /// </summary>
  public sealed partial class ProductAllocation : pb::IMessage<ProductAllocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProductAllocation> _parser = new pb::MessageParser<ProductAllocation>(() => new ProductAllocation());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProductAllocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductAllocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductAllocation(ProductAllocation other) : this() {
      _hasBits0 = other._hasBits0;
      plannableProductCode_ = other.plannableProductCode_;
      budgetMicros_ = other.budgetMicros_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductAllocation Clone() {
      return new ProductAllocation(this);
    }

    /// <summary>Field number for the "plannable_product_code" field.</summary>
    public const int PlannableProductCodeFieldNumber = 3;
    private string plannableProductCode_;
    /// <summary>
    /// Selected product for planning. The product codes returned are within the
    /// set of the ones returned by ListPlannableProducts when using the same
    /// location id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlannableProductCode {
      get { return plannableProductCode_ ?? ""; }
      set {
        plannableProductCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "plannable_product_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPlannableProductCode {
      get { return plannableProductCode_ != null; }
    }
    /// <summary>Clears the value of the "plannable_product_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPlannableProductCode() {
      plannableProductCode_ = null;
    }

    /// <summary>Field number for the "budget_micros" field.</summary>
    public const int BudgetMicrosFieldNumber = 4;
    private long budgetMicros_;
    /// <summary>
    /// The value to be allocated for the suggested product in requested currency.
    /// Amount in micros. One million is equivalent to one unit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BudgetMicros {
      get { if ((_hasBits0 & 1) != 0) { return budgetMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        budgetMicros_ = value;
      }
    }
    /// <summary>Gets whether the "budget_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBudgetMicros {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "budget_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBudgetMicros() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProductAllocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProductAllocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlannableProductCode != other.PlannableProductCode) return false;
      if (BudgetMicros != other.BudgetMicros) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlannableProductCode) hash ^= PlannableProductCode.GetHashCode();
      if (HasBudgetMicros) hash ^= BudgetMicros.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlannableProductCode) {
        output.WriteRawTag(26);
        output.WriteString(PlannableProductCode);
      }
      if (HasBudgetMicros) {
        output.WriteRawTag(32);
        output.WriteInt64(BudgetMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlannableProductCode) {
        output.WriteRawTag(26);
        output.WriteString(PlannableProductCode);
      }
      if (HasBudgetMicros) {
        output.WriteRawTag(32);
        output.WriteInt64(BudgetMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPlannableProductCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlannableProductCode);
      }
      if (HasBudgetMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BudgetMicros);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProductAllocation other) {
      if (other == null) {
        return;
      }
      if (other.HasPlannableProductCode) {
        PlannableProductCode = other.PlannableProductCode;
      }
      if (other.HasBudgetMicros) {
        BudgetMicros = other.BudgetMicros;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            PlannableProductCode = input.ReadString();
            break;
          }
          case 32: {
            BudgetMicros = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            PlannableProductCode = input.ReadString();
            break;
          }
          case 32: {
            BudgetMicros = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for [ReachPlanService.GenerateReachForecast][google.ads.googleads.v6.services.ReachPlanService.GenerateReachForecast].
  /// </summary>
  public sealed partial class GenerateReachForecastRequest : pb::IMessage<GenerateReachForecastRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GenerateReachForecastRequest> _parser = new pb::MessageParser<GenerateReachForecastRequest>(() => new GenerateReachForecastRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateReachForecastRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateReachForecastRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateReachForecastRequest(GenerateReachForecastRequest other) : this() {
      _hasBits0 = other._hasBits0;
      customerId_ = other.customerId_;
      currencyCode_ = other.currencyCode_;
      campaignDuration_ = other.campaignDuration_ != null ? other.campaignDuration_.Clone() : null;
      cookieFrequencyCap_ = other.cookieFrequencyCap_;
      cookieFrequencyCapSetting_ = other.cookieFrequencyCapSetting_ != null ? other.cookieFrequencyCapSetting_.Clone() : null;
      minEffectiveFrequency_ = other.minEffectiveFrequency_;
      targeting_ = other.targeting_ != null ? other.targeting_.Clone() : null;
      plannedProducts_ = other.plannedProducts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateReachForecastRequest Clone() {
      return new GenerateReachForecastRequest(this);
    }

    /// <summary>Field number for the "customer_id" field.</summary>
    public const int CustomerIdFieldNumber = 1;
    private string customerId_ = "";
    /// <summary>
    /// Required. The ID of the customer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerId {
      get { return customerId_; }
      set {
        customerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "currency_code" field.</summary>
    public const int CurrencyCodeFieldNumber = 9;
    private string currencyCode_;
    /// <summary>
    /// The currency code.
    /// Three-character ISO 4217 currency code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_ ?? ""; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "currency_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrencyCode {
      get { return currencyCode_ != null; }
    }
    /// <summary>Clears the value of the "currency_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrencyCode() {
      currencyCode_ = null;
    }

    /// <summary>Field number for the "campaign_duration" field.</summary>
    public const int CampaignDurationFieldNumber = 3;
    private global::Google.Ads.GoogleAds.V6.Services.CampaignDuration campaignDuration_;
    /// <summary>
    /// Required. Campaign duration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Services.CampaignDuration CampaignDuration {
      get { return campaignDuration_; }
      set {
        campaignDuration_ = value;
      }
    }

    /// <summary>Field number for the "cookie_frequency_cap" field.</summary>
    public const int CookieFrequencyCapFieldNumber = 10;
    private int cookieFrequencyCap_;
    /// <summary>
    /// Desired cookie frequency cap that will be applied to each planned product.
    /// This is equivalent to the frequency cap exposed in Google Ads when creating
    /// a campaign, it represents the maximum number of times an ad can be shown to
    /// the same user.
    /// If not specified no cap is applied.
    ///
    /// This field is deprecated in v4 and will eventually be removed.
    /// Please use cookie_frequency_cap_setting instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CookieFrequencyCap {
      get { if ((_hasBits0 & 1) != 0) { return cookieFrequencyCap_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        cookieFrequencyCap_ = value;
      }
    }
    /// <summary>Gets whether the "cookie_frequency_cap" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCookieFrequencyCap {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "cookie_frequency_cap" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCookieFrequencyCap() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cookie_frequency_cap_setting" field.</summary>
    public const int CookieFrequencyCapSettingFieldNumber = 8;
    private global::Google.Ads.GoogleAds.V6.Services.FrequencyCap cookieFrequencyCapSetting_;
    /// <summary>
    /// Desired cookie frequency cap that will be applied to each planned product.
    /// This is equivalent to the frequency cap exposed in Google Ads when creating
    /// a campaign, it represents the maximum number of times an ad can be shown to
    /// the same user during a specified time interval.
    /// If not specified, no cap is applied.
    ///
    /// This field replaces the deprecated cookie_frequency_cap field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Services.FrequencyCap CookieFrequencyCapSetting {
      get { return cookieFrequencyCapSetting_; }
      set {
        cookieFrequencyCapSetting_ = value;
      }
    }

    /// <summary>Field number for the "min_effective_frequency" field.</summary>
    public const int MinEffectiveFrequencyFieldNumber = 11;
    private int minEffectiveFrequency_;
    /// <summary>
    /// Desired minimum effective frequency (the number of times a person was
    /// exposed to the ad) for the reported reach metrics [1-10].
    /// This won't affect the targeting, but just the reporting.
    /// If not specified, a default of 1 is applied.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinEffectiveFrequency {
      get { if ((_hasBits0 & 2) != 0) { return minEffectiveFrequency_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        minEffectiveFrequency_ = value;
      }
    }
    /// <summary>Gets whether the "min_effective_frequency" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMinEffectiveFrequency {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "min_effective_frequency" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMinEffectiveFrequency() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "targeting" field.</summary>
    public const int TargetingFieldNumber = 6;
    private global::Google.Ads.GoogleAds.V6.Services.Targeting targeting_;
    /// <summary>
    /// The targeting to be applied to all products selected in the product mix.
    ///
    /// This is planned targeting: execution details might vary based on the
    /// advertising product, please consult an implementation specialist.
    ///
    /// See specific metrics for details on how targeting affects them.
    ///
    /// In some cases, targeting may be overridden using the
    /// PlannedProduct.advanced_product_targeting field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Services.Targeting Targeting {
      get { return targeting_; }
      set {
        targeting_ = value;
      }
    }

    /// <summary>Field number for the "planned_products" field.</summary>
    public const int PlannedProductsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V6.Services.PlannedProduct> _repeated_plannedProducts_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Ads.GoogleAds.V6.Services.PlannedProduct.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Services.PlannedProduct> plannedProducts_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Services.PlannedProduct>();
    /// <summary>
    /// Required. The products to be forecast.
    /// The max number of allowed planned products is 15.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Services.PlannedProduct> PlannedProducts {
      get { return plannedProducts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateReachForecastRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateReachForecastRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CustomerId != other.CustomerId) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (!object.Equals(CampaignDuration, other.CampaignDuration)) return false;
      if (CookieFrequencyCap != other.CookieFrequencyCap) return false;
      if (!object.Equals(CookieFrequencyCapSetting, other.CookieFrequencyCapSetting)) return false;
      if (MinEffectiveFrequency != other.MinEffectiveFrequency) return false;
      if (!object.Equals(Targeting, other.Targeting)) return false;
      if(!plannedProducts_.Equals(other.plannedProducts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CustomerId.Length != 0) hash ^= CustomerId.GetHashCode();
      if (HasCurrencyCode) hash ^= CurrencyCode.GetHashCode();
      if (campaignDuration_ != null) hash ^= CampaignDuration.GetHashCode();
      if (HasCookieFrequencyCap) hash ^= CookieFrequencyCap.GetHashCode();
      if (cookieFrequencyCapSetting_ != null) hash ^= CookieFrequencyCapSetting.GetHashCode();
      if (HasMinEffectiveFrequency) hash ^= MinEffectiveFrequency.GetHashCode();
      if (targeting_ != null) hash ^= Targeting.GetHashCode();
      hash ^= plannedProducts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CustomerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CustomerId);
      }
      if (campaignDuration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CampaignDuration);
      }
      if (targeting_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Targeting);
      }
      plannedProducts_.WriteTo(output, _repeated_plannedProducts_codec);
      if (cookieFrequencyCapSetting_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(CookieFrequencyCapSetting);
      }
      if (HasCurrencyCode) {
        output.WriteRawTag(74);
        output.WriteString(CurrencyCode);
      }
      if (HasCookieFrequencyCap) {
        output.WriteRawTag(80);
        output.WriteInt32(CookieFrequencyCap);
      }
      if (HasMinEffectiveFrequency) {
        output.WriteRawTag(88);
        output.WriteInt32(MinEffectiveFrequency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CustomerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CustomerId);
      }
      if (campaignDuration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CampaignDuration);
      }
      if (targeting_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Targeting);
      }
      plannedProducts_.WriteTo(ref output, _repeated_plannedProducts_codec);
      if (cookieFrequencyCapSetting_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(CookieFrequencyCapSetting);
      }
      if (HasCurrencyCode) {
        output.WriteRawTag(74);
        output.WriteString(CurrencyCode);
      }
      if (HasCookieFrequencyCap) {
        output.WriteRawTag(80);
        output.WriteInt32(CookieFrequencyCap);
      }
      if (HasMinEffectiveFrequency) {
        output.WriteRawTag(88);
        output.WriteInt32(MinEffectiveFrequency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CustomerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerId);
      }
      if (HasCurrencyCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (campaignDuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CampaignDuration);
      }
      if (HasCookieFrequencyCap) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CookieFrequencyCap);
      }
      if (cookieFrequencyCapSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CookieFrequencyCapSetting);
      }
      if (HasMinEffectiveFrequency) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinEffectiveFrequency);
      }
      if (targeting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Targeting);
      }
      size += plannedProducts_.CalculateSize(_repeated_plannedProducts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateReachForecastRequest other) {
      if (other == null) {
        return;
      }
      if (other.CustomerId.Length != 0) {
        CustomerId = other.CustomerId;
      }
      if (other.HasCurrencyCode) {
        CurrencyCode = other.CurrencyCode;
      }
      if (other.campaignDuration_ != null) {
        if (campaignDuration_ == null) {
          CampaignDuration = new global::Google.Ads.GoogleAds.V6.Services.CampaignDuration();
        }
        CampaignDuration.MergeFrom(other.CampaignDuration);
      }
      if (other.HasCookieFrequencyCap) {
        CookieFrequencyCap = other.CookieFrequencyCap;
      }
      if (other.cookieFrequencyCapSetting_ != null) {
        if (cookieFrequencyCapSetting_ == null) {
          CookieFrequencyCapSetting = new global::Google.Ads.GoogleAds.V6.Services.FrequencyCap();
        }
        CookieFrequencyCapSetting.MergeFrom(other.CookieFrequencyCapSetting);
      }
      if (other.HasMinEffectiveFrequency) {
        MinEffectiveFrequency = other.MinEffectiveFrequency;
      }
      if (other.targeting_ != null) {
        if (targeting_ == null) {
          Targeting = new global::Google.Ads.GoogleAds.V6.Services.Targeting();
        }
        Targeting.MergeFrom(other.Targeting);
      }
      plannedProducts_.Add(other.plannedProducts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CustomerId = input.ReadString();
            break;
          }
          case 26: {
            if (campaignDuration_ == null) {
              CampaignDuration = new global::Google.Ads.GoogleAds.V6.Services.CampaignDuration();
            }
            input.ReadMessage(CampaignDuration);
            break;
          }
          case 50: {
            if (targeting_ == null) {
              Targeting = new global::Google.Ads.GoogleAds.V6.Services.Targeting();
            }
            input.ReadMessage(Targeting);
            break;
          }
          case 58: {
            plannedProducts_.AddEntriesFrom(input, _repeated_plannedProducts_codec);
            break;
          }
          case 66: {
            if (cookieFrequencyCapSetting_ == null) {
              CookieFrequencyCapSetting = new global::Google.Ads.GoogleAds.V6.Services.FrequencyCap();
            }
            input.ReadMessage(CookieFrequencyCapSetting);
            break;
          }
          case 74: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 80: {
            CookieFrequencyCap = input.ReadInt32();
            break;
          }
          case 88: {
            MinEffectiveFrequency = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CustomerId = input.ReadString();
            break;
          }
          case 26: {
            if (campaignDuration_ == null) {
              CampaignDuration = new global::Google.Ads.GoogleAds.V6.Services.CampaignDuration();
            }
            input.ReadMessage(CampaignDuration);
            break;
          }
          case 50: {
            if (targeting_ == null) {
              Targeting = new global::Google.Ads.GoogleAds.V6.Services.Targeting();
            }
            input.ReadMessage(Targeting);
            break;
          }
          case 58: {
            plannedProducts_.AddEntriesFrom(ref input, _repeated_plannedProducts_codec);
            break;
          }
          case 66: {
            if (cookieFrequencyCapSetting_ == null) {
              CookieFrequencyCapSetting = new global::Google.Ads.GoogleAds.V6.Services.FrequencyCap();
            }
            input.ReadMessage(CookieFrequencyCapSetting);
            break;
          }
          case 74: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 80: {
            CookieFrequencyCap = input.ReadInt32();
            break;
          }
          case 88: {
            MinEffectiveFrequency = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A rule specifying the maximum number of times an ad can be shown to a user
  /// over a particular time period.
  /// </summary>
  public sealed partial class FrequencyCap : pb::IMessage<FrequencyCap>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FrequencyCap> _parser = new pb::MessageParser<FrequencyCap>(() => new FrequencyCap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FrequencyCap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrequencyCap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrequencyCap(FrequencyCap other) : this() {
      impressions_ = other.impressions_;
      timeUnit_ = other.timeUnit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrequencyCap Clone() {
      return new FrequencyCap(this);
    }

    /// <summary>Field number for the "impressions" field.</summary>
    public const int ImpressionsFieldNumber = 3;
    private int impressions_;
    /// <summary>
    /// Required. The number of impressions, inclusive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Impressions {
      get { return impressions_; }
      set {
        impressions_ = value;
      }
    }

    /// <summary>Field number for the "time_unit" field.</summary>
    public const int TimeUnitFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V6.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit timeUnit_ = global::Google.Ads.GoogleAds.V6.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit.Unspecified;
    /// <summary>
    /// Required. The type of time unit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit TimeUnit {
      get { return timeUnit_; }
      set {
        timeUnit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FrequencyCap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FrequencyCap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Impressions != other.Impressions) return false;
      if (TimeUnit != other.TimeUnit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Impressions != 0) hash ^= Impressions.GetHashCode();
      if (TimeUnit != global::Google.Ads.GoogleAds.V6.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit.Unspecified) hash ^= TimeUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TimeUnit != global::Google.Ads.GoogleAds.V6.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TimeUnit);
      }
      if (Impressions != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Impressions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TimeUnit != global::Google.Ads.GoogleAds.V6.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TimeUnit);
      }
      if (Impressions != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Impressions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Impressions != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Impressions);
      }
      if (TimeUnit != global::Google.Ads.GoogleAds.V6.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TimeUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FrequencyCap other) {
      if (other == null) {
        return;
      }
      if (other.Impressions != 0) {
        Impressions = other.Impressions;
      }
      if (other.TimeUnit != global::Google.Ads.GoogleAds.V6.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit.Unspecified) {
        TimeUnit = other.TimeUnit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            TimeUnit = (global::Google.Ads.GoogleAds.V6.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit) input.ReadEnum();
            break;
          }
          case 24: {
            Impressions = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            TimeUnit = (global::Google.Ads.GoogleAds.V6.Enums.FrequencyCapTimeUnitEnum.Types.FrequencyCapTimeUnit) input.ReadEnum();
            break;
          }
          case 24: {
            Impressions = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The targeting for which traffic metrics will be reported.
  /// </summary>
  public sealed partial class Targeting : pb::IMessage<Targeting>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Targeting> _parser = new pb::MessageParser<Targeting>(() => new Targeting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Targeting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Targeting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Targeting(Targeting other) : this() {
      plannableLocationId_ = other.plannableLocationId_;
      ageRange_ = other.ageRange_;
      genders_ = other.genders_.Clone();
      devices_ = other.devices_.Clone();
      network_ = other.network_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Targeting Clone() {
      return new Targeting(this);
    }

    /// <summary>Field number for the "plannable_location_id" field.</summary>
    public const int PlannableLocationIdFieldNumber = 6;
    private string plannableLocationId_;
    /// <summary>
    /// Required. The ID of the selected location.
    /// Plannable locations ID can be obtained from ListPlannableLocations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlannableLocationId {
      get { return plannableLocationId_ ?? ""; }
      set {
        plannableLocationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "plannable_location_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPlannableLocationId {
      get { return plannableLocationId_ != null; }
    }
    /// <summary>Clears the value of the "plannable_location_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPlannableLocationId() {
      plannableLocationId_ = null;
    }

    /// <summary>Field number for the "age_range" field.</summary>
    public const int AgeRangeFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange ageRange_ = global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange.Unspecified;
    /// <summary>
    /// Targeted age range.
    /// If not specified, targets all age ranges.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange AgeRange {
      get { return ageRange_; }
      set {
        ageRange_ = value;
      }
    }

    /// <summary>Field number for the "genders" field.</summary>
    public const int GendersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V6.Common.GenderInfo> _repeated_genders_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Ads.GoogleAds.V6.Common.GenderInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Common.GenderInfo> genders_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Common.GenderInfo>();
    /// <summary>
    /// Targeted genders.
    /// If not specified, targets all genders.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Common.GenderInfo> Genders {
      get { return genders_; }
    }

    /// <summary>Field number for the "devices" field.</summary>
    public const int DevicesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V6.Common.DeviceInfo> _repeated_devices_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Ads.GoogleAds.V6.Common.DeviceInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Common.DeviceInfo> devices_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Common.DeviceInfo>();
    /// <summary>
    /// Targeted devices.
    /// If not specified, targets all applicable devices. Applicable devices vary
    /// by product and region and can be obtained from ListPlannableProducts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Common.DeviceInfo> Devices {
      get { return devices_; }
    }

    /// <summary>Field number for the "network" field.</summary>
    public const int NetworkFieldNumber = 5;
    private global::Google.Ads.GoogleAds.V6.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork network_ = global::Google.Ads.GoogleAds.V6.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork.Unspecified;
    /// <summary>
    /// Targetable network for the ad product.
    /// If not specified, targets all applicable networks. Applicable networks vary
    /// by product and region and can be obtained from ListPlannableProducts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork Network {
      get { return network_; }
      set {
        network_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Targeting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Targeting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlannableLocationId != other.PlannableLocationId) return false;
      if (AgeRange != other.AgeRange) return false;
      if(!genders_.Equals(other.genders_)) return false;
      if(!devices_.Equals(other.devices_)) return false;
      if (Network != other.Network) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlannableLocationId) hash ^= PlannableLocationId.GetHashCode();
      if (AgeRange != global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange.Unspecified) hash ^= AgeRange.GetHashCode();
      hash ^= genders_.GetHashCode();
      hash ^= devices_.GetHashCode();
      if (Network != global::Google.Ads.GoogleAds.V6.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork.Unspecified) hash ^= Network.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AgeRange != global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AgeRange);
      }
      genders_.WriteTo(output, _repeated_genders_codec);
      devices_.WriteTo(output, _repeated_devices_codec);
      if (Network != global::Google.Ads.GoogleAds.V6.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Network);
      }
      if (HasPlannableLocationId) {
        output.WriteRawTag(50);
        output.WriteString(PlannableLocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AgeRange != global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AgeRange);
      }
      genders_.WriteTo(ref output, _repeated_genders_codec);
      devices_.WriteTo(ref output, _repeated_devices_codec);
      if (Network != global::Google.Ads.GoogleAds.V6.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Network);
      }
      if (HasPlannableLocationId) {
        output.WriteRawTag(50);
        output.WriteString(PlannableLocationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPlannableLocationId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlannableLocationId);
      }
      if (AgeRange != global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AgeRange);
      }
      size += genders_.CalculateSize(_repeated_genders_codec);
      size += devices_.CalculateSize(_repeated_devices_codec);
      if (Network != global::Google.Ads.GoogleAds.V6.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Network);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Targeting other) {
      if (other == null) {
        return;
      }
      if (other.HasPlannableLocationId) {
        PlannableLocationId = other.PlannableLocationId;
      }
      if (other.AgeRange != global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange.Unspecified) {
        AgeRange = other.AgeRange;
      }
      genders_.Add(other.genders_);
      devices_.Add(other.devices_);
      if (other.Network != global::Google.Ads.GoogleAds.V6.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork.Unspecified) {
        Network = other.Network;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            AgeRange = (global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange) input.ReadEnum();
            break;
          }
          case 26: {
            genders_.AddEntriesFrom(input, _repeated_genders_codec);
            break;
          }
          case 34: {
            devices_.AddEntriesFrom(input, _repeated_devices_codec);
            break;
          }
          case 40: {
            Network = (global::Google.Ads.GoogleAds.V6.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork) input.ReadEnum();
            break;
          }
          case 50: {
            PlannableLocationId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            AgeRange = (global::Google.Ads.GoogleAds.V6.Enums.ReachPlanAgeRangeEnum.Types.ReachPlanAgeRange) input.ReadEnum();
            break;
          }
          case 26: {
            genders_.AddEntriesFrom(ref input, _repeated_genders_codec);
            break;
          }
          case 34: {
            devices_.AddEntriesFrom(ref input, _repeated_devices_codec);
            break;
          }
          case 40: {
            Network = (global::Google.Ads.GoogleAds.V6.Enums.ReachPlanNetworkEnum.Types.ReachPlanNetwork) input.ReadEnum();
            break;
          }
          case 50: {
            PlannableLocationId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The duration of a planned campaign.
  /// </summary>
  public sealed partial class CampaignDuration : pb::IMessage<CampaignDuration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CampaignDuration> _parser = new pb::MessageParser<CampaignDuration>(() => new CampaignDuration());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CampaignDuration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignDuration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignDuration(CampaignDuration other) : this() {
      _hasBits0 = other._hasBits0;
      durationInDays_ = other.durationInDays_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignDuration Clone() {
      return new CampaignDuration(this);
    }

    /// <summary>Field number for the "duration_in_days" field.</summary>
    public const int DurationInDaysFieldNumber = 2;
    private int durationInDays_;
    /// <summary>
    /// The duration value in days.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DurationInDays {
      get { if ((_hasBits0 & 1) != 0) { return durationInDays_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        durationInDays_ = value;
      }
    }
    /// <summary>Gets whether the "duration_in_days" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDurationInDays {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "duration_in_days" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDurationInDays() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CampaignDuration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CampaignDuration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DurationInDays != other.DurationInDays) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDurationInDays) hash ^= DurationInDays.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDurationInDays) {
        output.WriteRawTag(16);
        output.WriteInt32(DurationInDays);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDurationInDays) {
        output.WriteRawTag(16);
        output.WriteInt32(DurationInDays);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDurationInDays) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DurationInDays);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CampaignDuration other) {
      if (other == null) {
        return;
      }
      if (other.HasDurationInDays) {
        DurationInDays = other.DurationInDays;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            DurationInDays = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            DurationInDays = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A product being planned for reach.
  /// </summary>
  public sealed partial class PlannedProduct : pb::IMessage<PlannedProduct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlannedProduct> _parser = new pb::MessageParser<PlannedProduct>(() => new PlannedProduct());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlannedProduct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannedProduct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannedProduct(PlannedProduct other) : this() {
      _hasBits0 = other._hasBits0;
      plannableProductCode_ = other.plannableProductCode_;
      budgetMicros_ = other.budgetMicros_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannedProduct Clone() {
      return new PlannedProduct(this);
    }

    /// <summary>Field number for the "plannable_product_code" field.</summary>
    public const int PlannableProductCodeFieldNumber = 3;
    private string plannableProductCode_;
    /// <summary>
    /// Required. Selected product for planning.
    /// The code associated with the ad product. E.g. Trueview, Bumper
    /// To list the available plannable product codes use ListPlannableProducts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlannableProductCode {
      get { return plannableProductCode_ ?? ""; }
      set {
        plannableProductCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "plannable_product_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPlannableProductCode {
      get { return plannableProductCode_ != null; }
    }
    /// <summary>Clears the value of the "plannable_product_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPlannableProductCode() {
      plannableProductCode_ = null;
    }

    /// <summary>Field number for the "budget_micros" field.</summary>
    public const int BudgetMicrosFieldNumber = 4;
    private long budgetMicros_;
    /// <summary>
    /// Required. Maximum budget allocation in micros for the selected product.
    /// The value is specified in the selected planning currency_code.
    /// E.g. 1 000 000$ = 1 000 000 000 000 micros.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BudgetMicros {
      get { if ((_hasBits0 & 1) != 0) { return budgetMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        budgetMicros_ = value;
      }
    }
    /// <summary>Gets whether the "budget_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBudgetMicros {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "budget_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBudgetMicros() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlannedProduct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlannedProduct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlannableProductCode != other.PlannableProductCode) return false;
      if (BudgetMicros != other.BudgetMicros) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlannableProductCode) hash ^= PlannableProductCode.GetHashCode();
      if (HasBudgetMicros) hash ^= BudgetMicros.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlannableProductCode) {
        output.WriteRawTag(26);
        output.WriteString(PlannableProductCode);
      }
      if (HasBudgetMicros) {
        output.WriteRawTag(32);
        output.WriteInt64(BudgetMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlannableProductCode) {
        output.WriteRawTag(26);
        output.WriteString(PlannableProductCode);
      }
      if (HasBudgetMicros) {
        output.WriteRawTag(32);
        output.WriteInt64(BudgetMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPlannableProductCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlannableProductCode);
      }
      if (HasBudgetMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BudgetMicros);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlannedProduct other) {
      if (other == null) {
        return;
      }
      if (other.HasPlannableProductCode) {
        PlannableProductCode = other.PlannableProductCode;
      }
      if (other.HasBudgetMicros) {
        BudgetMicros = other.BudgetMicros;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            PlannableProductCode = input.ReadString();
            break;
          }
          case 32: {
            BudgetMicros = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            PlannableProductCode = input.ReadString();
            break;
          }
          case 32: {
            BudgetMicros = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message containing the generated reach curve.
  /// </summary>
  public sealed partial class GenerateReachForecastResponse : pb::IMessage<GenerateReachForecastResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GenerateReachForecastResponse> _parser = new pb::MessageParser<GenerateReachForecastResponse>(() => new GenerateReachForecastResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateReachForecastResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateReachForecastResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateReachForecastResponse(GenerateReachForecastResponse other) : this() {
      onTargetAudienceMetrics_ = other.onTargetAudienceMetrics_ != null ? other.onTargetAudienceMetrics_.Clone() : null;
      reachCurve_ = other.reachCurve_ != null ? other.reachCurve_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateReachForecastResponse Clone() {
      return new GenerateReachForecastResponse(this);
    }

    /// <summary>Field number for the "on_target_audience_metrics" field.</summary>
    public const int OnTargetAudienceMetricsFieldNumber = 1;
    private global::Google.Ads.GoogleAds.V6.Services.OnTargetAudienceMetrics onTargetAudienceMetrics_;
    /// <summary>
    /// Reference on target audiences for this curve.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Services.OnTargetAudienceMetrics OnTargetAudienceMetrics {
      get { return onTargetAudienceMetrics_; }
      set {
        onTargetAudienceMetrics_ = value;
      }
    }

    /// <summary>Field number for the "reach_curve" field.</summary>
    public const int ReachCurveFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V6.Services.ReachCurve reachCurve_;
    /// <summary>
    /// The generated reach curve for the planned product mix.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Services.ReachCurve ReachCurve {
      get { return reachCurve_; }
      set {
        reachCurve_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateReachForecastResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateReachForecastResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OnTargetAudienceMetrics, other.OnTargetAudienceMetrics)) return false;
      if (!object.Equals(ReachCurve, other.ReachCurve)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (onTargetAudienceMetrics_ != null) hash ^= OnTargetAudienceMetrics.GetHashCode();
      if (reachCurve_ != null) hash ^= ReachCurve.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (onTargetAudienceMetrics_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OnTargetAudienceMetrics);
      }
      if (reachCurve_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReachCurve);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (onTargetAudienceMetrics_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OnTargetAudienceMetrics);
      }
      if (reachCurve_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReachCurve);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (onTargetAudienceMetrics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OnTargetAudienceMetrics);
      }
      if (reachCurve_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReachCurve);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateReachForecastResponse other) {
      if (other == null) {
        return;
      }
      if (other.onTargetAudienceMetrics_ != null) {
        if (onTargetAudienceMetrics_ == null) {
          OnTargetAudienceMetrics = new global::Google.Ads.GoogleAds.V6.Services.OnTargetAudienceMetrics();
        }
        OnTargetAudienceMetrics.MergeFrom(other.OnTargetAudienceMetrics);
      }
      if (other.reachCurve_ != null) {
        if (reachCurve_ == null) {
          ReachCurve = new global::Google.Ads.GoogleAds.V6.Services.ReachCurve();
        }
        ReachCurve.MergeFrom(other.ReachCurve);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (onTargetAudienceMetrics_ == null) {
              OnTargetAudienceMetrics = new global::Google.Ads.GoogleAds.V6.Services.OnTargetAudienceMetrics();
            }
            input.ReadMessage(OnTargetAudienceMetrics);
            break;
          }
          case 18: {
            if (reachCurve_ == null) {
              ReachCurve = new global::Google.Ads.GoogleAds.V6.Services.ReachCurve();
            }
            input.ReadMessage(ReachCurve);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (onTargetAudienceMetrics_ == null) {
              OnTargetAudienceMetrics = new global::Google.Ads.GoogleAds.V6.Services.OnTargetAudienceMetrics();
            }
            input.ReadMessage(OnTargetAudienceMetrics);
            break;
          }
          case 18: {
            if (reachCurve_ == null) {
              ReachCurve = new global::Google.Ads.GoogleAds.V6.Services.ReachCurve();
            }
            input.ReadMessage(ReachCurve);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The reach curve for the planned products.
  /// </summary>
  public sealed partial class ReachCurve : pb::IMessage<ReachCurve>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReachCurve> _parser = new pb::MessageParser<ReachCurve>(() => new ReachCurve());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReachCurve> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachCurve() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachCurve(ReachCurve other) : this() {
      reachForecasts_ = other.reachForecasts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachCurve Clone() {
      return new ReachCurve(this);
    }

    /// <summary>Field number for the "reach_forecasts" field.</summary>
    public const int ReachForecastsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V6.Services.ReachForecast> _repeated_reachForecasts_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V6.Services.ReachForecast.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Services.ReachForecast> reachForecasts_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Services.ReachForecast>();
    /// <summary>
    /// All points on the reach curve.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Services.ReachForecast> ReachForecasts {
      get { return reachForecasts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReachCurve);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReachCurve other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reachForecasts_.Equals(other.reachForecasts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reachForecasts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      reachForecasts_.WriteTo(output, _repeated_reachForecasts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      reachForecasts_.WriteTo(ref output, _repeated_reachForecasts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += reachForecasts_.CalculateSize(_repeated_reachForecasts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReachCurve other) {
      if (other == null) {
        return;
      }
      reachForecasts_.Add(other.reachForecasts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            reachForecasts_.AddEntriesFrom(input, _repeated_reachForecasts_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            reachForecasts_.AddEntriesFrom(ref input, _repeated_reachForecasts_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A point on reach curve.
  /// </summary>
  public sealed partial class ReachForecast : pb::IMessage<ReachForecast>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReachForecast> _parser = new pb::MessageParser<ReachForecast>(() => new ReachForecast());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReachForecast> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachForecast() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachForecast(ReachForecast other) : this() {
      costMicros_ = other.costMicros_;
      forecast_ = other.forecast_ != null ? other.forecast_.Clone() : null;
      plannedProductReachForecasts_ = other.plannedProductReachForecasts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReachForecast Clone() {
      return new ReachForecast(this);
    }

    /// <summary>Field number for the "cost_micros" field.</summary>
    public const int CostMicrosFieldNumber = 5;
    private long costMicros_;
    /// <summary>
    /// The cost in micros.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CostMicros {
      get { return costMicros_; }
      set {
        costMicros_ = value;
      }
    }

    /// <summary>Field number for the "forecast" field.</summary>
    public const int ForecastFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V6.Services.Forecast forecast_;
    /// <summary>
    /// Forecasted traffic metrics for this point.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Services.Forecast Forecast {
      get { return forecast_; }
      set {
        forecast_ = value;
      }
    }

    /// <summary>Field number for the "planned_product_reach_forecasts" field.</summary>
    public const int PlannedProductReachForecastsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V6.Services.PlannedProductReachForecast> _repeated_plannedProductReachForecasts_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Ads.GoogleAds.V6.Services.PlannedProductReachForecast.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Services.PlannedProductReachForecast> plannedProductReachForecasts_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Services.PlannedProductReachForecast>();
    /// <summary>
    /// The forecasted allocation and traffic metrics for each planned product
    /// at this point on the reach curve.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Services.PlannedProductReachForecast> PlannedProductReachForecasts {
      get { return plannedProductReachForecasts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReachForecast);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReachForecast other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CostMicros != other.CostMicros) return false;
      if (!object.Equals(Forecast, other.Forecast)) return false;
      if(!plannedProductReachForecasts_.Equals(other.plannedProductReachForecasts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CostMicros != 0L) hash ^= CostMicros.GetHashCode();
      if (forecast_ != null) hash ^= Forecast.GetHashCode();
      hash ^= plannedProductReachForecasts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (forecast_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Forecast);
      }
      plannedProductReachForecasts_.WriteTo(output, _repeated_plannedProductReachForecasts_codec);
      if (CostMicros != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CostMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (forecast_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Forecast);
      }
      plannedProductReachForecasts_.WriteTo(ref output, _repeated_plannedProductReachForecasts_codec);
      if (CostMicros != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CostMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CostMicros != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CostMicros);
      }
      if (forecast_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Forecast);
      }
      size += plannedProductReachForecasts_.CalculateSize(_repeated_plannedProductReachForecasts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReachForecast other) {
      if (other == null) {
        return;
      }
      if (other.CostMicros != 0L) {
        CostMicros = other.CostMicros;
      }
      if (other.forecast_ != null) {
        if (forecast_ == null) {
          Forecast = new global::Google.Ads.GoogleAds.V6.Services.Forecast();
        }
        Forecast.MergeFrom(other.Forecast);
      }
      plannedProductReachForecasts_.Add(other.plannedProductReachForecasts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (forecast_ == null) {
              Forecast = new global::Google.Ads.GoogleAds.V6.Services.Forecast();
            }
            input.ReadMessage(Forecast);
            break;
          }
          case 34: {
            plannedProductReachForecasts_.AddEntriesFrom(input, _repeated_plannedProductReachForecasts_codec);
            break;
          }
          case 40: {
            CostMicros = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (forecast_ == null) {
              Forecast = new global::Google.Ads.GoogleAds.V6.Services.Forecast();
            }
            input.ReadMessage(Forecast);
            break;
          }
          case 34: {
            plannedProductReachForecasts_.AddEntriesFrom(ref input, _repeated_plannedProductReachForecasts_codec);
            break;
          }
          case 40: {
            CostMicros = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Forecasted traffic metrics for the planned products and targeting.
  /// </summary>
  public sealed partial class Forecast : pb::IMessage<Forecast>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Forecast> _parser = new pb::MessageParser<Forecast>(() => new Forecast());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Forecast> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Forecast() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Forecast(Forecast other) : this() {
      _hasBits0 = other._hasBits0;
      onTargetReach_ = other.onTargetReach_;
      totalReach_ = other.totalReach_;
      onTargetImpressions_ = other.onTargetImpressions_;
      totalImpressions_ = other.totalImpressions_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Forecast Clone() {
      return new Forecast(this);
    }

    /// <summary>Field number for the "on_target_reach" field.</summary>
    public const int OnTargetReachFieldNumber = 5;
    private long onTargetReach_;
    /// <summary>
    /// Number of unique people reached at least
    /// GenerateReachForecastRequest.min_effective_frequency times that exactly
    /// matches the Targeting.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OnTargetReach {
      get { if ((_hasBits0 & 1) != 0) { return onTargetReach_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        onTargetReach_ = value;
      }
    }
    /// <summary>Gets whether the "on_target_reach" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOnTargetReach {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "on_target_reach" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOnTargetReach() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "total_reach" field.</summary>
    public const int TotalReachFieldNumber = 6;
    private long totalReach_;
    /// <summary>
    /// Total number of unique people reached at least
    /// GenerateReachForecastRequest.min_effective_frequency times. This includes
    /// people that may fall outside the specified Targeting.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalReach {
      get { if ((_hasBits0 & 2) != 0) { return totalReach_; } else { return 0L; } }
      set {
        _hasBits0 |= 2;
        totalReach_ = value;
      }
    }
    /// <summary>Gets whether the "total_reach" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTotalReach {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "total_reach" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTotalReach() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "on_target_impressions" field.</summary>
    public const int OnTargetImpressionsFieldNumber = 7;
    private long onTargetImpressions_;
    /// <summary>
    /// Number of ad impressions that exactly matches the Targeting.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OnTargetImpressions {
      get { if ((_hasBits0 & 4) != 0) { return onTargetImpressions_; } else { return 0L; } }
      set {
        _hasBits0 |= 4;
        onTargetImpressions_ = value;
      }
    }
    /// <summary>Gets whether the "on_target_impressions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOnTargetImpressions {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "on_target_impressions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOnTargetImpressions() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "total_impressions" field.</summary>
    public const int TotalImpressionsFieldNumber = 8;
    private long totalImpressions_;
    /// <summary>
    /// Total number of ad impressions. This includes impressions that may fall
    /// outside the specified Targeting, due to insufficient information on
    /// signed-in users.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalImpressions {
      get { if ((_hasBits0 & 8) != 0) { return totalImpressions_; } else { return 0L; } }
      set {
        _hasBits0 |= 8;
        totalImpressions_ = value;
      }
    }
    /// <summary>Gets whether the "total_impressions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTotalImpressions {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "total_impressions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTotalImpressions() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Forecast);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Forecast other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OnTargetReach != other.OnTargetReach) return false;
      if (TotalReach != other.TotalReach) return false;
      if (OnTargetImpressions != other.OnTargetImpressions) return false;
      if (TotalImpressions != other.TotalImpressions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOnTargetReach) hash ^= OnTargetReach.GetHashCode();
      if (HasTotalReach) hash ^= TotalReach.GetHashCode();
      if (HasOnTargetImpressions) hash ^= OnTargetImpressions.GetHashCode();
      if (HasTotalImpressions) hash ^= TotalImpressions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOnTargetReach) {
        output.WriteRawTag(40);
        output.WriteInt64(OnTargetReach);
      }
      if (HasTotalReach) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalReach);
      }
      if (HasOnTargetImpressions) {
        output.WriteRawTag(56);
        output.WriteInt64(OnTargetImpressions);
      }
      if (HasTotalImpressions) {
        output.WriteRawTag(64);
        output.WriteInt64(TotalImpressions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOnTargetReach) {
        output.WriteRawTag(40);
        output.WriteInt64(OnTargetReach);
      }
      if (HasTotalReach) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalReach);
      }
      if (HasOnTargetImpressions) {
        output.WriteRawTag(56);
        output.WriteInt64(OnTargetImpressions);
      }
      if (HasTotalImpressions) {
        output.WriteRawTag(64);
        output.WriteInt64(TotalImpressions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasOnTargetReach) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OnTargetReach);
      }
      if (HasTotalReach) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalReach);
      }
      if (HasOnTargetImpressions) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OnTargetImpressions);
      }
      if (HasTotalImpressions) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalImpressions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Forecast other) {
      if (other == null) {
        return;
      }
      if (other.HasOnTargetReach) {
        OnTargetReach = other.OnTargetReach;
      }
      if (other.HasTotalReach) {
        TotalReach = other.TotalReach;
      }
      if (other.HasOnTargetImpressions) {
        OnTargetImpressions = other.OnTargetImpressions;
      }
      if (other.HasTotalImpressions) {
        TotalImpressions = other.TotalImpressions;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 40: {
            OnTargetReach = input.ReadInt64();
            break;
          }
          case 48: {
            TotalReach = input.ReadInt64();
            break;
          }
          case 56: {
            OnTargetImpressions = input.ReadInt64();
            break;
          }
          case 64: {
            TotalImpressions = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 40: {
            OnTargetReach = input.ReadInt64();
            break;
          }
          case 48: {
            TotalReach = input.ReadInt64();
            break;
          }
          case 56: {
            OnTargetImpressions = input.ReadInt64();
            break;
          }
          case 64: {
            TotalImpressions = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The forecasted allocation and traffic metrics for a specific product
  /// at a point on the reach curve.
  /// </summary>
  public sealed partial class PlannedProductReachForecast : pb::IMessage<PlannedProductReachForecast>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlannedProductReachForecast> _parser = new pb::MessageParser<PlannedProductReachForecast>(() => new PlannedProductReachForecast());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlannedProductReachForecast> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannedProductReachForecast() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannedProductReachForecast(PlannedProductReachForecast other) : this() {
      plannableProductCode_ = other.plannableProductCode_;
      costMicros_ = other.costMicros_;
      plannedProductForecast_ = other.plannedProductForecast_ != null ? other.plannedProductForecast_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannedProductReachForecast Clone() {
      return new PlannedProductReachForecast(this);
    }

    /// <summary>Field number for the "plannable_product_code" field.</summary>
    public const int PlannableProductCodeFieldNumber = 1;
    private string plannableProductCode_ = "";
    /// <summary>
    /// Selected product for planning. The product codes returned are within the
    /// set of the ones returned by ListPlannableProducts when using the same
    /// location id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlannableProductCode {
      get { return plannableProductCode_; }
      set {
        plannableProductCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cost_micros" field.</summary>
    public const int CostMicrosFieldNumber = 2;
    private long costMicros_;
    /// <summary>
    /// The cost in micros. This may differ from the product's input allocation
    /// if one or more planned products cannot fulfill the budget because of
    /// limited inventory.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CostMicros {
      get { return costMicros_; }
      set {
        costMicros_ = value;
      }
    }

    /// <summary>Field number for the "planned_product_forecast" field.</summary>
    public const int PlannedProductForecastFieldNumber = 3;
    private global::Google.Ads.GoogleAds.V6.Services.PlannedProductForecast plannedProductForecast_;
    /// <summary>
    /// Forecasted traffic metrics for this product.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Services.PlannedProductForecast PlannedProductForecast {
      get { return plannedProductForecast_; }
      set {
        plannedProductForecast_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlannedProductReachForecast);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlannedProductReachForecast other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlannableProductCode != other.PlannableProductCode) return false;
      if (CostMicros != other.CostMicros) return false;
      if (!object.Equals(PlannedProductForecast, other.PlannedProductForecast)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlannableProductCode.Length != 0) hash ^= PlannableProductCode.GetHashCode();
      if (CostMicros != 0L) hash ^= CostMicros.GetHashCode();
      if (plannedProductForecast_ != null) hash ^= PlannedProductForecast.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlannableProductCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlannableProductCode);
      }
      if (CostMicros != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CostMicros);
      }
      if (plannedProductForecast_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlannedProductForecast);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlannableProductCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlannableProductCode);
      }
      if (CostMicros != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CostMicros);
      }
      if (plannedProductForecast_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlannedProductForecast);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlannableProductCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlannableProductCode);
      }
      if (CostMicros != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CostMicros);
      }
      if (plannedProductForecast_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlannedProductForecast);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlannedProductReachForecast other) {
      if (other == null) {
        return;
      }
      if (other.PlannableProductCode.Length != 0) {
        PlannableProductCode = other.PlannableProductCode;
      }
      if (other.CostMicros != 0L) {
        CostMicros = other.CostMicros;
      }
      if (other.plannedProductForecast_ != null) {
        if (plannedProductForecast_ == null) {
          PlannedProductForecast = new global::Google.Ads.GoogleAds.V6.Services.PlannedProductForecast();
        }
        PlannedProductForecast.MergeFrom(other.PlannedProductForecast);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlannableProductCode = input.ReadString();
            break;
          }
          case 16: {
            CostMicros = input.ReadInt64();
            break;
          }
          case 26: {
            if (plannedProductForecast_ == null) {
              PlannedProductForecast = new global::Google.Ads.GoogleAds.V6.Services.PlannedProductForecast();
            }
            input.ReadMessage(PlannedProductForecast);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlannableProductCode = input.ReadString();
            break;
          }
          case 16: {
            CostMicros = input.ReadInt64();
            break;
          }
          case 26: {
            if (plannedProductForecast_ == null) {
              PlannedProductForecast = new global::Google.Ads.GoogleAds.V6.Services.PlannedProductForecast();
            }
            input.ReadMessage(PlannedProductForecast);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Forecasted traffic metrics for a planned product.
  /// </summary>
  public sealed partial class PlannedProductForecast : pb::IMessage<PlannedProductForecast>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlannedProductForecast> _parser = new pb::MessageParser<PlannedProductForecast>(() => new PlannedProductForecast());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlannedProductForecast> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannedProductForecast() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannedProductForecast(PlannedProductForecast other) : this() {
      onTargetReach_ = other.onTargetReach_;
      totalReach_ = other.totalReach_;
      onTargetImpressions_ = other.onTargetImpressions_;
      totalImpressions_ = other.totalImpressions_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlannedProductForecast Clone() {
      return new PlannedProductForecast(this);
    }

    /// <summary>Field number for the "on_target_reach" field.</summary>
    public const int OnTargetReachFieldNumber = 1;
    private long onTargetReach_;
    /// <summary>
    /// Number of unique people reached that exactly matches the Targeting.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OnTargetReach {
      get { return onTargetReach_; }
      set {
        onTargetReach_ = value;
      }
    }

    /// <summary>Field number for the "total_reach" field.</summary>
    public const int TotalReachFieldNumber = 2;
    private long totalReach_;
    /// <summary>
    /// Number of unique people reached. This includes people that may fall
    /// outside the specified Targeting.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalReach {
      get { return totalReach_; }
      set {
        totalReach_ = value;
      }
    }

    /// <summary>Field number for the "on_target_impressions" field.</summary>
    public const int OnTargetImpressionsFieldNumber = 3;
    private long onTargetImpressions_;
    /// <summary>
    /// Number of ad impressions that exactly matches the Targeting.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OnTargetImpressions {
      get { return onTargetImpressions_; }
      set {
        onTargetImpressions_ = value;
      }
    }

    /// <summary>Field number for the "total_impressions" field.</summary>
    public const int TotalImpressionsFieldNumber = 4;
    private long totalImpressions_;
    /// <summary>
    /// Total number of ad impressions. This includes impressions that may fall
    /// outside the specified Targeting, due to insufficient information on
    /// signed-in users.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalImpressions {
      get { return totalImpressions_; }
      set {
        totalImpressions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlannedProductForecast);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlannedProductForecast other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OnTargetReach != other.OnTargetReach) return false;
      if (TotalReach != other.TotalReach) return false;
      if (OnTargetImpressions != other.OnTargetImpressions) return false;
      if (TotalImpressions != other.TotalImpressions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OnTargetReach != 0L) hash ^= OnTargetReach.GetHashCode();
      if (TotalReach != 0L) hash ^= TotalReach.GetHashCode();
      if (OnTargetImpressions != 0L) hash ^= OnTargetImpressions.GetHashCode();
      if (TotalImpressions != 0L) hash ^= TotalImpressions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OnTargetReach != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OnTargetReach);
      }
      if (TotalReach != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TotalReach);
      }
      if (OnTargetImpressions != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(OnTargetImpressions);
      }
      if (TotalImpressions != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalImpressions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OnTargetReach != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OnTargetReach);
      }
      if (TotalReach != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TotalReach);
      }
      if (OnTargetImpressions != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(OnTargetImpressions);
      }
      if (TotalImpressions != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalImpressions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OnTargetReach != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OnTargetReach);
      }
      if (TotalReach != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalReach);
      }
      if (OnTargetImpressions != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OnTargetImpressions);
      }
      if (TotalImpressions != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalImpressions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlannedProductForecast other) {
      if (other == null) {
        return;
      }
      if (other.OnTargetReach != 0L) {
        OnTargetReach = other.OnTargetReach;
      }
      if (other.TotalReach != 0L) {
        TotalReach = other.TotalReach;
      }
      if (other.OnTargetImpressions != 0L) {
        OnTargetImpressions = other.OnTargetImpressions;
      }
      if (other.TotalImpressions != 0L) {
        TotalImpressions = other.TotalImpressions;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OnTargetReach = input.ReadInt64();
            break;
          }
          case 16: {
            TotalReach = input.ReadInt64();
            break;
          }
          case 24: {
            OnTargetImpressions = input.ReadInt64();
            break;
          }
          case 32: {
            TotalImpressions = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OnTargetReach = input.ReadInt64();
            break;
          }
          case 16: {
            TotalReach = input.ReadInt64();
            break;
          }
          case 24: {
            OnTargetImpressions = input.ReadInt64();
            break;
          }
          case 32: {
            TotalImpressions = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Audience metrics for the planned products.
  /// These metrics consider the following targeting dimensions:
  ///
  /// - Location
  /// - PlannableAgeRange
  /// - Gender
  /// </summary>
  public sealed partial class OnTargetAudienceMetrics : pb::IMessage<OnTargetAudienceMetrics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OnTargetAudienceMetrics> _parser = new pb::MessageParser<OnTargetAudienceMetrics>(() => new OnTargetAudienceMetrics());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnTargetAudienceMetrics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Services.ReachPlanServiceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnTargetAudienceMetrics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnTargetAudienceMetrics(OnTargetAudienceMetrics other) : this() {
      _hasBits0 = other._hasBits0;
      youtubeAudienceSize_ = other.youtubeAudienceSize_;
      censusAudienceSize_ = other.censusAudienceSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnTargetAudienceMetrics Clone() {
      return new OnTargetAudienceMetrics(this);
    }

    /// <summary>Field number for the "youtube_audience_size" field.</summary>
    public const int YoutubeAudienceSizeFieldNumber = 3;
    private long youtubeAudienceSize_;
    /// <summary>
    /// Reference audience size matching the considered targeting for YouTube.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long YoutubeAudienceSize {
      get { if ((_hasBits0 & 1) != 0) { return youtubeAudienceSize_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        youtubeAudienceSize_ = value;
      }
    }
    /// <summary>Gets whether the "youtube_audience_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasYoutubeAudienceSize {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "youtube_audience_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearYoutubeAudienceSize() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "census_audience_size" field.</summary>
    public const int CensusAudienceSizeFieldNumber = 4;
    private long censusAudienceSize_;
    /// <summary>
    /// Reference audience size matching the considered targeting for Census.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CensusAudienceSize {
      get { if ((_hasBits0 & 2) != 0) { return censusAudienceSize_; } else { return 0L; } }
      set {
        _hasBits0 |= 2;
        censusAudienceSize_ = value;
      }
    }
    /// <summary>Gets whether the "census_audience_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCensusAudienceSize {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "census_audience_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCensusAudienceSize() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnTargetAudienceMetrics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnTargetAudienceMetrics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (YoutubeAudienceSize != other.YoutubeAudienceSize) return false;
      if (CensusAudienceSize != other.CensusAudienceSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasYoutubeAudienceSize) hash ^= YoutubeAudienceSize.GetHashCode();
      if (HasCensusAudienceSize) hash ^= CensusAudienceSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasYoutubeAudienceSize) {
        output.WriteRawTag(24);
        output.WriteInt64(YoutubeAudienceSize);
      }
      if (HasCensusAudienceSize) {
        output.WriteRawTag(32);
        output.WriteInt64(CensusAudienceSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasYoutubeAudienceSize) {
        output.WriteRawTag(24);
        output.WriteInt64(YoutubeAudienceSize);
      }
      if (HasCensusAudienceSize) {
        output.WriteRawTag(32);
        output.WriteInt64(CensusAudienceSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasYoutubeAudienceSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(YoutubeAudienceSize);
      }
      if (HasCensusAudienceSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CensusAudienceSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnTargetAudienceMetrics other) {
      if (other == null) {
        return;
      }
      if (other.HasYoutubeAudienceSize) {
        YoutubeAudienceSize = other.YoutubeAudienceSize;
      }
      if (other.HasCensusAudienceSize) {
        CensusAudienceSize = other.CensusAudienceSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            YoutubeAudienceSize = input.ReadInt64();
            break;
          }
          case 32: {
            CensusAudienceSize = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 24: {
            YoutubeAudienceSize = input.ReadInt64();
            break;
          }
          case 32: {
            CensusAudienceSize = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
