// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v6/resources/asset.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V6.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v6/resources/asset.proto</summary>
  public static partial class AssetReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v6/resources/asset.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AssetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1nb29nbGUvYWRzL2dvb2dsZWFkcy92Ni9yZXNvdXJjZXMvYXNzZXQucHJv",
            "dG8SIWdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY2LnJlc291cmNlcxowZ29vZ2xl",
            "L2Fkcy9nb29nbGVhZHMvdjYvY29tbW9uL2Fzc2V0X3R5cGVzLnByb3RvGitn",
            "b29nbGUvYWRzL2dvb2dsZWFkcy92Ni9jb21tb24vcG9saWN5LnByb3RvGi5n",
            "b29nbGUvYWRzL2dvb2dsZWFkcy92Ni9lbnVtcy9hc3NldF90eXBlLnByb3Rv",
            "Gjpnb29nbGUvYWRzL2dvb2dsZWFkcy92Ni9lbnVtcy9wb2xpY3lfYXBwcm92",
            "YWxfc3RhdHVzLnByb3RvGjhnb29nbGUvYWRzL2dvb2dsZWFkcy92Ni9lbnVt",
            "cy9wb2xpY3lfcmV2aWV3X3N0YXR1cy5wcm90bxofZ29vZ2xlL2FwaS9maWVs",
            "ZF9iZWhhdmlvci5wcm90bxoZZ29vZ2xlL2FwaS9yZXNvdXJjZS5wcm90bxoc",
            "Z29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90byLnBgoFQXNzZXQSPQoNcmVz",
            "b3VyY2VfbmFtZRgBIAEoCUIm4EEF+kEgCh5nb29nbGVhZHMuZ29vZ2xlYXBp",
            "cy5jb20vQXNzZXQSFAoCaWQYCyABKANCA+BBA0gBiAEBEhEKBG5hbWUYDCAB",
            "KAlIAogBARJJCgR0eXBlGAQgASgOMjYuZ29vZ2xlLmFkcy5nb29nbGVhZHMu",
            "djYuZW51bXMuQXNzZXRUeXBlRW51bS5Bc3NldFR5cGVCA+BBAxISCgpmaW5h",
            "bF91cmxzGA4gAygJElIKDnBvbGljeV9zdW1tYXJ5GA0gASgLMjUuZ29vZ2xl",
            "LmFkcy5nb29nbGVhZHMudjYucmVzb3VyY2VzLkFzc2V0UG9saWN5U3VtbWFy",
            "eUID4EEDElUKE3lvdXR1YmVfdmlkZW9fYXNzZXQYBSABKAsyMS5nb29nbGUu",
            "YWRzLmdvb2dsZWFkcy52Ni5jb21tb24uWW91dHViZVZpZGVvQXNzZXRCA+BB",
            "BUgAElMKEm1lZGlhX2J1bmRsZV9hc3NldBgGIAEoCzIwLmdvb2dsZS5hZHMu",
            "Z29vZ2xlYWRzLnY2LmNvbW1vbi5NZWRpYUJ1bmRsZUFzc2V0QgPgQQVIABJG",
            "CgtpbWFnZV9hc3NldBgHIAEoCzIqLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY2",
            "LmNvbW1vbi5JbWFnZUFzc2V0QgPgQQNIABJECgp0ZXh0X2Fzc2V0GAggASgL",
            "MikuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjYuY29tbW9uLlRleHRBc3NldEID",
            "4EEDSAASSAoPbGVhZF9mb3JtX2Fzc2V0GAkgASgLMi0uZ29vZ2xlLmFkcy5n",
            "b29nbGVhZHMudjYuY29tbW9uLkxlYWRGb3JtQXNzZXRIABJRChRib29rX29u",
            "X2dvb2dsZV9hc3NldBgKIAEoCzIxLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY2",
            "LmNvbW1vbi5Cb29rT25Hb29nbGVBc3NldEgAOk7qQUsKHmdvb2dsZWFkcy5n",
            "b29nbGVhcGlzLmNvbS9Bc3NldBIpY3VzdG9tZXJzL3tjdXN0b21lcl9pZH0v",
            "YXNzZXRzL3thc3NldF9pZH1CDAoKYXNzZXRfZGF0YUIFCgNfaWRCBwoFX25h",
            "bWUiuwIKEkFzc2V0UG9saWN5U3VtbWFyeRJTChRwb2xpY3lfdG9waWNfZW50",
            "cmllcxgBIAMoCzIwLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY2LmNvbW1vbi5Q",
            "b2xpY3lUb3BpY0VudHJ5QgPgQQMSZAoNcmV2aWV3X3N0YXR1cxgCIAEoDjJI",
            "Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY2LmVudW1zLlBvbGljeVJldmlld1N0",
            "YXR1c0VudW0uUG9saWN5UmV2aWV3U3RhdHVzQgPgQQMSagoPYXBwcm92YWxf",
            "c3RhdHVzGAMgASgOMkwuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjYuZW51bXMu",
            "UG9saWN5QXBwcm92YWxTdGF0dXNFbnVtLlBvbGljeUFwcHJvdmFsU3RhdHVz",
            "QgPgQQNC9wEKJWNvbS5nb29nbGUuYWRzLmdvb2dsZWFkcy52Ni5yZXNvdXJj",
            "ZXNCCkFzc2V0UHJvdG9QAVpKZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8v",
            "Z29vZ2xlYXBpcy9hZHMvZ29vZ2xlYWRzL3Y2L3Jlc291cmNlcztyZXNvdXJj",
            "ZXOiAgNHQUGqAiFHb29nbGUuQWRzLkdvb2dsZUFkcy5WNi5SZXNvdXJjZXPK",
            "AiFHb29nbGVcQWRzXEdvb2dsZUFkc1xWNlxSZXNvdXJjZXPqAiVHb29nbGU6",
            "OkFkczo6R29vZ2xlQWRzOjpWNjo6UmVzb3VyY2VzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V6.Common.AssetTypesReflection.Descriptor, global::Google.Ads.GoogleAds.V6.Common.PolicyReflection.Descriptor, global::Google.Ads.GoogleAds.V6.Enums.AssetTypeReflection.Descriptor, global::Google.Ads.GoogleAds.V6.Enums.PolicyApprovalStatusReflection.Descriptor, global::Google.Ads.GoogleAds.V6.Enums.PolicyReviewStatusReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Resources.Asset), global::Google.Ads.GoogleAds.V6.Resources.Asset.Parser, new[]{ "ResourceName", "Id", "Name", "Type", "FinalUrls", "PolicySummary", "YoutubeVideoAsset", "MediaBundleAsset", "ImageAsset", "TextAsset", "LeadFormAsset", "BookOnGoogleAsset" }, new[]{ "AssetData", "Id", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Resources.AssetPolicySummary), global::Google.Ads.GoogleAds.V6.Resources.AssetPolicySummary.Parser, new[]{ "PolicyTopicEntries", "ReviewStatus", "ApprovalStatus" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Asset is a part of an ad which can be shared across multiple ads.
  /// It can be an image (ImageAsset), a video (YoutubeVideoAsset), etc.
  /// </summary>
  public sealed partial class Asset : pb::IMessage<Asset>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Asset> _parser = new pb::MessageParser<Asset>(() => new Asset());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Asset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Resources.AssetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Asset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Asset(Asset other) : this() {
      _hasBits0 = other._hasBits0;
      resourceName_ = other.resourceName_;
      id_ = other.id_;
      name_ = other.name_;
      type_ = other.type_;
      finalUrls_ = other.finalUrls_.Clone();
      policySummary_ = other.policySummary_ != null ? other.policySummary_.Clone() : null;
      switch (other.AssetDataCase) {
        case AssetDataOneofCase.YoutubeVideoAsset:
          YoutubeVideoAsset = other.YoutubeVideoAsset.Clone();
          break;
        case AssetDataOneofCase.MediaBundleAsset:
          MediaBundleAsset = other.MediaBundleAsset.Clone();
          break;
        case AssetDataOneofCase.ImageAsset:
          ImageAsset = other.ImageAsset.Clone();
          break;
        case AssetDataOneofCase.TextAsset:
          TextAsset = other.TextAsset.Clone();
          break;
        case AssetDataOneofCase.LeadFormAsset:
          LeadFormAsset = other.LeadFormAsset.Clone();
          break;
        case AssetDataOneofCase.BookOnGoogleAsset:
          BookOnGoogleAsset = other.BookOnGoogleAsset.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Asset Clone() {
      return new Asset(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// Immutable. The resource name of the asset.
    /// Asset resource names have the form:
    ///
    /// `customers/{customer_id}/assets/{asset_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 11;
    private long id_;
    /// <summary>
    /// Output only. The ID of the asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 12;
    private string name_;
    /// <summary>
    /// Optional name of the asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::Google.Ads.GoogleAds.V6.Enums.AssetTypeEnum.Types.AssetType type_ = global::Google.Ads.GoogleAds.V6.Enums.AssetTypeEnum.Types.AssetType.Unspecified;
    /// <summary>
    /// Output only. Type of the asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Enums.AssetTypeEnum.Types.AssetType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "final_urls" field.</summary>
    public const int FinalUrlsFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _repeated_finalUrls_codec
        = pb::FieldCodec.ForString(114);
    private readonly pbc::RepeatedField<string> finalUrls_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of possible final URLs after all cross domain redirects.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FinalUrls {
      get { return finalUrls_; }
    }

    /// <summary>Field number for the "policy_summary" field.</summary>
    public const int PolicySummaryFieldNumber = 13;
    private global::Google.Ads.GoogleAds.V6.Resources.AssetPolicySummary policySummary_;
    /// <summary>
    /// Output only. Policy information for the asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Resources.AssetPolicySummary PolicySummary {
      get { return policySummary_; }
      set {
        policySummary_ = value;
      }
    }

    /// <summary>Field number for the "youtube_video_asset" field.</summary>
    public const int YoutubeVideoAssetFieldNumber = 5;
    /// <summary>
    /// Immutable. A YouTube video asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Common.YoutubeVideoAsset YoutubeVideoAsset {
      get { return assetDataCase_ == AssetDataOneofCase.YoutubeVideoAsset ? (global::Google.Ads.GoogleAds.V6.Common.YoutubeVideoAsset) assetData_ : null; }
      set {
        assetData_ = value;
        assetDataCase_ = value == null ? AssetDataOneofCase.None : AssetDataOneofCase.YoutubeVideoAsset;
      }
    }

    /// <summary>Field number for the "media_bundle_asset" field.</summary>
    public const int MediaBundleAssetFieldNumber = 6;
    /// <summary>
    /// Immutable. A media bundle asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Common.MediaBundleAsset MediaBundleAsset {
      get { return assetDataCase_ == AssetDataOneofCase.MediaBundleAsset ? (global::Google.Ads.GoogleAds.V6.Common.MediaBundleAsset) assetData_ : null; }
      set {
        assetData_ = value;
        assetDataCase_ = value == null ? AssetDataOneofCase.None : AssetDataOneofCase.MediaBundleAsset;
      }
    }

    /// <summary>Field number for the "image_asset" field.</summary>
    public const int ImageAssetFieldNumber = 7;
    /// <summary>
    /// Output only. An image asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Common.ImageAsset ImageAsset {
      get { return assetDataCase_ == AssetDataOneofCase.ImageAsset ? (global::Google.Ads.GoogleAds.V6.Common.ImageAsset) assetData_ : null; }
      set {
        assetData_ = value;
        assetDataCase_ = value == null ? AssetDataOneofCase.None : AssetDataOneofCase.ImageAsset;
      }
    }

    /// <summary>Field number for the "text_asset" field.</summary>
    public const int TextAssetFieldNumber = 8;
    /// <summary>
    /// Output only. A text asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Common.TextAsset TextAsset {
      get { return assetDataCase_ == AssetDataOneofCase.TextAsset ? (global::Google.Ads.GoogleAds.V6.Common.TextAsset) assetData_ : null; }
      set {
        assetData_ = value;
        assetDataCase_ = value == null ? AssetDataOneofCase.None : AssetDataOneofCase.TextAsset;
      }
    }

    /// <summary>Field number for the "lead_form_asset" field.</summary>
    public const int LeadFormAssetFieldNumber = 9;
    /// <summary>
    /// A lead form asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Common.LeadFormAsset LeadFormAsset {
      get { return assetDataCase_ == AssetDataOneofCase.LeadFormAsset ? (global::Google.Ads.GoogleAds.V6.Common.LeadFormAsset) assetData_ : null; }
      set {
        assetData_ = value;
        assetDataCase_ = value == null ? AssetDataOneofCase.None : AssetDataOneofCase.LeadFormAsset;
      }
    }

    /// <summary>Field number for the "book_on_google_asset" field.</summary>
    public const int BookOnGoogleAssetFieldNumber = 10;
    /// <summary>
    /// A book on google asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Common.BookOnGoogleAsset BookOnGoogleAsset {
      get { return assetDataCase_ == AssetDataOneofCase.BookOnGoogleAsset ? (global::Google.Ads.GoogleAds.V6.Common.BookOnGoogleAsset) assetData_ : null; }
      set {
        assetData_ = value;
        assetDataCase_ = value == null ? AssetDataOneofCase.None : AssetDataOneofCase.BookOnGoogleAsset;
      }
    }

    private object assetData_;
    /// <summary>Enum of possible cases for the "asset_data" oneof.</summary>
    public enum AssetDataOneofCase {
      None = 0,
      YoutubeVideoAsset = 5,
      MediaBundleAsset = 6,
      ImageAsset = 7,
      TextAsset = 8,
      LeadFormAsset = 9,
      BookOnGoogleAsset = 10,
    }
    private AssetDataOneofCase assetDataCase_ = AssetDataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetDataOneofCase AssetDataCase {
      get { return assetDataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAssetData() {
      assetDataCase_ = AssetDataOneofCase.None;
      assetData_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Asset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Asset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if(!finalUrls_.Equals(other.finalUrls_)) return false;
      if (!object.Equals(PolicySummary, other.PolicySummary)) return false;
      if (!object.Equals(YoutubeVideoAsset, other.YoutubeVideoAsset)) return false;
      if (!object.Equals(MediaBundleAsset, other.MediaBundleAsset)) return false;
      if (!object.Equals(ImageAsset, other.ImageAsset)) return false;
      if (!object.Equals(TextAsset, other.TextAsset)) return false;
      if (!object.Equals(LeadFormAsset, other.LeadFormAsset)) return false;
      if (!object.Equals(BookOnGoogleAsset, other.BookOnGoogleAsset)) return false;
      if (AssetDataCase != other.AssetDataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (Type != global::Google.Ads.GoogleAds.V6.Enums.AssetTypeEnum.Types.AssetType.Unspecified) hash ^= Type.GetHashCode();
      hash ^= finalUrls_.GetHashCode();
      if (policySummary_ != null) hash ^= PolicySummary.GetHashCode();
      if (assetDataCase_ == AssetDataOneofCase.YoutubeVideoAsset) hash ^= YoutubeVideoAsset.GetHashCode();
      if (assetDataCase_ == AssetDataOneofCase.MediaBundleAsset) hash ^= MediaBundleAsset.GetHashCode();
      if (assetDataCase_ == AssetDataOneofCase.ImageAsset) hash ^= ImageAsset.GetHashCode();
      if (assetDataCase_ == AssetDataOneofCase.TextAsset) hash ^= TextAsset.GetHashCode();
      if (assetDataCase_ == AssetDataOneofCase.LeadFormAsset) hash ^= LeadFormAsset.GetHashCode();
      if (assetDataCase_ == AssetDataOneofCase.BookOnGoogleAsset) hash ^= BookOnGoogleAsset.GetHashCode();
      hash ^= (int) assetDataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (Type != global::Google.Ads.GoogleAds.V6.Enums.AssetTypeEnum.Types.AssetType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (assetDataCase_ == AssetDataOneofCase.YoutubeVideoAsset) {
        output.WriteRawTag(42);
        output.WriteMessage(YoutubeVideoAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.MediaBundleAsset) {
        output.WriteRawTag(50);
        output.WriteMessage(MediaBundleAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.ImageAsset) {
        output.WriteRawTag(58);
        output.WriteMessage(ImageAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.TextAsset) {
        output.WriteRawTag(66);
        output.WriteMessage(TextAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.LeadFormAsset) {
        output.WriteRawTag(74);
        output.WriteMessage(LeadFormAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.BookOnGoogleAsset) {
        output.WriteRawTag(82);
        output.WriteMessage(BookOnGoogleAsset);
      }
      if (HasId) {
        output.WriteRawTag(88);
        output.WriteInt64(Id);
      }
      if (HasName) {
        output.WriteRawTag(98);
        output.WriteString(Name);
      }
      if (policySummary_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(PolicySummary);
      }
      finalUrls_.WriteTo(output, _repeated_finalUrls_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (Type != global::Google.Ads.GoogleAds.V6.Enums.AssetTypeEnum.Types.AssetType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (assetDataCase_ == AssetDataOneofCase.YoutubeVideoAsset) {
        output.WriteRawTag(42);
        output.WriteMessage(YoutubeVideoAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.MediaBundleAsset) {
        output.WriteRawTag(50);
        output.WriteMessage(MediaBundleAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.ImageAsset) {
        output.WriteRawTag(58);
        output.WriteMessage(ImageAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.TextAsset) {
        output.WriteRawTag(66);
        output.WriteMessage(TextAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.LeadFormAsset) {
        output.WriteRawTag(74);
        output.WriteMessage(LeadFormAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.BookOnGoogleAsset) {
        output.WriteRawTag(82);
        output.WriteMessage(BookOnGoogleAsset);
      }
      if (HasId) {
        output.WriteRawTag(88);
        output.WriteInt64(Id);
      }
      if (HasName) {
        output.WriteRawTag(98);
        output.WriteString(Name);
      }
      if (policySummary_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(PolicySummary);
      }
      finalUrls_.WriteTo(ref output, _repeated_finalUrls_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::Google.Ads.GoogleAds.V6.Enums.AssetTypeEnum.Types.AssetType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += finalUrls_.CalculateSize(_repeated_finalUrls_codec);
      if (policySummary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PolicySummary);
      }
      if (assetDataCase_ == AssetDataOneofCase.YoutubeVideoAsset) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(YoutubeVideoAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.MediaBundleAsset) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MediaBundleAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.ImageAsset) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImageAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.TextAsset) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.LeadFormAsset) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeadFormAsset);
      }
      if (assetDataCase_ == AssetDataOneofCase.BookOnGoogleAsset) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BookOnGoogleAsset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Asset other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.Type != global::Google.Ads.GoogleAds.V6.Enums.AssetTypeEnum.Types.AssetType.Unspecified) {
        Type = other.Type;
      }
      finalUrls_.Add(other.finalUrls_);
      if (other.policySummary_ != null) {
        if (policySummary_ == null) {
          PolicySummary = new global::Google.Ads.GoogleAds.V6.Resources.AssetPolicySummary();
        }
        PolicySummary.MergeFrom(other.PolicySummary);
      }
      switch (other.AssetDataCase) {
        case AssetDataOneofCase.YoutubeVideoAsset:
          if (YoutubeVideoAsset == null) {
            YoutubeVideoAsset = new global::Google.Ads.GoogleAds.V6.Common.YoutubeVideoAsset();
          }
          YoutubeVideoAsset.MergeFrom(other.YoutubeVideoAsset);
          break;
        case AssetDataOneofCase.MediaBundleAsset:
          if (MediaBundleAsset == null) {
            MediaBundleAsset = new global::Google.Ads.GoogleAds.V6.Common.MediaBundleAsset();
          }
          MediaBundleAsset.MergeFrom(other.MediaBundleAsset);
          break;
        case AssetDataOneofCase.ImageAsset:
          if (ImageAsset == null) {
            ImageAsset = new global::Google.Ads.GoogleAds.V6.Common.ImageAsset();
          }
          ImageAsset.MergeFrom(other.ImageAsset);
          break;
        case AssetDataOneofCase.TextAsset:
          if (TextAsset == null) {
            TextAsset = new global::Google.Ads.GoogleAds.V6.Common.TextAsset();
          }
          TextAsset.MergeFrom(other.TextAsset);
          break;
        case AssetDataOneofCase.LeadFormAsset:
          if (LeadFormAsset == null) {
            LeadFormAsset = new global::Google.Ads.GoogleAds.V6.Common.LeadFormAsset();
          }
          LeadFormAsset.MergeFrom(other.LeadFormAsset);
          break;
        case AssetDataOneofCase.BookOnGoogleAsset:
          if (BookOnGoogleAsset == null) {
            BookOnGoogleAsset = new global::Google.Ads.GoogleAds.V6.Common.BookOnGoogleAsset();
          }
          BookOnGoogleAsset.MergeFrom(other.BookOnGoogleAsset);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 32: {
            Type = (global::Google.Ads.GoogleAds.V6.Enums.AssetTypeEnum.Types.AssetType) input.ReadEnum();
            break;
          }
          case 42: {
            global::Google.Ads.GoogleAds.V6.Common.YoutubeVideoAsset subBuilder = new global::Google.Ads.GoogleAds.V6.Common.YoutubeVideoAsset();
            if (assetDataCase_ == AssetDataOneofCase.YoutubeVideoAsset) {
              subBuilder.MergeFrom(YoutubeVideoAsset);
            }
            input.ReadMessage(subBuilder);
            YoutubeVideoAsset = subBuilder;
            break;
          }
          case 50: {
            global::Google.Ads.GoogleAds.V6.Common.MediaBundleAsset subBuilder = new global::Google.Ads.GoogleAds.V6.Common.MediaBundleAsset();
            if (assetDataCase_ == AssetDataOneofCase.MediaBundleAsset) {
              subBuilder.MergeFrom(MediaBundleAsset);
            }
            input.ReadMessage(subBuilder);
            MediaBundleAsset = subBuilder;
            break;
          }
          case 58: {
            global::Google.Ads.GoogleAds.V6.Common.ImageAsset subBuilder = new global::Google.Ads.GoogleAds.V6.Common.ImageAsset();
            if (assetDataCase_ == AssetDataOneofCase.ImageAsset) {
              subBuilder.MergeFrom(ImageAsset);
            }
            input.ReadMessage(subBuilder);
            ImageAsset = subBuilder;
            break;
          }
          case 66: {
            global::Google.Ads.GoogleAds.V6.Common.TextAsset subBuilder = new global::Google.Ads.GoogleAds.V6.Common.TextAsset();
            if (assetDataCase_ == AssetDataOneofCase.TextAsset) {
              subBuilder.MergeFrom(TextAsset);
            }
            input.ReadMessage(subBuilder);
            TextAsset = subBuilder;
            break;
          }
          case 74: {
            global::Google.Ads.GoogleAds.V6.Common.LeadFormAsset subBuilder = new global::Google.Ads.GoogleAds.V6.Common.LeadFormAsset();
            if (assetDataCase_ == AssetDataOneofCase.LeadFormAsset) {
              subBuilder.MergeFrom(LeadFormAsset);
            }
            input.ReadMessage(subBuilder);
            LeadFormAsset = subBuilder;
            break;
          }
          case 82: {
            global::Google.Ads.GoogleAds.V6.Common.BookOnGoogleAsset subBuilder = new global::Google.Ads.GoogleAds.V6.Common.BookOnGoogleAsset();
            if (assetDataCase_ == AssetDataOneofCase.BookOnGoogleAsset) {
              subBuilder.MergeFrom(BookOnGoogleAsset);
            }
            input.ReadMessage(subBuilder);
            BookOnGoogleAsset = subBuilder;
            break;
          }
          case 88: {
            Id = input.ReadInt64();
            break;
          }
          case 98: {
            Name = input.ReadString();
            break;
          }
          case 106: {
            if (policySummary_ == null) {
              PolicySummary = new global::Google.Ads.GoogleAds.V6.Resources.AssetPolicySummary();
            }
            input.ReadMessage(PolicySummary);
            break;
          }
          case 114: {
            finalUrls_.AddEntriesFrom(input, _repeated_finalUrls_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 32: {
            Type = (global::Google.Ads.GoogleAds.V6.Enums.AssetTypeEnum.Types.AssetType) input.ReadEnum();
            break;
          }
          case 42: {
            global::Google.Ads.GoogleAds.V6.Common.YoutubeVideoAsset subBuilder = new global::Google.Ads.GoogleAds.V6.Common.YoutubeVideoAsset();
            if (assetDataCase_ == AssetDataOneofCase.YoutubeVideoAsset) {
              subBuilder.MergeFrom(YoutubeVideoAsset);
            }
            input.ReadMessage(subBuilder);
            YoutubeVideoAsset = subBuilder;
            break;
          }
          case 50: {
            global::Google.Ads.GoogleAds.V6.Common.MediaBundleAsset subBuilder = new global::Google.Ads.GoogleAds.V6.Common.MediaBundleAsset();
            if (assetDataCase_ == AssetDataOneofCase.MediaBundleAsset) {
              subBuilder.MergeFrom(MediaBundleAsset);
            }
            input.ReadMessage(subBuilder);
            MediaBundleAsset = subBuilder;
            break;
          }
          case 58: {
            global::Google.Ads.GoogleAds.V6.Common.ImageAsset subBuilder = new global::Google.Ads.GoogleAds.V6.Common.ImageAsset();
            if (assetDataCase_ == AssetDataOneofCase.ImageAsset) {
              subBuilder.MergeFrom(ImageAsset);
            }
            input.ReadMessage(subBuilder);
            ImageAsset = subBuilder;
            break;
          }
          case 66: {
            global::Google.Ads.GoogleAds.V6.Common.TextAsset subBuilder = new global::Google.Ads.GoogleAds.V6.Common.TextAsset();
            if (assetDataCase_ == AssetDataOneofCase.TextAsset) {
              subBuilder.MergeFrom(TextAsset);
            }
            input.ReadMessage(subBuilder);
            TextAsset = subBuilder;
            break;
          }
          case 74: {
            global::Google.Ads.GoogleAds.V6.Common.LeadFormAsset subBuilder = new global::Google.Ads.GoogleAds.V6.Common.LeadFormAsset();
            if (assetDataCase_ == AssetDataOneofCase.LeadFormAsset) {
              subBuilder.MergeFrom(LeadFormAsset);
            }
            input.ReadMessage(subBuilder);
            LeadFormAsset = subBuilder;
            break;
          }
          case 82: {
            global::Google.Ads.GoogleAds.V6.Common.BookOnGoogleAsset subBuilder = new global::Google.Ads.GoogleAds.V6.Common.BookOnGoogleAsset();
            if (assetDataCase_ == AssetDataOneofCase.BookOnGoogleAsset) {
              subBuilder.MergeFrom(BookOnGoogleAsset);
            }
            input.ReadMessage(subBuilder);
            BookOnGoogleAsset = subBuilder;
            break;
          }
          case 88: {
            Id = input.ReadInt64();
            break;
          }
          case 98: {
            Name = input.ReadString();
            break;
          }
          case 106: {
            if (policySummary_ == null) {
              PolicySummary = new global::Google.Ads.GoogleAds.V6.Resources.AssetPolicySummary();
            }
            input.ReadMessage(PolicySummary);
            break;
          }
          case 114: {
            finalUrls_.AddEntriesFrom(ref input, _repeated_finalUrls_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Contains policy information for an asset.
  /// </summary>
  public sealed partial class AssetPolicySummary : pb::IMessage<AssetPolicySummary>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AssetPolicySummary> _parser = new pb::MessageParser<AssetPolicySummary>(() => new AssetPolicySummary());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssetPolicySummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Resources.AssetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetPolicySummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetPolicySummary(AssetPolicySummary other) : this() {
      policyTopicEntries_ = other.policyTopicEntries_.Clone();
      reviewStatus_ = other.reviewStatus_;
      approvalStatus_ = other.approvalStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetPolicySummary Clone() {
      return new AssetPolicySummary(this);
    }

    /// <summary>Field number for the "policy_topic_entries" field.</summary>
    public const int PolicyTopicEntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V6.Common.PolicyTopicEntry> _repeated_policyTopicEntries_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V6.Common.PolicyTopicEntry.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Common.PolicyTopicEntry> policyTopicEntries_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Common.PolicyTopicEntry>();
    /// <summary>
    /// Output only. The list of policy findings for this asset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V6.Common.PolicyTopicEntry> PolicyTopicEntries {
      get { return policyTopicEntries_; }
    }

    /// <summary>Field number for the "review_status" field.</summary>
    public const int ReviewStatusFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V6.Enums.PolicyReviewStatusEnum.Types.PolicyReviewStatus reviewStatus_ = global::Google.Ads.GoogleAds.V6.Enums.PolicyReviewStatusEnum.Types.PolicyReviewStatus.Unspecified;
    /// <summary>
    /// Output only. Where in the review process this asset is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Enums.PolicyReviewStatusEnum.Types.PolicyReviewStatus ReviewStatus {
      get { return reviewStatus_; }
      set {
        reviewStatus_ = value;
      }
    }

    /// <summary>Field number for the "approval_status" field.</summary>
    public const int ApprovalStatusFieldNumber = 3;
    private global::Google.Ads.GoogleAds.V6.Enums.PolicyApprovalStatusEnum.Types.PolicyApprovalStatus approvalStatus_ = global::Google.Ads.GoogleAds.V6.Enums.PolicyApprovalStatusEnum.Types.PolicyApprovalStatus.Unspecified;
    /// <summary>
    /// Output only. The overall approval status of this asset, calculated based on the status
    /// of its individual policy topic entries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Enums.PolicyApprovalStatusEnum.Types.PolicyApprovalStatus ApprovalStatus {
      get { return approvalStatus_; }
      set {
        approvalStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssetPolicySummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssetPolicySummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!policyTopicEntries_.Equals(other.policyTopicEntries_)) return false;
      if (ReviewStatus != other.ReviewStatus) return false;
      if (ApprovalStatus != other.ApprovalStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= policyTopicEntries_.GetHashCode();
      if (ReviewStatus != global::Google.Ads.GoogleAds.V6.Enums.PolicyReviewStatusEnum.Types.PolicyReviewStatus.Unspecified) hash ^= ReviewStatus.GetHashCode();
      if (ApprovalStatus != global::Google.Ads.GoogleAds.V6.Enums.PolicyApprovalStatusEnum.Types.PolicyApprovalStatus.Unspecified) hash ^= ApprovalStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      policyTopicEntries_.WriteTo(output, _repeated_policyTopicEntries_codec);
      if (ReviewStatus != global::Google.Ads.GoogleAds.V6.Enums.PolicyReviewStatusEnum.Types.PolicyReviewStatus.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ReviewStatus);
      }
      if (ApprovalStatus != global::Google.Ads.GoogleAds.V6.Enums.PolicyApprovalStatusEnum.Types.PolicyApprovalStatus.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ApprovalStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      policyTopicEntries_.WriteTo(ref output, _repeated_policyTopicEntries_codec);
      if (ReviewStatus != global::Google.Ads.GoogleAds.V6.Enums.PolicyReviewStatusEnum.Types.PolicyReviewStatus.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ReviewStatus);
      }
      if (ApprovalStatus != global::Google.Ads.GoogleAds.V6.Enums.PolicyApprovalStatusEnum.Types.PolicyApprovalStatus.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ApprovalStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += policyTopicEntries_.CalculateSize(_repeated_policyTopicEntries_codec);
      if (ReviewStatus != global::Google.Ads.GoogleAds.V6.Enums.PolicyReviewStatusEnum.Types.PolicyReviewStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReviewStatus);
      }
      if (ApprovalStatus != global::Google.Ads.GoogleAds.V6.Enums.PolicyApprovalStatusEnum.Types.PolicyApprovalStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ApprovalStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssetPolicySummary other) {
      if (other == null) {
        return;
      }
      policyTopicEntries_.Add(other.policyTopicEntries_);
      if (other.ReviewStatus != global::Google.Ads.GoogleAds.V6.Enums.PolicyReviewStatusEnum.Types.PolicyReviewStatus.Unspecified) {
        ReviewStatus = other.ReviewStatus;
      }
      if (other.ApprovalStatus != global::Google.Ads.GoogleAds.V6.Enums.PolicyApprovalStatusEnum.Types.PolicyApprovalStatus.Unspecified) {
        ApprovalStatus = other.ApprovalStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            policyTopicEntries_.AddEntriesFrom(input, _repeated_policyTopicEntries_codec);
            break;
          }
          case 16: {
            ReviewStatus = (global::Google.Ads.GoogleAds.V6.Enums.PolicyReviewStatusEnum.Types.PolicyReviewStatus) input.ReadEnum();
            break;
          }
          case 24: {
            ApprovalStatus = (global::Google.Ads.GoogleAds.V6.Enums.PolicyApprovalStatusEnum.Types.PolicyApprovalStatus) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            policyTopicEntries_.AddEntriesFrom(ref input, _repeated_policyTopicEntries_codec);
            break;
          }
          case 16: {
            ReviewStatus = (global::Google.Ads.GoogleAds.V6.Enums.PolicyReviewStatusEnum.Types.PolicyReviewStatus) input.ReadEnum();
            break;
          }
          case 24: {
            ApprovalStatus = (global::Google.Ads.GoogleAds.V6.Enums.PolicyApprovalStatusEnum.Types.PolicyApprovalStatus) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
