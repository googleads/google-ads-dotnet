// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v6/resources/click_view.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V6.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v6/resources/click_view.proto</summary>
  public static partial class ClickViewReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v6/resources/click_view.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClickViewReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJnb29nbGUvYWRzL2dvb2dsZWFkcy92Ni9yZXNvdXJjZXMvY2xpY2tfdmll",
            "dy5wcm90bxIhZ29vZ2xlLmFkcy5nb29nbGVhZHMudjYucmVzb3VyY2VzGjNn",
            "b29nbGUvYWRzL2dvb2dsZWFkcy92Ni9jb21tb24vY2xpY2tfbG9jYXRpb24u",
            "cHJvdG8aH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZpb3IucHJvdG8aGWdvb2ds",
            "ZS9hcGkvcmVzb3VyY2UucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMu",
            "cHJvdG8iuwUKCUNsaWNrVmlldxJBCg1yZXNvdXJjZV9uYW1lGAEgASgJQirg",
            "QQP6QSQKImdvb2dsZWFkcy5nb29nbGVhcGlzLmNvbS9DbGlja1ZpZXcSFwoF",
            "Z2NsaWQYCCABKAlCA+BBA0gAiAEBEkwKEGFyZWFfb2ZfaW50ZXJlc3QYAyAB",
            "KAsyLS5nb29nbGUuYWRzLmdvb2dsZWFkcy52Ni5jb21tb24uQ2xpY2tMb2Nh",
            "dGlvbkID4EEDElAKFGxvY2F0aW9uX29mX3ByZXNlbmNlGAQgASgLMi0uZ29v",
            "Z2xlLmFkcy5nb29nbGVhZHMudjYuY29tbW9uLkNsaWNrTG9jYXRpb25CA+BB",
            "AxIdCgtwYWdlX251bWJlchgJIAEoA0ID4EEDSAGIAQESRAoLYWRfZ3JvdXBf",
            "YWQYCiABKAlCKuBBA/pBJAoiZ29vZ2xlYWRzLmdvb2dsZWFwaXMuY29tL0Fk",
            "R3JvdXBBZEgCiAEBElkKGGNhbXBhaWduX2xvY2F0aW9uX3RhcmdldBgLIAEo",
            "CUIy4EED+kEsCipnb29nbGVhZHMuZ29vZ2xlYXBpcy5jb20vR2VvVGFyZ2V0",
            "Q29uc3RhbnRIA4gBARJBCgl1c2VyX2xpc3QYDCABKAlCKeBBA/pBIwohZ29v",
            "Z2xlYWRzLmdvb2dsZWFwaXMuY29tL1VzZXJMaXN0SASIAQE6WupBVwoiZ29v",
            "Z2xlYWRzLmdvb2dsZWFwaXMuY29tL0NsaWNrVmlldxIxY3VzdG9tZXJzL3tj",
            "dXN0b21lcl9pZH0vY2xpY2tWaWV3cy97ZGF0ZX1+e2djbGlkfUIICgZfZ2Ns",
            "aWRCDgoMX3BhZ2VfbnVtYmVyQg4KDF9hZF9ncm91cF9hZEIbChlfY2FtcGFp",
            "Z25fbG9jYXRpb25fdGFyZ2V0QgwKCl91c2VyX2xpc3RC+wEKJWNvbS5nb29n",
            "bGUuYWRzLmdvb2dsZWFkcy52Ni5yZXNvdXJjZXNCDkNsaWNrVmlld1Byb3Rv",
            "UAFaSmdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvYWRz",
            "L2dvb2dsZWFkcy92Ni9yZXNvdXJjZXM7cmVzb3VyY2VzogIDR0FBqgIhR29v",
            "Z2xlLkFkcy5Hb29nbGVBZHMuVjYuUmVzb3VyY2VzygIhR29vZ2xlXEFkc1xH",
            "b29nbGVBZHNcVjZcUmVzb3VyY2Vz6gIlR29vZ2xlOjpBZHM6Okdvb2dsZUFk",
            "czo6VjY6OlJlc291cmNlc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V6.Common.ClickLocationReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Resources.ClickView), global::Google.Ads.GoogleAds.V6.Resources.ClickView.Parser, new[]{ "ResourceName", "Gclid", "AreaOfInterest", "LocationOfPresence", "PageNumber", "AdGroupAd", "CampaignLocationTarget", "UserList" }, new[]{ "Gclid", "PageNumber", "AdGroupAd", "CampaignLocationTarget", "UserList" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A click view with metrics aggregated at each click level, including both
  /// valid and invalid clicks. For non-Search campaigns, metrics.clicks
  /// represents the number of valid and invalid interactions.
  /// Queries including ClickView must have a filter limiting the results to one
  /// day and can be requested for dates back to 90 days before the time of the
  /// request.
  /// </summary>
  public sealed partial class ClickView : pb::IMessage<ClickView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClickView> _parser = new pb::MessageParser<ClickView>(() => new ClickView());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClickView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Resources.ClickViewReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClickView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClickView(ClickView other) : this() {
      _hasBits0 = other._hasBits0;
      resourceName_ = other.resourceName_;
      gclid_ = other.gclid_;
      areaOfInterest_ = other.areaOfInterest_ != null ? other.areaOfInterest_.Clone() : null;
      locationOfPresence_ = other.locationOfPresence_ != null ? other.locationOfPresence_.Clone() : null;
      pageNumber_ = other.pageNumber_;
      adGroupAd_ = other.adGroupAd_;
      campaignLocationTarget_ = other.campaignLocationTarget_;
      userList_ = other.userList_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClickView Clone() {
      return new ClickView(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// Output only. The resource name of the click view.
    /// Click view resource names have the form:
    ///
    /// `customers/{customer_id}/clickViews/{date (yyyy-MM-dd)}~{gclid}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gclid" field.</summary>
    public const int GclidFieldNumber = 8;
    private string gclid_;
    /// <summary>
    /// Output only. The Google Click ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gclid {
      get { return gclid_ ?? ""; }
      set {
        gclid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gclid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGclid {
      get { return gclid_ != null; }
    }
    /// <summary>Clears the value of the "gclid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGclid() {
      gclid_ = null;
    }

    /// <summary>Field number for the "area_of_interest" field.</summary>
    public const int AreaOfInterestFieldNumber = 3;
    private global::Google.Ads.GoogleAds.V6.Common.ClickLocation areaOfInterest_;
    /// <summary>
    /// Output only. The location criteria matching the area of interest associated with the
    /// impression.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Common.ClickLocation AreaOfInterest {
      get { return areaOfInterest_; }
      set {
        areaOfInterest_ = value;
      }
    }

    /// <summary>Field number for the "location_of_presence" field.</summary>
    public const int LocationOfPresenceFieldNumber = 4;
    private global::Google.Ads.GoogleAds.V6.Common.ClickLocation locationOfPresence_;
    /// <summary>
    /// Output only. The location criteria matching the location of presence associated with the
    /// impression.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Common.ClickLocation LocationOfPresence {
      get { return locationOfPresence_; }
      set {
        locationOfPresence_ = value;
      }
    }

    /// <summary>Field number for the "page_number" field.</summary>
    public const int PageNumberFieldNumber = 9;
    private long pageNumber_;
    /// <summary>
    /// Output only. Page number in search results where the ad was shown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageNumber {
      get { if ((_hasBits0 & 1) != 0) { return pageNumber_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        pageNumber_ = value;
      }
    }
    /// <summary>Gets whether the "page_number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPageNumber {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "page_number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPageNumber() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ad_group_ad" field.</summary>
    public const int AdGroupAdFieldNumber = 10;
    private string adGroupAd_;
    /// <summary>
    /// Output only. The associated ad.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AdGroupAd {
      get { return adGroupAd_ ?? ""; }
      set {
        adGroupAd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ad_group_ad" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAdGroupAd {
      get { return adGroupAd_ != null; }
    }
    /// <summary>Clears the value of the "ad_group_ad" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAdGroupAd() {
      adGroupAd_ = null;
    }

    /// <summary>Field number for the "campaign_location_target" field.</summary>
    public const int CampaignLocationTargetFieldNumber = 11;
    private string campaignLocationTarget_;
    /// <summary>
    /// Output only. The associated campaign location target, if one exists.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CampaignLocationTarget {
      get { return campaignLocationTarget_ ?? ""; }
      set {
        campaignLocationTarget_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "campaign_location_target" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCampaignLocationTarget {
      get { return campaignLocationTarget_ != null; }
    }
    /// <summary>Clears the value of the "campaign_location_target" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCampaignLocationTarget() {
      campaignLocationTarget_ = null;
    }

    /// <summary>Field number for the "user_list" field.</summary>
    public const int UserListFieldNumber = 12;
    private string userList_;
    /// <summary>
    /// Output only. The associated user list, if one exists.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserList {
      get { return userList_ ?? ""; }
      set {
        userList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_list" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserList {
      get { return userList_ != null; }
    }
    /// <summary>Clears the value of the "user_list" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserList() {
      userList_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClickView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClickView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (Gclid != other.Gclid) return false;
      if (!object.Equals(AreaOfInterest, other.AreaOfInterest)) return false;
      if (!object.Equals(LocationOfPresence, other.LocationOfPresence)) return false;
      if (PageNumber != other.PageNumber) return false;
      if (AdGroupAd != other.AdGroupAd) return false;
      if (CampaignLocationTarget != other.CampaignLocationTarget) return false;
      if (UserList != other.UserList) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (HasGclid) hash ^= Gclid.GetHashCode();
      if (areaOfInterest_ != null) hash ^= AreaOfInterest.GetHashCode();
      if (locationOfPresence_ != null) hash ^= LocationOfPresence.GetHashCode();
      if (HasPageNumber) hash ^= PageNumber.GetHashCode();
      if (HasAdGroupAd) hash ^= AdGroupAd.GetHashCode();
      if (HasCampaignLocationTarget) hash ^= CampaignLocationTarget.GetHashCode();
      if (HasUserList) hash ^= UserList.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (areaOfInterest_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AreaOfInterest);
      }
      if (locationOfPresence_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LocationOfPresence);
      }
      if (HasGclid) {
        output.WriteRawTag(66);
        output.WriteString(Gclid);
      }
      if (HasPageNumber) {
        output.WriteRawTag(72);
        output.WriteInt64(PageNumber);
      }
      if (HasAdGroupAd) {
        output.WriteRawTag(82);
        output.WriteString(AdGroupAd);
      }
      if (HasCampaignLocationTarget) {
        output.WriteRawTag(90);
        output.WriteString(CampaignLocationTarget);
      }
      if (HasUserList) {
        output.WriteRawTag(98);
        output.WriteString(UserList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (areaOfInterest_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AreaOfInterest);
      }
      if (locationOfPresence_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LocationOfPresence);
      }
      if (HasGclid) {
        output.WriteRawTag(66);
        output.WriteString(Gclid);
      }
      if (HasPageNumber) {
        output.WriteRawTag(72);
        output.WriteInt64(PageNumber);
      }
      if (HasAdGroupAd) {
        output.WriteRawTag(82);
        output.WriteString(AdGroupAd);
      }
      if (HasCampaignLocationTarget) {
        output.WriteRawTag(90);
        output.WriteString(CampaignLocationTarget);
      }
      if (HasUserList) {
        output.WriteRawTag(98);
        output.WriteString(UserList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (HasGclid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gclid);
      }
      if (areaOfInterest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AreaOfInterest);
      }
      if (locationOfPresence_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocationOfPresence);
      }
      if (HasPageNumber) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageNumber);
      }
      if (HasAdGroupAd) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdGroupAd);
      }
      if (HasCampaignLocationTarget) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CampaignLocationTarget);
      }
      if (HasUserList) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserList);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClickView other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.HasGclid) {
        Gclid = other.Gclid;
      }
      if (other.areaOfInterest_ != null) {
        if (areaOfInterest_ == null) {
          AreaOfInterest = new global::Google.Ads.GoogleAds.V6.Common.ClickLocation();
        }
        AreaOfInterest.MergeFrom(other.AreaOfInterest);
      }
      if (other.locationOfPresence_ != null) {
        if (locationOfPresence_ == null) {
          LocationOfPresence = new global::Google.Ads.GoogleAds.V6.Common.ClickLocation();
        }
        LocationOfPresence.MergeFrom(other.LocationOfPresence);
      }
      if (other.HasPageNumber) {
        PageNumber = other.PageNumber;
      }
      if (other.HasAdGroupAd) {
        AdGroupAd = other.AdGroupAd;
      }
      if (other.HasCampaignLocationTarget) {
        CampaignLocationTarget = other.CampaignLocationTarget;
      }
      if (other.HasUserList) {
        UserList = other.UserList;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 26: {
            if (areaOfInterest_ == null) {
              AreaOfInterest = new global::Google.Ads.GoogleAds.V6.Common.ClickLocation();
            }
            input.ReadMessage(AreaOfInterest);
            break;
          }
          case 34: {
            if (locationOfPresence_ == null) {
              LocationOfPresence = new global::Google.Ads.GoogleAds.V6.Common.ClickLocation();
            }
            input.ReadMessage(LocationOfPresence);
            break;
          }
          case 66: {
            Gclid = input.ReadString();
            break;
          }
          case 72: {
            PageNumber = input.ReadInt64();
            break;
          }
          case 82: {
            AdGroupAd = input.ReadString();
            break;
          }
          case 90: {
            CampaignLocationTarget = input.ReadString();
            break;
          }
          case 98: {
            UserList = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 26: {
            if (areaOfInterest_ == null) {
              AreaOfInterest = new global::Google.Ads.GoogleAds.V6.Common.ClickLocation();
            }
            input.ReadMessage(AreaOfInterest);
            break;
          }
          case 34: {
            if (locationOfPresence_ == null) {
              LocationOfPresence = new global::Google.Ads.GoogleAds.V6.Common.ClickLocation();
            }
            input.ReadMessage(LocationOfPresence);
            break;
          }
          case 66: {
            Gclid = input.ReadString();
            break;
          }
          case 72: {
            PageNumber = input.ReadInt64();
            break;
          }
          case 82: {
            AdGroupAd = input.ReadString();
            break;
          }
          case 90: {
            CampaignLocationTarget = input.ReadString();
            break;
          }
          case 98: {
            UserList = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
