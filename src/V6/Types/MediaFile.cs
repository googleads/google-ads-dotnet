// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v6/resources/media_file.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V6.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v6/resources/media_file.proto</summary>
  public static partial class MediaFileReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v6/resources/media_file.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MediaFileReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJnb29nbGUvYWRzL2dvb2dsZWFkcy92Ni9yZXNvdXJjZXMvbWVkaWFfZmls",
            "ZS5wcm90bxIhZ29vZ2xlLmFkcy5nb29nbGVhZHMudjYucmVzb3VyY2VzGi5n",
            "b29nbGUvYWRzL2dvb2dsZWFkcy92Ni9lbnVtcy9tZWRpYV90eXBlLnByb3Rv",
            "Gi1nb29nbGUvYWRzL2dvb2dsZWFkcy92Ni9lbnVtcy9taW1lX3R5cGUucHJv",
            "dG8aH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZpb3IucHJvdG8aGWdvb2dsZS9h",
            "cGkvcmVzb3VyY2UucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJv",
            "dG8igwYKCU1lZGlhRmlsZRJBCg1yZXNvdXJjZV9uYW1lGAEgASgJQirgQQX6",
            "QSQKImdvb2dsZWFkcy5nb29nbGVhcGlzLmNvbS9NZWRpYUZpbGUSFAoCaWQY",
            "DCABKANCA+BBA0gBiAEBEkkKBHR5cGUYBSABKA4yNi5nb29nbGUuYWRzLmdv",
            "b2dsZWFkcy52Ni5lbnVtcy5NZWRpYVR5cGVFbnVtLk1lZGlhVHlwZUID4EEF",
            "EkwKCW1pbWVfdHlwZRgGIAEoDjI0Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY2",
            "LmVudW1zLk1pbWVUeXBlRW51bS5NaW1lVHlwZUID4EEDEhwKCnNvdXJjZV91",
            "cmwYDSABKAlCA+BBBUgCiAEBEhYKBG5hbWUYDiABKAlCA+BBBUgDiAEBEhsK",
            "CWZpbGVfc2l6ZRgPIAEoA0ID4EEDSASIAQESQwoFaW1hZ2UYAyABKAsyLS5n",
            "b29nbGUuYWRzLmdvb2dsZWFkcy52Ni5yZXNvdXJjZXMuTWVkaWFJbWFnZUID",
            "4EEFSAASSwoMbWVkaWFfYnVuZGxlGAQgASgLMi4uZ29vZ2xlLmFkcy5nb29n",
            "bGVhZHMudjYucmVzb3VyY2VzLk1lZGlhQnVuZGxlQgPgQQVIABJDCgVhdWRp",
            "bxgKIAEoCzItLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY2LnJlc291cmNlcy5N",
            "ZWRpYUF1ZGlvQgPgQQNIABJDCgV2aWRlbxgLIAEoCzItLmdvb2dsZS5hZHMu",
            "Z29vZ2xlYWRzLnY2LnJlc291cmNlcy5NZWRpYVZpZGVvQgPgQQVIADpb6kFY",
            "CiJnb29nbGVhZHMuZ29vZ2xlYXBpcy5jb20vTWVkaWFGaWxlEjJjdXN0b21l",
            "cnMve2N1c3RvbWVyX2lkfS9tZWRpYUZpbGVzL3ttZWRpYV9maWxlX2lkfUIL",
            "CgltZWRpYXR5cGVCBQoDX2lkQg0KC19zb3VyY2VfdXJsQgcKBV9uYW1lQgwK",
            "Cl9maWxlX3NpemUisQEKCk1lZGlhSW1hZ2USFgoEZGF0YRgEIAEoDEID4EEF",
            "SACIAQESJQoTZnVsbF9zaXplX2ltYWdlX3VybBgCIAEoCUID4EEDSAGIAQES",
            "KAoWcHJldmlld19zaXplX2ltYWdlX3VybBgDIAEoCUID4EEDSAKIAQFCBwoF",
            "X2RhdGFCFgoUX2Z1bGxfc2l6ZV9pbWFnZV91cmxCGQoXX3ByZXZpZXdfc2l6",
            "ZV9pbWFnZV91cmwiTQoLTWVkaWFCdW5kbGUSFgoEZGF0YRgDIAEoDEID4EEF",
            "SACIAQESFQoDdXJsGAIgASgJQgPgQQNIAYgBAUIHCgVfZGF0YUIGCgRfdXJs",
            "IkkKCk1lZGlhQXVkaW8SJAoSYWRfZHVyYXRpb25fbWlsbGlzGAIgASgDQgPg",
            "QQNIAIgBAUIVChNfYWRfZHVyYXRpb25fbWlsbGlzIuwBCgpNZWRpYVZpZGVv",
            "EiQKEmFkX2R1cmF0aW9uX21pbGxpcxgFIAEoA0ID4EEDSACIAQESIgoQeW91",
            "dHViZV92aWRlb19pZBgGIAEoCUID4EEFSAGIAQESJQoTYWR2ZXJ0aXNpbmdf",
            "aWRfY29kZRgHIAEoCUID4EEDSAKIAQESGwoJaXNjaV9jb2RlGAggASgJQgPg",
            "QQNIA4gBAUIVChNfYWRfZHVyYXRpb25fbWlsbGlzQhMKEV95b3V0dWJlX3Zp",
            "ZGVvX2lkQhYKFF9hZHZlcnRpc2luZ19pZF9jb2RlQgwKCl9pc2NpX2NvZGVC",
            "+wEKJWNvbS5nb29nbGUuYWRzLmdvb2dsZWFkcy52Ni5yZXNvdXJjZXNCDk1l",
            "ZGlhRmlsZVByb3RvUAFaSmdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dv",
            "b2dsZWFwaXMvYWRzL2dvb2dsZWFkcy92Ni9yZXNvdXJjZXM7cmVzb3VyY2Vz",
            "ogIDR0FBqgIhR29vZ2xlLkFkcy5Hb29nbGVBZHMuVjYuUmVzb3VyY2VzygIh",
            "R29vZ2xlXEFkc1xHb29nbGVBZHNcVjZcUmVzb3VyY2Vz6gIlR29vZ2xlOjpB",
            "ZHM6Okdvb2dsZUFkczo6VjY6OlJlc291cmNlc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V6.Enums.MediaTypeReflection.Descriptor, global::Google.Ads.GoogleAds.V6.Enums.MimeTypeReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Resources.MediaFile), global::Google.Ads.GoogleAds.V6.Resources.MediaFile.Parser, new[]{ "ResourceName", "Id", "Type", "MimeType", "SourceUrl", "Name", "FileSize", "Image", "MediaBundle", "Audio", "Video" }, new[]{ "Mediatype", "Id", "SourceUrl", "Name", "FileSize" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Resources.MediaImage), global::Google.Ads.GoogleAds.V6.Resources.MediaImage.Parser, new[]{ "Data", "FullSizeImageUrl", "PreviewSizeImageUrl" }, new[]{ "Data", "FullSizeImageUrl", "PreviewSizeImageUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Resources.MediaBundle), global::Google.Ads.GoogleAds.V6.Resources.MediaBundle.Parser, new[]{ "Data", "Url" }, new[]{ "Data", "Url" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Resources.MediaAudio), global::Google.Ads.GoogleAds.V6.Resources.MediaAudio.Parser, new[]{ "AdDurationMillis" }, new[]{ "AdDurationMillis" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V6.Resources.MediaVideo), global::Google.Ads.GoogleAds.V6.Resources.MediaVideo.Parser, new[]{ "AdDurationMillis", "YoutubeVideoId", "AdvertisingIdCode", "IsciCode" }, new[]{ "AdDurationMillis", "YoutubeVideoId", "AdvertisingIdCode", "IsciCode" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A media file.
  /// </summary>
  public sealed partial class MediaFile : pb::IMessage<MediaFile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MediaFile> _parser = new pb::MessageParser<MediaFile>(() => new MediaFile());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MediaFile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Resources.MediaFileReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaFile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaFile(MediaFile other) : this() {
      _hasBits0 = other._hasBits0;
      resourceName_ = other.resourceName_;
      id_ = other.id_;
      type_ = other.type_;
      mimeType_ = other.mimeType_;
      sourceUrl_ = other.sourceUrl_;
      name_ = other.name_;
      fileSize_ = other.fileSize_;
      switch (other.MediatypeCase) {
        case MediatypeOneofCase.Image:
          Image = other.Image.Clone();
          break;
        case MediatypeOneofCase.MediaBundle:
          MediaBundle = other.MediaBundle.Clone();
          break;
        case MediatypeOneofCase.Audio:
          Audio = other.Audio.Clone();
          break;
        case MediatypeOneofCase.Video:
          Video = other.Video.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaFile Clone() {
      return new MediaFile(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// Immutable. The resource name of the media file.
    /// Media file resource names have the form:
    ///
    /// `customers/{customer_id}/mediaFiles/{media_file_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 12;
    private long id_;
    /// <summary>
    /// Output only. The ID of the media file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::Google.Ads.GoogleAds.V6.Enums.MediaTypeEnum.Types.MediaType type_ = global::Google.Ads.GoogleAds.V6.Enums.MediaTypeEnum.Types.MediaType.Unspecified;
    /// <summary>
    /// Immutable. Type of the media file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Enums.MediaTypeEnum.Types.MediaType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "mime_type" field.</summary>
    public const int MimeTypeFieldNumber = 6;
    private global::Google.Ads.GoogleAds.V6.Enums.MimeTypeEnum.Types.MimeType mimeType_ = global::Google.Ads.GoogleAds.V6.Enums.MimeTypeEnum.Types.MimeType.Unspecified;
    /// <summary>
    /// Output only. The mime type of the media file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Enums.MimeTypeEnum.Types.MimeType MimeType {
      get { return mimeType_; }
      set {
        mimeType_ = value;
      }
    }

    /// <summary>Field number for the "source_url" field.</summary>
    public const int SourceUrlFieldNumber = 13;
    private string sourceUrl_;
    /// <summary>
    /// Immutable. The URL of where the original media file was downloaded from (or a file
    /// name). Only used for media of type AUDIO and IMAGE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceUrl {
      get { return sourceUrl_ ?? ""; }
      set {
        sourceUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "source_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSourceUrl {
      get { return sourceUrl_ != null; }
    }
    /// <summary>Clears the value of the "source_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSourceUrl() {
      sourceUrl_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 14;
    private string name_;
    /// <summary>
    /// Immutable. The name of the media file. The name can be used by clients to help
    /// identify previously uploaded media.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "file_size" field.</summary>
    public const int FileSizeFieldNumber = 15;
    private long fileSize_;
    /// <summary>
    /// Output only. The size of the media file in bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FileSize {
      get { if ((_hasBits0 & 2) != 0) { return fileSize_; } else { return 0L; } }
      set {
        _hasBits0 |= 2;
        fileSize_ = value;
      }
    }
    /// <summary>Gets whether the "file_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFileSize {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "file_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFileSize() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 3;
    /// <summary>
    /// Immutable. Encapsulates an Image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Resources.MediaImage Image {
      get { return mediatypeCase_ == MediatypeOneofCase.Image ? (global::Google.Ads.GoogleAds.V6.Resources.MediaImage) mediatype_ : null; }
      set {
        mediatype_ = value;
        mediatypeCase_ = value == null ? MediatypeOneofCase.None : MediatypeOneofCase.Image;
      }
    }

    /// <summary>Field number for the "media_bundle" field.</summary>
    public const int MediaBundleFieldNumber = 4;
    /// <summary>
    /// Immutable. A ZIP archive media the content of which contains HTML5 assets.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Resources.MediaBundle MediaBundle {
      get { return mediatypeCase_ == MediatypeOneofCase.MediaBundle ? (global::Google.Ads.GoogleAds.V6.Resources.MediaBundle) mediatype_ : null; }
      set {
        mediatype_ = value;
        mediatypeCase_ = value == null ? MediatypeOneofCase.None : MediatypeOneofCase.MediaBundle;
      }
    }

    /// <summary>Field number for the "audio" field.</summary>
    public const int AudioFieldNumber = 10;
    /// <summary>
    /// Output only. Encapsulates an Audio.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Resources.MediaAudio Audio {
      get { return mediatypeCase_ == MediatypeOneofCase.Audio ? (global::Google.Ads.GoogleAds.V6.Resources.MediaAudio) mediatype_ : null; }
      set {
        mediatype_ = value;
        mediatypeCase_ = value == null ? MediatypeOneofCase.None : MediatypeOneofCase.Audio;
      }
    }

    /// <summary>Field number for the "video" field.</summary>
    public const int VideoFieldNumber = 11;
    /// <summary>
    /// Immutable. Encapsulates a Video.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V6.Resources.MediaVideo Video {
      get { return mediatypeCase_ == MediatypeOneofCase.Video ? (global::Google.Ads.GoogleAds.V6.Resources.MediaVideo) mediatype_ : null; }
      set {
        mediatype_ = value;
        mediatypeCase_ = value == null ? MediatypeOneofCase.None : MediatypeOneofCase.Video;
      }
    }

    private object mediatype_;
    /// <summary>Enum of possible cases for the "mediatype" oneof.</summary>
    public enum MediatypeOneofCase {
      None = 0,
      Image = 3,
      MediaBundle = 4,
      Audio = 10,
      Video = 11,
    }
    private MediatypeOneofCase mediatypeCase_ = MediatypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediatypeOneofCase MediatypeCase {
      get { return mediatypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMediatype() {
      mediatypeCase_ = MediatypeOneofCase.None;
      mediatype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MediaFile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MediaFile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (MimeType != other.MimeType) return false;
      if (SourceUrl != other.SourceUrl) return false;
      if (Name != other.Name) return false;
      if (FileSize != other.FileSize) return false;
      if (!object.Equals(Image, other.Image)) return false;
      if (!object.Equals(MediaBundle, other.MediaBundle)) return false;
      if (!object.Equals(Audio, other.Audio)) return false;
      if (!object.Equals(Video, other.Video)) return false;
      if (MediatypeCase != other.MediatypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (Type != global::Google.Ads.GoogleAds.V6.Enums.MediaTypeEnum.Types.MediaType.Unspecified) hash ^= Type.GetHashCode();
      if (MimeType != global::Google.Ads.GoogleAds.V6.Enums.MimeTypeEnum.Types.MimeType.Unspecified) hash ^= MimeType.GetHashCode();
      if (HasSourceUrl) hash ^= SourceUrl.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasFileSize) hash ^= FileSize.GetHashCode();
      if (mediatypeCase_ == MediatypeOneofCase.Image) hash ^= Image.GetHashCode();
      if (mediatypeCase_ == MediatypeOneofCase.MediaBundle) hash ^= MediaBundle.GetHashCode();
      if (mediatypeCase_ == MediatypeOneofCase.Audio) hash ^= Audio.GetHashCode();
      if (mediatypeCase_ == MediatypeOneofCase.Video) hash ^= Video.GetHashCode();
      hash ^= (int) mediatypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (mediatypeCase_ == MediatypeOneofCase.Image) {
        output.WriteRawTag(26);
        output.WriteMessage(Image);
      }
      if (mediatypeCase_ == MediatypeOneofCase.MediaBundle) {
        output.WriteRawTag(34);
        output.WriteMessage(MediaBundle);
      }
      if (Type != global::Google.Ads.GoogleAds.V6.Enums.MediaTypeEnum.Types.MediaType.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (MimeType != global::Google.Ads.GoogleAds.V6.Enums.MimeTypeEnum.Types.MimeType.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) MimeType);
      }
      if (mediatypeCase_ == MediatypeOneofCase.Audio) {
        output.WriteRawTag(82);
        output.WriteMessage(Audio);
      }
      if (mediatypeCase_ == MediatypeOneofCase.Video) {
        output.WriteRawTag(90);
        output.WriteMessage(Video);
      }
      if (HasId) {
        output.WriteRawTag(96);
        output.WriteInt64(Id);
      }
      if (HasSourceUrl) {
        output.WriteRawTag(106);
        output.WriteString(SourceUrl);
      }
      if (HasName) {
        output.WriteRawTag(114);
        output.WriteString(Name);
      }
      if (HasFileSize) {
        output.WriteRawTag(120);
        output.WriteInt64(FileSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (mediatypeCase_ == MediatypeOneofCase.Image) {
        output.WriteRawTag(26);
        output.WriteMessage(Image);
      }
      if (mediatypeCase_ == MediatypeOneofCase.MediaBundle) {
        output.WriteRawTag(34);
        output.WriteMessage(MediaBundle);
      }
      if (Type != global::Google.Ads.GoogleAds.V6.Enums.MediaTypeEnum.Types.MediaType.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (MimeType != global::Google.Ads.GoogleAds.V6.Enums.MimeTypeEnum.Types.MimeType.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) MimeType);
      }
      if (mediatypeCase_ == MediatypeOneofCase.Audio) {
        output.WriteRawTag(82);
        output.WriteMessage(Audio);
      }
      if (mediatypeCase_ == MediatypeOneofCase.Video) {
        output.WriteRawTag(90);
        output.WriteMessage(Video);
      }
      if (HasId) {
        output.WriteRawTag(96);
        output.WriteInt64(Id);
      }
      if (HasSourceUrl) {
        output.WriteRawTag(106);
        output.WriteString(SourceUrl);
      }
      if (HasName) {
        output.WriteRawTag(114);
        output.WriteString(Name);
      }
      if (HasFileSize) {
        output.WriteRawTag(120);
        output.WriteInt64(FileSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Type != global::Google.Ads.GoogleAds.V6.Enums.MediaTypeEnum.Types.MediaType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (MimeType != global::Google.Ads.GoogleAds.V6.Enums.MimeTypeEnum.Types.MimeType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MimeType);
      }
      if (HasSourceUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceUrl);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasFileSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FileSize);
      }
      if (mediatypeCase_ == MediatypeOneofCase.Image) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (mediatypeCase_ == MediatypeOneofCase.MediaBundle) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MediaBundle);
      }
      if (mediatypeCase_ == MediatypeOneofCase.Audio) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Audio);
      }
      if (mediatypeCase_ == MediatypeOneofCase.Video) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Video);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MediaFile other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.Type != global::Google.Ads.GoogleAds.V6.Enums.MediaTypeEnum.Types.MediaType.Unspecified) {
        Type = other.Type;
      }
      if (other.MimeType != global::Google.Ads.GoogleAds.V6.Enums.MimeTypeEnum.Types.MimeType.Unspecified) {
        MimeType = other.MimeType;
      }
      if (other.HasSourceUrl) {
        SourceUrl = other.SourceUrl;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasFileSize) {
        FileSize = other.FileSize;
      }
      switch (other.MediatypeCase) {
        case MediatypeOneofCase.Image:
          if (Image == null) {
            Image = new global::Google.Ads.GoogleAds.V6.Resources.MediaImage();
          }
          Image.MergeFrom(other.Image);
          break;
        case MediatypeOneofCase.MediaBundle:
          if (MediaBundle == null) {
            MediaBundle = new global::Google.Ads.GoogleAds.V6.Resources.MediaBundle();
          }
          MediaBundle.MergeFrom(other.MediaBundle);
          break;
        case MediatypeOneofCase.Audio:
          if (Audio == null) {
            Audio = new global::Google.Ads.GoogleAds.V6.Resources.MediaAudio();
          }
          Audio.MergeFrom(other.Audio);
          break;
        case MediatypeOneofCase.Video:
          if (Video == null) {
            Video = new global::Google.Ads.GoogleAds.V6.Resources.MediaVideo();
          }
          Video.MergeFrom(other.Video);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 26: {
            global::Google.Ads.GoogleAds.V6.Resources.MediaImage subBuilder = new global::Google.Ads.GoogleAds.V6.Resources.MediaImage();
            if (mediatypeCase_ == MediatypeOneofCase.Image) {
              subBuilder.MergeFrom(Image);
            }
            input.ReadMessage(subBuilder);
            Image = subBuilder;
            break;
          }
          case 34: {
            global::Google.Ads.GoogleAds.V6.Resources.MediaBundle subBuilder = new global::Google.Ads.GoogleAds.V6.Resources.MediaBundle();
            if (mediatypeCase_ == MediatypeOneofCase.MediaBundle) {
              subBuilder.MergeFrom(MediaBundle);
            }
            input.ReadMessage(subBuilder);
            MediaBundle = subBuilder;
            break;
          }
          case 40: {
            Type = (global::Google.Ads.GoogleAds.V6.Enums.MediaTypeEnum.Types.MediaType) input.ReadEnum();
            break;
          }
          case 48: {
            MimeType = (global::Google.Ads.GoogleAds.V6.Enums.MimeTypeEnum.Types.MimeType) input.ReadEnum();
            break;
          }
          case 82: {
            global::Google.Ads.GoogleAds.V6.Resources.MediaAudio subBuilder = new global::Google.Ads.GoogleAds.V6.Resources.MediaAudio();
            if (mediatypeCase_ == MediatypeOneofCase.Audio) {
              subBuilder.MergeFrom(Audio);
            }
            input.ReadMessage(subBuilder);
            Audio = subBuilder;
            break;
          }
          case 90: {
            global::Google.Ads.GoogleAds.V6.Resources.MediaVideo subBuilder = new global::Google.Ads.GoogleAds.V6.Resources.MediaVideo();
            if (mediatypeCase_ == MediatypeOneofCase.Video) {
              subBuilder.MergeFrom(Video);
            }
            input.ReadMessage(subBuilder);
            Video = subBuilder;
            break;
          }
          case 96: {
            Id = input.ReadInt64();
            break;
          }
          case 106: {
            SourceUrl = input.ReadString();
            break;
          }
          case 114: {
            Name = input.ReadString();
            break;
          }
          case 120: {
            FileSize = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 26: {
            global::Google.Ads.GoogleAds.V6.Resources.MediaImage subBuilder = new global::Google.Ads.GoogleAds.V6.Resources.MediaImage();
            if (mediatypeCase_ == MediatypeOneofCase.Image) {
              subBuilder.MergeFrom(Image);
            }
            input.ReadMessage(subBuilder);
            Image = subBuilder;
            break;
          }
          case 34: {
            global::Google.Ads.GoogleAds.V6.Resources.MediaBundle subBuilder = new global::Google.Ads.GoogleAds.V6.Resources.MediaBundle();
            if (mediatypeCase_ == MediatypeOneofCase.MediaBundle) {
              subBuilder.MergeFrom(MediaBundle);
            }
            input.ReadMessage(subBuilder);
            MediaBundle = subBuilder;
            break;
          }
          case 40: {
            Type = (global::Google.Ads.GoogleAds.V6.Enums.MediaTypeEnum.Types.MediaType) input.ReadEnum();
            break;
          }
          case 48: {
            MimeType = (global::Google.Ads.GoogleAds.V6.Enums.MimeTypeEnum.Types.MimeType) input.ReadEnum();
            break;
          }
          case 82: {
            global::Google.Ads.GoogleAds.V6.Resources.MediaAudio subBuilder = new global::Google.Ads.GoogleAds.V6.Resources.MediaAudio();
            if (mediatypeCase_ == MediatypeOneofCase.Audio) {
              subBuilder.MergeFrom(Audio);
            }
            input.ReadMessage(subBuilder);
            Audio = subBuilder;
            break;
          }
          case 90: {
            global::Google.Ads.GoogleAds.V6.Resources.MediaVideo subBuilder = new global::Google.Ads.GoogleAds.V6.Resources.MediaVideo();
            if (mediatypeCase_ == MediatypeOneofCase.Video) {
              subBuilder.MergeFrom(Video);
            }
            input.ReadMessage(subBuilder);
            Video = subBuilder;
            break;
          }
          case 96: {
            Id = input.ReadInt64();
            break;
          }
          case 106: {
            SourceUrl = input.ReadString();
            break;
          }
          case 114: {
            Name = input.ReadString();
            break;
          }
          case 120: {
            FileSize = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Encapsulates an Image.
  /// </summary>
  public sealed partial class MediaImage : pb::IMessage<MediaImage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MediaImage> _parser = new pb::MessageParser<MediaImage>(() => new MediaImage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MediaImage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Resources.MediaFileReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaImage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaImage(MediaImage other) : this() {
      data_ = other.data_;
      fullSizeImageUrl_ = other.fullSizeImageUrl_;
      previewSizeImageUrl_ = other.previewSizeImageUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaImage Clone() {
      return new MediaImage(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 4;
    private pb::ByteString data_;
    /// <summary>
    /// Immutable. Raw image data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_ ?? pb::ByteString.Empty; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasData {
      get { return data_ != null; }
    }
    /// <summary>Clears the value of the "data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      data_ = null;
    }

    /// <summary>Field number for the "full_size_image_url" field.</summary>
    public const int FullSizeImageUrlFieldNumber = 2;
    private string fullSizeImageUrl_;
    /// <summary>
    /// Output only. The url to the full size version of the image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FullSizeImageUrl {
      get { return fullSizeImageUrl_ ?? ""; }
      set {
        fullSizeImageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "full_size_image_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFullSizeImageUrl {
      get { return fullSizeImageUrl_ != null; }
    }
    /// <summary>Clears the value of the "full_size_image_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFullSizeImageUrl() {
      fullSizeImageUrl_ = null;
    }

    /// <summary>Field number for the "preview_size_image_url" field.</summary>
    public const int PreviewSizeImageUrlFieldNumber = 3;
    private string previewSizeImageUrl_;
    /// <summary>
    /// Output only. The url to the preview size version of the image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PreviewSizeImageUrl {
      get { return previewSizeImageUrl_ ?? ""; }
      set {
        previewSizeImageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "preview_size_image_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPreviewSizeImageUrl {
      get { return previewSizeImageUrl_ != null; }
    }
    /// <summary>Clears the value of the "preview_size_image_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPreviewSizeImageUrl() {
      previewSizeImageUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MediaImage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MediaImage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      if (FullSizeImageUrl != other.FullSizeImageUrl) return false;
      if (PreviewSizeImageUrl != other.PreviewSizeImageUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasData) hash ^= Data.GetHashCode();
      if (HasFullSizeImageUrl) hash ^= FullSizeImageUrl.GetHashCode();
      if (HasPreviewSizeImageUrl) hash ^= PreviewSizeImageUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFullSizeImageUrl) {
        output.WriteRawTag(18);
        output.WriteString(FullSizeImageUrl);
      }
      if (HasPreviewSizeImageUrl) {
        output.WriteRawTag(26);
        output.WriteString(PreviewSizeImageUrl);
      }
      if (HasData) {
        output.WriteRawTag(34);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFullSizeImageUrl) {
        output.WriteRawTag(18);
        output.WriteString(FullSizeImageUrl);
      }
      if (HasPreviewSizeImageUrl) {
        output.WriteRawTag(26);
        output.WriteString(PreviewSizeImageUrl);
      }
      if (HasData) {
        output.WriteRawTag(34);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasData) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (HasFullSizeImageUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullSizeImageUrl);
      }
      if (HasPreviewSizeImageUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreviewSizeImageUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MediaImage other) {
      if (other == null) {
        return;
      }
      if (other.HasData) {
        Data = other.Data;
      }
      if (other.HasFullSizeImageUrl) {
        FullSizeImageUrl = other.FullSizeImageUrl;
      }
      if (other.HasPreviewSizeImageUrl) {
        PreviewSizeImageUrl = other.PreviewSizeImageUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            FullSizeImageUrl = input.ReadString();
            break;
          }
          case 26: {
            PreviewSizeImageUrl = input.ReadString();
            break;
          }
          case 34: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            FullSizeImageUrl = input.ReadString();
            break;
          }
          case 26: {
            PreviewSizeImageUrl = input.ReadString();
            break;
          }
          case 34: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents a ZIP archive media the content of which contains HTML5 assets.
  /// </summary>
  public sealed partial class MediaBundle : pb::IMessage<MediaBundle>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MediaBundle> _parser = new pb::MessageParser<MediaBundle>(() => new MediaBundle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MediaBundle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Resources.MediaFileReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaBundle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaBundle(MediaBundle other) : this() {
      data_ = other.data_;
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaBundle Clone() {
      return new MediaBundle(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private pb::ByteString data_;
    /// <summary>
    /// Immutable. Raw zipped data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_ ?? pb::ByteString.Empty; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasData {
      get { return data_ != null; }
    }
    /// <summary>Clears the value of the "data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      data_ = null;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private string url_;
    /// <summary>
    /// Output only. The url to access the uploaded zipped data.
    /// E.g. https://tpc.googlesyndication.com/simgad/123
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? ""; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MediaBundle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MediaBundle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasData) hash ^= Data.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasData) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUrl) {
        output.WriteRawTag(18);
        output.WriteString(Url);
      }
      if (HasData) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasData) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MediaBundle other) {
      if (other == null) {
        return;
      }
      if (other.HasData) {
        Data = other.Data;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            Url = input.ReadString();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Encapsulates an Audio.
  /// </summary>
  public sealed partial class MediaAudio : pb::IMessage<MediaAudio>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MediaAudio> _parser = new pb::MessageParser<MediaAudio>(() => new MediaAudio());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MediaAudio> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Resources.MediaFileReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaAudio() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaAudio(MediaAudio other) : this() {
      _hasBits0 = other._hasBits0;
      adDurationMillis_ = other.adDurationMillis_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaAudio Clone() {
      return new MediaAudio(this);
    }

    /// <summary>Field number for the "ad_duration_millis" field.</summary>
    public const int AdDurationMillisFieldNumber = 2;
    private long adDurationMillis_;
    /// <summary>
    /// Output only. The duration of the Audio in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AdDurationMillis {
      get { if ((_hasBits0 & 1) != 0) { return adDurationMillis_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        adDurationMillis_ = value;
      }
    }
    /// <summary>Gets whether the "ad_duration_millis" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAdDurationMillis {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ad_duration_millis" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAdDurationMillis() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MediaAudio);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MediaAudio other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AdDurationMillis != other.AdDurationMillis) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAdDurationMillis) hash ^= AdDurationMillis.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAdDurationMillis) {
        output.WriteRawTag(16);
        output.WriteInt64(AdDurationMillis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAdDurationMillis) {
        output.WriteRawTag(16);
        output.WriteInt64(AdDurationMillis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAdDurationMillis) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AdDurationMillis);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MediaAudio other) {
      if (other == null) {
        return;
      }
      if (other.HasAdDurationMillis) {
        AdDurationMillis = other.AdDurationMillis;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            AdDurationMillis = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            AdDurationMillis = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Encapsulates a Video.
  /// </summary>
  public sealed partial class MediaVideo : pb::IMessage<MediaVideo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MediaVideo> _parser = new pb::MessageParser<MediaVideo>(() => new MediaVideo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MediaVideo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V6.Resources.MediaFileReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaVideo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaVideo(MediaVideo other) : this() {
      _hasBits0 = other._hasBits0;
      adDurationMillis_ = other.adDurationMillis_;
      youtubeVideoId_ = other.youtubeVideoId_;
      advertisingIdCode_ = other.advertisingIdCode_;
      isciCode_ = other.isciCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MediaVideo Clone() {
      return new MediaVideo(this);
    }

    /// <summary>Field number for the "ad_duration_millis" field.</summary>
    public const int AdDurationMillisFieldNumber = 5;
    private long adDurationMillis_;
    /// <summary>
    /// Output only. The duration of the Video in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AdDurationMillis {
      get { if ((_hasBits0 & 1) != 0) { return adDurationMillis_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        adDurationMillis_ = value;
      }
    }
    /// <summary>Gets whether the "ad_duration_millis" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAdDurationMillis {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ad_duration_millis" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAdDurationMillis() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "youtube_video_id" field.</summary>
    public const int YoutubeVideoIdFieldNumber = 6;
    private string youtubeVideoId_;
    /// <summary>
    /// Immutable. The YouTube video ID (as seen in YouTube URLs).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string YoutubeVideoId {
      get { return youtubeVideoId_ ?? ""; }
      set {
        youtubeVideoId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "youtube_video_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasYoutubeVideoId {
      get { return youtubeVideoId_ != null; }
    }
    /// <summary>Clears the value of the "youtube_video_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearYoutubeVideoId() {
      youtubeVideoId_ = null;
    }

    /// <summary>Field number for the "advertising_id_code" field.</summary>
    public const int AdvertisingIdCodeFieldNumber = 7;
    private string advertisingIdCode_;
    /// <summary>
    /// Output only. The Advertising Digital Identification code for this video, as defined by
    /// the American Association of Advertising Agencies, used mainly for
    /// television commercials.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AdvertisingIdCode {
      get { return advertisingIdCode_ ?? ""; }
      set {
        advertisingIdCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "advertising_id_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAdvertisingIdCode {
      get { return advertisingIdCode_ != null; }
    }
    /// <summary>Clears the value of the "advertising_id_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAdvertisingIdCode() {
      advertisingIdCode_ = null;
    }

    /// <summary>Field number for the "isci_code" field.</summary>
    public const int IsciCodeFieldNumber = 8;
    private string isciCode_;
    /// <summary>
    /// Output only. The Industry Standard Commercial Identifier code for this video, used
    /// mainly for television commercials.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IsciCode {
      get { return isciCode_ ?? ""; }
      set {
        isciCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "isci_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsciCode {
      get { return isciCode_ != null; }
    }
    /// <summary>Clears the value of the "isci_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsciCode() {
      isciCode_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MediaVideo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MediaVideo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AdDurationMillis != other.AdDurationMillis) return false;
      if (YoutubeVideoId != other.YoutubeVideoId) return false;
      if (AdvertisingIdCode != other.AdvertisingIdCode) return false;
      if (IsciCode != other.IsciCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAdDurationMillis) hash ^= AdDurationMillis.GetHashCode();
      if (HasYoutubeVideoId) hash ^= YoutubeVideoId.GetHashCode();
      if (HasAdvertisingIdCode) hash ^= AdvertisingIdCode.GetHashCode();
      if (HasIsciCode) hash ^= IsciCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAdDurationMillis) {
        output.WriteRawTag(40);
        output.WriteInt64(AdDurationMillis);
      }
      if (HasYoutubeVideoId) {
        output.WriteRawTag(50);
        output.WriteString(YoutubeVideoId);
      }
      if (HasAdvertisingIdCode) {
        output.WriteRawTag(58);
        output.WriteString(AdvertisingIdCode);
      }
      if (HasIsciCode) {
        output.WriteRawTag(66);
        output.WriteString(IsciCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAdDurationMillis) {
        output.WriteRawTag(40);
        output.WriteInt64(AdDurationMillis);
      }
      if (HasYoutubeVideoId) {
        output.WriteRawTag(50);
        output.WriteString(YoutubeVideoId);
      }
      if (HasAdvertisingIdCode) {
        output.WriteRawTag(58);
        output.WriteString(AdvertisingIdCode);
      }
      if (HasIsciCode) {
        output.WriteRawTag(66);
        output.WriteString(IsciCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAdDurationMillis) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AdDurationMillis);
      }
      if (HasYoutubeVideoId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(YoutubeVideoId);
      }
      if (HasAdvertisingIdCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdvertisingIdCode);
      }
      if (HasIsciCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IsciCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MediaVideo other) {
      if (other == null) {
        return;
      }
      if (other.HasAdDurationMillis) {
        AdDurationMillis = other.AdDurationMillis;
      }
      if (other.HasYoutubeVideoId) {
        YoutubeVideoId = other.YoutubeVideoId;
      }
      if (other.HasAdvertisingIdCode) {
        AdvertisingIdCode = other.AdvertisingIdCode;
      }
      if (other.HasIsciCode) {
        IsciCode = other.IsciCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 40: {
            AdDurationMillis = input.ReadInt64();
            break;
          }
          case 50: {
            YoutubeVideoId = input.ReadString();
            break;
          }
          case 58: {
            AdvertisingIdCode = input.ReadString();
            break;
          }
          case 66: {
            IsciCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 40: {
            AdDurationMillis = input.ReadInt64();
            break;
          }
          case 50: {
            YoutubeVideoId = input.ReadString();
            break;
          }
          case 58: {
            AdvertisingIdCode = input.ReadString();
            break;
          }
          case 66: {
            IsciCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
