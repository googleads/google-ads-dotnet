// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v7/resources/ad_group.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V7.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v7/resources/ad_group.proto</summary>
  public static partial class AdGroupReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v7/resources/ad_group.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AdGroupReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBnb29nbGUvYWRzL2dvb2dsZWFkcy92Ny9yZXNvdXJjZXMvYWRfZ3JvdXAu",
            "cHJvdG8SIWdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY3LnJlc291cmNlcxo1Z29v",
            "Z2xlL2Fkcy9nb29nbGVhZHMvdjcvY29tbW9uL2N1c3RvbV9wYXJhbWV0ZXIu",
            "cHJvdG8aRGdvb2dsZS9hZHMvZ29vZ2xlYWRzL3Y3L2NvbW1vbi9leHBsb3Jl",
            "cl9hdXRvX29wdGltaXplcl9zZXR0aW5nLnByb3RvGjZnb29nbGUvYWRzL2dv",
            "b2dsZWFkcy92Ny9jb21tb24vdGFyZ2V0aW5nX3NldHRpbmcucHJvdG8aPWdv",
            "b2dsZS9hZHMvZ29vZ2xlYWRzL3Y3L2VudW1zL2FkX2dyb3VwX2FkX3JvdGF0",
            "aW9uX21vZGUucHJvdG8aM2dvb2dsZS9hZHMvZ29vZ2xlYWRzL3Y3L2VudW1z",
            "L2FkX2dyb3VwX3N0YXR1cy5wcm90bxoxZ29vZ2xlL2Fkcy9nb29nbGVhZHMv",
            "djcvZW51bXMvYWRfZ3JvdXBfdHlwZS5wcm90bxo0Z29vZ2xlL2Fkcy9nb29n",
            "bGVhZHMvdjcvZW51bXMvYXNzZXRfZmllbGRfdHlwZS5wcm90bxoyZ29vZ2xl",
            "L2Fkcy9nb29nbGVhZHMvdjcvZW51bXMvYmlkZGluZ19zb3VyY2UucHJvdG8a",
            "N2dvb2dsZS9hZHMvZ29vZ2xlYWRzL3Y3L2VudW1zL3RhcmdldGluZ19kaW1l",
            "bnNpb24ucHJvdG8aH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZpb3IucHJvdG8a",
            "GWdvb2dsZS9hcGkvcmVzb3VyY2UucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3Rh",
            "dGlvbnMucHJvdG8i7g8KB0FkR3JvdXASPwoNcmVzb3VyY2VfbmFtZRgBIAEo",
            "CUIo4EEF+kEiCiBnb29nbGVhZHMuZ29vZ2xlYXBpcy5jb20vQWRHcm91cBIU",
            "CgJpZBgiIAEoA0ID4EEDSACIAQESEQoEbmFtZRgjIAEoCUgBiAEBEk4KBnN0",
            "YXR1cxgFIAEoDjI+Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY3LmVudW1zLkFk",
            "R3JvdXBTdGF0dXNFbnVtLkFkR3JvdXBTdGF0dXMSTQoEdHlwZRgMIAEoDjI6",
            "Lmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY3LmVudW1zLkFkR3JvdXBUeXBlRW51",
            "bS5BZEdyb3VwVHlwZUID4EEFEmgKEGFkX3JvdGF0aW9uX21vZGUYFiABKA4y",
            "Ti5nb29nbGUuYWRzLmdvb2dsZWFkcy52Ny5lbnVtcy5BZEdyb3VwQWRSb3Rh",
            "dGlvbk1vZGVFbnVtLkFkR3JvdXBBZFJvdGF0aW9uTW9kZRJECg1iYXNlX2Fk",
            "X2dyb3VwGCQgASgJQijgQQP6QSIKIGdvb2dsZWFkcy5nb29nbGVhcGlzLmNv",
            "bS9BZEdyb3VwSAKIAQESIgoVdHJhY2tpbmdfdXJsX3RlbXBsYXRlGCUgASgJ",
            "SAOIAQESTgoVdXJsX2N1c3RvbV9wYXJhbWV0ZXJzGAYgAygLMi8uZ29vZ2xl",
            "LmFkcy5nb29nbGVhZHMudjcuY29tbW9uLkN1c3RvbVBhcmFtZXRlchJACghj",
            "YW1wYWlnbhgmIAEoCUIp4EEF+kEjCiFnb29nbGVhZHMuZ29vZ2xlYXBpcy5j",
            "b20vQ2FtcGFpZ25IBIgBARIbCg5jcGNfYmlkX21pY3JvcxgnIAEoA0gFiAEB",
            "EhsKDmNwbV9iaWRfbWljcm9zGCggASgDSAaIAQESHgoRdGFyZ2V0X2NwYV9t",
            "aWNyb3MYKSABKANIB4gBARIgCg5jcHZfYmlkX21pY3JvcxgqIAEoA0ID4EED",
            "SAiIAQESHgoRdGFyZ2V0X2NwbV9taWNyb3MYKyABKANICYgBARIYCgt0YXJn",
            "ZXRfcm9hcxgsIAEoAUgKiAEBEiMKFnBlcmNlbnRfY3BjX2JpZF9taWNyb3MY",
            "LSABKANIC4gBARJlCh9leHBsb3Jlcl9hdXRvX29wdGltaXplcl9zZXR0aW5n",
            "GBUgASgLMjwuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjcuY29tbW9uLkV4cGxv",
            "cmVyQXV0b09wdGltaXplclNldHRpbmcSbgocZGlzcGxheV9jdXN0b21fYmlk",
            "X2RpbWVuc2lvbhgXIAEoDjJILmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY3LmVu",
            "dW1zLlRhcmdldGluZ0RpbWVuc2lvbkVudW0uVGFyZ2V0aW5nRGltZW5zaW9u",
            "Eh0KEGZpbmFsX3VybF9zdWZmaXgYLiABKAlIDIgBARJLChF0YXJnZXRpbmdf",
            "c2V0dGluZxgZIAEoCzIwLmdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY3LmNvbW1v",
            "bi5UYXJnZXRpbmdTZXR0aW5nEi0KG2VmZmVjdGl2ZV90YXJnZXRfY3BhX21p",
            "Y3JvcxgvIAEoA0ID4EEDSA2IAQESaAobZWZmZWN0aXZlX3RhcmdldF9jcGFf",
            "c291cmNlGB0gASgOMj4uZ29vZ2xlLmFkcy5nb29nbGVhZHMudjcuZW51bXMu",
            "QmlkZGluZ1NvdXJjZUVudW0uQmlkZGluZ1NvdXJjZUID4EEDEicKFWVmZmVj",
            "dGl2ZV90YXJnZXRfcm9hcxgwIAEoAUID4EEDSA6IAQESaQocZWZmZWN0aXZl",
            "X3RhcmdldF9yb2FzX3NvdXJjZRggIAEoDjI+Lmdvb2dsZS5hZHMuZ29vZ2xl",
            "YWRzLnY3LmVudW1zLkJpZGRpbmdTb3VyY2VFbnVtLkJpZGRpbmdTb3VyY2VC",
            "A+BBAxI9CgZsYWJlbHMYMSADKAlCLeBBA/pBJwolZ29vZ2xlYWRzLmdvb2ds",
            "ZWFwaXMuY29tL0FkR3JvdXBMYWJlbBJrCiFleGNsdWRlZF9wYXJlbnRfYXNz",
            "ZXRfZmllbGRfdHlwZXMYNiADKA4yQC5nb29nbGUuYWRzLmdvb2dsZWFkcy52",
            "Ny5lbnVtcy5Bc3NldEZpZWxkVHlwZUVudW0uQXNzZXRGaWVsZFR5cGU6VepB",
            "UgogZ29vZ2xlYWRzLmdvb2dsZWFwaXMuY29tL0FkR3JvdXASLmN1c3RvbWVy",
            "cy97Y3VzdG9tZXJfaWR9L2FkR3JvdXBzL3thZF9ncm91cF9pZH1CBQoDX2lk",
            "QgcKBV9uYW1lQhAKDl9iYXNlX2FkX2dyb3VwQhgKFl90cmFja2luZ191cmxf",
            "dGVtcGxhdGVCCwoJX2NhbXBhaWduQhEKD19jcGNfYmlkX21pY3Jvc0IRCg9f",
            "Y3BtX2JpZF9taWNyb3NCFAoSX3RhcmdldF9jcGFfbWljcm9zQhEKD19jcHZf",
            "YmlkX21pY3Jvc0IUChJfdGFyZ2V0X2NwbV9taWNyb3NCDgoMX3RhcmdldF9y",
            "b2FzQhkKF19wZXJjZW50X2NwY19iaWRfbWljcm9zQhMKEV9maW5hbF91cmxf",
            "c3VmZml4Qh4KHF9lZmZlY3RpdmVfdGFyZ2V0X2NwYV9taWNyb3NCGAoWX2Vm",
            "ZmVjdGl2ZV90YXJnZXRfcm9hc0L5AQolY29tLmdvb2dsZS5hZHMuZ29vZ2xl",
            "YWRzLnY3LnJlc291cmNlc0IMQWRHcm91cFByb3RvUAFaSmdvb2dsZS5nb2xh",
            "bmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvYWRzL2dvb2dsZWFkcy92Ny9y",
            "ZXNvdXJjZXM7cmVzb3VyY2VzogIDR0FBqgIhR29vZ2xlLkFkcy5Hb29nbGVB",
            "ZHMuVjcuUmVzb3VyY2VzygIhR29vZ2xlXEFkc1xHb29nbGVBZHNcVjdcUmVz",
            "b3VyY2Vz6gIlR29vZ2xlOjpBZHM6Okdvb2dsZUFkczo6Vjc6OlJlc291cmNl",
            "c2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V7.Common.CustomParameterReflection.Descriptor, global::Google.Ads.GoogleAds.V7.Common.ExplorerAutoOptimizerSettingReflection.Descriptor, global::Google.Ads.GoogleAds.V7.Common.TargetingSettingReflection.Descriptor, global::Google.Ads.GoogleAds.V7.Enums.AdGroupAdRotationModeReflection.Descriptor, global::Google.Ads.GoogleAds.V7.Enums.AdGroupStatusReflection.Descriptor, global::Google.Ads.GoogleAds.V7.Enums.AdGroupTypeReflection.Descriptor, global::Google.Ads.GoogleAds.V7.Enums.AssetFieldTypeReflection.Descriptor, global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceReflection.Descriptor, global::Google.Ads.GoogleAds.V7.Enums.TargetingDimensionReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Resources.AdGroup), global::Google.Ads.GoogleAds.V7.Resources.AdGroup.Parser, new[]{ "ResourceName", "Id", "Name", "Status", "Type", "AdRotationMode", "BaseAdGroup", "TrackingUrlTemplate", "UrlCustomParameters", "Campaign", "CpcBidMicros", "CpmBidMicros", "TargetCpaMicros", "CpvBidMicros", "TargetCpmMicros", "TargetRoas", "PercentCpcBidMicros", "ExplorerAutoOptimizerSetting", "DisplayCustomBidDimension", "FinalUrlSuffix", "TargetingSetting", "EffectiveTargetCpaMicros", "EffectiveTargetCpaSource", "EffectiveTargetRoas", "EffectiveTargetRoasSource", "Labels", "ExcludedParentAssetFieldTypes" }, new[]{ "Id", "Name", "BaseAdGroup", "TrackingUrlTemplate", "Campaign", "CpcBidMicros", "CpmBidMicros", "TargetCpaMicros", "CpvBidMicros", "TargetCpmMicros", "TargetRoas", "PercentCpcBidMicros", "FinalUrlSuffix", "EffectiveTargetCpaMicros", "EffectiveTargetRoas" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// An ad group.
  /// </summary>
  public sealed partial class AdGroup : pb::IMessage<AdGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AdGroup> _parser = new pb::MessageParser<AdGroup>(() => new AdGroup());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Resources.AdGroupReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdGroup(AdGroup other) : this() {
      _hasBits0 = other._hasBits0;
      resourceName_ = other.resourceName_;
      id_ = other.id_;
      name_ = other.name_;
      status_ = other.status_;
      type_ = other.type_;
      adRotationMode_ = other.adRotationMode_;
      baseAdGroup_ = other.baseAdGroup_;
      trackingUrlTemplate_ = other.trackingUrlTemplate_;
      urlCustomParameters_ = other.urlCustomParameters_.Clone();
      campaign_ = other.campaign_;
      cpcBidMicros_ = other.cpcBidMicros_;
      cpmBidMicros_ = other.cpmBidMicros_;
      targetCpaMicros_ = other.targetCpaMicros_;
      cpvBidMicros_ = other.cpvBidMicros_;
      targetCpmMicros_ = other.targetCpmMicros_;
      targetRoas_ = other.targetRoas_;
      percentCpcBidMicros_ = other.percentCpcBidMicros_;
      explorerAutoOptimizerSetting_ = other.explorerAutoOptimizerSetting_ != null ? other.explorerAutoOptimizerSetting_.Clone() : null;
      displayCustomBidDimension_ = other.displayCustomBidDimension_;
      finalUrlSuffix_ = other.finalUrlSuffix_;
      targetingSetting_ = other.targetingSetting_ != null ? other.targetingSetting_.Clone() : null;
      effectiveTargetCpaMicros_ = other.effectiveTargetCpaMicros_;
      effectiveTargetCpaSource_ = other.effectiveTargetCpaSource_;
      effectiveTargetRoas_ = other.effectiveTargetRoas_;
      effectiveTargetRoasSource_ = other.effectiveTargetRoasSource_;
      labels_ = other.labels_.Clone();
      excludedParentAssetFieldTypes_ = other.excludedParentAssetFieldTypes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdGroup Clone() {
      return new AdGroup(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// Immutable. The resource name of the ad group.
    /// Ad group resource names have the form:
    ///
    /// `customers/{customer_id}/adGroups/{ad_group_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 34;
    private long id_;
    /// <summary>
    /// Output only. The ID of the ad group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 35;
    private string name_;
    /// <summary>
    /// The name of the ad group.
    ///
    /// This field is required and should not be empty when creating new ad
    /// groups.
    ///
    /// It must contain fewer than 255 UTF-8 full-width characters.
    ///
    /// It must not contain any null (code point 0x0), NL line feed
    /// (code point 0xA) or carriage return (code point 0xD) characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private global::Google.Ads.GoogleAds.V7.Enums.AdGroupStatusEnum.Types.AdGroupStatus status_ = global::Google.Ads.GoogleAds.V7.Enums.AdGroupStatusEnum.Types.AdGroupStatus.Unspecified;
    /// <summary>
    /// The status of the ad group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V7.Enums.AdGroupStatusEnum.Types.AdGroupStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 12;
    private global::Google.Ads.GoogleAds.V7.Enums.AdGroupTypeEnum.Types.AdGroupType type_ = global::Google.Ads.GoogleAds.V7.Enums.AdGroupTypeEnum.Types.AdGroupType.Unspecified;
    /// <summary>
    /// Immutable. The type of the ad group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V7.Enums.AdGroupTypeEnum.Types.AdGroupType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "ad_rotation_mode" field.</summary>
    public const int AdRotationModeFieldNumber = 22;
    private global::Google.Ads.GoogleAds.V7.Enums.AdGroupAdRotationModeEnum.Types.AdGroupAdRotationMode adRotationMode_ = global::Google.Ads.GoogleAds.V7.Enums.AdGroupAdRotationModeEnum.Types.AdGroupAdRotationMode.Unspecified;
    /// <summary>
    /// The ad rotation mode of the ad group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V7.Enums.AdGroupAdRotationModeEnum.Types.AdGroupAdRotationMode AdRotationMode {
      get { return adRotationMode_; }
      set {
        adRotationMode_ = value;
      }
    }

    /// <summary>Field number for the "base_ad_group" field.</summary>
    public const int BaseAdGroupFieldNumber = 36;
    private string baseAdGroup_;
    /// <summary>
    /// Output only. For draft or experiment ad groups, this field is the resource name of the
    /// base ad group from which this ad group was created. If a draft or
    /// experiment ad group does not have a base ad group, then this field is null.
    ///
    /// For base ad groups, this field equals the ad group resource name.
    ///
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BaseAdGroup {
      get { return baseAdGroup_ ?? ""; }
      set {
        baseAdGroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "base_ad_group" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBaseAdGroup {
      get { return baseAdGroup_ != null; }
    }
    /// <summary>Clears the value of the "base_ad_group" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBaseAdGroup() {
      baseAdGroup_ = null;
    }

    /// <summary>Field number for the "tracking_url_template" field.</summary>
    public const int TrackingUrlTemplateFieldNumber = 37;
    private string trackingUrlTemplate_;
    /// <summary>
    /// The URL template for constructing a tracking URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TrackingUrlTemplate {
      get { return trackingUrlTemplate_ ?? ""; }
      set {
        trackingUrlTemplate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tracking_url_template" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTrackingUrlTemplate {
      get { return trackingUrlTemplate_ != null; }
    }
    /// <summary>Clears the value of the "tracking_url_template" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTrackingUrlTemplate() {
      trackingUrlTemplate_ = null;
    }

    /// <summary>Field number for the "url_custom_parameters" field.</summary>
    public const int UrlCustomParametersFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V7.Common.CustomParameter> _repeated_urlCustomParameters_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Ads.GoogleAds.V7.Common.CustomParameter.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V7.Common.CustomParameter> urlCustomParameters_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V7.Common.CustomParameter>();
    /// <summary>
    /// The list of mappings used to substitute custom parameter tags in a
    /// `tracking_url_template`, `final_urls`, or `mobile_final_urls`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V7.Common.CustomParameter> UrlCustomParameters {
      get { return urlCustomParameters_; }
    }

    /// <summary>Field number for the "campaign" field.</summary>
    public const int CampaignFieldNumber = 38;
    private string campaign_;
    /// <summary>
    /// Immutable. The campaign to which the ad group belongs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Campaign {
      get { return campaign_ ?? ""; }
      set {
        campaign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "campaign" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCampaign {
      get { return campaign_ != null; }
    }
    /// <summary>Clears the value of the "campaign" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCampaign() {
      campaign_ = null;
    }

    /// <summary>Field number for the "cpc_bid_micros" field.</summary>
    public const int CpcBidMicrosFieldNumber = 39;
    private long cpcBidMicros_;
    /// <summary>
    /// The maximum CPC (cost-per-click) bid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CpcBidMicros {
      get { if ((_hasBits0 & 2) != 0) { return cpcBidMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 2;
        cpcBidMicros_ = value;
      }
    }
    /// <summary>Gets whether the "cpc_bid_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCpcBidMicros {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cpc_bid_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCpcBidMicros() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "cpm_bid_micros" field.</summary>
    public const int CpmBidMicrosFieldNumber = 40;
    private long cpmBidMicros_;
    /// <summary>
    /// The maximum CPM (cost-per-thousand viewable impressions) bid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CpmBidMicros {
      get { if ((_hasBits0 & 4) != 0) { return cpmBidMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 4;
        cpmBidMicros_ = value;
      }
    }
    /// <summary>Gets whether the "cpm_bid_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCpmBidMicros {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "cpm_bid_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCpmBidMicros() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "target_cpa_micros" field.</summary>
    public const int TargetCpaMicrosFieldNumber = 41;
    private long targetCpaMicros_;
    /// <summary>
    /// The target CPA (cost-per-acquisition).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TargetCpaMicros {
      get { if ((_hasBits0 & 8) != 0) { return targetCpaMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 8;
        targetCpaMicros_ = value;
      }
    }
    /// <summary>Gets whether the "target_cpa_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetCpaMicros {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "target_cpa_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetCpaMicros() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "cpv_bid_micros" field.</summary>
    public const int CpvBidMicrosFieldNumber = 42;
    private long cpvBidMicros_;
    /// <summary>
    /// Output only. The CPV (cost-per-view) bid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CpvBidMicros {
      get { if ((_hasBits0 & 16) != 0) { return cpvBidMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 16;
        cpvBidMicros_ = value;
      }
    }
    /// <summary>Gets whether the "cpv_bid_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCpvBidMicros {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "cpv_bid_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCpvBidMicros() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "target_cpm_micros" field.</summary>
    public const int TargetCpmMicrosFieldNumber = 43;
    private long targetCpmMicros_;
    /// <summary>
    /// Average amount in micros that the advertiser is willing to pay for every
    /// thousand times the ad is shown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TargetCpmMicros {
      get { if ((_hasBits0 & 32) != 0) { return targetCpmMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 32;
        targetCpmMicros_ = value;
      }
    }
    /// <summary>Gets whether the "target_cpm_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetCpmMicros {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "target_cpm_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetCpmMicros() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "target_roas" field.</summary>
    public const int TargetRoasFieldNumber = 44;
    private double targetRoas_;
    /// <summary>
    /// The target ROAS (return-on-ad-spend) override. If the ad group's campaign
    /// bidding strategy is a standard Target ROAS strategy, then this field
    /// overrides the target ROAS specified in the campaign's bidding strategy.
    /// Otherwise, this value is ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TargetRoas {
      get { if ((_hasBits0 & 64) != 0) { return targetRoas_; } else { return 0D; } }
      set {
        _hasBits0 |= 64;
        targetRoas_ = value;
      }
    }
    /// <summary>Gets whether the "target_roas" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetRoas {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "target_roas" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetRoas() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "percent_cpc_bid_micros" field.</summary>
    public const int PercentCpcBidMicrosFieldNumber = 45;
    private long percentCpcBidMicros_;
    /// <summary>
    /// The percent cpc bid amount, expressed as a fraction of the advertised price
    /// for some good or service. The valid range for the fraction is [0,1) and the
    /// value stored here is 1,000,000 * [fraction].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PercentCpcBidMicros {
      get { if ((_hasBits0 & 128) != 0) { return percentCpcBidMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 128;
        percentCpcBidMicros_ = value;
      }
    }
    /// <summary>Gets whether the "percent_cpc_bid_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPercentCpcBidMicros {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "percent_cpc_bid_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPercentCpcBidMicros() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "explorer_auto_optimizer_setting" field.</summary>
    public const int ExplorerAutoOptimizerSettingFieldNumber = 21;
    private global::Google.Ads.GoogleAds.V7.Common.ExplorerAutoOptimizerSetting explorerAutoOptimizerSetting_;
    /// <summary>
    /// Settings for the Display Campaign Optimizer, initially termed "Explorer".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V7.Common.ExplorerAutoOptimizerSetting ExplorerAutoOptimizerSetting {
      get { return explorerAutoOptimizerSetting_; }
      set {
        explorerAutoOptimizerSetting_ = value;
      }
    }

    /// <summary>Field number for the "display_custom_bid_dimension" field.</summary>
    public const int DisplayCustomBidDimensionFieldNumber = 23;
    private global::Google.Ads.GoogleAds.V7.Enums.TargetingDimensionEnum.Types.TargetingDimension displayCustomBidDimension_ = global::Google.Ads.GoogleAds.V7.Enums.TargetingDimensionEnum.Types.TargetingDimension.Unspecified;
    /// <summary>
    /// Allows advertisers to specify a targeting dimension on which to place
    /// absolute bids. This is only applicable for campaigns that target only the
    /// display network and not search.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V7.Enums.TargetingDimensionEnum.Types.TargetingDimension DisplayCustomBidDimension {
      get { return displayCustomBidDimension_; }
      set {
        displayCustomBidDimension_ = value;
      }
    }

    /// <summary>Field number for the "final_url_suffix" field.</summary>
    public const int FinalUrlSuffixFieldNumber = 46;
    private string finalUrlSuffix_;
    /// <summary>
    /// URL template for appending params to Final URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FinalUrlSuffix {
      get { return finalUrlSuffix_ ?? ""; }
      set {
        finalUrlSuffix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "final_url_suffix" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFinalUrlSuffix {
      get { return finalUrlSuffix_ != null; }
    }
    /// <summary>Clears the value of the "final_url_suffix" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFinalUrlSuffix() {
      finalUrlSuffix_ = null;
    }

    /// <summary>Field number for the "targeting_setting" field.</summary>
    public const int TargetingSettingFieldNumber = 25;
    private global::Google.Ads.GoogleAds.V7.Common.TargetingSetting targetingSetting_;
    /// <summary>
    /// Setting for targeting related features.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V7.Common.TargetingSetting TargetingSetting {
      get { return targetingSetting_; }
      set {
        targetingSetting_ = value;
      }
    }

    /// <summary>Field number for the "effective_target_cpa_micros" field.</summary>
    public const int EffectiveTargetCpaMicrosFieldNumber = 47;
    private long effectiveTargetCpaMicros_;
    /// <summary>
    /// Output only. The effective target CPA (cost-per-acquisition).
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EffectiveTargetCpaMicros {
      get { if ((_hasBits0 & 256) != 0) { return effectiveTargetCpaMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 256;
        effectiveTargetCpaMicros_ = value;
      }
    }
    /// <summary>Gets whether the "effective_target_cpa_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEffectiveTargetCpaMicros {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "effective_target_cpa_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEffectiveTargetCpaMicros() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "effective_target_cpa_source" field.</summary>
    public const int EffectiveTargetCpaSourceFieldNumber = 29;
    private global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource effectiveTargetCpaSource_ = global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource.Unspecified;
    /// <summary>
    /// Output only. Source of the effective target CPA.
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource EffectiveTargetCpaSource {
      get { return effectiveTargetCpaSource_; }
      set {
        effectiveTargetCpaSource_ = value;
      }
    }

    /// <summary>Field number for the "effective_target_roas" field.</summary>
    public const int EffectiveTargetRoasFieldNumber = 48;
    private double effectiveTargetRoas_;
    /// <summary>
    /// Output only. The effective target ROAS (return-on-ad-spend).
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double EffectiveTargetRoas {
      get { if ((_hasBits0 & 512) != 0) { return effectiveTargetRoas_; } else { return 0D; } }
      set {
        _hasBits0 |= 512;
        effectiveTargetRoas_ = value;
      }
    }
    /// <summary>Gets whether the "effective_target_roas" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEffectiveTargetRoas {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "effective_target_roas" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEffectiveTargetRoas() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "effective_target_roas_source" field.</summary>
    public const int EffectiveTargetRoasSourceFieldNumber = 32;
    private global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource effectiveTargetRoasSource_ = global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource.Unspecified;
    /// <summary>
    /// Output only. Source of the effective target ROAS.
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource EffectiveTargetRoasSource {
      get { return effectiveTargetRoasSource_; }
      set {
        effectiveTargetRoasSource_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 49;
    private static readonly pb::FieldCodec<string> _repeated_labels_codec
        = pb::FieldCodec.ForString(394);
    private readonly pbc::RepeatedField<string> labels_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Output only. The resource names of labels attached to this ad group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "excluded_parent_asset_field_types" field.</summary>
    public const int ExcludedParentAssetFieldTypesFieldNumber = 54;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V7.Enums.AssetFieldTypeEnum.Types.AssetFieldType> _repeated_excludedParentAssetFieldTypes_codec
        = pb::FieldCodec.ForEnum(434, x => (int) x, x => (global::Google.Ads.GoogleAds.V7.Enums.AssetFieldTypeEnum.Types.AssetFieldType) x);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V7.Enums.AssetFieldTypeEnum.Types.AssetFieldType> excludedParentAssetFieldTypes_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V7.Enums.AssetFieldTypeEnum.Types.AssetFieldType>();
    /// <summary>
    /// The asset field types that should be excluded from this ad group. Asset
    /// links with these field types will not be inherited by this ad group from
    /// the upper levels.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V7.Enums.AssetFieldTypeEnum.Types.AssetFieldType> ExcludedParentAssetFieldTypes {
      get { return excludedParentAssetFieldTypes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Status != other.Status) return false;
      if (Type != other.Type) return false;
      if (AdRotationMode != other.AdRotationMode) return false;
      if (BaseAdGroup != other.BaseAdGroup) return false;
      if (TrackingUrlTemplate != other.TrackingUrlTemplate) return false;
      if(!urlCustomParameters_.Equals(other.urlCustomParameters_)) return false;
      if (Campaign != other.Campaign) return false;
      if (CpcBidMicros != other.CpcBidMicros) return false;
      if (CpmBidMicros != other.CpmBidMicros) return false;
      if (TargetCpaMicros != other.TargetCpaMicros) return false;
      if (CpvBidMicros != other.CpvBidMicros) return false;
      if (TargetCpmMicros != other.TargetCpmMicros) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TargetRoas, other.TargetRoas)) return false;
      if (PercentCpcBidMicros != other.PercentCpcBidMicros) return false;
      if (!object.Equals(ExplorerAutoOptimizerSetting, other.ExplorerAutoOptimizerSetting)) return false;
      if (DisplayCustomBidDimension != other.DisplayCustomBidDimension) return false;
      if (FinalUrlSuffix != other.FinalUrlSuffix) return false;
      if (!object.Equals(TargetingSetting, other.TargetingSetting)) return false;
      if (EffectiveTargetCpaMicros != other.EffectiveTargetCpaMicros) return false;
      if (EffectiveTargetCpaSource != other.EffectiveTargetCpaSource) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(EffectiveTargetRoas, other.EffectiveTargetRoas)) return false;
      if (EffectiveTargetRoasSource != other.EffectiveTargetRoasSource) return false;
      if(!labels_.Equals(other.labels_)) return false;
      if(!excludedParentAssetFieldTypes_.Equals(other.excludedParentAssetFieldTypes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (Status != global::Google.Ads.GoogleAds.V7.Enums.AdGroupStatusEnum.Types.AdGroupStatus.Unspecified) hash ^= Status.GetHashCode();
      if (Type != global::Google.Ads.GoogleAds.V7.Enums.AdGroupTypeEnum.Types.AdGroupType.Unspecified) hash ^= Type.GetHashCode();
      if (AdRotationMode != global::Google.Ads.GoogleAds.V7.Enums.AdGroupAdRotationModeEnum.Types.AdGroupAdRotationMode.Unspecified) hash ^= AdRotationMode.GetHashCode();
      if (HasBaseAdGroup) hash ^= BaseAdGroup.GetHashCode();
      if (HasTrackingUrlTemplate) hash ^= TrackingUrlTemplate.GetHashCode();
      hash ^= urlCustomParameters_.GetHashCode();
      if (HasCampaign) hash ^= Campaign.GetHashCode();
      if (HasCpcBidMicros) hash ^= CpcBidMicros.GetHashCode();
      if (HasCpmBidMicros) hash ^= CpmBidMicros.GetHashCode();
      if (HasTargetCpaMicros) hash ^= TargetCpaMicros.GetHashCode();
      if (HasCpvBidMicros) hash ^= CpvBidMicros.GetHashCode();
      if (HasTargetCpmMicros) hash ^= TargetCpmMicros.GetHashCode();
      if (HasTargetRoas) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TargetRoas);
      if (HasPercentCpcBidMicros) hash ^= PercentCpcBidMicros.GetHashCode();
      if (explorerAutoOptimizerSetting_ != null) hash ^= ExplorerAutoOptimizerSetting.GetHashCode();
      if (DisplayCustomBidDimension != global::Google.Ads.GoogleAds.V7.Enums.TargetingDimensionEnum.Types.TargetingDimension.Unspecified) hash ^= DisplayCustomBidDimension.GetHashCode();
      if (HasFinalUrlSuffix) hash ^= FinalUrlSuffix.GetHashCode();
      if (targetingSetting_ != null) hash ^= TargetingSetting.GetHashCode();
      if (HasEffectiveTargetCpaMicros) hash ^= EffectiveTargetCpaMicros.GetHashCode();
      if (EffectiveTargetCpaSource != global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource.Unspecified) hash ^= EffectiveTargetCpaSource.GetHashCode();
      if (HasEffectiveTargetRoas) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(EffectiveTargetRoas);
      if (EffectiveTargetRoasSource != global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource.Unspecified) hash ^= EffectiveTargetRoasSource.GetHashCode();
      hash ^= labels_.GetHashCode();
      hash ^= excludedParentAssetFieldTypes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (Status != global::Google.Ads.GoogleAds.V7.Enums.AdGroupStatusEnum.Types.AdGroupStatus.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Status);
      }
      urlCustomParameters_.WriteTo(output, _repeated_urlCustomParameters_codec);
      if (Type != global::Google.Ads.GoogleAds.V7.Enums.AdGroupTypeEnum.Types.AdGroupType.Unspecified) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Type);
      }
      if (explorerAutoOptimizerSetting_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(ExplorerAutoOptimizerSetting);
      }
      if (AdRotationMode != global::Google.Ads.GoogleAds.V7.Enums.AdGroupAdRotationModeEnum.Types.AdGroupAdRotationMode.Unspecified) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) AdRotationMode);
      }
      if (DisplayCustomBidDimension != global::Google.Ads.GoogleAds.V7.Enums.TargetingDimensionEnum.Types.TargetingDimension.Unspecified) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) DisplayCustomBidDimension);
      }
      if (targetingSetting_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(TargetingSetting);
      }
      if (EffectiveTargetCpaSource != global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource.Unspecified) {
        output.WriteRawTag(232, 1);
        output.WriteEnum((int) EffectiveTargetCpaSource);
      }
      if (EffectiveTargetRoasSource != global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource.Unspecified) {
        output.WriteRawTag(128, 2);
        output.WriteEnum((int) EffectiveTargetRoasSource);
      }
      if (HasId) {
        output.WriteRawTag(144, 2);
        output.WriteInt64(Id);
      }
      if (HasName) {
        output.WriteRawTag(154, 2);
        output.WriteString(Name);
      }
      if (HasBaseAdGroup) {
        output.WriteRawTag(162, 2);
        output.WriteString(BaseAdGroup);
      }
      if (HasTrackingUrlTemplate) {
        output.WriteRawTag(170, 2);
        output.WriteString(TrackingUrlTemplate);
      }
      if (HasCampaign) {
        output.WriteRawTag(178, 2);
        output.WriteString(Campaign);
      }
      if (HasCpcBidMicros) {
        output.WriteRawTag(184, 2);
        output.WriteInt64(CpcBidMicros);
      }
      if (HasCpmBidMicros) {
        output.WriteRawTag(192, 2);
        output.WriteInt64(CpmBidMicros);
      }
      if (HasTargetCpaMicros) {
        output.WriteRawTag(200, 2);
        output.WriteInt64(TargetCpaMicros);
      }
      if (HasCpvBidMicros) {
        output.WriteRawTag(208, 2);
        output.WriteInt64(CpvBidMicros);
      }
      if (HasTargetCpmMicros) {
        output.WriteRawTag(216, 2);
        output.WriteInt64(TargetCpmMicros);
      }
      if (HasTargetRoas) {
        output.WriteRawTag(225, 2);
        output.WriteDouble(TargetRoas);
      }
      if (HasPercentCpcBidMicros) {
        output.WriteRawTag(232, 2);
        output.WriteInt64(PercentCpcBidMicros);
      }
      if (HasFinalUrlSuffix) {
        output.WriteRawTag(242, 2);
        output.WriteString(FinalUrlSuffix);
      }
      if (HasEffectiveTargetCpaMicros) {
        output.WriteRawTag(248, 2);
        output.WriteInt64(EffectiveTargetCpaMicros);
      }
      if (HasEffectiveTargetRoas) {
        output.WriteRawTag(129, 3);
        output.WriteDouble(EffectiveTargetRoas);
      }
      labels_.WriteTo(output, _repeated_labels_codec);
      excludedParentAssetFieldTypes_.WriteTo(output, _repeated_excludedParentAssetFieldTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (Status != global::Google.Ads.GoogleAds.V7.Enums.AdGroupStatusEnum.Types.AdGroupStatus.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Status);
      }
      urlCustomParameters_.WriteTo(ref output, _repeated_urlCustomParameters_codec);
      if (Type != global::Google.Ads.GoogleAds.V7.Enums.AdGroupTypeEnum.Types.AdGroupType.Unspecified) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Type);
      }
      if (explorerAutoOptimizerSetting_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(ExplorerAutoOptimizerSetting);
      }
      if (AdRotationMode != global::Google.Ads.GoogleAds.V7.Enums.AdGroupAdRotationModeEnum.Types.AdGroupAdRotationMode.Unspecified) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) AdRotationMode);
      }
      if (DisplayCustomBidDimension != global::Google.Ads.GoogleAds.V7.Enums.TargetingDimensionEnum.Types.TargetingDimension.Unspecified) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) DisplayCustomBidDimension);
      }
      if (targetingSetting_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(TargetingSetting);
      }
      if (EffectiveTargetCpaSource != global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource.Unspecified) {
        output.WriteRawTag(232, 1);
        output.WriteEnum((int) EffectiveTargetCpaSource);
      }
      if (EffectiveTargetRoasSource != global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource.Unspecified) {
        output.WriteRawTag(128, 2);
        output.WriteEnum((int) EffectiveTargetRoasSource);
      }
      if (HasId) {
        output.WriteRawTag(144, 2);
        output.WriteInt64(Id);
      }
      if (HasName) {
        output.WriteRawTag(154, 2);
        output.WriteString(Name);
      }
      if (HasBaseAdGroup) {
        output.WriteRawTag(162, 2);
        output.WriteString(BaseAdGroup);
      }
      if (HasTrackingUrlTemplate) {
        output.WriteRawTag(170, 2);
        output.WriteString(TrackingUrlTemplate);
      }
      if (HasCampaign) {
        output.WriteRawTag(178, 2);
        output.WriteString(Campaign);
      }
      if (HasCpcBidMicros) {
        output.WriteRawTag(184, 2);
        output.WriteInt64(CpcBidMicros);
      }
      if (HasCpmBidMicros) {
        output.WriteRawTag(192, 2);
        output.WriteInt64(CpmBidMicros);
      }
      if (HasTargetCpaMicros) {
        output.WriteRawTag(200, 2);
        output.WriteInt64(TargetCpaMicros);
      }
      if (HasCpvBidMicros) {
        output.WriteRawTag(208, 2);
        output.WriteInt64(CpvBidMicros);
      }
      if (HasTargetCpmMicros) {
        output.WriteRawTag(216, 2);
        output.WriteInt64(TargetCpmMicros);
      }
      if (HasTargetRoas) {
        output.WriteRawTag(225, 2);
        output.WriteDouble(TargetRoas);
      }
      if (HasPercentCpcBidMicros) {
        output.WriteRawTag(232, 2);
        output.WriteInt64(PercentCpcBidMicros);
      }
      if (HasFinalUrlSuffix) {
        output.WriteRawTag(242, 2);
        output.WriteString(FinalUrlSuffix);
      }
      if (HasEffectiveTargetCpaMicros) {
        output.WriteRawTag(248, 2);
        output.WriteInt64(EffectiveTargetCpaMicros);
      }
      if (HasEffectiveTargetRoas) {
        output.WriteRawTag(129, 3);
        output.WriteDouble(EffectiveTargetRoas);
      }
      labels_.WriteTo(ref output, _repeated_labels_codec);
      excludedParentAssetFieldTypes_.WriteTo(ref output, _repeated_excludedParentAssetFieldTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (HasId) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (HasName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Status != global::Google.Ads.GoogleAds.V7.Enums.AdGroupStatusEnum.Types.AdGroupStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Type != global::Google.Ads.GoogleAds.V7.Enums.AdGroupTypeEnum.Types.AdGroupType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (AdRotationMode != global::Google.Ads.GoogleAds.V7.Enums.AdGroupAdRotationModeEnum.Types.AdGroupAdRotationMode.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) AdRotationMode);
      }
      if (HasBaseAdGroup) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BaseAdGroup);
      }
      if (HasTrackingUrlTemplate) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TrackingUrlTemplate);
      }
      size += urlCustomParameters_.CalculateSize(_repeated_urlCustomParameters_codec);
      if (HasCampaign) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Campaign);
      }
      if (HasCpcBidMicros) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(CpcBidMicros);
      }
      if (HasCpmBidMicros) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(CpmBidMicros);
      }
      if (HasTargetCpaMicros) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(TargetCpaMicros);
      }
      if (HasCpvBidMicros) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(CpvBidMicros);
      }
      if (HasTargetCpmMicros) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(TargetCpmMicros);
      }
      if (HasTargetRoas) {
        size += 2 + 8;
      }
      if (HasPercentCpcBidMicros) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PercentCpcBidMicros);
      }
      if (explorerAutoOptimizerSetting_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ExplorerAutoOptimizerSetting);
      }
      if (DisplayCustomBidDimension != global::Google.Ads.GoogleAds.V7.Enums.TargetingDimensionEnum.Types.TargetingDimension.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) DisplayCustomBidDimension);
      }
      if (HasFinalUrlSuffix) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FinalUrlSuffix);
      }
      if (targetingSetting_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TargetingSetting);
      }
      if (HasEffectiveTargetCpaMicros) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(EffectiveTargetCpaMicros);
      }
      if (EffectiveTargetCpaSource != global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) EffectiveTargetCpaSource);
      }
      if (HasEffectiveTargetRoas) {
        size += 2 + 8;
      }
      if (EffectiveTargetRoasSource != global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) EffectiveTargetRoasSource);
      }
      size += labels_.CalculateSize(_repeated_labels_codec);
      size += excludedParentAssetFieldTypes_.CalculateSize(_repeated_excludedParentAssetFieldTypes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdGroup other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.Status != global::Google.Ads.GoogleAds.V7.Enums.AdGroupStatusEnum.Types.AdGroupStatus.Unspecified) {
        Status = other.Status;
      }
      if (other.Type != global::Google.Ads.GoogleAds.V7.Enums.AdGroupTypeEnum.Types.AdGroupType.Unspecified) {
        Type = other.Type;
      }
      if (other.AdRotationMode != global::Google.Ads.GoogleAds.V7.Enums.AdGroupAdRotationModeEnum.Types.AdGroupAdRotationMode.Unspecified) {
        AdRotationMode = other.AdRotationMode;
      }
      if (other.HasBaseAdGroup) {
        BaseAdGroup = other.BaseAdGroup;
      }
      if (other.HasTrackingUrlTemplate) {
        TrackingUrlTemplate = other.TrackingUrlTemplate;
      }
      urlCustomParameters_.Add(other.urlCustomParameters_);
      if (other.HasCampaign) {
        Campaign = other.Campaign;
      }
      if (other.HasCpcBidMicros) {
        CpcBidMicros = other.CpcBidMicros;
      }
      if (other.HasCpmBidMicros) {
        CpmBidMicros = other.CpmBidMicros;
      }
      if (other.HasTargetCpaMicros) {
        TargetCpaMicros = other.TargetCpaMicros;
      }
      if (other.HasCpvBidMicros) {
        CpvBidMicros = other.CpvBidMicros;
      }
      if (other.HasTargetCpmMicros) {
        TargetCpmMicros = other.TargetCpmMicros;
      }
      if (other.HasTargetRoas) {
        TargetRoas = other.TargetRoas;
      }
      if (other.HasPercentCpcBidMicros) {
        PercentCpcBidMicros = other.PercentCpcBidMicros;
      }
      if (other.explorerAutoOptimizerSetting_ != null) {
        if (explorerAutoOptimizerSetting_ == null) {
          ExplorerAutoOptimizerSetting = new global::Google.Ads.GoogleAds.V7.Common.ExplorerAutoOptimizerSetting();
        }
        ExplorerAutoOptimizerSetting.MergeFrom(other.ExplorerAutoOptimizerSetting);
      }
      if (other.DisplayCustomBidDimension != global::Google.Ads.GoogleAds.V7.Enums.TargetingDimensionEnum.Types.TargetingDimension.Unspecified) {
        DisplayCustomBidDimension = other.DisplayCustomBidDimension;
      }
      if (other.HasFinalUrlSuffix) {
        FinalUrlSuffix = other.FinalUrlSuffix;
      }
      if (other.targetingSetting_ != null) {
        if (targetingSetting_ == null) {
          TargetingSetting = new global::Google.Ads.GoogleAds.V7.Common.TargetingSetting();
        }
        TargetingSetting.MergeFrom(other.TargetingSetting);
      }
      if (other.HasEffectiveTargetCpaMicros) {
        EffectiveTargetCpaMicros = other.EffectiveTargetCpaMicros;
      }
      if (other.EffectiveTargetCpaSource != global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource.Unspecified) {
        EffectiveTargetCpaSource = other.EffectiveTargetCpaSource;
      }
      if (other.HasEffectiveTargetRoas) {
        EffectiveTargetRoas = other.EffectiveTargetRoas;
      }
      if (other.EffectiveTargetRoasSource != global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource.Unspecified) {
        EffectiveTargetRoasSource = other.EffectiveTargetRoasSource;
      }
      labels_.Add(other.labels_);
      excludedParentAssetFieldTypes_.Add(other.excludedParentAssetFieldTypes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 40: {
            Status = (global::Google.Ads.GoogleAds.V7.Enums.AdGroupStatusEnum.Types.AdGroupStatus) input.ReadEnum();
            break;
          }
          case 50: {
            urlCustomParameters_.AddEntriesFrom(input, _repeated_urlCustomParameters_codec);
            break;
          }
          case 96: {
            Type = (global::Google.Ads.GoogleAds.V7.Enums.AdGroupTypeEnum.Types.AdGroupType) input.ReadEnum();
            break;
          }
          case 170: {
            if (explorerAutoOptimizerSetting_ == null) {
              ExplorerAutoOptimizerSetting = new global::Google.Ads.GoogleAds.V7.Common.ExplorerAutoOptimizerSetting();
            }
            input.ReadMessage(ExplorerAutoOptimizerSetting);
            break;
          }
          case 176: {
            AdRotationMode = (global::Google.Ads.GoogleAds.V7.Enums.AdGroupAdRotationModeEnum.Types.AdGroupAdRotationMode) input.ReadEnum();
            break;
          }
          case 184: {
            DisplayCustomBidDimension = (global::Google.Ads.GoogleAds.V7.Enums.TargetingDimensionEnum.Types.TargetingDimension) input.ReadEnum();
            break;
          }
          case 202: {
            if (targetingSetting_ == null) {
              TargetingSetting = new global::Google.Ads.GoogleAds.V7.Common.TargetingSetting();
            }
            input.ReadMessage(TargetingSetting);
            break;
          }
          case 232: {
            EffectiveTargetCpaSource = (global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource) input.ReadEnum();
            break;
          }
          case 256: {
            EffectiveTargetRoasSource = (global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource) input.ReadEnum();
            break;
          }
          case 272: {
            Id = input.ReadInt64();
            break;
          }
          case 282: {
            Name = input.ReadString();
            break;
          }
          case 290: {
            BaseAdGroup = input.ReadString();
            break;
          }
          case 298: {
            TrackingUrlTemplate = input.ReadString();
            break;
          }
          case 306: {
            Campaign = input.ReadString();
            break;
          }
          case 312: {
            CpcBidMicros = input.ReadInt64();
            break;
          }
          case 320: {
            CpmBidMicros = input.ReadInt64();
            break;
          }
          case 328: {
            TargetCpaMicros = input.ReadInt64();
            break;
          }
          case 336: {
            CpvBidMicros = input.ReadInt64();
            break;
          }
          case 344: {
            TargetCpmMicros = input.ReadInt64();
            break;
          }
          case 353: {
            TargetRoas = input.ReadDouble();
            break;
          }
          case 360: {
            PercentCpcBidMicros = input.ReadInt64();
            break;
          }
          case 370: {
            FinalUrlSuffix = input.ReadString();
            break;
          }
          case 376: {
            EffectiveTargetCpaMicros = input.ReadInt64();
            break;
          }
          case 385: {
            EffectiveTargetRoas = input.ReadDouble();
            break;
          }
          case 394: {
            labels_.AddEntriesFrom(input, _repeated_labels_codec);
            break;
          }
          case 434:
          case 432: {
            excludedParentAssetFieldTypes_.AddEntriesFrom(input, _repeated_excludedParentAssetFieldTypes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 40: {
            Status = (global::Google.Ads.GoogleAds.V7.Enums.AdGroupStatusEnum.Types.AdGroupStatus) input.ReadEnum();
            break;
          }
          case 50: {
            urlCustomParameters_.AddEntriesFrom(ref input, _repeated_urlCustomParameters_codec);
            break;
          }
          case 96: {
            Type = (global::Google.Ads.GoogleAds.V7.Enums.AdGroupTypeEnum.Types.AdGroupType) input.ReadEnum();
            break;
          }
          case 170: {
            if (explorerAutoOptimizerSetting_ == null) {
              ExplorerAutoOptimizerSetting = new global::Google.Ads.GoogleAds.V7.Common.ExplorerAutoOptimizerSetting();
            }
            input.ReadMessage(ExplorerAutoOptimizerSetting);
            break;
          }
          case 176: {
            AdRotationMode = (global::Google.Ads.GoogleAds.V7.Enums.AdGroupAdRotationModeEnum.Types.AdGroupAdRotationMode) input.ReadEnum();
            break;
          }
          case 184: {
            DisplayCustomBidDimension = (global::Google.Ads.GoogleAds.V7.Enums.TargetingDimensionEnum.Types.TargetingDimension) input.ReadEnum();
            break;
          }
          case 202: {
            if (targetingSetting_ == null) {
              TargetingSetting = new global::Google.Ads.GoogleAds.V7.Common.TargetingSetting();
            }
            input.ReadMessage(TargetingSetting);
            break;
          }
          case 232: {
            EffectiveTargetCpaSource = (global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource) input.ReadEnum();
            break;
          }
          case 256: {
            EffectiveTargetRoasSource = (global::Google.Ads.GoogleAds.V7.Enums.BiddingSourceEnum.Types.BiddingSource) input.ReadEnum();
            break;
          }
          case 272: {
            Id = input.ReadInt64();
            break;
          }
          case 282: {
            Name = input.ReadString();
            break;
          }
          case 290: {
            BaseAdGroup = input.ReadString();
            break;
          }
          case 298: {
            TrackingUrlTemplate = input.ReadString();
            break;
          }
          case 306: {
            Campaign = input.ReadString();
            break;
          }
          case 312: {
            CpcBidMicros = input.ReadInt64();
            break;
          }
          case 320: {
            CpmBidMicros = input.ReadInt64();
            break;
          }
          case 328: {
            TargetCpaMicros = input.ReadInt64();
            break;
          }
          case 336: {
            CpvBidMicros = input.ReadInt64();
            break;
          }
          case 344: {
            TargetCpmMicros = input.ReadInt64();
            break;
          }
          case 353: {
            TargetRoas = input.ReadDouble();
            break;
          }
          case 360: {
            PercentCpcBidMicros = input.ReadInt64();
            break;
          }
          case 370: {
            FinalUrlSuffix = input.ReadString();
            break;
          }
          case 376: {
            EffectiveTargetCpaMicros = input.ReadInt64();
            break;
          }
          case 385: {
            EffectiveTargetRoas = input.ReadDouble();
            break;
          }
          case 394: {
            labels_.AddEntriesFrom(ref input, _repeated_labels_codec);
            break;
          }
          case 434:
          case 432: {
            excludedParentAssetFieldTypes_.AddEntriesFrom(ref input, _repeated_excludedParentAssetFieldTypes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
