// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v7/common/bidding.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V7.Common {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v7/common/bidding.proto</summary>
  public static partial class BiddingReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v7/common/bidding.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BiddingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cixnb29nbGUvYWRzL2dvb2dsZWFkcy92Ny9jb21tb24vYmlkZGluZy5wcm90",
            "bxIeZ29vZ2xlLmFkcy5nb29nbGVhZHMudjcuY29tbW9uGkRnb29nbGUvYWRz",
            "L2dvb2dsZWFkcy92Ny9lbnVtcy90YXJnZXRfaW1wcmVzc2lvbl9zaGFyZV9s",
            "b2NhdGlvbi5wcm90bxocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90byJM",
            "CgpDb21taXNzaW9uEiMKFmNvbW1pc3Npb25fcmF0ZV9taWNyb3MYAiABKANI",
            "AIgBAUIZChdfY29tbWlzc2lvbl9yYXRlX21pY3JvcyINCgtFbmhhbmNlZENw",
            "YyJHCglNYW51YWxDcGMSIQoUZW5oYW5jZWRfY3BjX2VuYWJsZWQYAiABKAhI",
            "AIgBAUIXChVfZW5oYW5jZWRfY3BjX2VuYWJsZWQiCwoJTWFudWFsQ3BtIgsK",
            "CU1hbnVhbENwdiIpChNNYXhpbWl6ZUNvbnZlcnNpb25zEhIKCnRhcmdldF9j",
            "cGEYASABKAMiQwoXTWF4aW1pemVDb252ZXJzaW9uVmFsdWUSGAoLdGFyZ2V0",
            "X3JvYXMYAiABKAFIAIgBAUIOCgxfdGFyZ2V0X3JvYXMivQEKCVRhcmdldENw",
            "YRIeChF0YXJnZXRfY3BhX21pY3JvcxgEIAEoA0gAiAEBEiMKFmNwY19iaWRf",
            "Y2VpbGluZ19taWNyb3MYBSABKANIAYgBARIhChRjcGNfYmlkX2Zsb29yX21p",
            "Y3JvcxgGIAEoA0gCiAEBQhQKEl90YXJnZXRfY3BhX21pY3Jvc0IZChdfY3Bj",
            "X2JpZF9jZWlsaW5nX21pY3Jvc0IXChVfY3BjX2JpZF9mbG9vcl9taWNyb3Mi",
            "CwoJVGFyZ2V0Q3BtIo0CChVUYXJnZXRJbXByZXNzaW9uU2hhcmUScAoIbG9j",
            "YXRpb24YASABKA4yXi5nb29nbGUuYWRzLmdvb2dsZWFkcy52Ny5lbnVtcy5U",
            "YXJnZXRJbXByZXNzaW9uU2hhcmVMb2NhdGlvbkVudW0uVGFyZ2V0SW1wcmVz",
            "c2lvblNoYXJlTG9jYXRpb24SJQoYbG9jYXRpb25fZnJhY3Rpb25fbWljcm9z",
            "GAQgASgDSACIAQESIwoWY3BjX2JpZF9jZWlsaW5nX21pY3JvcxgFIAEoA0gB",
            "iAEBQhsKGV9sb2NhdGlvbl9mcmFjdGlvbl9taWNyb3NCGQoXX2NwY19iaWRf",
            "Y2VpbGluZ19taWNyb3MisgEKClRhcmdldFJvYXMSGAoLdGFyZ2V0X3JvYXMY",
            "BCABKAFIAIgBARIjChZjcGNfYmlkX2NlaWxpbmdfbWljcm9zGAUgASgDSAGI",
            "AQESIQoUY3BjX2JpZF9mbG9vcl9taWNyb3MYBiABKANIAogBAUIOCgxfdGFy",
            "Z2V0X3JvYXNCGQoXX2NwY19iaWRfY2VpbGluZ19taWNyb3NCFwoVX2NwY19i",
            "aWRfZmxvb3JfbWljcm9zIosBCgtUYXJnZXRTcGVuZBIkChN0YXJnZXRfc3Bl",
            "bmRfbWljcm9zGAMgASgDQgIYAUgAiAEBEiMKFmNwY19iaWRfY2VpbGluZ19t",
            "aWNyb3MYBCABKANIAYgBAUIWChRfdGFyZ2V0X3NwZW5kX21pY3Jvc0IZChdf",
            "Y3BjX2JpZF9jZWlsaW5nX21pY3JvcyKIAQoKUGVyY2VudENwYxIjChZjcGNf",
            "YmlkX2NlaWxpbmdfbWljcm9zGAMgASgDSACIAQESIQoUZW5oYW5jZWRfY3Bj",
            "X2VuYWJsZWQYBCABKAhIAYgBAUIZChdfY3BjX2JpZF9jZWlsaW5nX21pY3Jv",
            "c0IXChVfZW5oYW5jZWRfY3BjX2VuYWJsZWRC5wEKImNvbS5nb29nbGUuYWRz",
            "Lmdvb2dsZWFkcy52Ny5jb21tb25CDEJpZGRpbmdQcm90b1ABWkRnb29nbGUu",
            "Z29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2Fkcy9nb29nbGVhZHMv",
            "djcvY29tbW9uO2NvbW1vbqICA0dBQaoCHkdvb2dsZS5BZHMuR29vZ2xlQWRz",
            "LlY3LkNvbW1vbsoCHkdvb2dsZVxBZHNcR29vZ2xlQWRzXFY3XENvbW1vbuoC",
            "Ikdvb2dsZTo6QWRzOjpHb29nbGVBZHM6OlY3OjpDb21tb25iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V7.Enums.TargetImpressionShareLocationReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.Commission), global::Google.Ads.GoogleAds.V7.Common.Commission.Parser, new[]{ "CommissionRateMicros" }, new[]{ "CommissionRateMicros" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.EnhancedCpc), global::Google.Ads.GoogleAds.V7.Common.EnhancedCpc.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.ManualCpc), global::Google.Ads.GoogleAds.V7.Common.ManualCpc.Parser, new[]{ "EnhancedCpcEnabled" }, new[]{ "EnhancedCpcEnabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.ManualCpm), global::Google.Ads.GoogleAds.V7.Common.ManualCpm.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.ManualCpv), global::Google.Ads.GoogleAds.V7.Common.ManualCpv.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.MaximizeConversions), global::Google.Ads.GoogleAds.V7.Common.MaximizeConversions.Parser, new[]{ "TargetCpa" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.MaximizeConversionValue), global::Google.Ads.GoogleAds.V7.Common.MaximizeConversionValue.Parser, new[]{ "TargetRoas" }, new[]{ "TargetRoas" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.TargetCpa), global::Google.Ads.GoogleAds.V7.Common.TargetCpa.Parser, new[]{ "TargetCpaMicros", "CpcBidCeilingMicros", "CpcBidFloorMicros" }, new[]{ "TargetCpaMicros", "CpcBidCeilingMicros", "CpcBidFloorMicros" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.TargetCpm), global::Google.Ads.GoogleAds.V7.Common.TargetCpm.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.TargetImpressionShare), global::Google.Ads.GoogleAds.V7.Common.TargetImpressionShare.Parser, new[]{ "Location", "LocationFractionMicros", "CpcBidCeilingMicros" }, new[]{ "LocationFractionMicros", "CpcBidCeilingMicros" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.TargetRoas), global::Google.Ads.GoogleAds.V7.Common.TargetRoas.Parser, new[]{ "TargetRoas_", "CpcBidCeilingMicros", "CpcBidFloorMicros" }, new[]{ "TargetRoas", "CpcBidCeilingMicros", "CpcBidFloorMicros" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.TargetSpend), global::Google.Ads.GoogleAds.V7.Common.TargetSpend.Parser, new[]{ "TargetSpendMicros", "CpcBidCeilingMicros" }, new[]{ "TargetSpendMicros", "CpcBidCeilingMicros" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.PercentCpc), global::Google.Ads.GoogleAds.V7.Common.PercentCpc.Parser, new[]{ "CpcBidCeilingMicros", "EnhancedCpcEnabled" }, new[]{ "CpcBidCeilingMicros", "EnhancedCpcEnabled" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Commission is an automatic bidding strategy in which the advertiser pays a
  /// certain portion of the conversion value.
  /// </summary>
  public sealed partial class Commission : pb::IMessage<Commission>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Commission> _parser = new pb::MessageParser<Commission>(() => new Commission());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Commission> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.BiddingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Commission() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Commission(Commission other) : this() {
      _hasBits0 = other._hasBits0;
      commissionRateMicros_ = other.commissionRateMicros_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Commission Clone() {
      return new Commission(this);
    }

    /// <summary>Field number for the "commission_rate_micros" field.</summary>
    public const int CommissionRateMicrosFieldNumber = 2;
    private long commissionRateMicros_;
    /// <summary>
    /// Commission rate defines the portion of the conversion value that the
    /// advertiser will be billed. A commission rate of x should be passed into
    /// this field as (x * 1,000,000). For example, 106,000 represents a commission
    /// rate of 0.106 (10.6%).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CommissionRateMicros {
      get { if ((_hasBits0 & 1) != 0) { return commissionRateMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        commissionRateMicros_ = value;
      }
    }
    /// <summary>Gets whether the "commission_rate_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCommissionRateMicros {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "commission_rate_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCommissionRateMicros() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Commission);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Commission other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommissionRateMicros != other.CommissionRateMicros) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCommissionRateMicros) hash ^= CommissionRateMicros.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCommissionRateMicros) {
        output.WriteRawTag(16);
        output.WriteInt64(CommissionRateMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCommissionRateMicros) {
        output.WriteRawTag(16);
        output.WriteInt64(CommissionRateMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCommissionRateMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommissionRateMicros);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Commission other) {
      if (other == null) {
        return;
      }
      if (other.HasCommissionRateMicros) {
        CommissionRateMicros = other.CommissionRateMicros;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            CommissionRateMicros = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            CommissionRateMicros = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An automated bidding strategy that raises bids for clicks
  /// that seem more likely to lead to a conversion and lowers
  /// them for clicks where they seem less likely.
  /// </summary>
  public sealed partial class EnhancedCpc : pb::IMessage<EnhancedCpc>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnhancedCpc> _parser = new pb::MessageParser<EnhancedCpc>(() => new EnhancedCpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnhancedCpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.BiddingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnhancedCpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnhancedCpc(EnhancedCpc other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnhancedCpc Clone() {
      return new EnhancedCpc(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnhancedCpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnhancedCpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnhancedCpc other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Manual click-based bidding where user pays per click.
  /// </summary>
  public sealed partial class ManualCpc : pb::IMessage<ManualCpc>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ManualCpc> _parser = new pb::MessageParser<ManualCpc>(() => new ManualCpc());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ManualCpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.BiddingReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManualCpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManualCpc(ManualCpc other) : this() {
      _hasBits0 = other._hasBits0;
      enhancedCpcEnabled_ = other.enhancedCpcEnabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManualCpc Clone() {
      return new ManualCpc(this);
    }

    /// <summary>Field number for the "enhanced_cpc_enabled" field.</summary>
    public const int EnhancedCpcEnabledFieldNumber = 2;
    private bool enhancedCpcEnabled_;
    /// <summary>
    /// Whether bids are to be enhanced based on conversion optimizer data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnhancedCpcEnabled {
      get { if ((_hasBits0 & 1) != 0) { return enhancedCpcEnabled_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        enhancedCpcEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "enhanced_cpc_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEnhancedCpcEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enhanced_cpc_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEnhancedCpcEnabled() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ManualCpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ManualCpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnhancedCpcEnabled != other.EnhancedCpcEnabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEnhancedCpcEnabled) hash ^= EnhancedCpcEnabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEnhancedCpcEnabled) {
        output.WriteRawTag(16);
        output.WriteBool(EnhancedCpcEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEnhancedCpcEnabled) {
        output.WriteRawTag(16);
        output.WriteBool(EnhancedCpcEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasEnhancedCpcEnabled) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ManualCpc other) {
      if (other == null) {
        return;
      }
      if (other.HasEnhancedCpcEnabled) {
        EnhancedCpcEnabled = other.EnhancedCpcEnabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            EnhancedCpcEnabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            EnhancedCpcEnabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Manual impression-based bidding where user pays per thousand impressions.
  /// </summary>
  public sealed partial class ManualCpm : pb::IMessage<ManualCpm>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ManualCpm> _parser = new pb::MessageParser<ManualCpm>(() => new ManualCpm());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ManualCpm> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.BiddingReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManualCpm() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManualCpm(ManualCpm other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManualCpm Clone() {
      return new ManualCpm(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ManualCpm);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ManualCpm other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ManualCpm other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// View based bidding where user pays per video view.
  /// </summary>
  public sealed partial class ManualCpv : pb::IMessage<ManualCpv>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ManualCpv> _parser = new pb::MessageParser<ManualCpv>(() => new ManualCpv());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ManualCpv> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.BiddingReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManualCpv() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManualCpv(ManualCpv other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManualCpv Clone() {
      return new ManualCpv(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ManualCpv);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ManualCpv other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ManualCpv other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An automated bidding strategy to help get the most conversions for your
  /// campaigns while spending your budget.
  /// </summary>
  public sealed partial class MaximizeConversions : pb::IMessage<MaximizeConversions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MaximizeConversions> _parser = new pb::MessageParser<MaximizeConversions>(() => new MaximizeConversions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MaximizeConversions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.BiddingReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaximizeConversions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaximizeConversions(MaximizeConversions other) : this() {
      targetCpa_ = other.targetCpa_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaximizeConversions Clone() {
      return new MaximizeConversions(this);
    }

    /// <summary>Field number for the "target_cpa" field.</summary>
    public const int TargetCpaFieldNumber = 1;
    private long targetCpa_;
    /// <summary>
    /// The target cost per acquisition (CPA) option. This is the average amount
    /// that you would like to spend per acquisition.
    ///
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TargetCpa {
      get { return targetCpa_; }
      set {
        targetCpa_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MaximizeConversions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MaximizeConversions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetCpa != other.TargetCpa) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetCpa != 0L) hash ^= TargetCpa.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TargetCpa != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TargetCpa);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TargetCpa != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TargetCpa);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TargetCpa != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetCpa);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MaximizeConversions other) {
      if (other == null) {
        return;
      }
      if (other.TargetCpa != 0L) {
        TargetCpa = other.TargetCpa;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetCpa = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TargetCpa = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An automated bidding strategy to help get the most conversion value for your
  /// campaigns while spending your budget.
  /// </summary>
  public sealed partial class MaximizeConversionValue : pb::IMessage<MaximizeConversionValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MaximizeConversionValue> _parser = new pb::MessageParser<MaximizeConversionValue>(() => new MaximizeConversionValue());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MaximizeConversionValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.BiddingReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaximizeConversionValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaximizeConversionValue(MaximizeConversionValue other) : this() {
      _hasBits0 = other._hasBits0;
      targetRoas_ = other.targetRoas_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaximizeConversionValue Clone() {
      return new MaximizeConversionValue(this);
    }

    /// <summary>Field number for the "target_roas" field.</summary>
    public const int TargetRoasFieldNumber = 2;
    private double targetRoas_;
    /// <summary>
    /// The target return on ad spend (ROAS) option. If set, the bid strategy will
    /// maximize revenue while averaging the target return on ad spend. If the
    /// target ROAS is high, the bid strategy may not be able to spend the full
    /// budget. If the target ROAS is not set, the bid strategy will aim to
    /// achieve the highest possible ROAS for the budget.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TargetRoas {
      get { if ((_hasBits0 & 1) != 0) { return targetRoas_; } else { return 0D; } }
      set {
        _hasBits0 |= 1;
        targetRoas_ = value;
      }
    }
    /// <summary>Gets whether the "target_roas" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetRoas {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "target_roas" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetRoas() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MaximizeConversionValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MaximizeConversionValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TargetRoas, other.TargetRoas)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTargetRoas) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TargetRoas);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTargetRoas) {
        output.WriteRawTag(17);
        output.WriteDouble(TargetRoas);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTargetRoas) {
        output.WriteRawTag(17);
        output.WriteDouble(TargetRoas);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTargetRoas) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MaximizeConversionValue other) {
      if (other == null) {
        return;
      }
      if (other.HasTargetRoas) {
        TargetRoas = other.TargetRoas;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 17: {
            TargetRoas = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 17: {
            TargetRoas = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An automated bid strategy that sets bids to help get as many conversions as
  /// possible at the target cost-per-acquisition (CPA) you set.
  /// </summary>
  public sealed partial class TargetCpa : pb::IMessage<TargetCpa>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TargetCpa> _parser = new pb::MessageParser<TargetCpa>(() => new TargetCpa());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TargetCpa> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.BiddingReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetCpa() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetCpa(TargetCpa other) : this() {
      _hasBits0 = other._hasBits0;
      targetCpaMicros_ = other.targetCpaMicros_;
      cpcBidCeilingMicros_ = other.cpcBidCeilingMicros_;
      cpcBidFloorMicros_ = other.cpcBidFloorMicros_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetCpa Clone() {
      return new TargetCpa(this);
    }

    /// <summary>Field number for the "target_cpa_micros" field.</summary>
    public const int TargetCpaMicrosFieldNumber = 4;
    private long targetCpaMicros_;
    /// <summary>
    /// Average CPA target.
    /// This target should be greater than or equal to minimum billable unit based
    /// on the currency for the account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TargetCpaMicros {
      get { if ((_hasBits0 & 1) != 0) { return targetCpaMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        targetCpaMicros_ = value;
      }
    }
    /// <summary>Gets whether the "target_cpa_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetCpaMicros {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "target_cpa_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetCpaMicros() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cpc_bid_ceiling_micros" field.</summary>
    public const int CpcBidCeilingMicrosFieldNumber = 5;
    private long cpcBidCeilingMicros_;
    /// <summary>
    /// Maximum bid limit that can be set by the bid strategy.
    /// The limit applies to all keywords managed by the strategy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CpcBidCeilingMicros {
      get { if ((_hasBits0 & 2) != 0) { return cpcBidCeilingMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 2;
        cpcBidCeilingMicros_ = value;
      }
    }
    /// <summary>Gets whether the "cpc_bid_ceiling_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCpcBidCeilingMicros {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cpc_bid_ceiling_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCpcBidCeilingMicros() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "cpc_bid_floor_micros" field.</summary>
    public const int CpcBidFloorMicrosFieldNumber = 6;
    private long cpcBidFloorMicros_;
    /// <summary>
    /// Minimum bid limit that can be set by the bid strategy.
    /// The limit applies to all keywords managed by the strategy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CpcBidFloorMicros {
      get { if ((_hasBits0 & 4) != 0) { return cpcBidFloorMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 4;
        cpcBidFloorMicros_ = value;
      }
    }
    /// <summary>Gets whether the "cpc_bid_floor_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCpcBidFloorMicros {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "cpc_bid_floor_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCpcBidFloorMicros() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TargetCpa);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TargetCpa other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetCpaMicros != other.TargetCpaMicros) return false;
      if (CpcBidCeilingMicros != other.CpcBidCeilingMicros) return false;
      if (CpcBidFloorMicros != other.CpcBidFloorMicros) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTargetCpaMicros) hash ^= TargetCpaMicros.GetHashCode();
      if (HasCpcBidCeilingMicros) hash ^= CpcBidCeilingMicros.GetHashCode();
      if (HasCpcBidFloorMicros) hash ^= CpcBidFloorMicros.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTargetCpaMicros) {
        output.WriteRawTag(32);
        output.WriteInt64(TargetCpaMicros);
      }
      if (HasCpcBidCeilingMicros) {
        output.WriteRawTag(40);
        output.WriteInt64(CpcBidCeilingMicros);
      }
      if (HasCpcBidFloorMicros) {
        output.WriteRawTag(48);
        output.WriteInt64(CpcBidFloorMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTargetCpaMicros) {
        output.WriteRawTag(32);
        output.WriteInt64(TargetCpaMicros);
      }
      if (HasCpcBidCeilingMicros) {
        output.WriteRawTag(40);
        output.WriteInt64(CpcBidCeilingMicros);
      }
      if (HasCpcBidFloorMicros) {
        output.WriteRawTag(48);
        output.WriteInt64(CpcBidFloorMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTargetCpaMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetCpaMicros);
      }
      if (HasCpcBidCeilingMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CpcBidCeilingMicros);
      }
      if (HasCpcBidFloorMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CpcBidFloorMicros);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TargetCpa other) {
      if (other == null) {
        return;
      }
      if (other.HasTargetCpaMicros) {
        TargetCpaMicros = other.TargetCpaMicros;
      }
      if (other.HasCpcBidCeilingMicros) {
        CpcBidCeilingMicros = other.CpcBidCeilingMicros;
      }
      if (other.HasCpcBidFloorMicros) {
        CpcBidFloorMicros = other.CpcBidFloorMicros;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 32: {
            TargetCpaMicros = input.ReadInt64();
            break;
          }
          case 40: {
            CpcBidCeilingMicros = input.ReadInt64();
            break;
          }
          case 48: {
            CpcBidFloorMicros = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 32: {
            TargetCpaMicros = input.ReadInt64();
            break;
          }
          case 40: {
            CpcBidCeilingMicros = input.ReadInt64();
            break;
          }
          case 48: {
            CpcBidFloorMicros = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Target CPM (cost per thousand impressions) is an automated bidding strategy
  /// that sets bids to optimize performance given the target CPM you set.
  /// </summary>
  public sealed partial class TargetCpm : pb::IMessage<TargetCpm>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TargetCpm> _parser = new pb::MessageParser<TargetCpm>(() => new TargetCpm());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TargetCpm> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.BiddingReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetCpm() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetCpm(TargetCpm other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetCpm Clone() {
      return new TargetCpm(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TargetCpm);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TargetCpm other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TargetCpm other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An automated bidding strategy that sets bids so that a certain percentage of
  /// search ads are shown at the top of the first page (or other targeted
  /// location).
  /// </summary>
  public sealed partial class TargetImpressionShare : pb::IMessage<TargetImpressionShare>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TargetImpressionShare> _parser = new pb::MessageParser<TargetImpressionShare>(() => new TargetImpressionShare());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TargetImpressionShare> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.BiddingReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetImpressionShare() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetImpressionShare(TargetImpressionShare other) : this() {
      _hasBits0 = other._hasBits0;
      location_ = other.location_;
      locationFractionMicros_ = other.locationFractionMicros_;
      cpcBidCeilingMicros_ = other.cpcBidCeilingMicros_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetImpressionShare Clone() {
      return new TargetImpressionShare(this);
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 1;
    private global::Google.Ads.GoogleAds.V7.Enums.TargetImpressionShareLocationEnum.Types.TargetImpressionShareLocation location_ = global::Google.Ads.GoogleAds.V7.Enums.TargetImpressionShareLocationEnum.Types.TargetImpressionShareLocation.Unspecified;
    /// <summary>
    /// The targeted location on the search results page.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V7.Enums.TargetImpressionShareLocationEnum.Types.TargetImpressionShareLocation Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "location_fraction_micros" field.</summary>
    public const int LocationFractionMicrosFieldNumber = 4;
    private long locationFractionMicros_;
    /// <summary>
    /// The desired fraction of ads to be shown in the targeted location in micros.
    /// E.g. 1% equals 10,000.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LocationFractionMicros {
      get { if ((_hasBits0 & 1) != 0) { return locationFractionMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        locationFractionMicros_ = value;
      }
    }
    /// <summary>Gets whether the "location_fraction_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLocationFractionMicros {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "location_fraction_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLocationFractionMicros() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cpc_bid_ceiling_micros" field.</summary>
    public const int CpcBidCeilingMicrosFieldNumber = 5;
    private long cpcBidCeilingMicros_;
    /// <summary>
    /// The highest CPC bid the automated bidding system is permitted to specify.
    /// This is a required field entered by the advertiser that sets the ceiling
    /// and specified in local micros.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CpcBidCeilingMicros {
      get { if ((_hasBits0 & 2) != 0) { return cpcBidCeilingMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 2;
        cpcBidCeilingMicros_ = value;
      }
    }
    /// <summary>Gets whether the "cpc_bid_ceiling_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCpcBidCeilingMicros {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cpc_bid_ceiling_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCpcBidCeilingMicros() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TargetImpressionShare);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TargetImpressionShare other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Location != other.Location) return false;
      if (LocationFractionMicros != other.LocationFractionMicros) return false;
      if (CpcBidCeilingMicros != other.CpcBidCeilingMicros) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Location != global::Google.Ads.GoogleAds.V7.Enums.TargetImpressionShareLocationEnum.Types.TargetImpressionShareLocation.Unspecified) hash ^= Location.GetHashCode();
      if (HasLocationFractionMicros) hash ^= LocationFractionMicros.GetHashCode();
      if (HasCpcBidCeilingMicros) hash ^= CpcBidCeilingMicros.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Location != global::Google.Ads.GoogleAds.V7.Enums.TargetImpressionShareLocationEnum.Types.TargetImpressionShareLocation.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Location);
      }
      if (HasLocationFractionMicros) {
        output.WriteRawTag(32);
        output.WriteInt64(LocationFractionMicros);
      }
      if (HasCpcBidCeilingMicros) {
        output.WriteRawTag(40);
        output.WriteInt64(CpcBidCeilingMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Location != global::Google.Ads.GoogleAds.V7.Enums.TargetImpressionShareLocationEnum.Types.TargetImpressionShareLocation.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Location);
      }
      if (HasLocationFractionMicros) {
        output.WriteRawTag(32);
        output.WriteInt64(LocationFractionMicros);
      }
      if (HasCpcBidCeilingMicros) {
        output.WriteRawTag(40);
        output.WriteInt64(CpcBidCeilingMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Location != global::Google.Ads.GoogleAds.V7.Enums.TargetImpressionShareLocationEnum.Types.TargetImpressionShareLocation.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Location);
      }
      if (HasLocationFractionMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LocationFractionMicros);
      }
      if (HasCpcBidCeilingMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CpcBidCeilingMicros);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TargetImpressionShare other) {
      if (other == null) {
        return;
      }
      if (other.Location != global::Google.Ads.GoogleAds.V7.Enums.TargetImpressionShareLocationEnum.Types.TargetImpressionShareLocation.Unspecified) {
        Location = other.Location;
      }
      if (other.HasLocationFractionMicros) {
        LocationFractionMicros = other.LocationFractionMicros;
      }
      if (other.HasCpcBidCeilingMicros) {
        CpcBidCeilingMicros = other.CpcBidCeilingMicros;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Location = (global::Google.Ads.GoogleAds.V7.Enums.TargetImpressionShareLocationEnum.Types.TargetImpressionShareLocation) input.ReadEnum();
            break;
          }
          case 32: {
            LocationFractionMicros = input.ReadInt64();
            break;
          }
          case 40: {
            CpcBidCeilingMicros = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Location = (global::Google.Ads.GoogleAds.V7.Enums.TargetImpressionShareLocationEnum.Types.TargetImpressionShareLocation) input.ReadEnum();
            break;
          }
          case 32: {
            LocationFractionMicros = input.ReadInt64();
            break;
          }
          case 40: {
            CpcBidCeilingMicros = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An automated bidding strategy that helps you maximize revenue while
  /// averaging a specific target return on ad spend (ROAS).
  /// </summary>
  public sealed partial class TargetRoas : pb::IMessage<TargetRoas>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TargetRoas> _parser = new pb::MessageParser<TargetRoas>(() => new TargetRoas());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TargetRoas> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.BiddingReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetRoas() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetRoas(TargetRoas other) : this() {
      _hasBits0 = other._hasBits0;
      targetRoas_ = other.targetRoas_;
      cpcBidCeilingMicros_ = other.cpcBidCeilingMicros_;
      cpcBidFloorMicros_ = other.cpcBidFloorMicros_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetRoas Clone() {
      return new TargetRoas(this);
    }

    /// <summary>Field number for the "target_roas" field.</summary>
    public const int TargetRoas_FieldNumber = 4;
    private double targetRoas_;
    /// <summary>
    /// Required. The desired revenue (based on conversion data) per unit of spend.
    /// Value must be between 0.01 and 1000.0, inclusive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TargetRoas_ {
      get { if ((_hasBits0 & 1) != 0) { return targetRoas_; } else { return 0D; } }
      set {
        _hasBits0 |= 1;
        targetRoas_ = value;
      }
    }
    /// <summary>Gets whether the "target_roas" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetRoas_ {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "target_roas" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetRoas_() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cpc_bid_ceiling_micros" field.</summary>
    public const int CpcBidCeilingMicrosFieldNumber = 5;
    private long cpcBidCeilingMicros_;
    /// <summary>
    /// Maximum bid limit that can be set by the bid strategy.
    /// The limit applies to all keywords managed by the strategy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CpcBidCeilingMicros {
      get { if ((_hasBits0 & 2) != 0) { return cpcBidCeilingMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 2;
        cpcBidCeilingMicros_ = value;
      }
    }
    /// <summary>Gets whether the "cpc_bid_ceiling_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCpcBidCeilingMicros {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cpc_bid_ceiling_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCpcBidCeilingMicros() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "cpc_bid_floor_micros" field.</summary>
    public const int CpcBidFloorMicrosFieldNumber = 6;
    private long cpcBidFloorMicros_;
    /// <summary>
    /// Minimum bid limit that can be set by the bid strategy.
    /// The limit applies to all keywords managed by the strategy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CpcBidFloorMicros {
      get { if ((_hasBits0 & 4) != 0) { return cpcBidFloorMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 4;
        cpcBidFloorMicros_ = value;
      }
    }
    /// <summary>Gets whether the "cpc_bid_floor_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCpcBidFloorMicros {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "cpc_bid_floor_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCpcBidFloorMicros() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TargetRoas);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TargetRoas other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TargetRoas_, other.TargetRoas_)) return false;
      if (CpcBidCeilingMicros != other.CpcBidCeilingMicros) return false;
      if (CpcBidFloorMicros != other.CpcBidFloorMicros) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTargetRoas_) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TargetRoas_);
      if (HasCpcBidCeilingMicros) hash ^= CpcBidCeilingMicros.GetHashCode();
      if (HasCpcBidFloorMicros) hash ^= CpcBidFloorMicros.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTargetRoas_) {
        output.WriteRawTag(33);
        output.WriteDouble(TargetRoas_);
      }
      if (HasCpcBidCeilingMicros) {
        output.WriteRawTag(40);
        output.WriteInt64(CpcBidCeilingMicros);
      }
      if (HasCpcBidFloorMicros) {
        output.WriteRawTag(48);
        output.WriteInt64(CpcBidFloorMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTargetRoas_) {
        output.WriteRawTag(33);
        output.WriteDouble(TargetRoas_);
      }
      if (HasCpcBidCeilingMicros) {
        output.WriteRawTag(40);
        output.WriteInt64(CpcBidCeilingMicros);
      }
      if (HasCpcBidFloorMicros) {
        output.WriteRawTag(48);
        output.WriteInt64(CpcBidFloorMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTargetRoas_) {
        size += 1 + 8;
      }
      if (HasCpcBidCeilingMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CpcBidCeilingMicros);
      }
      if (HasCpcBidFloorMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CpcBidFloorMicros);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TargetRoas other) {
      if (other == null) {
        return;
      }
      if (other.HasTargetRoas_) {
        TargetRoas_ = other.TargetRoas_;
      }
      if (other.HasCpcBidCeilingMicros) {
        CpcBidCeilingMicros = other.CpcBidCeilingMicros;
      }
      if (other.HasCpcBidFloorMicros) {
        CpcBidFloorMicros = other.CpcBidFloorMicros;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 33: {
            TargetRoas_ = input.ReadDouble();
            break;
          }
          case 40: {
            CpcBidCeilingMicros = input.ReadInt64();
            break;
          }
          case 48: {
            CpcBidFloorMicros = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 33: {
            TargetRoas_ = input.ReadDouble();
            break;
          }
          case 40: {
            CpcBidCeilingMicros = input.ReadInt64();
            break;
          }
          case 48: {
            CpcBidFloorMicros = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An automated bid strategy that sets your bids to help get as many clicks
  /// as possible within your budget.
  /// </summary>
  public sealed partial class TargetSpend : pb::IMessage<TargetSpend>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TargetSpend> _parser = new pb::MessageParser<TargetSpend>(() => new TargetSpend());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TargetSpend> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.BiddingReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetSpend() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetSpend(TargetSpend other) : this() {
      _hasBits0 = other._hasBits0;
      targetSpendMicros_ = other.targetSpendMicros_;
      cpcBidCeilingMicros_ = other.cpcBidCeilingMicros_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetSpend Clone() {
      return new TargetSpend(this);
    }

    /// <summary>Field number for the "target_spend_micros" field.</summary>
    public const int TargetSpendMicrosFieldNumber = 3;
    private long targetSpendMicros_;
    /// <summary>
    /// The spend target under which to maximize clicks.
    /// A TargetSpend bidder will attempt to spend the smaller of this value
    /// or the natural throttling spend amount.
    /// If not specified, the budget is used as the spend target.
    /// This field is deprecated and should no longer be used. See
    /// https://ads-developers.googleblog.com/2020/05/reminder-about-sunset-creation-of.html
    /// for details.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TargetSpendMicros {
      get { if ((_hasBits0 & 1) != 0) { return targetSpendMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        targetSpendMicros_ = value;
      }
    }
    /// <summary>Gets whether the "target_spend_micros" field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetSpendMicros {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "target_spend_micros" field</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetSpendMicros() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cpc_bid_ceiling_micros" field.</summary>
    public const int CpcBidCeilingMicrosFieldNumber = 4;
    private long cpcBidCeilingMicros_;
    /// <summary>
    /// Maximum bid limit that can be set by the bid strategy.
    /// The limit applies to all keywords managed by the strategy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CpcBidCeilingMicros {
      get { if ((_hasBits0 & 2) != 0) { return cpcBidCeilingMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 2;
        cpcBidCeilingMicros_ = value;
      }
    }
    /// <summary>Gets whether the "cpc_bid_ceiling_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCpcBidCeilingMicros {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cpc_bid_ceiling_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCpcBidCeilingMicros() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TargetSpend);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TargetSpend other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetSpendMicros != other.TargetSpendMicros) return false;
      if (CpcBidCeilingMicros != other.CpcBidCeilingMicros) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTargetSpendMicros) hash ^= TargetSpendMicros.GetHashCode();
      if (HasCpcBidCeilingMicros) hash ^= CpcBidCeilingMicros.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTargetSpendMicros) {
        output.WriteRawTag(24);
        output.WriteInt64(TargetSpendMicros);
      }
      if (HasCpcBidCeilingMicros) {
        output.WriteRawTag(32);
        output.WriteInt64(CpcBidCeilingMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTargetSpendMicros) {
        output.WriteRawTag(24);
        output.WriteInt64(TargetSpendMicros);
      }
      if (HasCpcBidCeilingMicros) {
        output.WriteRawTag(32);
        output.WriteInt64(CpcBidCeilingMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTargetSpendMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetSpendMicros);
      }
      if (HasCpcBidCeilingMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CpcBidCeilingMicros);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TargetSpend other) {
      if (other == null) {
        return;
      }
      if (other.HasTargetSpendMicros) {
        TargetSpendMicros = other.TargetSpendMicros;
      }
      if (other.HasCpcBidCeilingMicros) {
        CpcBidCeilingMicros = other.CpcBidCeilingMicros;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            TargetSpendMicros = input.ReadInt64();
            break;
          }
          case 32: {
            CpcBidCeilingMicros = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 24: {
            TargetSpendMicros = input.ReadInt64();
            break;
          }
          case 32: {
            CpcBidCeilingMicros = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A bidding strategy where bids are a fraction of the advertised price for
  /// some good or service.
  /// </summary>
  public sealed partial class PercentCpc : pb::IMessage<PercentCpc>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PercentCpc> _parser = new pb::MessageParser<PercentCpc>(() => new PercentCpc());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PercentCpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.BiddingReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PercentCpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PercentCpc(PercentCpc other) : this() {
      _hasBits0 = other._hasBits0;
      cpcBidCeilingMicros_ = other.cpcBidCeilingMicros_;
      enhancedCpcEnabled_ = other.enhancedCpcEnabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PercentCpc Clone() {
      return new PercentCpc(this);
    }

    /// <summary>Field number for the "cpc_bid_ceiling_micros" field.</summary>
    public const int CpcBidCeilingMicrosFieldNumber = 3;
    private long cpcBidCeilingMicros_;
    /// <summary>
    /// Maximum bid limit that can be set by the bid strategy. This is
    /// an optional field entered by the advertiser and specified in local micros.
    /// Note: A zero value is interpreted in the same way as having bid_ceiling
    /// undefined.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CpcBidCeilingMicros {
      get { if ((_hasBits0 & 1) != 0) { return cpcBidCeilingMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        cpcBidCeilingMicros_ = value;
      }
    }
    /// <summary>Gets whether the "cpc_bid_ceiling_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCpcBidCeilingMicros {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "cpc_bid_ceiling_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCpcBidCeilingMicros() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "enhanced_cpc_enabled" field.</summary>
    public const int EnhancedCpcEnabledFieldNumber = 4;
    private bool enhancedCpcEnabled_;
    /// <summary>
    /// Adjusts the bid for each auction upward or downward, depending on the
    /// likelihood of a conversion. Individual bids may exceed
    /// cpc_bid_ceiling_micros, but the average bid amount for a campaign should
    /// not.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnhancedCpcEnabled {
      get { if ((_hasBits0 & 2) != 0) { return enhancedCpcEnabled_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        enhancedCpcEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "enhanced_cpc_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEnhancedCpcEnabled {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "enhanced_cpc_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEnhancedCpcEnabled() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PercentCpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PercentCpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CpcBidCeilingMicros != other.CpcBidCeilingMicros) return false;
      if (EnhancedCpcEnabled != other.EnhancedCpcEnabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCpcBidCeilingMicros) hash ^= CpcBidCeilingMicros.GetHashCode();
      if (HasEnhancedCpcEnabled) hash ^= EnhancedCpcEnabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCpcBidCeilingMicros) {
        output.WriteRawTag(24);
        output.WriteInt64(CpcBidCeilingMicros);
      }
      if (HasEnhancedCpcEnabled) {
        output.WriteRawTag(32);
        output.WriteBool(EnhancedCpcEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCpcBidCeilingMicros) {
        output.WriteRawTag(24);
        output.WriteInt64(CpcBidCeilingMicros);
      }
      if (HasEnhancedCpcEnabled) {
        output.WriteRawTag(32);
        output.WriteBool(EnhancedCpcEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCpcBidCeilingMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CpcBidCeilingMicros);
      }
      if (HasEnhancedCpcEnabled) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PercentCpc other) {
      if (other == null) {
        return;
      }
      if (other.HasCpcBidCeilingMicros) {
        CpcBidCeilingMicros = other.CpcBidCeilingMicros;
      }
      if (other.HasEnhancedCpcEnabled) {
        EnhancedCpcEnabled = other.EnhancedCpcEnabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            CpcBidCeilingMicros = input.ReadInt64();
            break;
          }
          case 32: {
            EnhancedCpcEnabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 24: {
            CpcBidCeilingMicros = input.ReadInt64();
            break;
          }
          case 32: {
            EnhancedCpcEnabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
