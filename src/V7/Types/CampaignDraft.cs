// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v7/resources/campaign_draft.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V7.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v7/resources/campaign_draft.proto</summary>
  public static partial class CampaignDraftReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v7/resources/campaign_draft.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CampaignDraftReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjZnb29nbGUvYWRzL2dvb2dsZWFkcy92Ny9yZXNvdXJjZXMvY2FtcGFpZ25f",
            "ZHJhZnQucHJvdG8SIWdvb2dsZS5hZHMuZ29vZ2xlYWRzLnY3LnJlc291cmNl",
            "cxo5Z29vZ2xlL2Fkcy9nb29nbGVhZHMvdjcvZW51bXMvY2FtcGFpZ25fZHJh",
            "ZnRfc3RhdHVzLnByb3RvGh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnBy",
            "b3RvGhlnb29nbGUvYXBpL3Jlc291cmNlLnByb3RvGhxnb29nbGUvYXBpL2Fu",
            "bm90YXRpb25zLnByb3RvIq0FCg1DYW1wYWlnbkRyYWZ0EkUKDXJlc291cmNl",
            "X25hbWUYASABKAlCLuBBBfpBKAomZ29vZ2xlYWRzLmdvb2dsZWFwaXMuY29t",
            "L0NhbXBhaWduRHJhZnQSGgoIZHJhZnRfaWQYCSABKANCA+BBA0gAiAEBEkUK",
            "DWJhc2VfY2FtcGFpZ24YCiABKAlCKeBBBfpBIwohZ29vZ2xlYWRzLmdvb2ds",
            "ZWFwaXMuY29tL0NhbXBhaWduSAGIAQESEQoEbmFtZRgLIAEoCUgCiAEBEkYK",
            "DmRyYWZ0X2NhbXBhaWduGAwgASgJQingQQP6QSMKIWdvb2dsZWFkcy5nb29n",
            "bGVhcGlzLmNvbS9DYW1wYWlnbkgDiAEBEl8KBnN0YXR1cxgGIAEoDjJKLmdv",
            "b2dsZS5hZHMuZ29vZ2xlYWRzLnY3LmVudW1zLkNhbXBhaWduRHJhZnRTdGF0",
            "dXNFbnVtLkNhbXBhaWduRHJhZnRTdGF0dXNCA+BBAxIoChZoYXNfZXhwZXJp",
            "bWVudF9ydW5uaW5nGA0gASgIQgPgQQNIBIgBARIoChZsb25nX3J1bm5pbmdf",
            "b3BlcmF0aW9uGA4gASgJQgPgQQNIBYgBATpx6kFuCiZnb29nbGVhZHMuZ29v",
            "Z2xlYXBpcy5jb20vQ2FtcGFpZ25EcmFmdBJEY3VzdG9tZXJzL3tjdXN0b21l",
            "cl9pZH0vY2FtcGFpZ25EcmFmdHMve2Jhc2VfY2FtcGFpZ25faWR9fntkcmFm",
            "dF9pZH1CCwoJX2RyYWZ0X2lkQhAKDl9iYXNlX2NhbXBhaWduQgcKBV9uYW1l",
            "QhEKD19kcmFmdF9jYW1wYWlnbkIZChdfaGFzX2V4cGVyaW1lbnRfcnVubmlu",
            "Z0IZChdfbG9uZ19ydW5uaW5nX29wZXJhdGlvbkL/AQolY29tLmdvb2dsZS5h",
            "ZHMuZ29vZ2xlYWRzLnY3LnJlc291cmNlc0ISQ2FtcGFpZ25EcmFmdFByb3Rv",
            "UAFaSmdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvYWRz",
            "L2dvb2dsZWFkcy92Ny9yZXNvdXJjZXM7cmVzb3VyY2VzogIDR0FBqgIhR29v",
            "Z2xlLkFkcy5Hb29nbGVBZHMuVjcuUmVzb3VyY2VzygIhR29vZ2xlXEFkc1xH",
            "b29nbGVBZHNcVjdcUmVzb3VyY2Vz6gIlR29vZ2xlOjpBZHM6Okdvb2dsZUFk",
            "czo6Vjc6OlJlc291cmNlc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V7.Enums.CampaignDraftStatusReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Resources.CampaignDraft), global::Google.Ads.GoogleAds.V7.Resources.CampaignDraft.Parser, new[]{ "ResourceName", "DraftId", "BaseCampaign", "Name", "DraftCampaign", "Status", "HasExperimentRunning", "LongRunningOperation" }, new[]{ "DraftId", "BaseCampaign", "Name", "DraftCampaign", "HasExperimentRunning", "LongRunningOperation" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A campaign draft.
  /// </summary>
  public sealed partial class CampaignDraft : pb::IMessage<CampaignDraft>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CampaignDraft> _parser = new pb::MessageParser<CampaignDraft>(() => new CampaignDraft());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CampaignDraft> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Resources.CampaignDraftReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignDraft() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignDraft(CampaignDraft other) : this() {
      _hasBits0 = other._hasBits0;
      resourceName_ = other.resourceName_;
      draftId_ = other.draftId_;
      baseCampaign_ = other.baseCampaign_;
      name_ = other.name_;
      draftCampaign_ = other.draftCampaign_;
      status_ = other.status_;
      hasExperimentRunning_ = other.hasExperimentRunning_;
      longRunningOperation_ = other.longRunningOperation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignDraft Clone() {
      return new CampaignDraft(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// Immutable. The resource name of the campaign draft.
    /// Campaign draft resource names have the form:
    ///
    /// `customers/{customer_id}/campaignDrafts/{base_campaign_id}~{draft_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "draft_id" field.</summary>
    public const int DraftIdFieldNumber = 9;
    private long draftId_;
    /// <summary>
    /// Output only. The ID of the draft.
    ///
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DraftId {
      get { if ((_hasBits0 & 1) != 0) { return draftId_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        draftId_ = value;
      }
    }
    /// <summary>Gets whether the "draft_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDraftId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "draft_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDraftId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "base_campaign" field.</summary>
    public const int BaseCampaignFieldNumber = 10;
    private string baseCampaign_;
    /// <summary>
    /// Immutable. The base campaign to which the draft belongs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BaseCampaign {
      get { return baseCampaign_ ?? ""; }
      set {
        baseCampaign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "base_campaign" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBaseCampaign {
      get { return baseCampaign_ != null; }
    }
    /// <summary>Clears the value of the "base_campaign" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBaseCampaign() {
      baseCampaign_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 11;
    private string name_;
    /// <summary>
    /// The name of the campaign draft.
    ///
    /// This field is required and should not be empty when creating new
    /// campaign drafts.
    ///
    /// It must not contain any null (code point 0x0), NL line feed
    /// (code point 0xA) or carriage return (code point 0xD) characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "draft_campaign" field.</summary>
    public const int DraftCampaignFieldNumber = 12;
    private string draftCampaign_;
    /// <summary>
    /// Output only. Resource name of the Campaign that results from overlaying the draft
    /// changes onto the base campaign.
    ///
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DraftCampaign {
      get { return draftCampaign_ ?? ""; }
      set {
        draftCampaign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "draft_campaign" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDraftCampaign {
      get { return draftCampaign_ != null; }
    }
    /// <summary>Clears the value of the "draft_campaign" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDraftCampaign() {
      draftCampaign_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 6;
    private global::Google.Ads.GoogleAds.V7.Enums.CampaignDraftStatusEnum.Types.CampaignDraftStatus status_ = global::Google.Ads.GoogleAds.V7.Enums.CampaignDraftStatusEnum.Types.CampaignDraftStatus.Unspecified;
    /// <summary>
    /// Output only. The status of the campaign draft. This field is read-only.
    ///
    /// When a new campaign draft is added, the status defaults to PROPOSED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V7.Enums.CampaignDraftStatusEnum.Types.CampaignDraftStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "has_experiment_running" field.</summary>
    public const int HasExperimentRunningFieldNumber = 13;
    private bool hasExperimentRunning_;
    /// <summary>
    /// Output only. Whether there is an experiment based on this draft currently serving.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExperimentRunning {
      get { if ((_hasBits0 & 2) != 0) { return hasExperimentRunning_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        hasExperimentRunning_ = value;
      }
    }
    /// <summary>Gets whether the "has_experiment_running" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHasExperimentRunning {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "has_experiment_running" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHasExperimentRunning() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "long_running_operation" field.</summary>
    public const int LongRunningOperationFieldNumber = 14;
    private string longRunningOperation_;
    /// <summary>
    /// Output only. The resource name of the long-running operation that can be used to poll
    /// for completion of draft promotion. This is only set if the draft promotion
    /// is in progress or finished.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LongRunningOperation {
      get { return longRunningOperation_ ?? ""; }
      set {
        longRunningOperation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "long_running_operation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLongRunningOperation {
      get { return longRunningOperation_ != null; }
    }
    /// <summary>Clears the value of the "long_running_operation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLongRunningOperation() {
      longRunningOperation_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CampaignDraft);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CampaignDraft other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (DraftId != other.DraftId) return false;
      if (BaseCampaign != other.BaseCampaign) return false;
      if (Name != other.Name) return false;
      if (DraftCampaign != other.DraftCampaign) return false;
      if (Status != other.Status) return false;
      if (HasExperimentRunning != other.HasExperimentRunning) return false;
      if (LongRunningOperation != other.LongRunningOperation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (HasDraftId) hash ^= DraftId.GetHashCode();
      if (HasBaseCampaign) hash ^= BaseCampaign.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasDraftCampaign) hash ^= DraftCampaign.GetHashCode();
      if (Status != global::Google.Ads.GoogleAds.V7.Enums.CampaignDraftStatusEnum.Types.CampaignDraftStatus.Unspecified) hash ^= Status.GetHashCode();
      if (HasHasExperimentRunning) hash ^= HasExperimentRunning.GetHashCode();
      if (HasLongRunningOperation) hash ^= LongRunningOperation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (Status != global::Google.Ads.GoogleAds.V7.Enums.CampaignDraftStatusEnum.Types.CampaignDraftStatus.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Status);
      }
      if (HasDraftId) {
        output.WriteRawTag(72);
        output.WriteInt64(DraftId);
      }
      if (HasBaseCampaign) {
        output.WriteRawTag(82);
        output.WriteString(BaseCampaign);
      }
      if (HasName) {
        output.WriteRawTag(90);
        output.WriteString(Name);
      }
      if (HasDraftCampaign) {
        output.WriteRawTag(98);
        output.WriteString(DraftCampaign);
      }
      if (HasHasExperimentRunning) {
        output.WriteRawTag(104);
        output.WriteBool(HasExperimentRunning);
      }
      if (HasLongRunningOperation) {
        output.WriteRawTag(114);
        output.WriteString(LongRunningOperation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (Status != global::Google.Ads.GoogleAds.V7.Enums.CampaignDraftStatusEnum.Types.CampaignDraftStatus.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Status);
      }
      if (HasDraftId) {
        output.WriteRawTag(72);
        output.WriteInt64(DraftId);
      }
      if (HasBaseCampaign) {
        output.WriteRawTag(82);
        output.WriteString(BaseCampaign);
      }
      if (HasName) {
        output.WriteRawTag(90);
        output.WriteString(Name);
      }
      if (HasDraftCampaign) {
        output.WriteRawTag(98);
        output.WriteString(DraftCampaign);
      }
      if (HasHasExperimentRunning) {
        output.WriteRawTag(104);
        output.WriteBool(HasExperimentRunning);
      }
      if (HasLongRunningOperation) {
        output.WriteRawTag(114);
        output.WriteString(LongRunningOperation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (HasDraftId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DraftId);
      }
      if (HasBaseCampaign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseCampaign);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasDraftCampaign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DraftCampaign);
      }
      if (Status != global::Google.Ads.GoogleAds.V7.Enums.CampaignDraftStatusEnum.Types.CampaignDraftStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (HasHasExperimentRunning) {
        size += 1 + 1;
      }
      if (HasLongRunningOperation) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LongRunningOperation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CampaignDraft other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.HasDraftId) {
        DraftId = other.DraftId;
      }
      if (other.HasBaseCampaign) {
        BaseCampaign = other.BaseCampaign;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasDraftCampaign) {
        DraftCampaign = other.DraftCampaign;
      }
      if (other.Status != global::Google.Ads.GoogleAds.V7.Enums.CampaignDraftStatusEnum.Types.CampaignDraftStatus.Unspecified) {
        Status = other.Status;
      }
      if (other.HasHasExperimentRunning) {
        HasExperimentRunning = other.HasExperimentRunning;
      }
      if (other.HasLongRunningOperation) {
        LongRunningOperation = other.LongRunningOperation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 48: {
            Status = (global::Google.Ads.GoogleAds.V7.Enums.CampaignDraftStatusEnum.Types.CampaignDraftStatus) input.ReadEnum();
            break;
          }
          case 72: {
            DraftId = input.ReadInt64();
            break;
          }
          case 82: {
            BaseCampaign = input.ReadString();
            break;
          }
          case 90: {
            Name = input.ReadString();
            break;
          }
          case 98: {
            DraftCampaign = input.ReadString();
            break;
          }
          case 104: {
            HasExperimentRunning = input.ReadBool();
            break;
          }
          case 114: {
            LongRunningOperation = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 48: {
            Status = (global::Google.Ads.GoogleAds.V7.Enums.CampaignDraftStatusEnum.Types.CampaignDraftStatus) input.ReadEnum();
            break;
          }
          case 72: {
            DraftId = input.ReadInt64();
            break;
          }
          case 82: {
            BaseCampaign = input.ReadString();
            break;
          }
          case 90: {
            Name = input.ReadString();
            break;
          }
          case 98: {
            DraftCampaign = input.ReadString();
            break;
          }
          case 104: {
            HasExperimentRunning = input.ReadBool();
            break;
          }
          case 114: {
            LongRunningOperation = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
