// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v7/resources/dynamic_search_ads_search_term_view.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V7.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v7/resources/dynamic_search_ads_search_term_view.proto</summary>
  public static partial class DynamicSearchAdsSearchTermViewReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v7/resources/dynamic_search_ads_search_term_view.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DynamicSearchAdsSearchTermViewReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cktnb29nbGUvYWRzL2dvb2dsZWFkcy92Ny9yZXNvdXJjZXMvZHluYW1pY19z",
            "ZWFyY2hfYWRzX3NlYXJjaF90ZXJtX3ZpZXcucHJvdG8SIWdvb2dsZS5hZHMu",
            "Z29vZ2xlYWRzLnY3LnJlc291cmNlcxofZ29vZ2xlL2FwaS9maWVsZF9iZWhh",
            "dmlvci5wcm90bxoZZ29vZ2xlL2FwaS9yZXNvdXJjZS5wcm90bxocZ29vZ2xl",
            "L2FwaS9hbm5vdGF0aW9ucy5wcm90byLQBQoeRHluYW1pY1NlYXJjaEFkc1Nl",
            "YXJjaFRlcm1WaWV3ElYKDXJlc291cmNlX25hbWUYASABKAlCP+BBA/pBOQo3",
            "Z29vZ2xlYWRzLmdvb2dsZWFwaXMuY29tL0R5bmFtaWNTZWFyY2hBZHNTZWFy",
            "Y2hUZXJtVmlldxIdCgtzZWFyY2hfdGVybRgJIAEoCUID4EEDSACIAQESGgoI",
            "aGVhZGxpbmUYCiABKAlCA+BBA0gBiAEBEh4KDGxhbmRpbmdfcGFnZRgLIAEo",
            "CUID4EEDSAKIAQESGgoIcGFnZV91cmwYDCABKAlCA+BBA0gDiAEBEiYKFGhh",
            "c19uZWdhdGl2ZV9rZXl3b3JkGA0gASgIQgPgQQNIBIgBARImChRoYXNfbWF0",
            "Y2hpbmdfa2V5d29yZBgOIAEoCEID4EEDSAWIAQESIgoQaGFzX25lZ2F0aXZl",
            "X3VybBgPIAEoCEID4EEDSAaIAQE66AHqQeQBCjdnb29nbGVhZHMuZ29vZ2xl",
            "YXBpcy5jb20vRHluYW1pY1NlYXJjaEFkc1NlYXJjaFRlcm1WaWV3EqgBY3Vz",
            "dG9tZXJzL3tjdXN0b21lcl9pZH0vZHluYW1pY1NlYXJjaEFkc1NlYXJjaFRl",
            "cm1WaWV3cy97YWRfZ3JvdXBfaWR9fntzZWFyY2hfdGVybV9maW5nZXJwcmlu",
            "dH1+e2hlYWRsaW5lX2ZpbmdlcnByaW50fX57bGFuZGluZ19wYWdlX2Zpbmdl",
            "cnByaW50fX57cGFnZV91cmxfZmluZ2VycHJpbnR9Qg4KDF9zZWFyY2hfdGVy",
            "bUILCglfaGVhZGxpbmVCDwoNX2xhbmRpbmdfcGFnZUILCglfcGFnZV91cmxC",
            "FwoVX2hhc19uZWdhdGl2ZV9rZXl3b3JkQhcKFV9oYXNfbWF0Y2hpbmdfa2V5",
            "d29yZEITChFfaGFzX25lZ2F0aXZlX3VybEKQAgolY29tLmdvb2dsZS5hZHMu",
            "Z29vZ2xlYWRzLnY3LnJlc291cmNlc0IjRHluYW1pY1NlYXJjaEFkc1NlYXJj",
            "aFRlcm1WaWV3UHJvdG9QAVpKZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8v",
            "Z29vZ2xlYXBpcy9hZHMvZ29vZ2xlYWRzL3Y3L3Jlc291cmNlcztyZXNvdXJj",
            "ZXOiAgNHQUGqAiFHb29nbGUuQWRzLkdvb2dsZUFkcy5WNy5SZXNvdXJjZXPK",
            "AiFHb29nbGVcQWRzXEdvb2dsZUFkc1xWN1xSZXNvdXJjZXPqAiVHb29nbGU6",
            "OkFkczo6R29vZ2xlQWRzOjpWNzo6UmVzb3VyY2VzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Resources.DynamicSearchAdsSearchTermView), global::Google.Ads.GoogleAds.V7.Resources.DynamicSearchAdsSearchTermView.Parser, new[]{ "ResourceName", "SearchTerm", "Headline", "LandingPage", "PageUrl", "HasNegativeKeyword", "HasMatchingKeyword", "HasNegativeUrl" }, new[]{ "SearchTerm", "Headline", "LandingPage", "PageUrl", "HasNegativeKeyword", "HasMatchingKeyword", "HasNegativeUrl" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A dynamic search ads search term view.
  /// </summary>
  public sealed partial class DynamicSearchAdsSearchTermView : pb::IMessage<DynamicSearchAdsSearchTermView>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DynamicSearchAdsSearchTermView> _parser = new pb::MessageParser<DynamicSearchAdsSearchTermView>(() => new DynamicSearchAdsSearchTermView());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DynamicSearchAdsSearchTermView> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Resources.DynamicSearchAdsSearchTermViewReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicSearchAdsSearchTermView() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicSearchAdsSearchTermView(DynamicSearchAdsSearchTermView other) : this() {
      _hasBits0 = other._hasBits0;
      resourceName_ = other.resourceName_;
      searchTerm_ = other.searchTerm_;
      headline_ = other.headline_;
      landingPage_ = other.landingPage_;
      pageUrl_ = other.pageUrl_;
      hasNegativeKeyword_ = other.hasNegativeKeyword_;
      hasMatchingKeyword_ = other.hasMatchingKeyword_;
      hasNegativeUrl_ = other.hasNegativeUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicSearchAdsSearchTermView Clone() {
      return new DynamicSearchAdsSearchTermView(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// Output only. The resource name of the dynamic search ads search term view.
    /// Dynamic search ads search term view resource names have the form:
    ///
    /// `customers/{customer_id}/dynamicSearchAdsSearchTermViews/{ad_group_id}~{search_term_fingerprint}~{headline_fingerprint}~{landing_page_fingerprint}~{page_url_fingerprint}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "search_term" field.</summary>
    public const int SearchTermFieldNumber = 9;
    private string searchTerm_;
    /// <summary>
    /// Output only. Search term
    ///
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SearchTerm {
      get { return searchTerm_ ?? ""; }
      set {
        searchTerm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "search_term" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSearchTerm {
      get { return searchTerm_ != null; }
    }
    /// <summary>Clears the value of the "search_term" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSearchTerm() {
      searchTerm_ = null;
    }

    /// <summary>Field number for the "headline" field.</summary>
    public const int HeadlineFieldNumber = 10;
    private string headline_;
    /// <summary>
    /// Output only. The dynamically generated headline of the Dynamic Search Ad.
    ///
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Headline {
      get { return headline_ ?? ""; }
      set {
        headline_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "headline" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHeadline {
      get { return headline_ != null; }
    }
    /// <summary>Clears the value of the "headline" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHeadline() {
      headline_ = null;
    }

    /// <summary>Field number for the "landing_page" field.</summary>
    public const int LandingPageFieldNumber = 11;
    private string landingPage_;
    /// <summary>
    /// Output only. The dynamically selected landing page URL of the impression.
    ///
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LandingPage {
      get { return landingPage_ ?? ""; }
      set {
        landingPage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "landing_page" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLandingPage {
      get { return landingPage_ != null; }
    }
    /// <summary>Clears the value of the "landing_page" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLandingPage() {
      landingPage_ = null;
    }

    /// <summary>Field number for the "page_url" field.</summary>
    public const int PageUrlFieldNumber = 12;
    private string pageUrl_;
    /// <summary>
    /// Output only. The URL of page feed item served for the impression.
    ///
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageUrl {
      get { return pageUrl_ ?? ""; }
      set {
        pageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "page_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPageUrl {
      get { return pageUrl_ != null; }
    }
    /// <summary>Clears the value of the "page_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPageUrl() {
      pageUrl_ = null;
    }

    /// <summary>Field number for the "has_negative_keyword" field.</summary>
    public const int HasNegativeKeywordFieldNumber = 13;
    private bool hasNegativeKeyword_;
    /// <summary>
    /// Output only. True if query matches a negative keyword.
    ///
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNegativeKeyword {
      get { if ((_hasBits0 & 1) != 0) { return hasNegativeKeyword_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        hasNegativeKeyword_ = value;
      }
    }
    /// <summary>Gets whether the "has_negative_keyword" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHasNegativeKeyword {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "has_negative_keyword" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHasNegativeKeyword() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "has_matching_keyword" field.</summary>
    public const int HasMatchingKeywordFieldNumber = 14;
    private bool hasMatchingKeyword_;
    /// <summary>
    /// Output only. True if query is added to targeted keywords.
    ///
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMatchingKeyword {
      get { if ((_hasBits0 & 2) != 0) { return hasMatchingKeyword_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        hasMatchingKeyword_ = value;
      }
    }
    /// <summary>Gets whether the "has_matching_keyword" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHasMatchingKeyword {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "has_matching_keyword" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHasMatchingKeyword() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "has_negative_url" field.</summary>
    public const int HasNegativeUrlFieldNumber = 15;
    private bool hasNegativeUrl_;
    /// <summary>
    /// Output only. True if query matches a negative url.
    ///
    /// This field is read-only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNegativeUrl {
      get { if ((_hasBits0 & 4) != 0) { return hasNegativeUrl_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        hasNegativeUrl_ = value;
      }
    }
    /// <summary>Gets whether the "has_negative_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHasNegativeUrl {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "has_negative_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHasNegativeUrl() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DynamicSearchAdsSearchTermView);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DynamicSearchAdsSearchTermView other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (SearchTerm != other.SearchTerm) return false;
      if (Headline != other.Headline) return false;
      if (LandingPage != other.LandingPage) return false;
      if (PageUrl != other.PageUrl) return false;
      if (HasNegativeKeyword != other.HasNegativeKeyword) return false;
      if (HasMatchingKeyword != other.HasMatchingKeyword) return false;
      if (HasNegativeUrl != other.HasNegativeUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (HasSearchTerm) hash ^= SearchTerm.GetHashCode();
      if (HasHeadline) hash ^= Headline.GetHashCode();
      if (HasLandingPage) hash ^= LandingPage.GetHashCode();
      if (HasPageUrl) hash ^= PageUrl.GetHashCode();
      if (HasHasNegativeKeyword) hash ^= HasNegativeKeyword.GetHashCode();
      if (HasHasMatchingKeyword) hash ^= HasMatchingKeyword.GetHashCode();
      if (HasHasNegativeUrl) hash ^= HasNegativeUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (HasSearchTerm) {
        output.WriteRawTag(74);
        output.WriteString(SearchTerm);
      }
      if (HasHeadline) {
        output.WriteRawTag(82);
        output.WriteString(Headline);
      }
      if (HasLandingPage) {
        output.WriteRawTag(90);
        output.WriteString(LandingPage);
      }
      if (HasPageUrl) {
        output.WriteRawTag(98);
        output.WriteString(PageUrl);
      }
      if (HasHasNegativeKeyword) {
        output.WriteRawTag(104);
        output.WriteBool(HasNegativeKeyword);
      }
      if (HasHasMatchingKeyword) {
        output.WriteRawTag(112);
        output.WriteBool(HasMatchingKeyword);
      }
      if (HasHasNegativeUrl) {
        output.WriteRawTag(120);
        output.WriteBool(HasNegativeUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (HasSearchTerm) {
        output.WriteRawTag(74);
        output.WriteString(SearchTerm);
      }
      if (HasHeadline) {
        output.WriteRawTag(82);
        output.WriteString(Headline);
      }
      if (HasLandingPage) {
        output.WriteRawTag(90);
        output.WriteString(LandingPage);
      }
      if (HasPageUrl) {
        output.WriteRawTag(98);
        output.WriteString(PageUrl);
      }
      if (HasHasNegativeKeyword) {
        output.WriteRawTag(104);
        output.WriteBool(HasNegativeKeyword);
      }
      if (HasHasMatchingKeyword) {
        output.WriteRawTag(112);
        output.WriteBool(HasMatchingKeyword);
      }
      if (HasHasNegativeUrl) {
        output.WriteRawTag(120);
        output.WriteBool(HasNegativeUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (HasSearchTerm) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SearchTerm);
      }
      if (HasHeadline) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Headline);
      }
      if (HasLandingPage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LandingPage);
      }
      if (HasPageUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageUrl);
      }
      if (HasHasNegativeKeyword) {
        size += 1 + 1;
      }
      if (HasHasMatchingKeyword) {
        size += 1 + 1;
      }
      if (HasHasNegativeUrl) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DynamicSearchAdsSearchTermView other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.HasSearchTerm) {
        SearchTerm = other.SearchTerm;
      }
      if (other.HasHeadline) {
        Headline = other.Headline;
      }
      if (other.HasLandingPage) {
        LandingPage = other.LandingPage;
      }
      if (other.HasPageUrl) {
        PageUrl = other.PageUrl;
      }
      if (other.HasHasNegativeKeyword) {
        HasNegativeKeyword = other.HasNegativeKeyword;
      }
      if (other.HasHasMatchingKeyword) {
        HasMatchingKeyword = other.HasMatchingKeyword;
      }
      if (other.HasHasNegativeUrl) {
        HasNegativeUrl = other.HasNegativeUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 74: {
            SearchTerm = input.ReadString();
            break;
          }
          case 82: {
            Headline = input.ReadString();
            break;
          }
          case 90: {
            LandingPage = input.ReadString();
            break;
          }
          case 98: {
            PageUrl = input.ReadString();
            break;
          }
          case 104: {
            HasNegativeKeyword = input.ReadBool();
            break;
          }
          case 112: {
            HasMatchingKeyword = input.ReadBool();
            break;
          }
          case 120: {
            HasNegativeUrl = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 74: {
            SearchTerm = input.ReadString();
            break;
          }
          case 82: {
            Headline = input.ReadString();
            break;
          }
          case 90: {
            LandingPage = input.ReadString();
            break;
          }
          case 98: {
            PageUrl = input.ReadString();
            break;
          }
          case 104: {
            HasNegativeKeyword = input.ReadBool();
            break;
          }
          case 112: {
            HasMatchingKeyword = input.ReadBool();
            break;
          }
          case 120: {
            HasNegativeUrl = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
