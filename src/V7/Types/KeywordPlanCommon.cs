// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v7/common/keyword_plan_common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V7.Common {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v7/common/keyword_plan_common.proto</summary>
  public static partial class KeywordPlanCommonReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v7/common/keyword_plan_common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static KeywordPlanCommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjhnb29nbGUvYWRzL2dvb2dsZWFkcy92Ny9jb21tb24va2V5d29yZF9wbGFu",
            "X2NvbW1vbi5wcm90bxIeZ29vZ2xlLmFkcy5nb29nbGVhZHMudjcuY29tbW9u",
            "Gipnb29nbGUvYWRzL2dvb2dsZWFkcy92Ny9jb21tb24vZGF0ZXMucHJvdG8a",
            "Kmdvb2dsZS9hZHMvZ29vZ2xlYWRzL3Y3L2VudW1zL2RldmljZS5wcm90bxpG",
            "Z29vZ2xlL2Fkcy9nb29nbGVhZHMvdjcvZW51bXMva2V5d29yZF9wbGFuX2Fn",
            "Z3JlZ2F0ZV9tZXRyaWNfdHlwZS5wcm90bxpCZ29vZ2xlL2Fkcy9nb29nbGVh",
            "ZHMvdjcvZW51bXMva2V5d29yZF9wbGFuX2NvbXBldGl0aW9uX2xldmVsLnBy",
            "b3RvGkNnb29nbGUvYWRzL2dvb2dsZWFkcy92Ny9lbnVtcy9rZXl3b3JkX3Bs",
            "YW5fY29uY2VwdF9ncm91cF90eXBlLnByb3RvGjFnb29nbGUvYWRzL2dvb2ds",
            "ZWFkcy92Ny9lbnVtcy9tb250aF9vZl95ZWFyLnByb3RvGhxnb29nbGUvYXBp",
            "L2Fubm90YXRpb25zLnByb3RvIugDChxLZXl3b3JkUGxhbkhpc3RvcmljYWxN",
            "ZXRyaWNzEiEKFGF2Z19tb250aGx5X3NlYXJjaGVzGAcgASgDSACIAQESUwoW",
            "bW9udGhseV9zZWFyY2hfdm9sdW1lcxgGIAMoCzIzLmdvb2dsZS5hZHMuZ29v",
            "Z2xlYWRzLnY3LmNvbW1vbi5Nb250aGx5U2VhcmNoVm9sdW1lEm8KC2NvbXBl",
            "dGl0aW9uGAIgASgOMlouZ29vZ2xlLmFkcy5nb29nbGVhZHMudjcuZW51bXMu",
            "S2V5d29yZFBsYW5Db21wZXRpdGlvbkxldmVsRW51bS5LZXl3b3JkUGxhbkNv",
            "bXBldGl0aW9uTGV2ZWwSHgoRY29tcGV0aXRpb25faW5kZXgYCCABKANIAYgB",
            "ARInChpsb3dfdG9wX29mX3BhZ2VfYmlkX21pY3JvcxgJIAEoA0gCiAEBEigK",
            "G2hpZ2hfdG9wX29mX3BhZ2VfYmlkX21pY3JvcxgKIAEoA0gDiAEBQhcKFV9h",
            "dmdfbW9udGhseV9zZWFyY2hlc0IUChJfY29tcGV0aXRpb25faW5kZXhCHQob",
            "X2xvd190b3Bfb2ZfcGFnZV9iaWRfbWljcm9zQh4KHF9oaWdoX3RvcF9vZl9w",
            "YWdlX2JpZF9taWNyb3MifgoYSGlzdG9yaWNhbE1ldHJpY3NPcHRpb25zEk0K",
            "EHllYXJfbW9udGhfcmFuZ2UYASABKAsyLi5nb29nbGUuYWRzLmdvb2dsZWFk",
            "cy52Ny5jb21tb24uWWVhck1vbnRoUmFuZ2VIAIgBAUITChFfeWVhcl9tb250",
            "aF9yYW5nZSKwAQoTTW9udGhseVNlYXJjaFZvbHVtZRIRCgR5ZWFyGAQgASgD",
            "SACIAQESSQoFbW9udGgYAiABKA4yOi5nb29nbGUuYWRzLmdvb2dsZWFkcy52",
            "Ny5lbnVtcy5Nb250aE9mWWVhckVudW0uTW9udGhPZlllYXISHQoQbW9udGhs",
            "eV9zZWFyY2hlcxgFIAEoA0gBiAEBQgcKBV95ZWFyQhMKEV9tb250aGx5X3Nl",
            "YXJjaGVzIqABChtLZXl3b3JkUGxhbkFnZ3JlZ2F0ZU1ldHJpY3MSgAEKFmFn",
            "Z3JlZ2F0ZV9tZXRyaWNfdHlwZXMYASADKA4yYC5nb29nbGUuYWRzLmdvb2ds",
            "ZWFkcy52Ny5lbnVtcy5LZXl3b3JkUGxhbkFnZ3JlZ2F0ZU1ldHJpY1R5cGVF",
            "bnVtLktleXdvcmRQbGFuQWdncmVnYXRlTWV0cmljVHlwZSJ3CiFLZXl3b3Jk",
            "UGxhbkFnZ3JlZ2F0ZU1ldHJpY1Jlc3VsdHMSUgoPZGV2aWNlX3NlYXJjaGVz",
            "GAEgAygLMjkuZ29vZ2xlLmFkcy5nb29nbGVhZHMudjcuY29tbW9uLktleXdv",
            "cmRQbGFuRGV2aWNlU2VhcmNoZXMiiQEKGUtleXdvcmRQbGFuRGV2aWNlU2Vh",
            "cmNoZXMSQAoGZGV2aWNlGAEgASgOMjAuZ29vZ2xlLmFkcy5nb29nbGVhZHMu",
            "djcuZW51bXMuRGV2aWNlRW51bS5EZXZpY2USGQoMc2VhcmNoX2NvdW50GAIg",
            "ASgDSACIAQFCDwoNX3NlYXJjaF9jb3VudCJWChJLZXl3b3JkQW5ub3RhdGlv",
            "bnMSQAoIY29uY2VwdHMYASADKAsyLi5nb29nbGUuYWRzLmdvb2dsZWFkcy52",
            "Ny5jb21tb24uS2V5d29yZENvbmNlcHQiYwoOS2V5d29yZENvbmNlcHQSDAoE",
            "bmFtZRgBIAEoCRJDCg1jb25jZXB0X2dyb3VwGAIgASgLMiwuZ29vZ2xlLmFk",
            "cy5nb29nbGVhZHMudjcuY29tbW9uLkNvbmNlcHRHcm91cCKGAQoMQ29uY2Vw",
            "dEdyb3VwEgwKBG5hbWUYASABKAkSaAoEdHlwZRgCIAEoDjJaLmdvb2dsZS5h",
            "ZHMuZ29vZ2xlYWRzLnY3LmVudW1zLktleXdvcmRQbGFuQ29uY2VwdEdyb3Vw",
            "VHlwZUVudW0uS2V5d29yZFBsYW5Db25jZXB0R3JvdXBUeXBlQvEBCiJjb20u",
            "Z29vZ2xlLmFkcy5nb29nbGVhZHMudjcuY29tbW9uQhZLZXl3b3JkUGxhbkNv",
            "bW1vblByb3RvUAFaRGdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2ds",
            "ZWFwaXMvYWRzL2dvb2dsZWFkcy92Ny9jb21tb247Y29tbW9uogIDR0FBqgIe",
            "R29vZ2xlLkFkcy5Hb29nbGVBZHMuVjcuQ29tbW9uygIeR29vZ2xlXEFkc1xH",
            "b29nbGVBZHNcVjdcQ29tbW9u6gIiR29vZ2xlOjpBZHM6Okdvb2dsZUFkczo6",
            "Vjc6OkNvbW1vbmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V7.Common.DatesReflection.Descriptor, global::Google.Ads.GoogleAds.V7.Enums.DeviceReflection.Descriptor, global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanAggregateMetricTypeReflection.Descriptor, global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanCompetitionLevelReflection.Descriptor, global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanConceptGroupTypeReflection.Descriptor, global::Google.Ads.GoogleAds.V7.Enums.MonthOfYearReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.KeywordPlanHistoricalMetrics), global::Google.Ads.GoogleAds.V7.Common.KeywordPlanHistoricalMetrics.Parser, new[]{ "AvgMonthlySearches", "MonthlySearchVolumes", "Competition", "CompetitionIndex", "LowTopOfPageBidMicros", "HighTopOfPageBidMicros" }, new[]{ "AvgMonthlySearches", "CompetitionIndex", "LowTopOfPageBidMicros", "HighTopOfPageBidMicros" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.HistoricalMetricsOptions), global::Google.Ads.GoogleAds.V7.Common.HistoricalMetricsOptions.Parser, new[]{ "YearMonthRange" }, new[]{ "YearMonthRange" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.MonthlySearchVolume), global::Google.Ads.GoogleAds.V7.Common.MonthlySearchVolume.Parser, new[]{ "Year", "Month", "MonthlySearches" }, new[]{ "Year", "MonthlySearches" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.KeywordPlanAggregateMetrics), global::Google.Ads.GoogleAds.V7.Common.KeywordPlanAggregateMetrics.Parser, new[]{ "AggregateMetricTypes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.KeywordPlanAggregateMetricResults), global::Google.Ads.GoogleAds.V7.Common.KeywordPlanAggregateMetricResults.Parser, new[]{ "DeviceSearches" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.KeywordPlanDeviceSearches), global::Google.Ads.GoogleAds.V7.Common.KeywordPlanDeviceSearches.Parser, new[]{ "Device", "SearchCount" }, new[]{ "SearchCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.KeywordAnnotations), global::Google.Ads.GoogleAds.V7.Common.KeywordAnnotations.Parser, new[]{ "Concepts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.KeywordConcept), global::Google.Ads.GoogleAds.V7.Common.KeywordConcept.Parser, new[]{ "Name", "ConceptGroup" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V7.Common.ConceptGroup), global::Google.Ads.GoogleAds.V7.Common.ConceptGroup.Parser, new[]{ "Name", "Type" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Historical metrics specific to the targeting options selected.
  /// Targeting options include geographies, network, etc.
  /// Refer to https://support.google.com/google-ads/answer/3022575 for more
  /// details.
  /// </summary>
  public sealed partial class KeywordPlanHistoricalMetrics : pb::IMessage<KeywordPlanHistoricalMetrics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeywordPlanHistoricalMetrics> _parser = new pb::MessageParser<KeywordPlanHistoricalMetrics>(() => new KeywordPlanHistoricalMetrics());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeywordPlanHistoricalMetrics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.KeywordPlanCommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordPlanHistoricalMetrics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordPlanHistoricalMetrics(KeywordPlanHistoricalMetrics other) : this() {
      _hasBits0 = other._hasBits0;
      avgMonthlySearches_ = other.avgMonthlySearches_;
      monthlySearchVolumes_ = other.monthlySearchVolumes_.Clone();
      competition_ = other.competition_;
      competitionIndex_ = other.competitionIndex_;
      lowTopOfPageBidMicros_ = other.lowTopOfPageBidMicros_;
      highTopOfPageBidMicros_ = other.highTopOfPageBidMicros_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordPlanHistoricalMetrics Clone() {
      return new KeywordPlanHistoricalMetrics(this);
    }

    /// <summary>Field number for the "avg_monthly_searches" field.</summary>
    public const int AvgMonthlySearchesFieldNumber = 7;
    private long avgMonthlySearches_;
    /// <summary>
    /// Approximate number of monthly searches on this query averaged
    /// for the past 12 months.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AvgMonthlySearches {
      get { if ((_hasBits0 & 1) != 0) { return avgMonthlySearches_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        avgMonthlySearches_ = value;
      }
    }
    /// <summary>Gets whether the "avg_monthly_searches" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAvgMonthlySearches {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "avg_monthly_searches" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAvgMonthlySearches() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "monthly_search_volumes" field.</summary>
    public const int MonthlySearchVolumesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V7.Common.MonthlySearchVolume> _repeated_monthlySearchVolumes_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Ads.GoogleAds.V7.Common.MonthlySearchVolume.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V7.Common.MonthlySearchVolume> monthlySearchVolumes_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V7.Common.MonthlySearchVolume>();
    /// <summary>
    /// Approximate number of searches on this query for the past twelve months.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V7.Common.MonthlySearchVolume> MonthlySearchVolumes {
      get { return monthlySearchVolumes_; }
    }

    /// <summary>Field number for the "competition" field.</summary>
    public const int CompetitionFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanCompetitionLevelEnum.Types.KeywordPlanCompetitionLevel competition_ = global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanCompetitionLevelEnum.Types.KeywordPlanCompetitionLevel.Unspecified;
    /// <summary>
    /// The competition level for the query.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanCompetitionLevelEnum.Types.KeywordPlanCompetitionLevel Competition {
      get { return competition_; }
      set {
        competition_ = value;
      }
    }

    /// <summary>Field number for the "competition_index" field.</summary>
    public const int CompetitionIndexFieldNumber = 8;
    private long competitionIndex_;
    /// <summary>
    /// The competition index for the query in the range [0, 100].
    /// Shows how competitive ad placement is for a keyword.
    /// The level of competition from 0-100 is determined by the number of ad slots
    /// filled divided by the total number of ad slots available. If not enough
    /// data is available, null is returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CompetitionIndex {
      get { if ((_hasBits0 & 2) != 0) { return competitionIndex_; } else { return 0L; } }
      set {
        _hasBits0 |= 2;
        competitionIndex_ = value;
      }
    }
    /// <summary>Gets whether the "competition_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCompetitionIndex {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "competition_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCompetitionIndex() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "low_top_of_page_bid_micros" field.</summary>
    public const int LowTopOfPageBidMicrosFieldNumber = 9;
    private long lowTopOfPageBidMicros_;
    /// <summary>
    /// Top of page bid low range (20th percentile) in micros for the keyword.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LowTopOfPageBidMicros {
      get { if ((_hasBits0 & 4) != 0) { return lowTopOfPageBidMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 4;
        lowTopOfPageBidMicros_ = value;
      }
    }
    /// <summary>Gets whether the "low_top_of_page_bid_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLowTopOfPageBidMicros {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "low_top_of_page_bid_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLowTopOfPageBidMicros() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "high_top_of_page_bid_micros" field.</summary>
    public const int HighTopOfPageBidMicrosFieldNumber = 10;
    private long highTopOfPageBidMicros_;
    /// <summary>
    /// Top of page bid high range (80th percentile) in micros for the keyword.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HighTopOfPageBidMicros {
      get { if ((_hasBits0 & 8) != 0) { return highTopOfPageBidMicros_; } else { return 0L; } }
      set {
        _hasBits0 |= 8;
        highTopOfPageBidMicros_ = value;
      }
    }
    /// <summary>Gets whether the "high_top_of_page_bid_micros" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHighTopOfPageBidMicros {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "high_top_of_page_bid_micros" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHighTopOfPageBidMicros() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeywordPlanHistoricalMetrics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeywordPlanHistoricalMetrics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AvgMonthlySearches != other.AvgMonthlySearches) return false;
      if(!monthlySearchVolumes_.Equals(other.monthlySearchVolumes_)) return false;
      if (Competition != other.Competition) return false;
      if (CompetitionIndex != other.CompetitionIndex) return false;
      if (LowTopOfPageBidMicros != other.LowTopOfPageBidMicros) return false;
      if (HighTopOfPageBidMicros != other.HighTopOfPageBidMicros) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAvgMonthlySearches) hash ^= AvgMonthlySearches.GetHashCode();
      hash ^= monthlySearchVolumes_.GetHashCode();
      if (Competition != global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanCompetitionLevelEnum.Types.KeywordPlanCompetitionLevel.Unspecified) hash ^= Competition.GetHashCode();
      if (HasCompetitionIndex) hash ^= CompetitionIndex.GetHashCode();
      if (HasLowTopOfPageBidMicros) hash ^= LowTopOfPageBidMicros.GetHashCode();
      if (HasHighTopOfPageBidMicros) hash ^= HighTopOfPageBidMicros.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Competition != global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanCompetitionLevelEnum.Types.KeywordPlanCompetitionLevel.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Competition);
      }
      monthlySearchVolumes_.WriteTo(output, _repeated_monthlySearchVolumes_codec);
      if (HasAvgMonthlySearches) {
        output.WriteRawTag(56);
        output.WriteInt64(AvgMonthlySearches);
      }
      if (HasCompetitionIndex) {
        output.WriteRawTag(64);
        output.WriteInt64(CompetitionIndex);
      }
      if (HasLowTopOfPageBidMicros) {
        output.WriteRawTag(72);
        output.WriteInt64(LowTopOfPageBidMicros);
      }
      if (HasHighTopOfPageBidMicros) {
        output.WriteRawTag(80);
        output.WriteInt64(HighTopOfPageBidMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Competition != global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanCompetitionLevelEnum.Types.KeywordPlanCompetitionLevel.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Competition);
      }
      monthlySearchVolumes_.WriteTo(ref output, _repeated_monthlySearchVolumes_codec);
      if (HasAvgMonthlySearches) {
        output.WriteRawTag(56);
        output.WriteInt64(AvgMonthlySearches);
      }
      if (HasCompetitionIndex) {
        output.WriteRawTag(64);
        output.WriteInt64(CompetitionIndex);
      }
      if (HasLowTopOfPageBidMicros) {
        output.WriteRawTag(72);
        output.WriteInt64(LowTopOfPageBidMicros);
      }
      if (HasHighTopOfPageBidMicros) {
        output.WriteRawTag(80);
        output.WriteInt64(HighTopOfPageBidMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAvgMonthlySearches) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AvgMonthlySearches);
      }
      size += monthlySearchVolumes_.CalculateSize(_repeated_monthlySearchVolumes_codec);
      if (Competition != global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanCompetitionLevelEnum.Types.KeywordPlanCompetitionLevel.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Competition);
      }
      if (HasCompetitionIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CompetitionIndex);
      }
      if (HasLowTopOfPageBidMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LowTopOfPageBidMicros);
      }
      if (HasHighTopOfPageBidMicros) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HighTopOfPageBidMicros);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeywordPlanHistoricalMetrics other) {
      if (other == null) {
        return;
      }
      if (other.HasAvgMonthlySearches) {
        AvgMonthlySearches = other.AvgMonthlySearches;
      }
      monthlySearchVolumes_.Add(other.monthlySearchVolumes_);
      if (other.Competition != global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanCompetitionLevelEnum.Types.KeywordPlanCompetitionLevel.Unspecified) {
        Competition = other.Competition;
      }
      if (other.HasCompetitionIndex) {
        CompetitionIndex = other.CompetitionIndex;
      }
      if (other.HasLowTopOfPageBidMicros) {
        LowTopOfPageBidMicros = other.LowTopOfPageBidMicros;
      }
      if (other.HasHighTopOfPageBidMicros) {
        HighTopOfPageBidMicros = other.HighTopOfPageBidMicros;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Competition = (global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanCompetitionLevelEnum.Types.KeywordPlanCompetitionLevel) input.ReadEnum();
            break;
          }
          case 50: {
            monthlySearchVolumes_.AddEntriesFrom(input, _repeated_monthlySearchVolumes_codec);
            break;
          }
          case 56: {
            AvgMonthlySearches = input.ReadInt64();
            break;
          }
          case 64: {
            CompetitionIndex = input.ReadInt64();
            break;
          }
          case 72: {
            LowTopOfPageBidMicros = input.ReadInt64();
            break;
          }
          case 80: {
            HighTopOfPageBidMicros = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            Competition = (global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanCompetitionLevelEnum.Types.KeywordPlanCompetitionLevel) input.ReadEnum();
            break;
          }
          case 50: {
            monthlySearchVolumes_.AddEntriesFrom(ref input, _repeated_monthlySearchVolumes_codec);
            break;
          }
          case 56: {
            AvgMonthlySearches = input.ReadInt64();
            break;
          }
          case 64: {
            CompetitionIndex = input.ReadInt64();
            break;
          }
          case 72: {
            LowTopOfPageBidMicros = input.ReadInt64();
            break;
          }
          case 80: {
            HighTopOfPageBidMicros = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Historical metrics options.
  /// </summary>
  public sealed partial class HistoricalMetricsOptions : pb::IMessage<HistoricalMetricsOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HistoricalMetricsOptions> _parser = new pb::MessageParser<HistoricalMetricsOptions>(() => new HistoricalMetricsOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HistoricalMetricsOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.KeywordPlanCommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoricalMetricsOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoricalMetricsOptions(HistoricalMetricsOptions other) : this() {
      yearMonthRange_ = other.yearMonthRange_ != null ? other.yearMonthRange_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoricalMetricsOptions Clone() {
      return new HistoricalMetricsOptions(this);
    }

    /// <summary>Field number for the "year_month_range" field.</summary>
    public const int YearMonthRangeFieldNumber = 1;
    private global::Google.Ads.GoogleAds.V7.Common.YearMonthRange yearMonthRange_;
    /// <summary>
    /// The year month range for historical metrics. If not specified the searches
    /// will be returned for past 12 months.
    /// Searches data is available for the past 4 years. If the search volume is
    /// not available for the entire year_month_range provided, the subset of the
    /// year month range for which search volume is available will be returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V7.Common.YearMonthRange YearMonthRange {
      get { return yearMonthRange_; }
      set {
        yearMonthRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HistoricalMetricsOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HistoricalMetricsOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(YearMonthRange, other.YearMonthRange)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (yearMonthRange_ != null) hash ^= YearMonthRange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (yearMonthRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(YearMonthRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (yearMonthRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(YearMonthRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (yearMonthRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(YearMonthRange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HistoricalMetricsOptions other) {
      if (other == null) {
        return;
      }
      if (other.yearMonthRange_ != null) {
        if (yearMonthRange_ == null) {
          YearMonthRange = new global::Google.Ads.GoogleAds.V7.Common.YearMonthRange();
        }
        YearMonthRange.MergeFrom(other.YearMonthRange);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (yearMonthRange_ == null) {
              YearMonthRange = new global::Google.Ads.GoogleAds.V7.Common.YearMonthRange();
            }
            input.ReadMessage(YearMonthRange);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (yearMonthRange_ == null) {
              YearMonthRange = new global::Google.Ads.GoogleAds.V7.Common.YearMonthRange();
            }
            input.ReadMessage(YearMonthRange);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Monthly search volume.
  /// </summary>
  public sealed partial class MonthlySearchVolume : pb::IMessage<MonthlySearchVolume>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MonthlySearchVolume> _parser = new pb::MessageParser<MonthlySearchVolume>(() => new MonthlySearchVolume());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MonthlySearchVolume> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.KeywordPlanCommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthlySearchVolume() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthlySearchVolume(MonthlySearchVolume other) : this() {
      _hasBits0 = other._hasBits0;
      year_ = other.year_;
      month_ = other.month_;
      monthlySearches_ = other.monthlySearches_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonthlySearchVolume Clone() {
      return new MonthlySearchVolume(this);
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 4;
    private long year_;
    /// <summary>
    /// The year of the search volume (e.g. 2020).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Year {
      get { if ((_hasBits0 & 1) != 0) { return year_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        year_ = value;
      }
    }
    /// <summary>Gets whether the "year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasYear {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearYear() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "month" field.</summary>
    public const int MonthFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V7.Enums.MonthOfYearEnum.Types.MonthOfYear month_ = global::Google.Ads.GoogleAds.V7.Enums.MonthOfYearEnum.Types.MonthOfYear.Unspecified;
    /// <summary>
    /// The month of the search volume.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V7.Enums.MonthOfYearEnum.Types.MonthOfYear Month {
      get { return month_; }
      set {
        month_ = value;
      }
    }

    /// <summary>Field number for the "monthly_searches" field.</summary>
    public const int MonthlySearchesFieldNumber = 5;
    private long monthlySearches_;
    /// <summary>
    /// Approximate number of searches for the month.
    /// A null value indicates the search volume is unavailable for
    /// that month.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MonthlySearches {
      get { if ((_hasBits0 & 2) != 0) { return monthlySearches_; } else { return 0L; } }
      set {
        _hasBits0 |= 2;
        monthlySearches_ = value;
      }
    }
    /// <summary>Gets whether the "monthly_searches" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMonthlySearches {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "monthly_searches" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMonthlySearches() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MonthlySearchVolume);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MonthlySearchVolume other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Year != other.Year) return false;
      if (Month != other.Month) return false;
      if (MonthlySearches != other.MonthlySearches) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasYear) hash ^= Year.GetHashCode();
      if (Month != global::Google.Ads.GoogleAds.V7.Enums.MonthOfYearEnum.Types.MonthOfYear.Unspecified) hash ^= Month.GetHashCode();
      if (HasMonthlySearches) hash ^= MonthlySearches.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Month != global::Google.Ads.GoogleAds.V7.Enums.MonthOfYearEnum.Types.MonthOfYear.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Month);
      }
      if (HasYear) {
        output.WriteRawTag(32);
        output.WriteInt64(Year);
      }
      if (HasMonthlySearches) {
        output.WriteRawTag(40);
        output.WriteInt64(MonthlySearches);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Month != global::Google.Ads.GoogleAds.V7.Enums.MonthOfYearEnum.Types.MonthOfYear.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Month);
      }
      if (HasYear) {
        output.WriteRawTag(32);
        output.WriteInt64(Year);
      }
      if (HasMonthlySearches) {
        output.WriteRawTag(40);
        output.WriteInt64(MonthlySearches);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasYear) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Year);
      }
      if (Month != global::Google.Ads.GoogleAds.V7.Enums.MonthOfYearEnum.Types.MonthOfYear.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Month);
      }
      if (HasMonthlySearches) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MonthlySearches);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MonthlySearchVolume other) {
      if (other == null) {
        return;
      }
      if (other.HasYear) {
        Year = other.Year;
      }
      if (other.Month != global::Google.Ads.GoogleAds.V7.Enums.MonthOfYearEnum.Types.MonthOfYear.Unspecified) {
        Month = other.Month;
      }
      if (other.HasMonthlySearches) {
        MonthlySearches = other.MonthlySearches;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Month = (global::Google.Ads.GoogleAds.V7.Enums.MonthOfYearEnum.Types.MonthOfYear) input.ReadEnum();
            break;
          }
          case 32: {
            Year = input.ReadInt64();
            break;
          }
          case 40: {
            MonthlySearches = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            Month = (global::Google.Ads.GoogleAds.V7.Enums.MonthOfYearEnum.Types.MonthOfYear) input.ReadEnum();
            break;
          }
          case 32: {
            Year = input.ReadInt64();
            break;
          }
          case 40: {
            MonthlySearches = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The aggregate metrics specification of the request.
  /// </summary>
  public sealed partial class KeywordPlanAggregateMetrics : pb::IMessage<KeywordPlanAggregateMetrics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeywordPlanAggregateMetrics> _parser = new pb::MessageParser<KeywordPlanAggregateMetrics>(() => new KeywordPlanAggregateMetrics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeywordPlanAggregateMetrics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.KeywordPlanCommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordPlanAggregateMetrics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordPlanAggregateMetrics(KeywordPlanAggregateMetrics other) : this() {
      aggregateMetricTypes_ = other.aggregateMetricTypes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordPlanAggregateMetrics Clone() {
      return new KeywordPlanAggregateMetrics(this);
    }

    /// <summary>Field number for the "aggregate_metric_types" field.</summary>
    public const int AggregateMetricTypesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanAggregateMetricTypeEnum.Types.KeywordPlanAggregateMetricType> _repeated_aggregateMetricTypes_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanAggregateMetricTypeEnum.Types.KeywordPlanAggregateMetricType) x);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanAggregateMetricTypeEnum.Types.KeywordPlanAggregateMetricType> aggregateMetricTypes_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanAggregateMetricTypeEnum.Types.KeywordPlanAggregateMetricType>();
    /// <summary>
    /// The list of aggregate metrics to fetch data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanAggregateMetricTypeEnum.Types.KeywordPlanAggregateMetricType> AggregateMetricTypes {
      get { return aggregateMetricTypes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeywordPlanAggregateMetrics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeywordPlanAggregateMetrics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!aggregateMetricTypes_.Equals(other.aggregateMetricTypes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= aggregateMetricTypes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      aggregateMetricTypes_.WriteTo(output, _repeated_aggregateMetricTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      aggregateMetricTypes_.WriteTo(ref output, _repeated_aggregateMetricTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += aggregateMetricTypes_.CalculateSize(_repeated_aggregateMetricTypes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeywordPlanAggregateMetrics other) {
      if (other == null) {
        return;
      }
      aggregateMetricTypes_.Add(other.aggregateMetricTypes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            aggregateMetricTypes_.AddEntriesFrom(input, _repeated_aggregateMetricTypes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            aggregateMetricTypes_.AddEntriesFrom(ref input, _repeated_aggregateMetricTypes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The aggregated historical metrics for keyword plan keywords.
  /// </summary>
  public sealed partial class KeywordPlanAggregateMetricResults : pb::IMessage<KeywordPlanAggregateMetricResults>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeywordPlanAggregateMetricResults> _parser = new pb::MessageParser<KeywordPlanAggregateMetricResults>(() => new KeywordPlanAggregateMetricResults());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeywordPlanAggregateMetricResults> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.KeywordPlanCommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordPlanAggregateMetricResults() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordPlanAggregateMetricResults(KeywordPlanAggregateMetricResults other) : this() {
      deviceSearches_ = other.deviceSearches_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordPlanAggregateMetricResults Clone() {
      return new KeywordPlanAggregateMetricResults(this);
    }

    /// <summary>Field number for the "device_searches" field.</summary>
    public const int DeviceSearchesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V7.Common.KeywordPlanDeviceSearches> _repeated_deviceSearches_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V7.Common.KeywordPlanDeviceSearches.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V7.Common.KeywordPlanDeviceSearches> deviceSearches_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V7.Common.KeywordPlanDeviceSearches>();
    /// <summary>
    /// The aggregate searches for all the keywords segmented by device
    /// for the specified time.
    /// Supports the following device types: MOBILE, TABLET, DESKTOP.
    ///
    /// This is only set when KeywordPlanAggregateMetricTypeEnum.DEVICE is set
    /// in the KeywordPlanAggregateMetrics field in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V7.Common.KeywordPlanDeviceSearches> DeviceSearches {
      get { return deviceSearches_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeywordPlanAggregateMetricResults);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeywordPlanAggregateMetricResults other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!deviceSearches_.Equals(other.deviceSearches_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= deviceSearches_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      deviceSearches_.WriteTo(output, _repeated_deviceSearches_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      deviceSearches_.WriteTo(ref output, _repeated_deviceSearches_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += deviceSearches_.CalculateSize(_repeated_deviceSearches_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeywordPlanAggregateMetricResults other) {
      if (other == null) {
        return;
      }
      deviceSearches_.Add(other.deviceSearches_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            deviceSearches_.AddEntriesFrom(input, _repeated_deviceSearches_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            deviceSearches_.AddEntriesFrom(ref input, _repeated_deviceSearches_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The total searches for the device type during the specified time period.
  /// </summary>
  public sealed partial class KeywordPlanDeviceSearches : pb::IMessage<KeywordPlanDeviceSearches>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeywordPlanDeviceSearches> _parser = new pb::MessageParser<KeywordPlanDeviceSearches>(() => new KeywordPlanDeviceSearches());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeywordPlanDeviceSearches> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.KeywordPlanCommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordPlanDeviceSearches() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordPlanDeviceSearches(KeywordPlanDeviceSearches other) : this() {
      _hasBits0 = other._hasBits0;
      device_ = other.device_;
      searchCount_ = other.searchCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordPlanDeviceSearches Clone() {
      return new KeywordPlanDeviceSearches(this);
    }

    /// <summary>Field number for the "device" field.</summary>
    public const int DeviceFieldNumber = 1;
    private global::Google.Ads.GoogleAds.V7.Enums.DeviceEnum.Types.Device device_ = global::Google.Ads.GoogleAds.V7.Enums.DeviceEnum.Types.Device.Unspecified;
    /// <summary>
    /// The device type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V7.Enums.DeviceEnum.Types.Device Device {
      get { return device_; }
      set {
        device_ = value;
      }
    }

    /// <summary>Field number for the "search_count" field.</summary>
    public const int SearchCountFieldNumber = 2;
    private long searchCount_;
    /// <summary>
    /// The total searches for the device.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SearchCount {
      get { if ((_hasBits0 & 1) != 0) { return searchCount_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        searchCount_ = value;
      }
    }
    /// <summary>Gets whether the "search_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSearchCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "search_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSearchCount() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeywordPlanDeviceSearches);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeywordPlanDeviceSearches other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Device != other.Device) return false;
      if (SearchCount != other.SearchCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Device != global::Google.Ads.GoogleAds.V7.Enums.DeviceEnum.Types.Device.Unspecified) hash ^= Device.GetHashCode();
      if (HasSearchCount) hash ^= SearchCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Device != global::Google.Ads.GoogleAds.V7.Enums.DeviceEnum.Types.Device.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Device);
      }
      if (HasSearchCount) {
        output.WriteRawTag(16);
        output.WriteInt64(SearchCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Device != global::Google.Ads.GoogleAds.V7.Enums.DeviceEnum.Types.Device.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Device);
      }
      if (HasSearchCount) {
        output.WriteRawTag(16);
        output.WriteInt64(SearchCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Device != global::Google.Ads.GoogleAds.V7.Enums.DeviceEnum.Types.Device.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Device);
      }
      if (HasSearchCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SearchCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeywordPlanDeviceSearches other) {
      if (other == null) {
        return;
      }
      if (other.Device != global::Google.Ads.GoogleAds.V7.Enums.DeviceEnum.Types.Device.Unspecified) {
        Device = other.Device;
      }
      if (other.HasSearchCount) {
        SearchCount = other.SearchCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Device = (global::Google.Ads.GoogleAds.V7.Enums.DeviceEnum.Types.Device) input.ReadEnum();
            break;
          }
          case 16: {
            SearchCount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Device = (global::Google.Ads.GoogleAds.V7.Enums.DeviceEnum.Types.Device) input.ReadEnum();
            break;
          }
          case 16: {
            SearchCount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The Annotations for the Keyword plan keywords.
  /// </summary>
  public sealed partial class KeywordAnnotations : pb::IMessage<KeywordAnnotations>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeywordAnnotations> _parser = new pb::MessageParser<KeywordAnnotations>(() => new KeywordAnnotations());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeywordAnnotations> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.KeywordPlanCommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordAnnotations() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordAnnotations(KeywordAnnotations other) : this() {
      concepts_ = other.concepts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordAnnotations Clone() {
      return new KeywordAnnotations(this);
    }

    /// <summary>Field number for the "concepts" field.</summary>
    public const int ConceptsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V7.Common.KeywordConcept> _repeated_concepts_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.GoogleAds.V7.Common.KeywordConcept.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V7.Common.KeywordConcept> concepts_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V7.Common.KeywordConcept>();
    /// <summary>
    /// The list of concepts for the keyword.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V7.Common.KeywordConcept> Concepts {
      get { return concepts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeywordAnnotations);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeywordAnnotations other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!concepts_.Equals(other.concepts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= concepts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      concepts_.WriteTo(output, _repeated_concepts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      concepts_.WriteTo(ref output, _repeated_concepts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += concepts_.CalculateSize(_repeated_concepts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeywordAnnotations other) {
      if (other == null) {
        return;
      }
      concepts_.Add(other.concepts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            concepts_.AddEntriesFrom(input, _repeated_concepts_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            concepts_.AddEntriesFrom(ref input, _repeated_concepts_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The concept for the keyword.
  /// </summary>
  public sealed partial class KeywordConcept : pb::IMessage<KeywordConcept>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeywordConcept> _parser = new pb::MessageParser<KeywordConcept>(() => new KeywordConcept());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeywordConcept> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.KeywordPlanCommonReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordConcept() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordConcept(KeywordConcept other) : this() {
      name_ = other.name_;
      conceptGroup_ = other.conceptGroup_ != null ? other.conceptGroup_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeywordConcept Clone() {
      return new KeywordConcept(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The concept name for the keyword in the concept_group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "concept_group" field.</summary>
    public const int ConceptGroupFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V7.Common.ConceptGroup conceptGroup_;
    /// <summary>
    /// The concept group of the concept details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V7.Common.ConceptGroup ConceptGroup {
      get { return conceptGroup_; }
      set {
        conceptGroup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeywordConcept);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeywordConcept other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(ConceptGroup, other.ConceptGroup)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (conceptGroup_ != null) hash ^= ConceptGroup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (conceptGroup_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConceptGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (conceptGroup_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConceptGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (conceptGroup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConceptGroup);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeywordConcept other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.conceptGroup_ != null) {
        if (conceptGroup_ == null) {
          ConceptGroup = new global::Google.Ads.GoogleAds.V7.Common.ConceptGroup();
        }
        ConceptGroup.MergeFrom(other.ConceptGroup);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (conceptGroup_ == null) {
              ConceptGroup = new global::Google.Ads.GoogleAds.V7.Common.ConceptGroup();
            }
            input.ReadMessage(ConceptGroup);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (conceptGroup_ == null) {
              ConceptGroup = new global::Google.Ads.GoogleAds.V7.Common.ConceptGroup();
            }
            input.ReadMessage(ConceptGroup);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The concept group for the keyword concept.
  /// </summary>
  public sealed partial class ConceptGroup : pb::IMessage<ConceptGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConceptGroup> _parser = new pb::MessageParser<ConceptGroup>(() => new ConceptGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConceptGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V7.Common.KeywordPlanCommonReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConceptGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConceptGroup(ConceptGroup other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConceptGroup Clone() {
      return new ConceptGroup(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The concept group name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanConceptGroupTypeEnum.Types.KeywordPlanConceptGroupType type_ = global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanConceptGroupTypeEnum.Types.KeywordPlanConceptGroupType.Unspecified;
    /// <summary>
    /// The concept group type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanConceptGroupTypeEnum.Types.KeywordPlanConceptGroupType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConceptGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConceptGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanConceptGroupTypeEnum.Types.KeywordPlanConceptGroupType.Unspecified) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanConceptGroupTypeEnum.Types.KeywordPlanConceptGroupType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanConceptGroupTypeEnum.Types.KeywordPlanConceptGroupType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanConceptGroupTypeEnum.Types.KeywordPlanConceptGroupType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConceptGroup other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanConceptGroupTypeEnum.Types.KeywordPlanConceptGroupType.Unspecified) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanConceptGroupTypeEnum.Types.KeywordPlanConceptGroupType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Google.Ads.GoogleAds.V7.Enums.KeywordPlanConceptGroupTypeEnum.Types.KeywordPlanConceptGroupType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
