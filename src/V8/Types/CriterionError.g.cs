// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v8/errors/criterion_error.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V8.Errors {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v8/errors/criterion_error.proto</summary>
  public static partial class CriterionErrorReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v8/errors/criterion_error.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CriterionErrorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjRnb29nbGUvYWRzL2dvb2dsZWFkcy92OC9lcnJvcnMvY3JpdGVyaW9uX2Vy",
            "cm9yLnByb3RvEh5nb29nbGUuYWRzLmdvb2dsZWFkcy52OC5lcnJvcnMaHGdv",
            "b2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8ilScKEkNyaXRlcmlvbkVycm9y",
            "RW51bSL+JgoOQ3JpdGVyaW9uRXJyb3ISDwoLVU5TUEVDSUZJRUQQABILCgdV",
            "TktOT1dOEAESGgoWQ09OQ1JFVEVfVFlQRV9SRVFVSVJFRBACEh0KGUlOVkFM",
            "SURfRVhDTFVERURfQ0FURUdPUlkQAxIYChRJTlZBTElEX0tFWVdPUkRfVEVY",
            "VBAEEhkKFUtFWVdPUkRfVEVYVF9UT09fTE9ORxAFEh4KGktFWVdPUkRfSEFT",
            "X1RPT19NQU5ZX1dPUkRTEAYSHQoZS0VZV09SRF9IQVNfSU5WQUxJRF9DSEFS",
            "UxAHEhkKFUlOVkFMSURfUExBQ0VNRU5UX1VSTBAIEhUKEUlOVkFMSURfVVNF",
            "Ul9MSVNUEAkSGQoVSU5WQUxJRF9VU0VSX0lOVEVSRVNUEAoSJAogSU5WQUxJ",
            "RF9GT1JNQVRfRk9SX1BMQUNFTUVOVF9VUkwQCxIdChlQTEFDRU1FTlRfVVJM",
            "X0lTX1RPT19MT05HEAwSIgoeUExBQ0VNRU5UX1VSTF9IQVNfSUxMRUdBTF9D",
            "SEFSEA0SLAooUExBQ0VNRU5UX1VSTF9IQVNfTVVMVElQTEVfU0lURVNfSU5f",
            "TElORRAOEjkKNVBMQUNFTUVOVF9JU19OT1RfQVZBSUxBQkxFX0ZPUl9UQVJH",
            "RVRJTkdfT1JfRVhDTFVTSU9OEA8SFgoSSU5WQUxJRF9UT1BJQ19QQVRIEBAS",
            "HgoaSU5WQUxJRF9ZT1VUVUJFX0NIQU5ORUxfSUQQERIcChhJTlZBTElEX1lP",
            "VVRVQkVfVklERU9fSUQQEhInCiNZT1VUVUJFX1ZFUlRJQ0FMX0NIQU5ORUxf",
            "REVQUkVDQVRFRBATEioKJllPVVRVQkVfREVNT0dSQVBISUNfQ0hBTk5FTF9E",
            "RVBSRUNBVEVEEBQSGwoXWU9VVFVCRV9VUkxfVU5TVVBQT1JURUQQFRIgChxD",
            "QU5OT1RfRVhDTFVERV9DUklURVJJQV9UWVBFEBYSHAoYQ0FOTk9UX0FERF9D",
            "UklURVJJQV9UWVBFEBcSJAogQ0FOTk9UX0VYQ0xVREVfU0lNSUxBUl9VU0VS",
            "X0xJU1QQGhIfChtDQU5OT1RfQUREX0NMT1NFRF9VU0VSX0xJU1QQGxI6CjZD",
            "QU5OT1RfQUREX0RJU1BMQVlfT05MWV9MSVNUU19UT19TRUFSQ0hfT05MWV9D",
            "QU1QQUlHTlMQHBI1CjFDQU5OT1RfQUREX0RJU1BMQVlfT05MWV9MSVNUU19U",
            "T19TRUFSQ0hfQ0FNUEFJR05TEB0SNwozQ0FOTk9UX0FERF9ESVNQTEFZX09O",
            "TFlfTElTVFNfVE9fU0hPUFBJTkdfQ0FNUEFJR05TEB4SMQotQ0FOTk9UX0FE",
            "RF9VU0VSX0lOVEVSRVNUU19UT19TRUFSQ0hfQ0FNUEFJR05TEB8SOQo1Q0FO",
            "Tk9UX1NFVF9CSURTX09OX0NSSVRFUklPTl9UWVBFX0lOX1NFQVJDSF9DQU1Q",
            "QUlHTlMQIBI3CjNDQU5OT1RfQUREX1VSTFNfVE9fQ1JJVEVSSU9OX1RZUEVf",
            "Rk9SX0NBTVBBSUdOX1RZUEUQIRIdChlJTlZBTElEX0NPTUJJTkVEX0FVRElF",
            "TkNFEHoSGwoXSU5WQUxJRF9DVVNUT01fQUZGSU5JVFkQYBIZChVJTlZBTElE",
            "X0NVU1RPTV9JTlRFTlQQYRIbChdJTlZBTElEX0NVU1RPTV9BVURJRU5DRRB5",
            "EhYKEklOVkFMSURfSVBfQUREUkVTUxAiEhUKEUlOVkFMSURfSVBfRk9STUFU",
            "ECMSFgoSSU5WQUxJRF9NT0JJTEVfQVBQECQSHwobSU5WQUxJRF9NT0JJTEVf",
            "QVBQX0NBVEVHT1JZECUSGAoUSU5WQUxJRF9DUklURVJJT05fSUQQJhIbChdD",
            "QU5OT1RfVEFSR0VUX0NSSVRFUklPThAnEiQKIENBTk5PVF9UQVJHRVRfT0JT",
            "T0xFVEVfQ1JJVEVSSU9OECgSIgoeQ1JJVEVSSU9OX0lEX0FORF9UWVBFX01J",
            "U01BVENIECkSHAoYSU5WQUxJRF9QUk9YSU1JVFlfUkFESVVTECoSIgoeSU5W",
            "QUxJRF9QUk9YSU1JVFlfUkFESVVTX1VOSVRTECsSIAocSU5WQUxJRF9TVFJF",
            "RVRBRERSRVNTX0xFTkdUSBAsEhsKF0lOVkFMSURfQ0lUWU5BTUVfTEVOR1RI",
            "EC0SHQoZSU5WQUxJRF9SRUdJT05DT0RFX0xFTkdUSBAuEh0KGUlOVkFMSURf",
            "UkVHSU9OTkFNRV9MRU5HVEgQLxIdChlJTlZBTElEX1BPU1RBTENPREVfTEVO",
            "R1RIEDASGAoUSU5WQUxJRF9DT1VOVFJZX0NPREUQMRIUChBJTlZBTElEX0xB",
            "VElUVURFEDISFQoRSU5WQUxJRF9MT05HSVRVREUQMxI2CjJQUk9YSU1JVFlf",
            "R0VPUE9JTlRfQU5EX0FERFJFU1NfQk9USF9DQU5OT1RfQkVfTlVMTBA0Eh0K",
            "GUlOVkFMSURfUFJPWElNSVRZX0FERFJFU1MQNRIcChhJTlZBTElEX1VTRVJf",
            "RE9NQUlOX05BTUUQNhIgChxDUklURVJJT05fUEFSQU1FVEVSX1RPT19MT05H",
            "EDcSJgoiQURfU0NIRURVTEVfVElNRV9JTlRFUlZBTFNfT1ZFUkxBUBA4EjIK",
            "LkFEX1NDSEVEVUxFX0lOVEVSVkFMX0NBTk5PVF9TUEFOX01VTFRJUExFX0RB",
            "WVMQORIlCiFBRF9TQ0hFRFVMRV9JTlZBTElEX1RJTUVfSU5URVJWQUwQOhIw",
            "CixBRF9TQ0hFRFVMRV9FWENFRURFRF9JTlRFUlZBTFNfUEVSX0RBWV9MSU1J",
            "VBA7Ei8KK0FEX1NDSEVEVUxFX0NSSVRFUklPTl9JRF9NSVNNQVRDSElOR19G",
            "SUVMRFMQPBIkCiBDQU5OT1RfQklEX01PRElGWV9DUklURVJJT05fVFlQRRA9",
            "EjIKLkNBTk5PVF9CSURfTU9ESUZZX0NSSVRFUklPTl9DQU1QQUlHTl9PUFRF",
            "RF9PVVQQPhIoCiRDQU5OT1RfQklEX01PRElGWV9ORUdBVElWRV9DUklURVJJ",
            "T04QPxIfChtCSURfTU9ESUZJRVJfQUxSRUFEWV9FWElTVFMQQBIXChNGRUVE",
            "X0lEX05PVF9BTExPV0VEEEESKAokQUNDT1VOVF9JTkVMSUdJQkxFX0ZPUl9D",
            "UklURVJJQV9UWVBFEEISLgoqQ1JJVEVSSUFfVFlQRV9JTlZBTElEX0ZPUl9C",
            "SURESU5HX1NUUkFURUdZEEMSHAoYQ0FOTk9UX0VYQ0xVREVfQ1JJVEVSSU9O",
            "EEQSGwoXQ0FOTk9UX1JFTU9WRV9DUklURVJJT04QRRIkCiBJTlZBTElEX1BS",
            "T0RVQ1RfQklERElOR19DQVRFR09SWRBMEhwKGE1JU1NJTkdfU0hPUFBJTkdf",
            "U0VUVElORxBNEh0KGUlOVkFMSURfTUFUQ0hJTkdfRlVOQ1RJT04QThIfChtM",
            "T0NBVElPTl9GSUxURVJfTk9UX0FMTE9XRUQQTxIkCiBJTlZBTElEX0ZFRURf",
            "Rk9SX0xPQ0FUSU9OX0ZJTFRFUhBiEhsKF0xPQ0FUSU9OX0ZJTFRFUl9JTlZB",
            "TElEEFASNwozQ0FOTk9UX1NFVF9HRU9fVEFSR0VUX0NPTlNUQU5UU19XSVRI",
            "X0ZFRURfSVRFTV9TRVRTEHsSIQodSU5WQUxJRF9MT0NBVElPTl9HUk9VUF9S",
            "QURJVVMQfBImCiJJTlZBTElEX0xPQ0FUSU9OX0dST1VQX1JBRElVU19VTklU",
            "EH0SMgouQ0FOTk9UX0FUVEFDSF9DUklURVJJQV9BVF9DQU1QQUlHTl9BTkRf",
            "QURHUk9VUBBREjkKNUhPVEVMX0xFTkdUSF9PRl9TVEFZX09WRVJMQVBTX1dJ",
            "VEhfRVhJU1RJTkdfQ1JJVEVSSU9OEFISQQo9SE9URUxfQURWQU5DRV9CT09L",
            "SU5HX1dJTkRPV19PVkVSTEFQU19XSVRIX0VYSVNUSU5HX0NSSVRFUklPThBT",
            "Ei4KKkZJRUxEX0lOQ09NUEFUSUJMRV9XSVRIX05FR0FUSVZFX1RBUkdFVElO",
            "RxBUEh0KGUlOVkFMSURfV0VCUEFHRV9DT05ESVRJT04QVRIhCh1JTlZBTElE",
            "X1dFQlBBR0VfQ09ORElUSU9OX1VSTBBWEikKJVdFQlBBR0VfQ09ORElUSU9O",
            "X1VSTF9DQU5OT1RfQkVfRU1QVFkQVxIuCipXRUJQQUdFX0NPTkRJVElPTl9V",
            "UkxfVU5TVVBQT1JURURfUFJPVE9DT0wQWBIuCipXRUJQQUdFX0NPTkRJVElP",
            "Tl9VUkxfQ0FOTk9UX0JFX0lQX0FERFJFU1MQWRJFCkFXRUJQQUdFX0NPTkRJ",
            "VElPTl9VUkxfRE9NQUlOX05PVF9DT05TSVNURU5UX1dJVEhfQ0FNUEFJR05f",
            "U0VUVElORxBaEjEKLVdFQlBBR0VfQ09ORElUSU9OX1VSTF9DQU5OT1RfQkVf",
            "UFVCTElDX1NVRkZJWBBbEi8KK1dFQlBBR0VfQ09ORElUSU9OX1VSTF9JTlZB",
            "TElEX1BVQkxJQ19TVUZGSVgQXBI5CjVXRUJQQUdFX0NPTkRJVElPTl9VUkxf",
            "VkFMVUVfVFJBQ0tfVkFMVUVfTk9UX1NVUFBPUlRFRBBdEjwKOFdFQlBBR0Vf",
            "Q1JJVEVSSU9OX1VSTF9FUVVBTFNfQ0FOX0hBVkVfT05MWV9PTkVfQ09ORElU",
            "SU9OEF4SNwozV0VCUEFHRV9DUklURVJJT05fTk9UX1NVUFBPUlRFRF9PTl9O",
            "T05fRFNBX0FEX0dST1VQEF8SNwozQ0FOTk9UX1RBUkdFVF9VU0VSX0xJU1Rf",
            "Rk9SX1NNQVJUX0RJU1BMQVlfQ0FNUEFJR05TEGMSMQotQ0FOTk9UX1RBUkdF",
            "VF9QTEFDRU1FTlRTX0ZPUl9TRUFSQ0hfQ0FNUEFJR05TEH4SKgomTElTVElO",
            "R19TQ09QRV9UT09fTUFOWV9ESU1FTlNJT05fVFlQRVMQZBInCiNMSVNUSU5H",
            "X1NDT1BFX1RPT19NQU5ZX0lOX09QRVJBVE9SUxBlEisKJ0xJU1RJTkdfU0NP",
            "UEVfSU5fT1BFUkFUT1JfTk9UX1NVUFBPUlRFRBBmEiQKIERVUExJQ0FURV9M",
            "SVNUSU5HX0RJTUVOU0lPTl9UWVBFEGcSJQohRFVQTElDQVRFX0xJU1RJTkdf",
            "RElNRU5TSU9OX1ZBTFVFEGgSMAosQ0FOTk9UX1NFVF9CSURTX09OX0xJU1RJ",
            "TkdfR1JPVVBfU1VCRElWSVNJT04QaRIjCh9JTlZBTElEX0xJU1RJTkdfR1JP",
            "VVBfSElFUkFSQ0hZEGoSKwonTElTVElOR19HUk9VUF9VTklUX0NBTk5PVF9I",
            "QVZFX0NISUxEUkVOEGsSMgouTElTVElOR19HUk9VUF9TVUJESVZJU0lPTl9S",
            "RVFVSVJFU19PVEhFUlNfQ0FTRRBsEjoKNkxJU1RJTkdfR1JPVVBfUkVRVUlS",
            "RVNfU0FNRV9ESU1FTlNJT05fVFlQRV9BU19TSUJMSU5HUxBtEiAKHExJU1RJ",
            "TkdfR1JPVVBfQUxSRUFEWV9FWElTVFMQbhIgChxMSVNUSU5HX0dST1VQX0RP",
            "RVNfTk9UX0VYSVNUEG8SIwofTElTVElOR19HUk9VUF9DQU5OT1RfQkVfUkVN",
            "T1ZFRBBwEh4KGklOVkFMSURfTElTVElOR19HUk9VUF9UWVBFEHESKgomTElT",
            "VElOR19HUk9VUF9BRERfTUFZX09OTFlfVVNFX1RFTVBfSUQQchIaChZMSVNU",
            "SU5HX1NDT1BFX1RPT19MT05HEHMSJQohTElTVElOR19TQ09QRV9UT09fTUFO",
            "WV9ESU1FTlNJT05TEHQSGgoWTElTVElOR19HUk9VUF9UT09fTE9ORxB1Eh8K",
            "G0xJU1RJTkdfR1JPVVBfVFJFRV9UT09fREVFUBB2Eh0KGUlOVkFMSURfTElT",
            "VElOR19ESU1FTlNJT04QdxIiCh5JTlZBTElEX0xJU1RJTkdfRElNRU5TSU9O",
            "X1RZUEUQeBJACjxBRFZFUlRJU0VSX05PVF9PTl9BTExPV0xJU1RfRk9SX0NP",
            "TUJJTkVEX0FVRElFTkNFX09OX0RJU1BMQVkQfxIsCidDQU5OT1RfVEFSR0VU",
            "X1JFTU9WRURfQ09NQklORURfQVVESUVOQ0UQgAESIQocSU5WQUxJRF9DT01C",
            "SU5FRF9BVURJRU5DRV9JRBCBARIqCiVDQU5OT1RfVEFSR0VUX1JFTU9WRURf",
            "Q1VTVE9NX0FVRElFTkNFEIIBEj8KOkhPVEVMX0NIRUNLX0lOX0RBVEVfUkFO",
            "R0VfT1ZFUkxBUFNfV0lUSF9FWElTVElOR19DUklURVJJT04QgwESMwouSE9U",
            "RUxfQ0hFQ0tfSU5fREFURV9SQU5HRV9TVEFSVF9EQVRFX1RPT19FQVJMWRCE",
            "ARIwCitIT1RFTF9DSEVDS19JTl9EQVRFX1JBTkdFX0VORF9EQVRFX1RPT19M",
            "QVRFEIUBEicKIkhPVEVMX0NIRUNLX0lOX0RBVEVfUkFOR0VfUkVWRVJTRUQQ",
            "hgFC7gEKImNvbS5nb29nbGUuYWRzLmdvb2dsZWFkcy52OC5lcnJvcnNCE0Ny",
            "aXRlcmlvbkVycm9yUHJvdG9QAVpEZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJv",
            "dG8vZ29vZ2xlYXBpcy9hZHMvZ29vZ2xlYWRzL3Y4L2Vycm9ycztlcnJvcnOi",
            "AgNHQUGqAh5Hb29nbGUuQWRzLkdvb2dsZUFkcy5WOC5FcnJvcnPKAh5Hb29n",
            "bGVcQWRzXEdvb2dsZUFkc1xWOFxFcnJvcnPqAiJHb29nbGU6OkFkczo6R29v",
            "Z2xlQWRzOjpWODo6RXJyb3JzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V8.Errors.CriterionErrorEnum), global::Google.Ads.GoogleAds.V8.Errors.CriterionErrorEnum.Parser, null, null, new[]{ typeof(global::Google.Ads.GoogleAds.V8.Errors.CriterionErrorEnum.Types.CriterionError) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Container for enum describing possible criterion errors.
  /// </summary>
  public sealed partial class CriterionErrorEnum : pb::IMessage<CriterionErrorEnum>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CriterionErrorEnum> _parser = new pb::MessageParser<CriterionErrorEnum>(() => new CriterionErrorEnum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CriterionErrorEnum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V8.Errors.CriterionErrorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CriterionErrorEnum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CriterionErrorEnum(CriterionErrorEnum other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CriterionErrorEnum Clone() {
      return new CriterionErrorEnum(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CriterionErrorEnum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CriterionErrorEnum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CriterionErrorEnum other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CriterionErrorEnum message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Enum describing possible criterion errors.
      /// </summary>
      public enum CriterionError {
        /// <summary>
        /// Enum unspecified.
        /// </summary>
        [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The received error code is not known in this version.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 1,
        /// <summary>
        /// Concrete type of criterion is required for CREATE and UPDATE operations.
        /// </summary>
        [pbr::OriginalName("CONCRETE_TYPE_REQUIRED")] ConcreteTypeRequired = 2,
        /// <summary>
        /// The category requested for exclusion is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_EXCLUDED_CATEGORY")] InvalidExcludedCategory = 3,
        /// <summary>
        /// Invalid keyword criteria text.
        /// </summary>
        [pbr::OriginalName("INVALID_KEYWORD_TEXT")] InvalidKeywordText = 4,
        /// <summary>
        /// Keyword text should be less than 80 chars.
        /// </summary>
        [pbr::OriginalName("KEYWORD_TEXT_TOO_LONG")] KeywordTextTooLong = 5,
        /// <summary>
        /// Keyword text has too many words.
        /// </summary>
        [pbr::OriginalName("KEYWORD_HAS_TOO_MANY_WORDS")] KeywordHasTooManyWords = 6,
        /// <summary>
        /// Keyword text has invalid characters or symbols.
        /// </summary>
        [pbr::OriginalName("KEYWORD_HAS_INVALID_CHARS")] KeywordHasInvalidChars = 7,
        /// <summary>
        /// Invalid placement URL.
        /// </summary>
        [pbr::OriginalName("INVALID_PLACEMENT_URL")] InvalidPlacementUrl = 8,
        /// <summary>
        /// Invalid user list criterion.
        /// </summary>
        [pbr::OriginalName("INVALID_USER_LIST")] InvalidUserList = 9,
        /// <summary>
        /// Invalid user interest criterion.
        /// </summary>
        [pbr::OriginalName("INVALID_USER_INTEREST")] InvalidUserInterest = 10,
        /// <summary>
        /// Placement URL has wrong format.
        /// </summary>
        [pbr::OriginalName("INVALID_FORMAT_FOR_PLACEMENT_URL")] InvalidFormatForPlacementUrl = 11,
        /// <summary>
        /// Placement URL is too long.
        /// </summary>
        [pbr::OriginalName("PLACEMENT_URL_IS_TOO_LONG")] PlacementUrlIsTooLong = 12,
        /// <summary>
        /// Indicates the URL contains an illegal character.
        /// </summary>
        [pbr::OriginalName("PLACEMENT_URL_HAS_ILLEGAL_CHAR")] PlacementUrlHasIllegalChar = 13,
        /// <summary>
        /// Indicates the URL contains multiple comma separated URLs.
        /// </summary>
        [pbr::OriginalName("PLACEMENT_URL_HAS_MULTIPLE_SITES_IN_LINE")] PlacementUrlHasMultipleSitesInLine = 14,
        /// <summary>
        /// Indicates the domain is blocked.
        /// </summary>
        [pbr::OriginalName("PLACEMENT_IS_NOT_AVAILABLE_FOR_TARGETING_OR_EXCLUSION")] PlacementIsNotAvailableForTargetingOrExclusion = 15,
        /// <summary>
        /// Invalid topic path.
        /// </summary>
        [pbr::OriginalName("INVALID_TOPIC_PATH")] InvalidTopicPath = 16,
        /// <summary>
        /// The YouTube Channel Id is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_YOUTUBE_CHANNEL_ID")] InvalidYoutubeChannelId = 17,
        /// <summary>
        /// The YouTube Video Id is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_YOUTUBE_VIDEO_ID")] InvalidYoutubeVideoId = 18,
        /// <summary>
        /// Indicates the placement is a YouTube vertical channel, which is no longer
        /// supported.
        /// </summary>
        [pbr::OriginalName("YOUTUBE_VERTICAL_CHANNEL_DEPRECATED")] YoutubeVerticalChannelDeprecated = 19,
        /// <summary>
        /// Indicates the placement is a YouTube demographic channel, which is no
        /// longer supported.
        /// </summary>
        [pbr::OriginalName("YOUTUBE_DEMOGRAPHIC_CHANNEL_DEPRECATED")] YoutubeDemographicChannelDeprecated = 20,
        /// <summary>
        /// YouTube urls are not supported in Placement criterion. Use YouTubeChannel
        /// and YouTubeVideo criterion instead.
        /// </summary>
        [pbr::OriginalName("YOUTUBE_URL_UNSUPPORTED")] YoutubeUrlUnsupported = 21,
        /// <summary>
        /// Criteria type can not be excluded by the customer, like AOL account type
        /// cannot target site type criteria.
        /// </summary>
        [pbr::OriginalName("CANNOT_EXCLUDE_CRITERIA_TYPE")] CannotExcludeCriteriaType = 22,
        /// <summary>
        /// Criteria type can not be targeted.
        /// </summary>
        [pbr::OriginalName("CANNOT_ADD_CRITERIA_TYPE")] CannotAddCriteriaType = 23,
        /// <summary>
        /// Not allowed to exclude similar user list.
        /// </summary>
        [pbr::OriginalName("CANNOT_EXCLUDE_SIMILAR_USER_LIST")] CannotExcludeSimilarUserList = 26,
        /// <summary>
        /// Not allowed to target a closed user list.
        /// </summary>
        [pbr::OriginalName("CANNOT_ADD_CLOSED_USER_LIST")] CannotAddClosedUserList = 27,
        /// <summary>
        /// Not allowed to add display only UserLists to search only campaigns.
        /// </summary>
        [pbr::OriginalName("CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SEARCH_ONLY_CAMPAIGNS")] CannotAddDisplayOnlyListsToSearchOnlyCampaigns = 28,
        /// <summary>
        /// Not allowed to add display only UserLists to search plus campaigns.
        /// </summary>
        [pbr::OriginalName("CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SEARCH_CAMPAIGNS")] CannotAddDisplayOnlyListsToSearchCampaigns = 29,
        /// <summary>
        /// Not allowed to add display only UserLists to shopping campaigns.
        /// </summary>
        [pbr::OriginalName("CANNOT_ADD_DISPLAY_ONLY_LISTS_TO_SHOPPING_CAMPAIGNS")] CannotAddDisplayOnlyListsToShoppingCampaigns = 30,
        /// <summary>
        /// Not allowed to add User interests to search only campaigns.
        /// </summary>
        [pbr::OriginalName("CANNOT_ADD_USER_INTERESTS_TO_SEARCH_CAMPAIGNS")] CannotAddUserInterestsToSearchCampaigns = 31,
        /// <summary>
        /// Not allowed to set bids for this criterion type in search campaigns
        /// </summary>
        [pbr::OriginalName("CANNOT_SET_BIDS_ON_CRITERION_TYPE_IN_SEARCH_CAMPAIGNS")] CannotSetBidsOnCriterionTypeInSearchCampaigns = 32,
        /// <summary>
        /// Final URLs, URL Templates and CustomParameters cannot be set for the
        /// criterion types of Gender, AgeRange, UserList, Placement, MobileApp, and
        /// MobileAppCategory in search campaigns and shopping campaigns.
        /// </summary>
        [pbr::OriginalName("CANNOT_ADD_URLS_TO_CRITERION_TYPE_FOR_CAMPAIGN_TYPE")] CannotAddUrlsToCriterionTypeForCampaignType = 33,
        /// <summary>
        /// Invalid combined audience criterion.
        /// </summary>
        [pbr::OriginalName("INVALID_COMBINED_AUDIENCE")] InvalidCombinedAudience = 122,
        /// <summary>
        /// Invalid custom affinity criterion.
        /// </summary>
        [pbr::OriginalName("INVALID_CUSTOM_AFFINITY")] InvalidCustomAffinity = 96,
        /// <summary>
        /// Invalid custom intent criterion.
        /// </summary>
        [pbr::OriginalName("INVALID_CUSTOM_INTENT")] InvalidCustomIntent = 97,
        /// <summary>
        /// Invalid custom audience criterion.
        /// </summary>
        [pbr::OriginalName("INVALID_CUSTOM_AUDIENCE")] InvalidCustomAudience = 121,
        /// <summary>
        /// IP address is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_IP_ADDRESS")] InvalidIpAddress = 34,
        /// <summary>
        /// IP format is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_IP_FORMAT")] InvalidIpFormat = 35,
        /// <summary>
        /// Mobile application is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_MOBILE_APP")] InvalidMobileApp = 36,
        /// <summary>
        /// Mobile application category is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_MOBILE_APP_CATEGORY")] InvalidMobileAppCategory = 37,
        /// <summary>
        /// The CriterionId does not exist or is of the incorrect type.
        /// </summary>
        [pbr::OriginalName("INVALID_CRITERION_ID")] InvalidCriterionId = 38,
        /// <summary>
        /// The Criterion is not allowed to be targeted.
        /// </summary>
        [pbr::OriginalName("CANNOT_TARGET_CRITERION")] CannotTargetCriterion = 39,
        /// <summary>
        /// The criterion is not allowed to be targeted as it is deprecated.
        /// </summary>
        [pbr::OriginalName("CANNOT_TARGET_OBSOLETE_CRITERION")] CannotTargetObsoleteCriterion = 40,
        /// <summary>
        /// The CriterionId is not valid for the type.
        /// </summary>
        [pbr::OriginalName("CRITERION_ID_AND_TYPE_MISMATCH")] CriterionIdAndTypeMismatch = 41,
        /// <summary>
        /// Distance for the radius for the proximity criterion is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_PROXIMITY_RADIUS")] InvalidProximityRadius = 42,
        /// <summary>
        /// Units for the distance for the radius for the proximity criterion is
        /// invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_PROXIMITY_RADIUS_UNITS")] InvalidProximityRadiusUnits = 43,
        /// <summary>
        /// Street address in the address is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_STREETADDRESS_LENGTH")] InvalidStreetaddressLength = 44,
        /// <summary>
        /// City name in the address is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_CITYNAME_LENGTH")] InvalidCitynameLength = 45,
        /// <summary>
        /// Region code in the address is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_REGIONCODE_LENGTH")] InvalidRegioncodeLength = 46,
        /// <summary>
        /// Region name in the address is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_REGIONNAME_LENGTH")] InvalidRegionnameLength = 47,
        /// <summary>
        /// Postal code in the address is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_POSTALCODE_LENGTH")] InvalidPostalcodeLength = 48,
        /// <summary>
        /// Country code in the address is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_COUNTRY_CODE")] InvalidCountryCode = 49,
        /// <summary>
        /// Latitude for the GeoPoint is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_LATITUDE")] InvalidLatitude = 50,
        /// <summary>
        /// Longitude for the GeoPoint is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_LONGITUDE")] InvalidLongitude = 51,
        /// <summary>
        /// The Proximity input is not valid. Both address and geoPoint cannot be
        /// null.
        /// </summary>
        [pbr::OriginalName("PROXIMITY_GEOPOINT_AND_ADDRESS_BOTH_CANNOT_BE_NULL")] ProximityGeopointAndAddressBothCannotBeNull = 52,
        /// <summary>
        /// The Proximity address cannot be geocoded to a valid lat/long.
        /// </summary>
        [pbr::OriginalName("INVALID_PROXIMITY_ADDRESS")] InvalidProximityAddress = 53,
        /// <summary>
        /// User domain name is not valid.
        /// </summary>
        [pbr::OriginalName("INVALID_USER_DOMAIN_NAME")] InvalidUserDomainName = 54,
        /// <summary>
        /// Length of serialized criterion parameter exceeded size limit.
        /// </summary>
        [pbr::OriginalName("CRITERION_PARAMETER_TOO_LONG")] CriterionParameterTooLong = 55,
        /// <summary>
        /// Time interval in the AdSchedule overlaps with another AdSchedule.
        /// </summary>
        [pbr::OriginalName("AD_SCHEDULE_TIME_INTERVALS_OVERLAP")] AdScheduleTimeIntervalsOverlap = 56,
        /// <summary>
        /// AdSchedule time interval cannot span multiple days.
        /// </summary>
        [pbr::OriginalName("AD_SCHEDULE_INTERVAL_CANNOT_SPAN_MULTIPLE_DAYS")] AdScheduleIntervalCannotSpanMultipleDays = 57,
        /// <summary>
        /// AdSchedule time interval specified is invalid, endTime cannot be earlier
        /// than startTime.
        /// </summary>
        [pbr::OriginalName("AD_SCHEDULE_INVALID_TIME_INTERVAL")] AdScheduleInvalidTimeInterval = 58,
        /// <summary>
        /// The number of AdSchedule entries in a day exceeds the limit.
        /// </summary>
        [pbr::OriginalName("AD_SCHEDULE_EXCEEDED_INTERVALS_PER_DAY_LIMIT")] AdScheduleExceededIntervalsPerDayLimit = 59,
        /// <summary>
        /// CriteriaId does not match the interval of the AdSchedule specified.
        /// </summary>
        [pbr::OriginalName("AD_SCHEDULE_CRITERION_ID_MISMATCHING_FIELDS")] AdScheduleCriterionIdMismatchingFields = 60,
        /// <summary>
        /// Cannot set bid modifier for this criterion type.
        /// </summary>
        [pbr::OriginalName("CANNOT_BID_MODIFY_CRITERION_TYPE")] CannotBidModifyCriterionType = 61,
        /// <summary>
        /// Cannot bid modify criterion, since it is opted out of the campaign.
        /// </summary>
        [pbr::OriginalName("CANNOT_BID_MODIFY_CRITERION_CAMPAIGN_OPTED_OUT")] CannotBidModifyCriterionCampaignOptedOut = 62,
        /// <summary>
        /// Cannot set bid modifier for a negative criterion.
        /// </summary>
        [pbr::OriginalName("CANNOT_BID_MODIFY_NEGATIVE_CRITERION")] CannotBidModifyNegativeCriterion = 63,
        /// <summary>
        /// Bid Modifier already exists. Use SET operation to update.
        /// </summary>
        [pbr::OriginalName("BID_MODIFIER_ALREADY_EXISTS")] BidModifierAlreadyExists = 64,
        /// <summary>
        /// Feed Id is not allowed in these Location Groups.
        /// </summary>
        [pbr::OriginalName("FEED_ID_NOT_ALLOWED")] FeedIdNotAllowed = 65,
        /// <summary>
        /// The account may not use the requested criteria type. For example, some
        /// accounts are restricted to keywords only.
        /// </summary>
        [pbr::OriginalName("ACCOUNT_INELIGIBLE_FOR_CRITERIA_TYPE")] AccountIneligibleForCriteriaType = 66,
        /// <summary>
        /// The requested criteria type cannot be used with campaign or ad group
        /// bidding strategy.
        /// </summary>
        [pbr::OriginalName("CRITERIA_TYPE_INVALID_FOR_BIDDING_STRATEGY")] CriteriaTypeInvalidForBiddingStrategy = 67,
        /// <summary>
        /// The Criterion is not allowed to be excluded.
        /// </summary>
        [pbr::OriginalName("CANNOT_EXCLUDE_CRITERION")] CannotExcludeCriterion = 68,
        /// <summary>
        /// The criterion is not allowed to be removed. For example, we cannot remove
        /// any of the device criterion.
        /// </summary>
        [pbr::OriginalName("CANNOT_REMOVE_CRITERION")] CannotRemoveCriterion = 69,
        /// <summary>
        /// Bidding categories do not form a valid path in the Shopping bidding
        /// category taxonomy.
        /// </summary>
        [pbr::OriginalName("INVALID_PRODUCT_BIDDING_CATEGORY")] InvalidProductBiddingCategory = 76,
        /// <summary>
        /// ShoppingSetting must be added to the campaign before ProductScope
        /// criteria can be added.
        /// </summary>
        [pbr::OriginalName("MISSING_SHOPPING_SETTING")] MissingShoppingSetting = 77,
        /// <summary>
        /// Matching function is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_MATCHING_FUNCTION")] InvalidMatchingFunction = 78,
        /// <summary>
        /// Filter parameters not allowed for location groups targeting.
        /// </summary>
        [pbr::OriginalName("LOCATION_FILTER_NOT_ALLOWED")] LocationFilterNotAllowed = 79,
        /// <summary>
        /// Feed not found, or the feed is not an enabled location feed.
        /// </summary>
        [pbr::OriginalName("INVALID_FEED_FOR_LOCATION_FILTER")] InvalidFeedForLocationFilter = 98,
        /// <summary>
        /// Given location filter parameter is invalid for location groups targeting.
        /// </summary>
        [pbr::OriginalName("LOCATION_FILTER_INVALID")] LocationFilterInvalid = 80,
        /// <summary>
        /// Cannot set geo target constants and feed item sets at the same time.
        /// </summary>
        [pbr::OriginalName("CANNOT_SET_GEO_TARGET_CONSTANTS_WITH_FEED_ITEM_SETS")] CannotSetGeoTargetConstantsWithFeedItemSets = 123,
        /// <summary>
        /// The location group radius is in the range but not at the valid increment.
        /// </summary>
        [pbr::OriginalName("INVALID_LOCATION_GROUP_RADIUS")] InvalidLocationGroupRadius = 124,
        /// <summary>
        /// The location group radius unit is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_LOCATION_GROUP_RADIUS_UNIT")] InvalidLocationGroupRadiusUnit = 125,
        /// <summary>
        /// Criteria type cannot be associated with a campaign and its ad group(s)
        /// simultaneously.
        /// </summary>
        [pbr::OriginalName("CANNOT_ATTACH_CRITERIA_AT_CAMPAIGN_AND_ADGROUP")] CannotAttachCriteriaAtCampaignAndAdgroup = 81,
        /// <summary>
        /// Range represented by hotel length of stay's min nights and max nights
        /// overlaps with an existing criterion.
        /// </summary>
        [pbr::OriginalName("HOTEL_LENGTH_OF_STAY_OVERLAPS_WITH_EXISTING_CRITERION")] HotelLengthOfStayOverlapsWithExistingCriterion = 82,
        /// <summary>
        /// Range represented by hotel advance booking window's min days and max days
        /// overlaps with an existing criterion.
        /// </summary>
        [pbr::OriginalName("HOTEL_ADVANCE_BOOKING_WINDOW_OVERLAPS_WITH_EXISTING_CRITERION")] HotelAdvanceBookingWindowOverlapsWithExistingCriterion = 83,
        /// <summary>
        /// The field is not allowed to be set when the negative field is set to
        /// true, e.g. we don't allow bids in negative ad group or campaign criteria.
        /// </summary>
        [pbr::OriginalName("FIELD_INCOMPATIBLE_WITH_NEGATIVE_TARGETING")] FieldIncompatibleWithNegativeTargeting = 84,
        /// <summary>
        /// The combination of operand and operator in webpage condition is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_WEBPAGE_CONDITION")] InvalidWebpageCondition = 85,
        /// <summary>
        /// The URL of webpage condition is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_WEBPAGE_CONDITION_URL")] InvalidWebpageConditionUrl = 86,
        /// <summary>
        /// The URL of webpage condition cannot be empty or contain white space.
        /// </summary>
        [pbr::OriginalName("WEBPAGE_CONDITION_URL_CANNOT_BE_EMPTY")] WebpageConditionUrlCannotBeEmpty = 87,
        /// <summary>
        /// The URL of webpage condition contains an unsupported protocol.
        /// </summary>
        [pbr::OriginalName("WEBPAGE_CONDITION_URL_UNSUPPORTED_PROTOCOL")] WebpageConditionUrlUnsupportedProtocol = 88,
        /// <summary>
        /// The URL of webpage condition cannot be an IP address.
        /// </summary>
        [pbr::OriginalName("WEBPAGE_CONDITION_URL_CANNOT_BE_IP_ADDRESS")] WebpageConditionUrlCannotBeIpAddress = 89,
        /// <summary>
        /// The domain of the URL is not consistent with the domain in campaign
        /// setting.
        /// </summary>
        [pbr::OriginalName("WEBPAGE_CONDITION_URL_DOMAIN_NOT_CONSISTENT_WITH_CAMPAIGN_SETTING")] WebpageConditionUrlDomainNotConsistentWithCampaignSetting = 90,
        /// <summary>
        /// The URL of webpage condition cannot be a public suffix itself.
        /// </summary>
        [pbr::OriginalName("WEBPAGE_CONDITION_URL_CANNOT_BE_PUBLIC_SUFFIX")] WebpageConditionUrlCannotBePublicSuffix = 91,
        /// <summary>
        /// The URL of webpage condition has an invalid public suffix.
        /// </summary>
        [pbr::OriginalName("WEBPAGE_CONDITION_URL_INVALID_PUBLIC_SUFFIX")] WebpageConditionUrlInvalidPublicSuffix = 92,
        /// <summary>
        /// Value track parameter is not supported in webpage condition URL.
        /// </summary>
        [pbr::OriginalName("WEBPAGE_CONDITION_URL_VALUE_TRACK_VALUE_NOT_SUPPORTED")] WebpageConditionUrlValueTrackValueNotSupported = 93,
        /// <summary>
        /// Only one URL-EQUALS webpage condition is allowed in a webpage
        /// criterion and it cannot be combined with other conditions.
        /// </summary>
        [pbr::OriginalName("WEBPAGE_CRITERION_URL_EQUALS_CAN_HAVE_ONLY_ONE_CONDITION")] WebpageCriterionUrlEqualsCanHaveOnlyOneCondition = 94,
        /// <summary>
        /// A webpage criterion cannot be added to a non-DSA ad group.
        /// </summary>
        [pbr::OriginalName("WEBPAGE_CRITERION_NOT_SUPPORTED_ON_NON_DSA_AD_GROUP")] WebpageCriterionNotSupportedOnNonDsaAdGroup = 95,
        /// <summary>
        /// Cannot add positive user list criteria in Smart Display campaigns.
        /// </summary>
        [pbr::OriginalName("CANNOT_TARGET_USER_LIST_FOR_SMART_DISPLAY_CAMPAIGNS")] CannotTargetUserListForSmartDisplayCampaigns = 99,
        /// <summary>
        /// Cannot add positive placement criterion types in search campaigns.
        /// </summary>
        [pbr::OriginalName("CANNOT_TARGET_PLACEMENTS_FOR_SEARCH_CAMPAIGNS")] CannotTargetPlacementsForSearchCampaigns = 126,
        /// <summary>
        /// Listing scope contains too many dimension types.
        /// </summary>
        [pbr::OriginalName("LISTING_SCOPE_TOO_MANY_DIMENSION_TYPES")] ListingScopeTooManyDimensionTypes = 100,
        /// <summary>
        /// Listing scope has too many IN operators.
        /// </summary>
        [pbr::OriginalName("LISTING_SCOPE_TOO_MANY_IN_OPERATORS")] ListingScopeTooManyInOperators = 101,
        /// <summary>
        /// Listing scope contains IN operator on an unsupported dimension type.
        /// </summary>
        [pbr::OriginalName("LISTING_SCOPE_IN_OPERATOR_NOT_SUPPORTED")] ListingScopeInOperatorNotSupported = 102,
        /// <summary>
        /// There are dimensions with duplicate dimension type.
        /// </summary>
        [pbr::OriginalName("DUPLICATE_LISTING_DIMENSION_TYPE")] DuplicateListingDimensionType = 103,
        /// <summary>
        /// There are dimensions with duplicate dimension value.
        /// </summary>
        [pbr::OriginalName("DUPLICATE_LISTING_DIMENSION_VALUE")] DuplicateListingDimensionValue = 104,
        /// <summary>
        /// Listing group SUBDIVISION nodes cannot have bids.
        /// </summary>
        [pbr::OriginalName("CANNOT_SET_BIDS_ON_LISTING_GROUP_SUBDIVISION")] CannotSetBidsOnListingGroupSubdivision = 105,
        /// <summary>
        /// Ad group is invalid due to the listing groups it contains.
        /// </summary>
        [pbr::OriginalName("INVALID_LISTING_GROUP_HIERARCHY")] InvalidListingGroupHierarchy = 106,
        /// <summary>
        /// Listing group unit cannot have children.
        /// </summary>
        [pbr::OriginalName("LISTING_GROUP_UNIT_CANNOT_HAVE_CHILDREN")] ListingGroupUnitCannotHaveChildren = 107,
        /// <summary>
        /// Subdivided listing groups must have an "others" case.
        /// </summary>
        [pbr::OriginalName("LISTING_GROUP_SUBDIVISION_REQUIRES_OTHERS_CASE")] ListingGroupSubdivisionRequiresOthersCase = 108,
        /// <summary>
        /// Dimension type of listing group must be the same as that of its siblings.
        /// </summary>
        [pbr::OriginalName("LISTING_GROUP_REQUIRES_SAME_DIMENSION_TYPE_AS_SIBLINGS")] ListingGroupRequiresSameDimensionTypeAsSiblings = 109,
        /// <summary>
        /// Listing group cannot be added to the ad group because it already exists.
        /// </summary>
        [pbr::OriginalName("LISTING_GROUP_ALREADY_EXISTS")] ListingGroupAlreadyExists = 110,
        /// <summary>
        /// Listing group referenced in the operation was not found in the ad group.
        /// </summary>
        [pbr::OriginalName("LISTING_GROUP_DOES_NOT_EXIST")] ListingGroupDoesNotExist = 111,
        /// <summary>
        /// Recursive removal failed because listing group subdivision is being
        /// created or modified in this request.
        /// </summary>
        [pbr::OriginalName("LISTING_GROUP_CANNOT_BE_REMOVED")] ListingGroupCannotBeRemoved = 112,
        /// <summary>
        /// Listing group type is not allowed for specified ad group criterion type.
        /// </summary>
        [pbr::OriginalName("INVALID_LISTING_GROUP_TYPE")] InvalidListingGroupType = 113,
        /// <summary>
        /// Listing group in an ADD operation specifies a non temporary criterion id.
        /// </summary>
        [pbr::OriginalName("LISTING_GROUP_ADD_MAY_ONLY_USE_TEMP_ID")] ListingGroupAddMayOnlyUseTempId = 114,
        /// <summary>
        /// The combined length of dimension values of the Listing scope criterion
        /// is too long.
        /// </summary>
        [pbr::OriginalName("LISTING_SCOPE_TOO_LONG")] ListingScopeTooLong = 115,
        /// <summary>
        /// Listing scope contains too many dimensions.
        /// </summary>
        [pbr::OriginalName("LISTING_SCOPE_TOO_MANY_DIMENSIONS")] ListingScopeTooManyDimensions = 116,
        /// <summary>
        /// The combined length of dimension values of the Listing group criterion is
        /// too long.
        /// </summary>
        [pbr::OriginalName("LISTING_GROUP_TOO_LONG")] ListingGroupTooLong = 117,
        /// <summary>
        /// Listing group tree is too deep.
        /// </summary>
        [pbr::OriginalName("LISTING_GROUP_TREE_TOO_DEEP")] ListingGroupTreeTooDeep = 118,
        /// <summary>
        /// Listing dimension is invalid (e.g. dimension contains illegal value,
        /// dimension type is represented with wrong class, etc). Listing dimension
        /// value can not contain "==" or "&amp;+".
        /// </summary>
        [pbr::OriginalName("INVALID_LISTING_DIMENSION")] InvalidListingDimension = 119,
        /// <summary>
        /// Listing dimension type is either invalid for campaigns of this type or
        /// cannot be used in the current context. BIDDING_CATEGORY_Lx and
        /// PRODUCT_TYPE_Lx dimensions must be used in ascending order of their
        /// levels: L1, L2, L3, L4, L5... The levels must be specified sequentially
        /// and start from L1. Furthermore, an "others" Listing group cannot be
        /// subdivided with a dimension of the same type but of a higher level
        /// ("others" BIDDING_CATEGORY_L3 can be subdivided with BRAND but not with
        /// BIDDING_CATEGORY_L4).
        /// </summary>
        [pbr::OriginalName("INVALID_LISTING_DIMENSION_TYPE")] InvalidListingDimensionType = 120,
        /// <summary>
        /// Customer is not on allowlist for composite audience in display campaigns.
        /// </summary>
        [pbr::OriginalName("ADVERTISER_NOT_ON_ALLOWLIST_FOR_COMBINED_AUDIENCE_ON_DISPLAY")] AdvertiserNotOnAllowlistForCombinedAudienceOnDisplay = 127,
        /// <summary>
        /// Cannot target on a removed combined audience.
        /// </summary>
        [pbr::OriginalName("CANNOT_TARGET_REMOVED_COMBINED_AUDIENCE")] CannotTargetRemovedCombinedAudience = 128,
        /// <summary>
        /// Combined audience ID is invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_COMBINED_AUDIENCE_ID")] InvalidCombinedAudienceId = 129,
        /// <summary>
        /// Can not target removed combined audience.
        /// </summary>
        [pbr::OriginalName("CANNOT_TARGET_REMOVED_CUSTOM_AUDIENCE")] CannotTargetRemovedCustomAudience = 130,
        /// <summary>
        /// Range represented by hotel check-in date's start date and end date
        /// overlaps with an existing criterion.
        /// </summary>
        [pbr::OriginalName("HOTEL_CHECK_IN_DATE_RANGE_OVERLAPS_WITH_EXISTING_CRITERION")] HotelCheckInDateRangeOverlapsWithExistingCriterion = 131,
        /// <summary>
        /// Start date is earlier than earliest allowed value of yesterday UTC.
        /// </summary>
        [pbr::OriginalName("HOTEL_CHECK_IN_DATE_RANGE_START_DATE_TOO_EARLY")] HotelCheckInDateRangeStartDateTooEarly = 132,
        /// <summary>
        /// End date later is than latest allowed day of 330 days in the future UTC.
        /// </summary>
        [pbr::OriginalName("HOTEL_CHECK_IN_DATE_RANGE_END_DATE_TOO_LATE")] HotelCheckInDateRangeEndDateTooLate = 133,
        /// <summary>
        /// Start date is after end date.
        /// </summary>
        [pbr::OriginalName("HOTEL_CHECK_IN_DATE_RANGE_REVERSED")] HotelCheckInDateRangeReversed = 134,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
