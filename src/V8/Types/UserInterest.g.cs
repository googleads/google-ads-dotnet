// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/googleads/v8/resources/user_interest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.GoogleAds.V8.Resources {

  /// <summary>Holder for reflection information generated from google/ads/googleads/v8/resources/user_interest.proto</summary>
  public static partial class UserInterestReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/googleads/v8/resources/user_interest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UserInterestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjVnb29nbGUvYWRzL2dvb2dsZWFkcy92OC9yZXNvdXJjZXMvdXNlcl9pbnRl",
            "cmVzdC5wcm90bxIhZ29vZ2xlLmFkcy5nb29nbGVhZHMudjgucmVzb3VyY2Vz",
            "GkRnb29nbGUvYWRzL2dvb2dsZWFkcy92OC9jb21tb24vY3JpdGVyaW9uX2Nh",
            "dGVnb3J5X2F2YWlsYWJpbGl0eS5wcm90bxo/Z29vZ2xlL2Fkcy9nb29nbGVh",
            "ZHMvdjgvZW51bXMvdXNlcl9pbnRlcmVzdF90YXhvbm9teV90eXBlLnByb3Rv",
            "Gh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnByb3RvGhlnb29nbGUvYXBp",
            "L3Jlc291cmNlLnByb3RvGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3Rv",
            "IoQFCgxVc2VySW50ZXJlc3QSRAoNcmVzb3VyY2VfbmFtZRgBIAEoCUIt4EED",
            "+kEnCiVnb29nbGVhZHMuZ29vZ2xlYXBpcy5jb20vVXNlckludGVyZXN0EnAK",
            "DXRheG9ub215X3R5cGUYAiABKA4yVC5nb29nbGUuYWRzLmdvb2dsZWFkcy52",
            "OC5lbnVtcy5Vc2VySW50ZXJlc3RUYXhvbm9teVR5cGVFbnVtLlVzZXJJbnRl",
            "cmVzdFRheG9ub215VHlwZUID4EEDEiIKEHVzZXJfaW50ZXJlc3RfaWQYCCAB",
            "KANCA+BBA0gAiAEBEhYKBG5hbWUYCSABKAlCA+BBA0gBiAEBElAKFHVzZXJf",
            "aW50ZXJlc3RfcGFyZW50GAogASgJQi3gQQP6QScKJWdvb2dsZWFkcy5nb29n",
            "bGVhcGlzLmNvbS9Vc2VySW50ZXJlc3RIAogBARIhCg9sYXVuY2hlZF90b19h",
            "bGwYCyABKAhCA+BBA0gDiAEBEloKDmF2YWlsYWJpbGl0aWVzGAcgAygLMj0u",
            "Z29vZ2xlLmFkcy5nb29nbGVhZHMudjguY29tbW9uLkNyaXRlcmlvbkNhdGVn",
            "b3J5QXZhaWxhYmlsaXR5QgPgQQM6ZOpBYQolZ29vZ2xlYWRzLmdvb2dsZWFw",
            "aXMuY29tL1VzZXJJbnRlcmVzdBI4Y3VzdG9tZXJzL3tjdXN0b21lcl9pZH0v",
            "dXNlckludGVyZXN0cy97dXNlcl9pbnRlcmVzdF9pZH1CEwoRX3VzZXJfaW50",
            "ZXJlc3RfaWRCBwoFX25hbWVCFwoVX3VzZXJfaW50ZXJlc3RfcGFyZW50QhIK",
            "EF9sYXVuY2hlZF90b19hbGxC/gEKJWNvbS5nb29nbGUuYWRzLmdvb2dsZWFk",
            "cy52OC5yZXNvdXJjZXNCEVVzZXJJbnRlcmVzdFByb3RvUAFaSmdvb2dsZS5n",
            "b2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvYWRzL2dvb2dsZWFkcy92",
            "OC9yZXNvdXJjZXM7cmVzb3VyY2VzogIDR0FBqgIhR29vZ2xlLkFkcy5Hb29n",
            "bGVBZHMuVjguUmVzb3VyY2VzygIhR29vZ2xlXEFkc1xHb29nbGVBZHNcVjhc",
            "UmVzb3VyY2Vz6gIlR29vZ2xlOjpBZHM6Okdvb2dsZUFkczo6Vjg6OlJlc291",
            "cmNlc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Ads.GoogleAds.V8.Common.CriterionCategoryAvailabilityReflection.Descriptor, global::Google.Ads.GoogleAds.V8.Enums.UserInterestTaxonomyTypeReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.GoogleAds.V8.Resources.UserInterest), global::Google.Ads.GoogleAds.V8.Resources.UserInterest.Parser, new[]{ "ResourceName", "TaxonomyType", "UserInterestId", "Name", "UserInterestParent", "LaunchedToAll", "Availabilities" }, new[]{ "UserInterestId", "Name", "UserInterestParent", "LaunchedToAll" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A user interest: a particular interest-based vertical to be targeted.
  /// </summary>
  public sealed partial class UserInterest : pb::IMessage<UserInterest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserInterest> _parser = new pb::MessageParser<UserInterest>(() => new UserInterest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserInterest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.GoogleAds.V8.Resources.UserInterestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInterest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInterest(UserInterest other) : this() {
      _hasBits0 = other._hasBits0;
      resourceName_ = other.resourceName_;
      taxonomyType_ = other.taxonomyType_;
      userInterestId_ = other.userInterestId_;
      name_ = other.name_;
      userInterestParent_ = other.userInterestParent_;
      launchedToAll_ = other.launchedToAll_;
      availabilities_ = other.availabilities_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInterest Clone() {
      return new UserInterest(this);
    }

    /// <summary>Field number for the "resource_name" field.</summary>
    public const int ResourceNameFieldNumber = 1;
    private string resourceName_ = "";
    /// <summary>
    /// Output only. The resource name of the user interest.
    /// User interest resource names have the form:
    ///
    /// `customers/{customer_id}/userInterests/{user_interest_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceName {
      get { return resourceName_; }
      set {
        resourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taxonomy_type" field.</summary>
    public const int TaxonomyTypeFieldNumber = 2;
    private global::Google.Ads.GoogleAds.V8.Enums.UserInterestTaxonomyTypeEnum.Types.UserInterestTaxonomyType taxonomyType_ = global::Google.Ads.GoogleAds.V8.Enums.UserInterestTaxonomyTypeEnum.Types.UserInterestTaxonomyType.Unspecified;
    /// <summary>
    /// Output only. Taxonomy type of the user interest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Ads.GoogleAds.V8.Enums.UserInterestTaxonomyTypeEnum.Types.UserInterestTaxonomyType TaxonomyType {
      get { return taxonomyType_; }
      set {
        taxonomyType_ = value;
      }
    }

    /// <summary>Field number for the "user_interest_id" field.</summary>
    public const int UserInterestIdFieldNumber = 8;
    private long userInterestId_;
    /// <summary>
    /// Output only. The ID of the user interest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserInterestId {
      get { if ((_hasBits0 & 1) != 0) { return userInterestId_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        userInterestId_ = value;
      }
    }
    /// <summary>Gets whether the "user_interest_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserInterestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "user_interest_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserInterestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 9;
    private string name_;
    /// <summary>
    /// Output only. The name of the user interest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "user_interest_parent" field.</summary>
    public const int UserInterestParentFieldNumber = 10;
    private string userInterestParent_;
    /// <summary>
    /// Output only. The parent of the user interest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserInterestParent {
      get { return userInterestParent_ ?? ""; }
      set {
        userInterestParent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_interest_parent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserInterestParent {
      get { return userInterestParent_ != null; }
    }
    /// <summary>Clears the value of the "user_interest_parent" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserInterestParent() {
      userInterestParent_ = null;
    }

    /// <summary>Field number for the "launched_to_all" field.</summary>
    public const int LaunchedToAllFieldNumber = 11;
    private bool launchedToAll_;
    /// <summary>
    /// Output only. True if the user interest is launched to all channels and locales.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool LaunchedToAll {
      get { if ((_hasBits0 & 2) != 0) { return launchedToAll_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        launchedToAll_ = value;
      }
    }
    /// <summary>Gets whether the "launched_to_all" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLaunchedToAll {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "launched_to_all" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLaunchedToAll() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "availabilities" field.</summary>
    public const int AvailabilitiesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Ads.GoogleAds.V8.Common.CriterionCategoryAvailability> _repeated_availabilities_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Ads.GoogleAds.V8.Common.CriterionCategoryAvailability.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.GoogleAds.V8.Common.CriterionCategoryAvailability> availabilities_ = new pbc::RepeatedField<global::Google.Ads.GoogleAds.V8.Common.CriterionCategoryAvailability>();
    /// <summary>
    /// Output only. Availability information of the user interest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Ads.GoogleAds.V8.Common.CriterionCategoryAvailability> Availabilities {
      get { return availabilities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserInterest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserInterest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceName != other.ResourceName) return false;
      if (TaxonomyType != other.TaxonomyType) return false;
      if (UserInterestId != other.UserInterestId) return false;
      if (Name != other.Name) return false;
      if (UserInterestParent != other.UserInterestParent) return false;
      if (LaunchedToAll != other.LaunchedToAll) return false;
      if(!availabilities_.Equals(other.availabilities_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceName.Length != 0) hash ^= ResourceName.GetHashCode();
      if (TaxonomyType != global::Google.Ads.GoogleAds.V8.Enums.UserInterestTaxonomyTypeEnum.Types.UserInterestTaxonomyType.Unspecified) hash ^= TaxonomyType.GetHashCode();
      if (HasUserInterestId) hash ^= UserInterestId.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasUserInterestParent) hash ^= UserInterestParent.GetHashCode();
      if (HasLaunchedToAll) hash ^= LaunchedToAll.GetHashCode();
      hash ^= availabilities_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (TaxonomyType != global::Google.Ads.GoogleAds.V8.Enums.UserInterestTaxonomyTypeEnum.Types.UserInterestTaxonomyType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TaxonomyType);
      }
      availabilities_.WriteTo(output, _repeated_availabilities_codec);
      if (HasUserInterestId) {
        output.WriteRawTag(64);
        output.WriteInt64(UserInterestId);
      }
      if (HasName) {
        output.WriteRawTag(74);
        output.WriteString(Name);
      }
      if (HasUserInterestParent) {
        output.WriteRawTag(82);
        output.WriteString(UserInterestParent);
      }
      if (HasLaunchedToAll) {
        output.WriteRawTag(88);
        output.WriteBool(LaunchedToAll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ResourceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceName);
      }
      if (TaxonomyType != global::Google.Ads.GoogleAds.V8.Enums.UserInterestTaxonomyTypeEnum.Types.UserInterestTaxonomyType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TaxonomyType);
      }
      availabilities_.WriteTo(ref output, _repeated_availabilities_codec);
      if (HasUserInterestId) {
        output.WriteRawTag(64);
        output.WriteInt64(UserInterestId);
      }
      if (HasName) {
        output.WriteRawTag(74);
        output.WriteString(Name);
      }
      if (HasUserInterestParent) {
        output.WriteRawTag(82);
        output.WriteString(UserInterestParent);
      }
      if (HasLaunchedToAll) {
        output.WriteRawTag(88);
        output.WriteBool(LaunchedToAll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceName);
      }
      if (TaxonomyType != global::Google.Ads.GoogleAds.V8.Enums.UserInterestTaxonomyTypeEnum.Types.UserInterestTaxonomyType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TaxonomyType);
      }
      if (HasUserInterestId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserInterestId);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasUserInterestParent) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserInterestParent);
      }
      if (HasLaunchedToAll) {
        size += 1 + 1;
      }
      size += availabilities_.CalculateSize(_repeated_availabilities_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserInterest other) {
      if (other == null) {
        return;
      }
      if (other.ResourceName.Length != 0) {
        ResourceName = other.ResourceName;
      }
      if (other.TaxonomyType != global::Google.Ads.GoogleAds.V8.Enums.UserInterestTaxonomyTypeEnum.Types.UserInterestTaxonomyType.Unspecified) {
        TaxonomyType = other.TaxonomyType;
      }
      if (other.HasUserInterestId) {
        UserInterestId = other.UserInterestId;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasUserInterestParent) {
        UserInterestParent = other.UserInterestParent;
      }
      if (other.HasLaunchedToAll) {
        LaunchedToAll = other.LaunchedToAll;
      }
      availabilities_.Add(other.availabilities_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 16: {
            TaxonomyType = (global::Google.Ads.GoogleAds.V8.Enums.UserInterestTaxonomyTypeEnum.Types.UserInterestTaxonomyType) input.ReadEnum();
            break;
          }
          case 58: {
            availabilities_.AddEntriesFrom(input, _repeated_availabilities_codec);
            break;
          }
          case 64: {
            UserInterestId = input.ReadInt64();
            break;
          }
          case 74: {
            Name = input.ReadString();
            break;
          }
          case 82: {
            UserInterestParent = input.ReadString();
            break;
          }
          case 88: {
            LaunchedToAll = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ResourceName = input.ReadString();
            break;
          }
          case 16: {
            TaxonomyType = (global::Google.Ads.GoogleAds.V8.Enums.UserInterestTaxonomyTypeEnum.Types.UserInterestTaxonomyType) input.ReadEnum();
            break;
          }
          case 58: {
            availabilities_.AddEntriesFrom(ref input, _repeated_availabilities_codec);
            break;
          }
          case 64: {
            UserInterestId = input.ReadInt64();
            break;
          }
          case 74: {
            Name = input.ReadString();
            break;
          }
          case 82: {
            UserInterestParent = input.ReadString();
            break;
          }
          case 88: {
            LaunchedToAll = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
